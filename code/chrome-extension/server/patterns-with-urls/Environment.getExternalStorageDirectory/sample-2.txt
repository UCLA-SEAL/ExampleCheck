results[https://github.com/webinos/Webinos-Platform/blob/405bfa8736b2ee2fa611ca46f1deea9a86c83c89/experiments/android-demo/src/org/webinos/hello/HttpServer.java][<init>][1] = -> TRY {  -> this.sdcard=Environment.getExternalStorageDirectory()@ } CATCH(HttpException,IOException) {}
results[https://github.com/CMPUT301W13T11/FoodBook/blob/c7b988e51a5e7cebeac210009d428d1e62e8913f/FoodBookTest/src/ca/ualberta/cmput301w13t11/FoodBook/test/RecipesDbManagerTests.java][setUp][2] = -> TRY {  -> sdCardPath=Environment.getExternalStorageDirectory()+File.separator@ } CATCH(Exception) {}
results[https://github.com/flyinglions/GriffinBudgeter/blob/2b7c2b1dc5bd2def705d467e6ccc2816eadc9dd7/org.flying.lions.uitest.MainActivity/src/org/flying/lions/uitest/CSVImportExport.java][importCSV][2] = -> TRY {  -> sdcard=Environment.getExternalStorageDirectory()@ } CATCH(IOException) {}
results[https://github.com/noamtz/SyncMe/blob/298a71d2918dec0cb82a79dbeb60dc96b2691f2b/Coupling/src/coupling/app/Utils.java][exportDatabse][13] = -> TRY { -> sd=Environment.getExternalStorageDirectory()@ -> IF { -> backupDB=new File(sd,backupDBPath,)@sd.canWrite() } }
results[https://github.com/AnySoftKeyboard/AnySoftKeyboard/blob/48b10a19c100905bd3fafd56874889026d4fafba/src/main/java/com/anysoftkeyboard/ui/dev/DeveloperUtils.java][createMemoryDump][1] = -> TRY {  -> extFolder=Environment.getExternalStorageDirectory()@ -> target=new File(extFolder,ASK_MEM_DUMP_FILENAME,)@ } CATCH(IOException,UnsupportedOperationException) {}
results[https://github.com/Aleph-Naught/SE3350Y/blob/846ae71d7db6f8c2f4e9e8ec3565216143abd8fc/FireAlertScanner/src/se3350y/aleph/ScanActivity/DOMWriter.java][getModifiedDOM][2] = -> TRY {  -> workingDir=Environment.getExternalStorageDirectory()@ -> file=new File(workingDir,XML_FILENAME,)@ } CATCH(ParserConfigurationException,SAXException,IOException,SDCardException) {}
results[https://github.com/eziosoft/MultiWii_EZ_GUI/blob/99ffb3f9c4626a8892db50e7a1eb8cf48fef30c8/src/com/ezio/multiwii/aux_pid/PIDActivity.java][readFromXML][4] = -> TRY {  -> sdcard=Environment.getExternalStorageDirectory()@ -> file=new File(sdcard,fileName,)@ } CATCH(InvalidPropertiesFormatException,IOException) {}
results[https://github.com/jurihock/voicesmith/blob/9f966affe257bdf455ee7414537c8ce832b52cba/voicesmith/src/de/jurihock/voicesmith/io/file/FileInDevice.java][<init>][6] = -> TRY {  -> fileDir=Environment.getExternalStorageDirectory()@ -> file=new File(fileDir,fileName,)@ } CATCH(IOException) {}
results[https://github.com/mitmel/Locast-Android-UNICEF/blob/21c481b11f16986cd8cddbf7bc4e90b7dbc38335/src/edu/mit/mel/locast/mobile/data/Cast.java][getFilePath][3] = -> TRY {  -> sdcardPath=Environment.getExternalStorageDirectory()@ -> locastSavePath=new File(sdcardPath,DEVICE_EXTERNAL_MEDIA_PATH,)@ } CATCH(SyncException) {}
results[https://github.com/mbarbon/mangaget/blob/05d6b3cfa19bcdf74516d20124563952d751b395/tests/src/org/barbon/mangaget/scrape/ScraperTest.java][setUp][2] = -> TRY {  -> externalStorage=Environment.getExternalStorageDirectory()@ -> tempDir=new File(externalStorage,"MangaGetTest",)@ } CATCH(Exception) {}
results[https://github.com/djcoin/svn2git_gvsig_mini/blob/3ba7dc374a89593c640e7a3cf82c6760aa4fbe97/src/es/prodevelop/gvsig/mini/app/Initializer.java][initialize][1] = -> TRY {  -> Constants.ROOT_DIR=Environment.getExternalStorageDirectory().getAbsolutePath()@ } CATCH(Exception) {}
results[https://github.com/nguillaumin/osmtracker-android/blob/f0aaa9655fe95408d2faf041bcdb9977de6ea522/src/me/guillaumin/android/osmtracker/gpx/ExportToStorageTask.java][getExportDirectory][1] = -> TRY {  -> sdRoot=Environment.getExternalStorageDirectory()@ -> trackGPXExportDirectory=new File(sdRoot+exportDirectoryPath+perTrackDirectory,)@ } CATCH(ExportTrackException) {}
results[https://github.com/Mobisocial/dungbeetle/blob/2f3e1fc7df63b691623631601e2ea780ccd1e9d7/src/edu/stanford/mobisocial/dungbeetle/util/HTTPDownloadFileToExternalTask.java][doInBackground][1] = -> LOOP { -> TRY { -> PATH=Environment.getExternalStorageDirectory()+"/download/"@ -> file=new File(PATH,)@ } }
results[https://github.com/flyinglions/GriffinBudgeter/blob/ee81b513982879dabd98dc927c16b62ad4c4294f/org.flying.lions.uitest.MainActivity/src/org/flying/lions/uitest/CategoriesSorter.java][<init>][1] = -> TRY {  -> sdcard=Environment.getExternalStorageDirectory()@ -> file=new File(sdcard,"settings.ini",)@ } CATCH(FileNotFoundException,IOException) {}
results[https://github.com/arthurbenemann/droidplanner/blob/ca8aec9de92e46a4a83c74fc870d17dbf65b51bf/DroidPlanner/src/org/droidplanner/checklist/xml/ListXmlParser.java][getListItemsFromFile][1] = -> TRY {  -> ioFile=Environment.getExternalStorageDirectory()+"/DroidPlanner/Checklists/"+ioFile@ -> file=new File(ioFile,)@ } CATCH(FileNotFoundException,XmlPullParserException) {}
results[https://github.com/sdu-k-team/IC/blob/d8ff15610e0904df158540e3435d0fa3d3817788/src/com/kernel/intelcurrent/widget/UrlImageView.java][bindUrl][1] = -> TRY {  -> storePath=Environment.getExternalStorageDirectory()+TEMP_STORGE_PATH_DIR@ -> Log.v(LOG_TAG,"storePath:"+storePath+";url"+urlImagePath,)@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/nguyennd56/wifi-locator_group_6/blob/77d6d65ba4b62ed0565af39478e99f68eece2600/WiFi/src/com/example/wifilocator/module/StorageManager.java][activeFileSignal][2] = -> TRY { -> sdCard=Environment.getExternalStorageDirectory()@ } CATCH(IOException) { -> ioException.printStackTrace()@ }
results[https://github.com/i09158knct/c6t-proto/blob/10ef499e9887db906898c536b63b705575a86d8d/src/jp/knct/di/c6t/util/ImageUtil.java][createTempFile][1] = -> TRY {  -> return File.createTempFile("c6t__",".tmp",Environment.getExternalStorageDirectory(),)@ } CATCH(IOException) {}
results[https://github.com/Aleph-Naught/SE3350Y/blob/188a63acdb049fc29b71b4057acb6229adac7541/FireAlertScanner/src/se3350y/aleph/firealertscanner/DOMWriter.java][getDOM][2] = -> TRY {  -> workingDir=Environment.getExternalStorageDirectory()@ -> file=new File(workingDir,"/InspectionData.xml",)@ } CATCH(SAXException,IOException,ParserConfigurationException,SDCardException) {}
results[https://github.com/androportal/ABT/blob/2ca5c332269bf2681f59ec46900c07ad6244bf4f/src/com/gkaakash/controller/PdfGenaretor.java][cerateTitle][1] = -> TRY {  -> root=Environment.getExternalStorageDirectory()@ -> pdffile=new File(root,pdf_params[1]+".pdf",)@ } CATCH(FileNotFoundException,DocumentException) {}
results[https://github.com/TaichiN/android_device_motorola_jordan_cyanmobile/blob/3c08fe0ddd5ad4e93c709e1ff0584d4fdbb063a9/JordanUpdater/src/com/Jordan/JordanUpdater/JordanUpdaterActivity.java][checkMD5][1] = -> TRY {  -> md5FileName=(!(downloaded))?android.os.Environment.getExternalStorageDirectory().getPath()+fileName:fileName@ } CATCH(IOException) {}
results[https://github.com/Ramblurr/mp3tunes-android/blob/9d9b32bda0bcfb0f668ccd25e25defe8a584210a/src/com/mp3tunes/android/Music.java][getArtworkQuick][1] = -> TRY { -> cacheDir=Environment.getExternalStorageDirectory()+"/mp3tunes/art/"@ -> IF { -> f=new File(cacheDir+album_id+ext,)@ } }
results[https://github.com/IntersectAustralia/faims-android/blob/67a08ca670dcda36d05f8cbc2b6203c428fd572c/faims-android-app/src/au/org/intersect/faims/android/ui/activity/ShowModuleActivity.java][hasDatabaseChanges][1] = -> TRY {  -> database=Environment.getExternalStorageDirectory()+FaimsSettings.modulesDir+module.key+"/db.sqlite3"@ -> databaseManager.init(database,)@ } CATCH(Exception) {}
results[https://github.com/umitproject/openmonitor-android-agent/blob/851aaa4b47d788d05e80ab2a549ba4d2ba93f2ee/ICM-Mobile/src/org/umit/icm/mobile/utils/SDCardReadWrite.java][readWebsiteReport][35] = -> TRY {  -> sdCard=Environment.getExternalStorageDirectory()@ -> keyDir=new File(sdCard.getAbsolutePath()+dir,)@ } CATCH(IOException,RuntimeException) {}
results[https://github.com/momoplan/Android/blob/2afb50b1f6dea55fe7f3f9ca8746f315bad68600/Ruyicai_xuancai/v3.9.1/src/com/ruyicai/dialog/UpdateDialog.java][run][75] = -> TRY { -> IF { -> file=new File(Environment.getExternalStorageDirectory(),"RuyicaiAndroid_update.apk",)@ -> fileOutputStream=new FileOutputStream(file,)@ } }
results[https://github.com/Blakez/android_frameworks_base/blob/11714fcbb86c041579b3f2c64bc7e27ed7fc2705/core/tests/hosttests/test-apps/DownloadManagerTestApp/src/com/android/frameworks/downloadmanagertests/DownloadManagerTestApp.java][runDownloadMultipleSwitching][41] = -> TRY {  -> localDownloadDirectory=Environment.getExternalStorageDirectory().getPath()@ -> downloadedFile=new File(localDownloadDirectory,filename,)@ } CATCH(Exception) {}
results[https://github.com/AnySoftKeyboard/AnySoftKeyboard/blob/48b10a19c100905bd3fafd56874889026d4fafba/src/main/java/com/anysoftkeyboard/ui/settings/RestoreUserWordsAsyncTask.java][doAsyncTask][4] = -> TRY {  -> externalFolder=Environment.getExternalStorageDirectory()@ -> targetFolder=new File(externalFolder,"/Android/data/"+mAppContext.getPackageName()+"/files/",)@ } CATCH(Exception) {}
results[https://github.com/devnull-project/android_packages_apps_Camera/blob/585f0caa3549f5a700e9a939a9ce05ad7d1d6bb6/tests/src/com/android/camera/functional/VideoCaptureIntentTest.java][testExtraDurationLimit][116] = -> TRY {  -> mFile=new File(Environment.getExternalStorageDirectory(),"video.tmp",)@ -> uri=Uri.fromFile(mFile,)@ } CATCH(Exception) {}
results[https://github.com/mWater/mWater-Android-App/blob/7f594acd4d41bfccef11c7d940200655f9ed03a5/android/src/co/mwater/clientapp/App.java][buildExternalPath][3] = -> TRY {  -> extPath=Environment.getExternalStorageDirectory()@ -> fullPath=extPath.getAbsolutePath()+File.separator+FOLDER_DATA_ROOT+File.separator+context.getPackageName()+File.separator+fileName@ } CATCH(IOException) {}
results[https://github.com/dschuermann/document-viewer/blob/44cf03d756426c6426edc96997240246e8a5c1f5/fontpacks/template/src/org/emdev/BaseDroidApp.java][init][6] = -> TRY { -> EXT_STORAGE=Environment.getExternalStorageDirectory()@ -> Log.i(APP_NAME,"External storage dir: "+EXT_STORAGE,)@ } CATCH(NameNotFoundException) { -> e.printStackTrace()@ }
results[https://github.com/metaiiica/android_packages_apps_Camera/blob/5665e3790841ffc54ab3494ef6627026d5048a8c/tests/src/com/android/camera/stress/TestUtil.java][prepareOutputFile][58] = -> TRY {  -> camera_test_output_file=Environment.getExternalStorageDirectory().toString()+"/mediaStressOut.txt"@ -> mfstream=new FileWriter(camera_test_output_file,true,)@ } CATCH(Exception) {}
results[https://github.com/nilobject/worddit-android/blob/c31233c22deaf0be64e6fca81dff1dbbbd797b6d/src/com/reddit/worddit/api/Cache.java][makeCache][1] = -> TRY {  -> return new Cache(new File(Environment.getExternalStorageDirectory(),DIR_WORDDIT,),)@ } CATCH(IOException) {}
results[https://github.com/mkedwards/android_cts/blob/6a2dedee137f39f732898de28e1e0ef20550dcca/tests/tests/media/src/android/media/cts/JetPlayerTest.java][setUp][3] = -> TRY {  -> mJetFile=new File(Environment.getExternalStorageDirectory(),"test.jet",).getAbsolutePath()@ } CATCH(Exception) {}
results[https://github.com/GenetICS/packages_apps_CMFileManager/blob/6be595d8eeba247a9fb9614a2c314d1e1a184f3d/src/com/cyanogenmod/filemanager/util/StorageHelper.java][getStorageVolumes][7] = -> IF { -> CATCH(Exception) { -> TRY { -> externalStorage=Environment.getExternalStorageDirectory()@ } } }
results[https://github.com/Renesas-EMEV2/MediaProvider/blob/8bc96849a35345f7f9c61187a5800fff55b73ecb/src/com/android/providers/media/MediaProvider.java][<clinit>][12] = -> TRY { -> sExternalPath=Environment.getExternalStorageDirectory().getCanonicalPath()@ } CATCH(IOException) { -> throw new RuntimeException("Unable to resolve canonical paths",e,)@ }
results[https://github.com/CyanMobile/android_packages_apps_CMParts_cyanmobile/blob/8667926144a53be45beedf46ce429ef2afe02b10/src/com/cyanogenmod/cmparts/activities/UIExportActivity.java][importCategories][1] = -> TRY {  -> prefFolder=new File(Environment.getExternalStorageDirectory()+"/CMobile_backup",)@ -> list=prefFolder.list()@ } CATCH(IOException) {}
results[https://github.com/umitproject/openmonitor-android-agent/blob/20197d5602259d6a3d413250262eb3591d9ad103/ICM-Mobile/src/org/umit/icm/mobile/utils/RSACrypto.java][readPublicKey][13] = -> TRY {  -> sdCard=Environment.getExternalStorageDirectory()@ -> keyDir=new File(sdCard.getAbsolutePath()+Constants.KEYS_DIR,)@ } CATCH(IOException) {}
results[https://github.com/Imaginea/pancake-android/blob/b90f87ac613e1703315e4500525cd133866673ca/tests/src/com/imaginea/android/sugarcrm/restapi/GenerateModuleFieldsTest.java][generateClass][1] = -> TRY {  -> moduleFieldsClass=new File(Environment.getExternalStorageDirectory(),"ModuleFields.java",)@ -> fw=new FileWriter(moduleFieldsClass,)@ } CATCH(Exception) {}
results[https://github.com/MoKee/android_packages_apps_Gallery2/blob/3d0f648752a3b67d4577e9a2a18a23ec7bfcd893/tests/src/com/android/photos/data/MediaCacheTest.java][setUp][7] = -> TRY {  -> externalDir=Environment.getExternalStorageDirectory()@ -> mDir=new File(externalDir,"test",)@ -> mCacheDir=new File(externalDir,"test_cache",)@ } CATCH(Exception) {}
results[https://github.com/NEXUS-EVO/frameworks_base/blob/6849ad8fbb03c21d6aa61e1bd53fe7b449cd6adb/core/tests/coretests/src/android/app/DownloadManagerBaseTest.java][createFileOnSD][8] = -> TRY {  -> sdPath=Environment.getExternalStorageDirectory().getPath()@ -> fullPath=new StringBuilder(sdPath,)@ } CATCH(IOException) {}
results[https://github.com/Snadde/infotainment/blob/df09343f9acd4b0a0d4c94b63eb3526aab8bd1d1/apps/client/src/se/chalmers/pd/client/MQTTService.java][run][5] = -> TRY { -> tmpDir=Environment.getExternalStorageDirectory()+"/infotainment/"@ -> dataStore=new MqttDefaultFilePersistence(tmpDir,)@ } CATCH(MqttException) { -> e.printStackTrace()@ }
results[https://github.com/karino2/WhiteBoardCast/blob/fbf73b0bcada91205578e8588204831ce0882275/WhiteBoardCast/src/main/java/com/livejournal/karino2/whiteboardcast/WhiteBoardCastActivity.java][getFileStoreDirectory][1] = -> TRY {  -> dir=new File(Environment.getExternalStorageDirectory(),"WhiteBoardCast",)@ -> ensureDirExist(dir,)@ } CATCH(IOException) {}
results[https://github.com/fibulwinter/gtd/blob/173bb91fdde1bdb542131f7507dd24cb8fa6b500/src/net/fibulwinter/gtd/service/TaskExportService.java][export][1] = -> TRY { -> externalStorageDirectory=Environment.getExternalStorageDirectory()@ -> file=new File(externalStorageDirectory,"gtd.txt",)@ } CATCH(FileNotFoundException) { -> e.printStackTrace()@ }
results[https://github.com/pingpongboss/Table-Tennis-Ratings/blob/c2b7f9b6ffb7d14e3990dae5f98d5e67929c4be6/src/wei/mark/pingpongboss/util/FileUtils.java][exportHistory][2] = -> TRY { -> sdcard=Environment.getExternalStorageDirectory()@ -> file=new File(sdcard,FileUtils.HISTORY,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/IntersectAustralia/faims-android/blob/151b3938885024f1e0a590c87782a2b3394ffa1f/spatialite-android-test/src/com/spatialite/test/SpatialiteDatabaseGeneralTest.java][dbSetUp][3] = -> TRY {  -> db=new jsqlite.Database()@ -> db.open(Environment.getExternalStorageDirectory()+"/Download/testdb.sqlite",jsqlite.Constants.SQLITE_OPEN_CREATE,)@ } CATCH(Exception) {}
results[https://github.com/flyinglions/GriffinBudgeter/blob/8ec83d3b4c2bfc0541b1d9059626777b8b0a2ead/org.flying.lions.uitest.MainActivity/src/org/flying/lions/uitest/SQLGenerator.java][updateAccount][2] = -> TRY {  -> sdcard=Environment.getExternalStorageDirectory()@ -> folder=new File(sdcard+"/MEM/ORI",)@ -> file=new File(sdcard+"/MEM/ORI",prevFileName,)@ } CATCH(IOException) {}
results[https://github.com/haneul/appfence_packages_apps_Settings/blob/9ef9801f6f42d25b7e539262ebfec428546107fc/src/com/android/settings/SdCardSettings.java][update][3] = -> IF { -> TRY { -> path=Environment.getExternalStorageDirectory()@ -> stat=new StatFs(path.getPath(),)@ } }
results[https://github.com/eaglesakura/jointcoding/blob/0e7fb2384499c84bc85f3faf1d6dbadd311cad45/android/android-lib/src/com/eaglesakura/jc/android/app/util/NativeIOUtil.java][openFromExternalStrage][1] = -> TRY {  -> return new FileInputStream(new File(Environment.getExternalStorageDirectory(),path,),)@ } CATCH(IOException) {}
results[https://github.com/pankajc-optimus/android-lib/blob/1459cab20bf07f3d806a352789fd2929c6946057/PictureManager/Code/PictureModuleUT/src/com/example/librarypicturemodule/test/PictureModuleUT.java][setUp][2] = -> TRY {  -> filePath=Environment.getExternalStorageDirectory().getAbsolutePath().toString()+File.separator+"Pictures"@ } CATCH(Exception) {}
results[https://github.com/IntersectAustralia/faims-android/blob/ec8d3d7a06a10613a1d774859b5913c78834523d/faims-android-app/src/au/org/intersect/faims/android/services/DownloadModuleService.java][downloadDirectory][2] = -> TRY { -> moduleDir=Environment.getExternalStorageDirectory()+FaimsSettings.modulesDir+module.key@ -> downloadResult=faimsClient.downloadDirectory(moduleDir,downloadDir,"/android/module/"+module.key+"/"+requestExcludePath,"/android/module/"+module.key+"/"+infoPath,"/android/module/"+module.key+"/"+downloadPath,)@ } CATCH(Exception) { -> FLog.e("downloading dir "+downloadDir+" error",)@ }
results[https://github.com/victoryckl/android-demos/blob/ab286969b38d886babd1454fb5937e68d3ca8ec1/AndroidWFS/src/org/join/wfs/util/CopyUtil.java][assetsCopy][1] = -> TRY { -> assetsCopy("wfs",Environment.getExternalStorageDirectory()+"/.wfs",)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/sasq64/droidsound/blob/6be69f52c901fa689d7536c9aa31ba0624a07f6a/tests/src/com/ssb/droidsound/test/SongTest.java][setUp][1] = -> TRY {  -> f=Environment.getExternalStorageDirectory()@ -> tempDir=new File(f,"testmusic"+System.nanoTime(),)@ } CATCH(Exception) {}
results[https://github.com/Waino/4Dnest/blob/dbe31aaacba064dc306a41f4580cb55ff9769898/tests/src/org/fourdnest/androidclient/test/comm/MemoryCardInitializer.java][addFile][1] = -> TRY {  -> root=Environment.getExternalStorageDirectory()@ -> os=new FileOutputStream(new File(root,name,),)@ } CATCH(IOException) {}
results[https://github.com/djcoin/svn2git_gvsig_mini/blob/420ddb63fa2db8643813ed460550704a7e03ef39/branches/src/es/prodevelop/gvsig/mini/map/MapState.java][<init>][2] = -> TRY { -> SDDIR=Environment.getExternalStorageDirectory().getPath()@ } CATCH(Exception) { -> log.error(e,)@ }
results[https://github.com/sdywcd/jshoperv2/blob/2742d89b8cefeb093b6dbd38c30f0640834b3470/jshop_android/src/com/jshop/android/action/JshopMGoodsListAction.java][GetLocalOrNetBitmapNoZip][2] = -> TRY {  -> sdcard=Environment.getExternalStorageDirectory().getPath()@ -> bitmap=BitmapFactory.decodeFile(sdcard+url,options,)@ } CATCH(IOException) {}
results[https://github.com/bladenight/bladenightapp-android/blob/9dda0256295197bceadfc7470877afcd4f896fe8/src/de/greencity/bladenightapp/android/map/BladenightMapActivity.java][clearTileCache][1] = -> TRY { -> externalStorageDirectory=Environment.getExternalStorageDirectory().getAbsolutePath()@ } CATCH(Exception) { -> Log.w(TAG,"Failed to clear the MapsForge cache",e,)@ }
results[https://github.com/nagarajug/NagaRepos/blob/fb3cf5240054b5083feb906f12d044e774a5dd7d/src/jp/co/rakuten/android/basket/common/config/AbstractEncodingConfigPoller.java][createConfInstance][2] = -> TRY {  -> file2=android.os.Environment.getExternalStorageDirectory().getPath()+fileUrl@ -> f=new File(file2,)@ } CATCH(Exception) {}
results[https://github.com/mangachika/weReportRapidAndroid/blob/19d6a9df40c1ad5921d6f32eb5dfcfa2640cfcaa/rapidandroid/org.rapidandroid/src/org/rapidandroid/content/translation/XMLTranslator.java][buildOpenRosaXform][1] = -> TRY {  -> externalStorageDir=Environment.getExternalStorageDirectory()@ -> newFolder=new File(externalStorageDir.getAbsoluteFile()+"/odk/instances/"+instanceName+"/",)@ } CATCH(RemoteException) {}
results[https://github.com/jurihock/voicesmith/blob/1e6f6a57433ff216909f01717a6f176fc3144a9c/voicesmith/src/de/jurihock/voicesmith/Utils.java][mountFile][1] = -> TRY {  -> file=new File(Environment.getExternalStorageDirectory(),path,)@ -> dir=file.getParentFile()@ } CATCH(IOException) {}
results[https://github.com/biafra23/AmDroid/blob/2d36a5cdd7932f24c6308991405979f5e1ced07c/AmDroid/src/main/java/com/jaeckel/amenoid/util/HelloWorldMaker.java][main][1] = -> TRY {  -> outputDir=Environment.getExternalStorageDirectory()@ -> loader=dexMaker.generateAndLoad(HelloWorldMaker.class.getClassLoader(),outputDir,)@ } CATCH(Exception) {}
results[https://github.com/sdywcd/jshoperv2/blob/2742d89b8cefeb093b6dbd38c30f0640834b3470/jshop_android/src/com/jshop/android/action/JshopMGoodsListAction.java][GetLocalOrNetBitmapWithoutScale][1] = -> TRY {  -> sdcard=Environment.getExternalStorageDirectory().getPath()@ -> bitmap=BitmapFactory.decodeFile(sdcard+url,)@ } CATCH(IOException) {}
results[https://github.com/djcoin/svn2git_gvsig_mini/blob/25518ef62ee5e7912be07302d602cef0f753736d/src/es/prodevelop/gvsig/mini/map/MapState.java][<init>][1] = -> TRY { -> SDDIR=Environment.getExternalStorageDirectory().getPath()@ } CATCH(Exception) { -> log.log(Level.SEVERE,"",e,)@ }
results[https://github.com/negusoft/holoaccent/blob/6a4bed65cf311ada0a73d48ae3be01f2c2c234c3/HoloAccent/src/com/negusoft/holoaccent/util/BitmapUtils.java][writeToFile][1] = -> TRY {  -> sdCard=Environment.getExternalStorageDirectory()@ -> dirFile=new File(sdCard.getAbsolutePath()+"/"+dir,)@ } CATCH(FileNotFoundException,IOException) {}
results[https://github.com/HoloAddict/FeedEx/blob/ff258768a1d4eb10358ab134ed30e53ac0e309b4/src/net/fred/feedex/provider/DatabaseHelper.java][onUpgrade][1] = -> IF { -> TRY { -> deleteFileOrDir(new File(Environment.getExternalStorageDirectory()+"/FeedEx/",),)@ } }
results[https://github.com/matburt/mobileorg-android/blob/82d6ef3fb05889486fba7705a72eba3edb05371a/MobileOrg/src/main/java/com/matburt/mobileorg/util/FileUtils.java][getReader][4] = -> TRY { -> IF { -> root=Environment.getExternalStorageDirectory()@ -> morgDir=new File(root,"mobileorg",)@ -> IF { -> return null@!(morgFile.exists()) } } }
results[https://github.com/cens/ohmagePhone/blob/82b485cc6b0401beed2ce7cf40fab40b55bb93f7/src/org/ohmage/activity/SendLogActivity.java][doInBackground][1] = -> TRY { -> file=File.createTempFile("ohmage_crash",".log",Environment.getExternalStorageDirectory(),)@ -> out=new FileOutputStream(file,)@ } CATCH(IOException) { -> Log.e(TAG,"CollectLogTask.doInBackground failed",e,)@ }
results[https://github.com/cadavre/android_packages_apps_Mms/blob/f3ad2f15567ee4df31f967deb5c0567e4caf86f6/tests/src/com/android/mms/ui/SmsStressTest.java][setUp][36] = -> TRY {  -> mWriter=new BufferedWriter(new FileWriter(new File(Environment.getExternalStorageDirectory(),OUTPUT,),true,),)@ } CATCH(Exception) {}
results[https://github.com/faux123/android_packages_apps_Bluetooth/blob/ac1140f71690c537a0a318446731611341e163b8/src/com/android/bluetooth/opp/BluetoothOppReceiveFileInfo.java][safeCanonicalPath][24] = -> TRY { -> IF { -> sDesiredStoragePath=Environment.getExternalStorageDirectory().getPath()+Constants.DEFAULT_STORE_SUBDIR@sDesiredStoragePath==null } -> IF { -> return false@!(canonicalPath.startsWith(sDesiredStoragePath,)) } }
results[https://github.com/bopang/FaceMe/blob/411e2422d8f95616b2a1eda3b865c99eb76d05b7/FaceMe_Android/src/com/example/faceme_android/CameraActivitySuperMan.java][onClick][1] = -> TRY { -> filename=Environment.getExternalStorageDirectory().getPath()+"/CosplayTmp.png"@ -> out=new FileOutputStream(filename,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/franco-c/packages_apps_Camera/blob/2042ba7d7131970fe19781832a573074b1e4c338/tests/src/com/android/camera/functional/VideoCaptureIntentTest.java][testExtraSizeLimit][46] = -> TRY {  -> mFile=new File(Environment.getExternalStorageDirectory(),"video.tmp",)@ -> uri=Uri.fromFile(mFile,)@ -> length=mFile.length()@ } CATCH(Exception) {}
results[https://github.com/EpilepsyProject/EpilepsyApp/blob/2f98289a6bd805c6807c5b9d541c994be0cc994f/src/com/promobile/epilepticdetector/EpilepsyHeuristicPrecisao.java][CriaArquivosLogGiroscopio][4] = -> TRY { -> arqLog=new File(Environment.getExternalStorageDirectory(),"logsEpilepsyApp_Gyroscope_"+chaveNomeArquivoLog+".txt",)@ -> escreverLog=new FileOutputStream(arqLog,true,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/kernelzilla/android_packages_apps_Settings/blob/345ef9e44863a80110b0f5e14c3ba0e78b27b2ee/src/com/android/settings/deviceinfo/Memory.java][mount][7] = -> mountService=getMountService()@ -> TRY { -> IF { -> mountService.mountVolume(Environment.getExternalStorageDirectory().toString(),)@mountService!=null } }
results[https://github.com/TheCollective/android_frameworks_base/blob/a57c4705d1ef5dc0a27d8cfde6df7b21f993bddd/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java][onCreate][1] = -> TRY { -> path=Environment.getExternalStorageDirectory()@ -> mIdToPath.put(rootId,path,)@ -> root.docId=getDocIdForFile(path,)@ } CATCH(FileNotFoundException) { -> throw new IllegalStateException(e,)@ }
results[https://github.com/carnero/c-geo/blob/185ed6c8e7e725ad2397b5505b776a567b4a6c66/src/carnero/cgeo/cgData.java][backupDatabase][1] = -> TRY { -> directoryTarget=Environment.getExternalStorageDirectory()+"/"+directoryImg+"/"@ -> directoryTargetFile=new File(directoryTarget,)@ } CATCH(Exception) { -> Log.w(cgSettings.tag,"Database wasn't backed up: "+e.toString(),)@ }
results[https://github.com/TheCollective/android_frameworks_base/blob/13abfb2a4b9c7823672ed5a2053588c8da6ec3d7/core/tests/coretests/src/android/os/storage/AsecTests.java][isMediaMounted][10] = -> TRY {  -> mPath=Environment.getExternalStorageDirectory().toString()@ -> state=getMs().getVolumeState(mPath,)@ } CATCH(Exception) {}
results[https://github.com/InsaneMalkavian/SpeedLogger/blob/24663ac3bc47b44c6ed3903a66111d9cff7e1404/src/com/delin/speedlogger/Activities/XYChartBuilder.java][onClick][3] = -> TRY { -> file=new File(Environment.getExternalStorageDirectory(),"test"+++index+".png",)@ -> output=new FileOutputStream(file,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/NEXUS-EVO/frameworks_base/blob/6849ad8fbb03c21d6aa61e1bd53fe7b449cd6adb/media/tests/MediaFrameworkTest/src/com/android/mediaframeworktest/stress/CameraStressTest.java][cleanupZoomImages][1] = -> TRY { -> sdcard=Environment.getExternalStorageDirectory()@ -> zoomImages=sdcard.listFiles(filter,)@ } CATCH(SecurityException) { -> Log.v(TAG,"Security manager access violation: "+e.toString(),)@ }
results[https://github.com/mitwo-dev/android_device_xiaomi_aries/blob/aeaac6c561da7fb4a890a2b2d74d8eb4155356fd/FM/fmapp2/src/com/caf/fmradio/FMRadioService.java][getAvailableSpace][4] = -> TRY { -> sampleDir=Environment.getExternalStorageDirectory()@ -> stat=new StatFs(sampleDir.getAbsolutePath(),)@ } CATCH(Exception) { -> Log.i(LOGTAG,"Fail to access external storage",e,)@ }
results[https://github.com/iRail/BeTrains-for-Android/blob/dbc02eb9ca8dd1dfc5bcf4178bd9c0263ccd9c84/BeTrains-for-Android/src/tof/cv/mpp/Utils/Utils.java][getCachedConnections][5] = -> TRY { -> memory=Environment.getExternalStorageDirectory()@ -> dir=new File(memory.getAbsolutePath()+DIRPATH,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Pkmmte/ADDITS/blob/2489c2cafdc32e83823e1a31d60dbd636ae76d2d/ADDITS/src/com/pk/addits/data/Data.java][retrieveCommentFeed][2] = -> TRY { -> sdCard=Environment.getExternalStorageDirectory()@ -> dir=new File(sdCard.getAbsolutePath()+"/Android/data/"+PACKAGE_TAG+"/"+TEMP_TAG,)@ } CATCH(Exception) { -> Log.w("[CommentFeed] XML Parse Error",e,)@ }
results[https://github.com/ywilkof/WorkshopRepository/blob/81a1fa4fa4b07b58fd3692390f8ced5739ec26fb/Workshop/src/Generator/Builder.java][saveCollage][1] = -> TRY {  -> externalStorageDir=new File(Environment.getExternalStorageDirectory(),"Pictures",)@ -> testsDir=new File(externalStorageDir.getAbsolutePath()+File.separator+"Output",)@ } CATCH(IOException) {}
results[https://github.com/avh4/uilayer/blob/a1f5908cf8c50dd1482427d903274426e75bae3e/tests/src/net/avh4/util/imagecomparison/android/ImageComparison.java][write][5] = -> TRY { -> file=new File(Environment.getExternalStorageDirectory(),filename,)@ -> out=new FileOutputStream(file,)@ } CATCH(FileNotFoundException) { -> throw new RuntimeException("Couldn't write "+filename,e,)@ }
results[https://github.com/kwatson7/ShareBear/blob/5b7c0c1ed7f6416e3a17bfcf8b48f929ca70bd64/src/com/instantPhotoShare/Activities/MainScreen.java][backupDb][3] = -> TRY {  -> sd=Environment.getExternalStorageDirectory()@ -> IF { -> backupDB=new File(sd,backupDBPath,)@sd.canWrite() } } CATCH(IOException) {}
results[https://github.com/mdfeist/CMPUT301F12T12/blob/62b14e83bf650373439a4ab00ea9da3144a934a8/CompleteMyTask/src/ca/ualberta/cs/completemytask/activities/AudioCaptureActivity.java][recordStop][1] = -> TRY { -> tempAudioFile=new File(android.os.Environment.getExternalStorageDirectory()+"/TaskAudio.3gp",)@ } CATCH(IllegalStateException) { -> System.out.println("Recorder failed to stop",)@ -> e.printStackTrace()@ }
results[https://github.com/kitkatandroid/JLS36G_base/blob/d9793ebbef58d0e842c8222c1067928d778f22f1/core/tests/coretests/src/android/os/storage/AsecTests.java][mountMedia][4] = -> TRY {  -> mPath=Environment.getExternalStorageDirectory().toString()@ -> ret=getMs().mountVolume(mPath,)@ } CATCH(Exception) {}
results[https://github.com/StevenKo/novel_reader/blob/d84f8e45186458e14ef41929cabae0b1479b27d5/src/com/novel/db/SQLiteNovel.java][resetDB][1] = -> TRY { -> cacheDir=new File(android.os.Environment.getExternalStorageDirectory(),"kosnovel",)@ -> IF { -> cacheDir.mkdirs()@!(cacheDir.exists()) } -> sdcardDB=new File(cacheDir,DB_NAME,)@ }
results[https://github.com/robomorphine/strictmode/blob/a3f97f94ac5ae7da4b58206813dbc0b118dd132d/src/strictmode-viewer-app/src/com/robomorphine/strictmode/viewer/violation/group/ViolationGroups.java][export][1] = -> TRY {  -> file=new File(Environment.getExternalStorageDirectory(),"strictmode.csv",)@ -> ow=new OutputStreamWriter(new FileOutputStream(file,),)@ } CATCH(IOException) {}
results[https://github.com/k-code/k-car/blob/115d7f33b9f2586550fcb70d8028c861139f7d18/CopProject/Cop/src/main/java/pro/kornev/kcar/cop/services/support/UpdateService.java][update][1] = -> TRY { -> PATH=Environment.getExternalStorageDirectory()+"/Download"@ -> file=new File(PATH,)@ } CATCH(Exception) { -> log.putLog("Update error! "+e.getMessage(),)@ }
results[https://github.com/dirktrossen/AIRS/blob/436f2e4e13a15b7baef7bf98fe1104d6e7706542/src/com/android/airs/helper/SerialPortLogger.java][write][1] = -> IF { -> TRY { -> fconn=new File(Environment.getExternalStorageDirectory(),"AIRS_log.txt",)@ -> os=new BufferedOutputStream(new FileOutputStream(fconn,true,),)@os==null } }
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/packages/providers/DownloadProvider/src/com/android/providers/downloads/Helpers.java][getExternalDestination][3] = -> TRY {  -> root=Environment.getExternalStorageDirectory()@ -> IF { -> throw new GenerateSaveFileError(Downloads.Impl.STATUS_INSUFFICIENT_SPACE_ERROR,"insufficient space on external media",)@getAvailableBytes(root,)<contentLength } -> base=new File(root.getPath()+Constants.DEFAULT_DL_SUBDIR,)@!(getAvailableBytes(root,)<contentLength) } CATCH(GenerateSaveFileError) {}
results[https://github.com/sdu-k-team/IC/blob/849f13d03815330d628998ca31a757edd87defd9/src/com/kernel/intelcurrent/activity/WeiboNewActivity.java][createImageFile][1] = -> TRY {  -> dir=new File(Environment.getExternalStorageDirectory().toString()+"/icfiles/img/tmp",)@ -> image=File.createTempFile(imageFileName,".jpg",dir,)@ } CATCH(IOException) {}
results[https://github.com/rcg0/arc/blob/a8fde404b29ebf967fae0dae75947cb9d6cb0b1c/android application/arc/src/com/example/asdf/FileHelper.java][saveBitmap][1] = -> TRY { -> mBaseFolderPath=Environment.getExternalStorageDirectory()+"/ARC/"@ -> mFilePath=mBaseFolderPath+imageButton.getTag()@ } CATCH(Exception) { -> Log.e("Could not save",e.toString(),)@ }
results[https://github.com/ramesesinc/clfc/blob/bef13779cbfc75bea8836572586de527efa393c2/platform/android/test-tracker/src/com/example/testapp2/MobileBroadcastReceiver.java][unlockApplication][1] = -> TRY { -> path=Environment.getExternalStorageDirectory().getAbsolutePath()+"/"@ -> file=new File(path,".trackerlock",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sreichholf/dreamDroid/blob/b155a076196f7bc60e45df9573f46a9b1600f752/src/net/reichholf/dreamdroid/CustomExceptionHandler.java][writeToLogFile][1] = -> TRY { -> sdRoot=Environment.getExternalStorageDirectory()@ -> file=new File(sdRoot,fileName,)@ } CATCH(IOException) { -> Log.e(DreamDroid.LOG_TAG,e.toString(),)@ }
results[https://github.com/openxc/openxc-android/blob/f4a6c3215cb8f615e0632c1b6180c8a6232fa611/openxc/src/main/java/com/openxc/util/AndroidFileOpener.java][openForWriting][1] = -> TRY {  -> externalStoragePath=Environment.getExternalStorageDirectory()@ -> directory=new File(externalStoragePath.getAbsolutePath()+"/"+getDirectory(),)@ } CATCH(IOException) {}
results[https://github.com/CEID-DS/cbox/blob/2fa66cba9d577e16647eb8962c737c937f37d8c7/androidconnectvity/AndroidConnectivity/src/com/cbox/androidconnectivity/Transfer.java][run][1] = -> TRY { -> sdCard=Environment.getExternalStorageDirectory()@ -> sdCard.getPath()@ -> path=sdCard.getPath()+"/cBox/"+tosent@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/vdubedout/BeautifulWidgets_SkinMixer_Android/blob/422f9dca33e1419a56505a99bf8c7459a55fbc6d/SkinMixerTest/src/com/andexp/skinmixer/test/ZipExtractorTest.java][setUp][1] = -> TRY {  -> testPath=Environment.getExternalStorageDirectory()+SDCardSkinPath.BASE_PATH@ -> deleteDir(new File(testPath,),)@ -> mZipExtractor=new ZipExtractor(testPath,)@ } CATCH(Exception) {}
results[https://github.com/henrichg/PhoneProfilesPlus/blob/c70d31e53bec6553bb85424697e2a79a810d42d6/src/sk/henrichg/phoneprofiles/DatabaseHandler.java][importDB][1] = -> TRY { -> sd=Environment.getExternalStorageDirectory()@ -> exportedDB=new File(sd,EXPORT_DBPATH+"/"+EXPORT_FILENAME,)@ } CATCH(Exception) { -> Log.e("DatabaseHandler.importDB",e.toString(),)@ }
results[https://github.com/Ossianm/Grupp29Asciicam/blob/f93d89fddda99902973e7d10c93457de144f3608/test/src/edu/chl/asciicam/activity/test/PreviewScreenTest.java][testLoadedPicture][1] = -> TRY {  -> path=new File(Environment.getExternalStorageDirectory(),"DCIM"+File.separator+"AsciiCAM",)@ -> file=new File(path.getPath()+File.separator+"ASCIIPIC_"+seqnmbr-1+".jpg",)@ } CATCH(IOException) {}
results[https://github.com/fraggel/RecoveryExecuter/blob/6837213bd69910b898647e1f49b098327f243c54/src/com/fraggel/recoveryexecuter/pro/crearLista.java][showRestoreChooser][1] = -> TRY {  -> fff=new File(Environment.getExternalStorageDirectory().getPath()+"/clockworkmod/backup/",)@ -> types=fff.list()@ } CATCH(Exception) {}
