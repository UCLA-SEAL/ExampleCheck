results[https://github.com/asakusafw/asakusafw/blob/c925d9197fd0798df82cf8403db452e8b3baf079/dmdl-project/asakusa-dmdl-core/src/main/java/com/asakusafw/dmdl/source/CompositeSourceRepository.java][close][1] = -> TRY {  -> current.close()@!(current==null) } CATCH(IOException) {}
results[https://github.com/akvo/akvo-flow-mobile/blob/080961c008e4118ffd1f270c1e13a43f2c8c3cfe/survey/src/com/gallatinsystems/survey/device/activity/SavedSurveyReviewActivity.java][onDestroy][10] = -> IF { -> TRY { -> dataCursor.close()@dataCursor!=null } }
results[https://github.com/MoKee/android_packages_apps_Apollo/blob/1886a002bca6784f57db5fe918425065ac6894e4/src/com/andrew/apollo/loaders/NowPlayingCursor.java][close][3] = -> TRY { -> IF { -> mQueueCursor.close()@mQueueCursor!=null } }
results[https://github.com/rowboat/cts/blob/709a5cb491aaa76b96fe011934debb3b5d5ce3d7/tests/tests/widget/src/android/widget/cts/CursorAdapterTest.java][tearDown][11] = -> TRY {  -> IF { -> mCursor.close()@null!=mCursor } } CATCH(Exception) {}
results[https://github.com/osi/mulgara/blob/512ef9415d545d444780b0f02f148e0de0495d57/src/jar/resolver-gis/java/org/mulgara/resolver/gis/WritableGISResolver.java][close][1] = -> TRY {  -> IF { -> cursor.close()@cursor!=null } } CATCH(TuplesException) {}
results[https://github.com/opscode/omnibus/blob/4083d77e7619509c641af130382b0923cc3d003b/source/db-5.0.26.NC/examples_java/src/db/BtRecExample.java][shutdown][4] = -> TRY {  -> IF { -> cursor.close()@cursor!=null } } CATCH(DatabaseException) {}
results[https://github.com/ib84/HypergraphDB-Mirror/blob/d1374f8c0e92bcd26c730db8f126abe891aa9e15/storage/bdb-je/src/java/org/hypergraphdb/storage/bje/BJEStorageImplementation.java][addIncidenceLink][3] = -> FINALLY { -> IF { -> TRY { -> cursor.close()@cursor!=null } } }
results[https://github.com/SQLDroid/SQLDroid/blob/54526a3622c4b288cbd77f3273ec01699c627c46/src/com/lemadi/storage/database/sqldroid/SqldroidResultSet.java][close][1] = -> TRY {  -> IF { -> c.close()@c!=null } } CATCH(SQLException) {}
results[https://github.com/anisimovdenis2009/AntRepo/blob/1748aece4ae1516bf393d0b055eeda12d9b168ff/src/com/app/ant/app/Activities/RequestsListForm.java][onBackPressed][2] = -> TRY { -> IF { -> requestHeadersCursor.close()@requestHeadersCursor!=null&&!(requestHeadersCursor.isClosed()) } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/frameworks/base/core/java/android/provider/MediaStore.java][cancelThumbnailRequest][46] = -> TRY { -> c=cr.query(cancelUri,PROJECTION,null,null,null,)@ } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/axDev-JDK/jdk/blob/acbdb0ade569a980d025ec2b09f528c0bc1a29cd/test/javax/management/remote/mandatory/subjectDelegation/SimpleStandardMBean.java][onQueryComplete][1] = -> TRY { -> readStatuses(cursor,)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/andstatus/andstatus/blob/6d42f967de27a0feca1382b8dd03de73d466d67d/src/org/andstatus/app/data/FollowingUserValues.java][tryToUpdate][2] = -> TRY { -> c=db.rawQuery(sql,null,)@ } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/WSN-2012/Bundle-Express/blob/c1893abbb423dbdb1e9870301440359ae69da2a6/src/se/kth/ssvl/tslab/wsn/bpf/DB.java][closeCursor][2] = -> TRY { -> IF { -> cursor.close()@cursor!=null } } CATCH(SQLiteException) { -> e.printStackTrace()@ }
results[https://github.com/charleso/naca/blob/83088533c2eed1c35e2fde3caa64293c55911ce6/NacaRT/src/nacaLib/bdb/BtreeFile.java][close][2] = -> IF { -> TRY { -> m_cursor.close()@m_cursor!=null } CATCH(DatabaseException) { -> e1.printStackTrace()@ } }
results[https://github.com/kitkatandroid/JLS36G_base/blob/394df0024f83d630907f2681c95a171b37dd4b67/tests/LocationTracker/src/com/android/locationtracker/data/TrackerProvider.java][query][1] = -> TRY { -> cursor=db.query(TABLE_NAME,projection,selection,selectionArgs,null,null,sortOrder,)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/mtuton/android_apps_email/blob/feb9a2c6be046cdb328223c5d76e027c07eb1326/src/com/android/email/activity/setup/AccountSetupBasics.java][onCreate][16] = -> TRY { -> c=getContentResolver().query(EmailContent.Account.CONTENT_URI,EmailContent.Account.ID_PROJECTION,null,null,null,)@ } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/koush/ClockworkModLauncher/blob/b2e4d94947995bf65c27169928776d27894d612d/src/com/android/launcher/LiveFolderAdapter.java][cleanup][105] = -> cursor=getCursor()@ -> IF { -> TRY { -> cursor.close()@cursor!=null } FINALLY { -> mLauncher.stopManagingCursor(cursor,)@cursor!=null } }
results[https://github.com/jerrycable/Tasquid/blob/59fc9e98c9429d6029eb77bb3db9fe778f3e20fe/astrid/src-legacy/com/timsu/astrid/data/task/TaskController.java][fetchTaskForList][3] = -> TRY {  -> cursor=fetchTaskCursor(taskId,TaskModelForList.FIELD_LIST,)@ -> IF { -> return null@cursor==null } -> model=new TaskModelForList(cursor,)@!(cursor==null) -> cursor.close()@!(cursor==null) } CATCH(SQLException) {}
results[https://github.com/maddoggin/platform_packages_providers_CalendarProvider/blob/65dd538630d0961b7d732a27da02817186eb7d26/src/com/android/providers/calendar/CalendarInstancesHelper.java][expandInstanceRangeLocked][11] = -> entries=getEntries(begin,end,)@ -> TRY { -> performInstanceExpansion(begin,end,localTimezone,entries,)@ } FINALLY { -> IF { -> entries.close()@entries!=null } }
results[https://github.com/xdandroid/packages_providers_CalendarProvider/blob/61fe98a9738c2b01041ced87835b9cbd9d727620/src/com/android/providers/calendar/CalendarDatabaseHelper.java][upgradeToVersion100][3] = -> cursor=db.rawQuery("SELECT value from CalendarCache WHERE key=?", new String[],)@ -> IF { -> TRY { -> oldTimezoneDbVersion=cursor.getString(0,)@cursor!=null&&cursor.moveToNext() } FINALLY { -> cursor.close()@cursor!=null&&cursor.moveToNext() } }
results[https://github.com/hyxf/coder/blob/b297553ac2811379c6fc703a27a2e074f7627455/source/src/cn/hyxf/app/https/APNManager.java][setDefaultApn][4] = -> TRY { -> c=resolver.query(PREFERRED_APN_URI, new String[],"_id="+apnId,null,null,)@ -> IF { -> c.close()@c!=null } } CATCH(SQLException) { -> e.printStackTrace()@ }
results[https://github.com/helianbobo/FlipDroid/blob/7cef423b242a3e1b5fd1ed03f0629963d86d9596/app/src/com/goal98/flipdroid/db/RSSURLDB.java][countByFavorite][6] = -> TRY { -> cursor=query(projection,selection,selectionArgs,null,)@ -> return cursor.getCount()@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/TeamNyx/packages_apps_Calendar/blob/479d348e408a50fdb2170c1c020c33f76f01091f/src/com/android/calendar/AllInOneActivity.java][onQueryComplete][12] = -> TRY { -> IF { -> return @cursor==null||cursor.getCount()>0||isFinishing() } } FINALLY { -> IF { -> cursor.close()@!(cursor==null||cursor.getCount()>0||isFinishing()) && cursor!=null } }
results[https://github.com/stephenfox/iceweasel-dev/blob/cdd8a076d28a6dc919f519243825a8f747f75d6b/mobile/android/base/sync/repositories/android/AndroidBrowserRepositoryDataAccessor.java][dumpDB][4] = -> TRY { -> cur=queryHelper.safeQuery(".dumpDB",null,null,null,null,)@ -> RepoUtils.dumpCursor(cur,)@ } FINALLY { -> IF { -> cur.close()@cur!=null } }
results[https://github.com/jmorille/android/blob/3f9c7936d9b6292dc8048fae89e1c061eca31132/geoPing/src/eu/ttbox/geoping/service/backup/AbstractDbBackupHelper.java][copyTableAsBytes][3] = -> TRY { -> cursor=getBackupCursor()@ -> bufStream=copyTableAsJsonByte(cursor,)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/bedmondmark/redbus/blob/8377d80d4bb420ccb55c271fa0c5634c3db99ae3/src/org/redbus/LocalDBHelper.java][isBookmark][5] = -> TRY { -> c=db.query(BOOKMARKS_TABLE, new String[],"_id = ?", new String[],null,null,null,)@ -> return c.moveToNext()@ } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/farsitel/android_packages_providers_CalendarProvider/blob/10b51a19b296eac6c43608a7a57fb910b0e5e8bc/src/com/android/providers/calendar/CalendarProvider2.java][updateRecurrenceInstancesLocked][11] = -> entries=getRelevantRecurrenceEntries(recurrenceSyncId,rowId,)@ -> TRY { -> performInstanceExpansion(fields.minInstance,fields.maxInstance,fields.timezone,entries,)@ } FINALLY { -> IF { -> entries.close()@entries!=null } }
results[https://github.com/socialpercon/anki/blob/1d21f910c7a6251edd3dd11c2a8986c529393676/src/com/ichi2/libanki/Collection.java][_qaData][2] = -> TRY { -> cur=mDb.getDatabase().rawQuery("SELECT c.id, n.id, n.mid, c.did, c.ord, "+"n.tags, n.flds FROM cards c, notes n WHERE c.nid == n.id "+where,null,)@ } FINALLY { -> IF { -> cur.close()@cur!=null&&!(cur.isClosed()) } }
results[https://github.com/Mobisocial/SocialKit/blob/a9b0a3ee462776984c8e441e3931e25df2aa761b/src/main/java/mobisocial/socialkit/musubi/multiplayer/TurnBasedApp.java][fetchLatestState][2] = -> cursor=mDbFeed.query(projection,selection,args,sortOrder,)@ -> IF { -> TRY { -> return mMusubi.objForCursor(cursor,)@cursor!=null&&cursor.moveToFirst() } FINALLY { -> cursor.close()@cursor!=null&&cursor.moveToFirst() } }
results[https://github.com/InsomniaROM/packages_apps_Contacts/blob/8b7fe7b1030255cbafe0026dcc5996cace65af67/src/com/android/contacts/editor/AggregationSuggestionEngine.java][loadAggregationSuggestions][1] = -> TRY { -> cursor=contentResolver.query(uri, new String[],null,null,null,)@ -> changed=updateSuggestedContactIds(cursor,)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/vogtp/android-CPU-tuner/blob/74c9f05c0a9b08a6f51c48404da16dab1a78a3e0/src/ch/amana/android/cputuner/model/ModelAccess.java][isProfileUsed][5] = -> TRY { -> cursor=contentResolver.query(DB.Trigger.CONTENT_URI,DB.Trigger.PROJECTION_DEFAULT,SELECTION_GET_TRIGGERS_WITH_PROFILE, new String[],DB.Trigger.SORTORDER_DEFAULT,)@ -> return cursor!=null&&cursor.getCount()>0@ } FINALLY { -> IF { -> cursor.close()@cursor!=null&&!(cursor.isClosed()) } }
results[https://github.com/artmoni/gardening-manager-android/blob/87263d41fc42824b8dc9248d94abae4726bf070e/src/org/gots/action/provider/local/LocalActionProvider.java][isExist][2] = -> TRY { -> cursor=bdd.query(GardenSQLite.ACTION_TABLE_NAME,null,GardenSQLite.ACTION_NAME+"='"+action.getName()+"'",null,null,null,null,)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/nolanlawson/KeepScore/blob/5d26ae44b2e4478d97b9cb636ec8c236505cd73a/src/com/nolanlawson/keepscore/db/GameDBHelper.java][findAllGames][4] = -> TRY { -> cursor=db.query(JOINED_TABLES,JOINED_COLUMNS,null,null,null,null,orderBy,)@ -> return convertToGames(cursor,)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/wangshukunwsk/Inspection/blob/752000092aedbbe55b11b161279b42e50b9c9d3b/SourceCode/src/com/bchd/inspection/dal/CommonDataAccess.java][GetTableInfos][1] = -> TRY { -> c=db.query(tableName,ColumnNames,Selection,SelectionArgs,GroupBy,Having,OrderBy,)@ } CATCH(Exception) { -> IF { -> c.close()@c!=null&&!(c.isClosed()) } -> Log.e("lily","GetTableInfos Cursor :Exception",)@ }
results[https://github.com/nolanlawson/KeepScore/blob/5d26ae44b2e4478d97b9cb636ec8c236505cd73a/src/com/nolanlawson/keepscore/db/GameDBHelper.java][findMostRecentGame][2] = -> TRY { -> cursor=db.rawQuery(sql,null,)@ -> result=convertToGames(cursor,)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/vogtp/android-clockcard/blob/bb074c237dd961bf802e32d96368cd021e2248bf/src/ch/almana/android/stechkarte/model/MonthAccess.java][hasMothRef][4] = -> TRY { -> c=query(Months.CONTENT_URI,Months.PROJECTTION_MONTHREF,Months.NAME_MONTHREF+"="+monthref,null,Months.DEFAULT_SORTORDER,)@ -> return c.moveToFirst()@ } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/gumartinm/JavaForFun/blob/9e5508368e54e63c1983c07d977af3e02cf5e169/Android/Testing/Test3/src/de/android/test3/MobieAdHttpClient.java][updatedIndexer][1] = -> TRY {  -> cursor=this.context.getContentResolver().query(uri,null,null,null,null,)@ -> IF { -> cursor.close()@cursor!=null } } CATCH(JSONException) {}
results[https://github.com/MIPS/packages-providers-CalendarProvider/blob/10b51a19b296eac6c43608a7a57fb910b0e5e8bc/src/com/android/providers/calendar/CalendarProvider2.java][regenerateInstancesTable][1] = -> TRY { -> cursor=handleInstanceQuery(new SQLiteQueryBuilder(),begin,end, new String[],null,null,false,)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/FauxAffliction/packages_apps_Mms/blob/5607e2ca71d4b3feb238eec9acd86eebde85ba0a/src/com/android/mms/data/Conversation.java][areAllConversationsRead][1] = -> cursor=resolver.query(Sms.Inbox.CONTENT_URI,READ_PROJECTION,"read=0",null,null,)@ -> IF { -> TRY { -> return cursor.getCount()@cursor!=null } FINALLY { -> cursor.close()@cursor!=null } }
results[https://github.com/LOSP/packages_apps_Browser/blob/b111eaa539574460ffc17622470e99e969dd0d33/src/com/android/browser/BrowserBookmarksPage.java][doInBackground][45] = -> TRY { -> c=mContext.getContentResolver().query(uri,null,BrowserContract.Bookmarks.PARENT+"=?", new String[],null,)@ -> return c.getCount()@ } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/AOSP-Xperience/android_packages_inputmethods_LatinIME/blob/ad3e50e2350bdcb991f1893e6f27d6094fad80cf/java/src/com/android/inputmethod/latin/ContactsBinaryDictionary.java][getContactCount][30] = -> cursor=mContext.getContentResolver().query(Contacts.CONTENT_URI,PROJECTION_ID_ONLY,null,null,null,)@ -> IF { -> TRY { -> return cursor.getCount()@cursor!=null } FINALLY { -> cursor.close()@cursor!=null } }
results[https://github.com/notizklotz/derbund-downloader/blob/f4c5bd8f7e45d22fd58e8aa6e74a66512fd709a3/derbund-downloader/src/main/java/com/github/notizklotz/derbunddownloader/DownloadManagerLoader.java][loadInBackground][3] = -> cursor=downloadManager.query(mQuery,)@ -> IF { -> TRY { -> cursor.getCount()@cursor!=null -> cursor.registerContentObserver(mObserver,)@cursor!=null } CATCH(RuntimeException) { -> cursor.close()@cursor!=null -> throw ex@cursor!=null } }
results[https://github.com/bmander/seattle-bus-bot/blob/cfbff76f0ec9536ff4cbd13206034fc7ed3796e1/src/com/joulespersecond/seattlebusbot/TripService.java][Schedule][1] = -> IF { -> TRY { -> LOOP { -> Schedule1(context,c,tNow,now,)@c.moveToNext() && c!=null } } FINALLY { -> c.close()@c!=null } }
results[https://github.com/mjromper/test/blob/0547e14c13e8e67b8707adac55a61d16c89773bb/FootingMeter/src/es/tid/database/impl/DbRacesAccess.java][findByPkey][2] = -> TRY {  -> cursor=getReadableDatabase().query(DbTableModel.TABLE_RACES_NAME,ALL_COLUMNS,selection,null,null,null,null,)@ -> IF { -> race=getEntityByCursor(cursor,)@cursor!=null&&cursor.moveToFirst() -> cursor.close()@cursor!=null&&cursor.moveToFirst() } } CATCH(SQLException) {}
results[https://github.com/BobEvans/omgpaco/blob/1c92bcbdd0603c3c5027843b953c03f9de802231/Paco/src/com/google/android/apps/paco/ExperimentProviderUtil.java][hasJoinedExperiments][1] = -> TRY { -> query=context.getContentResolver().query(ExperimentColumns.JOINED_EXPERIMENTS_CONTENT_URI, new String[],null,null,null,)@ -> return query.moveToFirst()@ } FINALLY { -> IF { -> query.close()@query!=null } }
results[https://github.com/NEXUS-EVO/frameworks_base/blob/6849ad8fbb03c21d6aa61e1bd53fe7b449cd6adb/media/java/android/media/Ringtone.java][stringForQuery][10] = -> IF { -> TRY { -> IF { -> return cursor.getString(0,)@cursor!=null && cursor.moveToFirst() } } FINALLY { -> cursor.close()@!(cursor.moveToFirst()) && cursor!=null } }
results[https://github.com/ande3577/MN-Mtb-Trail-Reports/blob/70e465561a534ca87aa674de0c9367e9e9e880d3/org.dsanderson.xctrailreport.core.android/src/org/dsanderson/xctrailreport/core/android/TrailReportPrinter.java][printTrailReports][1] = -> TRY {  -> IF { -> cursor.close()@cursor!=null&&!(cursor.isClosed()) } -> cursor=(TrailReportList) trailReports.getCursor()@ -> context.setListAdapter(new TrailReportAdapter(context,cursor,factory,decoratorFactory,trailReports,listEntryFactory,),)@ } CATCH(Exception) {}
results[https://github.com/yamin-elmakis/Yamin_Vova_new/blob/ba4c276844fc4767cf429f911cf943330c94ae25/src/com/VY/doging/DB/DatabaseHandler.java][getUserUid][1] = -> TRY {  -> c=db.query(TABLE_USER_LOGIN,colms,null,null,null,null,null,)@ -> IF { -> c.moveToFirst()@c!=null -> uid=c.getString(0,)@c!=null -> c.close()@c!=null -> return uid@c!=null } } CATCH(SQLException) {}
results[https://github.com/havlenapetr/android_packages_apps_Gallery3D/blob/3c02f2877dc2f8f0b5c01d03fa2b487c040e4000/src/com/cooliris/media/LocalDataSource.java][createMediaItemFromUri][10] = -> TRY { -> cursor=cr.query(uri,projection,whereClause,null,null,)@ -> IF { -> IF { -> CacheService.populateMediaItemFromCursor(item,cr,cursor,uri.toString()+"/",)@cursor!=null && cursor.moveToFirst() } -> cursor.close()@cursor!=null } }
results[https://github.com/xdandroid/packages_providers_CalendarProvider/blob/3c612020a5d8a41d114833b420d828361fd939ec/src/com/android/providers/calendar/CalendarProvider2.java][regenerateInstancesTable][4] = -> TRY { -> cursor=handleInstanceQuery(new SQLiteQueryBuilder(),begin,end, new String[],null,null,false,true,instancesTimezone,isHomeTimezone(),)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/VanirAOSP/frameworks_ex/blob/4334eac50ad87009874cb8b9af0572b0e2d8d4c8/chips/java/com/android/ex/chips/BaseRecipientAdapter.java][onDirectoryLoadFinished][10] = -> IF { -> TRY { -> IF { -> putEntriesWithCursor(cursor,params.directoryId==Directory.DEFAULT,)@cursor!=null } } FINALLY { -> cursor.close()@cursor!=null } }
results[https://github.com/SM-froyo/android_packages_apps_Contacts/blob/a2e8bb060f4726b572afd017db9450757055a00d/src/com/android/contacts/ViewContactActivity.java][onQueryComplete][7] = -> IF { -> TRY { -> readStatuses(cursor,)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } } }
results[https://github.com/mkedwards/android_cts/blob/6a2dedee137f39f732898de28e1e0ef20550dcca/tests/tests/provider/src/android/provider/cts/MediaStoreTest.java][setUp][3] = -> TRY {  -> c=mContentResolver.query(mScannerUri,PROJECTION,null,null,null,)@ -> IF { -> c.moveToFirst()@c!=null -> mVolumnBackup=c.getString(0,)@c!=null -> c.close()@c!=null } } CATCH(Exception) {}
results[https://github.com/PhDroid/sms-bouncer/blob/29c997986a3081a76337fb66ecb242e8da44cceb/application/src/com.phdroid/smsb/storage/dao/Session.java][getSenderById][1] = -> TRY { -> c=contentResolver.query(SenderContentProvider.CONTENT_URI,null,SmsMessageSenderEntry._ID+" = :1",values,null,)@ -> c.moveToFirst()@ -> return new SmsMessageSenderEntry(c,)@ } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/TeamNyx/packages_providers_CalendarProvider/blob/35225e0167fee2675cabfffb94c6f9e4b679db20/src/com/android/providers/calendar/CalendarProvider2.java][regenerateInstancesTable][4] = -> TRY { -> cursor=handleInstanceQuery(new SQLiteQueryBuilder(),begin,end, new String[],null,null,null,false,true,instancesTimezone,isHomeTimezone(),)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/geesun/android_packages_apps_Browser/blob/d5a9167f2d134296ebf1c12ab49dfa530d0fcf60/src/com/android/browser/backup/BookmarkExporter.java][init][1] = -> mCursor=mContentResolver.query(Browser.BOOKMARKS_URI,projection,where,null,null,)@ -> IF { -> IF { -> TRY { -> mCursor.close()@mCursor==null||!(mCursor.moveToFirst()) && mCursor!=null } } -> return false@mCursor==null||!(mCursor.moveToFirst()) } -> mTitleIdx=mCursor.getColumnIndex(Browser.BookmarkColumns.TITLE,)@!(mCursor==null||!(mCursor.moveToFirst())) -> mUrlIdx=mCursor.getColumnIndex(Browser.BookmarkColumns.URL,)@!(mCursor==null||!(mCursor.moveToFirst()))
results[https://github.com/seniorprojectandroid/seniorproject/blob/d4b83c9c440f622293e0c7522415157dc5a0393d/seniorproject/src/edu/fiu/cs/seniorproject/data/MbGuideDB.java][isUserPrefSet][2] = -> TRY {  -> cursor=mbDatabase.rawQuery("SELECT "+PREF_ID+" FROM "+USER_PREFERENCES_TABLE_NAME,null,)@ -> IF { -> IF { -> cursor.close()@cursor.getCount()>0 && cursor!=null -> return true@cursor.getCount()>0 && cursor!=null } } } CATCH(SQLException) {}
results[https://github.com/rlgomes/dtf/blob/4d819e13faf62d974c3a6d229c8603122a527d9a/src/java/com/yahoo/dtf/actions/Action.java][addCursor][1] = -> TRY {  -> old=getState().getCursors().getCursor(name,)@ -> IF { -> old.close()@old!=null } } CATCH(QueryException) {}
results[https://github.com/capedwarf/capedwarf-green/blob/f0fd8a6d2aa8f4b2da2a7347eff3fefc9d461021/sqlite/src/main/java/org/jboss/capedwarf/sqlite/AbstractSQLiteOpenHelper.java][count][1] = -> cursor=db.query(em.getTable(), new String[],selection,selectionArgs,null,null,null,)@ -> TRY { -> return (cursor!=null)?cursor.getCount():0@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/liamehinc/DBHelper/blob/3c023fab0abc1a1c0f452bc3ebe379eea3d52fe9/src/inc/meh/MileageTracker/GPXFileWriter.java][writeTrackPoints][2] = -> TRY {  -> IF { -> cursor.moveToNext()@cursor.moveToFirst() } -> IF { -> cursor.close()@cursor!=null&&!(cursor.isClosed()) } } CATCH(IOException) {}
results[https://github.com/iametza/Ihesi/blob/cb1fdbd10f6216afd9cfb400b44d02f7bece57b5/platforms/android/src/org/apache/cordova/camera/CameraLauncher.java][getImageOrientation][3] = -> TRY { -> cursor=cordova.getActivity().getContentResolver().query(uri,cols,null,null,null,)@ -> IF { -> cursor.moveToPosition(0,)@cursor!=null -> rotate=cursor.getInt(0,)@cursor!=null -> cursor.close()@cursor!=null } }
results[https://github.com/socialpercon/anki/blob/2d6462b4a8b061d45249aa127cf434dc17d66165/src/com/ichi2/libanki/Tags.java][registerNotes][1] = -> TRY { -> cursor=mCol.getDb().getDatabase().rawQuery("SELECT DISTINCT tags FROM notes",null,)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/ouchadam/fang/blob/fc1a5992b4ab9bb5771a448d61ee5a64414ed88a/app/src/main/java/com/ouchadam/fang/presentation/controller/ItemDownloader.java][getCurrentCount][1] = -> cursor=getQuery()@ -> TRY { -> return (isValid(cursor,))?cursor.getCount():ZERO_COUNT@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/frostwire/frostwire-desktop/blob/90eacf1ef657a5664fd9b5e2e84d819091f9ea3c/gui/com/frostwire/gui/Librarian.java][getSharedFileDescriptor][2] = -> TRY { -> c=db.query(columns,where,whereArgs,null,)@ -> fds=filteredOutBadRows(c,)@ } CATCH(Throwable) { -> LOG.log(Level.WARNING,"General failure getting files",e,)@ } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/dedyk/JaponskiPomocnik/blob/53e72b49221e0ef265e6610deca17b78f90004e7/src/pl/idedyk/android/japaneselearnhelper/dictionary/WordTestSM2Manager.java][countNextRepeatWordSize][1] = -> TRY { -> cursor=sqliteDatabase.rawQuery(SQLiteStatic.countNextRepeatWordStatSql, new String[],)@ -> cursor.moveToFirst()@ -> return cursor.getInt(0,)@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/frostwire/frostwire-android/blob/08b4ce8de0ba4b471334495ef59bed41e3a3eebf/src/gui/com/frostwire/android/gui/UniversalScanner.java][documentExists][1] = -> TRY { -> c=cr.query(UniversalStore.Documents.Media.CONTENT_URI, new String[],DocumentsColumns.DATA+"=?"+" AND "+DocumentsColumns.SIZE+"=?", new String[],null,)@ -> result=c!=null&&c.getCount()!=0@ } CATCH(Throwable) { -> LOG.warn("Error detecting if file exists: "+filePath,e,)@ } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/sisbell/jxta/blob/0ea2b0c0505f39f12bc614ca649b2643c423de52/contrib/bdb_cm/src/net/jxta/impl/cm/srdi/bdb/BerkeleyDbSrdiIndexBackend.java][closeCursor][1] = -> IF { -> TRY { -> c.close()@c!=null } CATCH(DatabaseException) { -> IF { -> LOG.log(Level.WARNING,failMessage,)@Logging.SHOW_WARNING&&LOG.isLoggable(Level.WARNING,) } } }
results[https://github.com/BaiduQA/Cafe/blob/230d979afc1d1fe70c70c29cee232099ad96a103/testservice/src/com/baidu/cafe/remote/SystemLib.java][setDefaultAPN][1] = -> TRY { -> c=resolver.query(PREFERRED_APN_URI, new String[],"_id="+id,null,null,)@ -> IF { -> c.close()@c!=null } } CATCH(SQLException) { -> Log.print(e.getMessage(),)@ }
results[https://github.com/jmorille/androGister/blob/16f29cc4de2a3ecbd3a9e5891da77b84bef014b7/src/eu/ttbox/androgister/database/order/OrderDatabase.java][queryOrderItem][1] = -> TRY { -> cursor=builder.query(db,columns,selection,selectionArgs,null,null,sortOrder,)@ } -> IF { -> return null@cursor==null } ELSE { -> IF { -> cursor.close()@!(cursor==null) && !(cursor.moveToFirst()) -> return null@!(cursor==null) && !(cursor.moveToFirst()) } }
results[https://github.com/damonkohler/sl4a/blob/f9432de08a899a27b3ae97f31d8ccdb22462fadb/android/Common/src/com/googlecode/android_scripting/facade/ContactsFacade.java][queryAttributes][1] = -> TRY {  -> cursor=mContentResolver.query(Uri.parse(uri,),null,"1=0",null,null,)@ -> IF { -> names=cursor.getColumnNames()@cursor!=null -> cursor.close()@cursor!=null } } CATCH(JSONException) {}
results[https://github.com/dukeboard/kevoree-extra/blob/a8aaf1e11003f50b106a22fa962a91892941e694/org.kevoree.extra.voldemort/src/main/java/voldemort/store/bdb/BdbStorageEngine.java][attemptClose][1] = -> TRY { -> IF { -> cursor.close()@cursor!=null } } CATCH(DatabaseException) { -> logger.error("Error closing cursor.",e,)@ -> throw new PersistenceFailureException(e.getMessage(),e,)@ }
results[https://github.com/akvo/akvo-flow-mobile/blob/080961c008e4118ffd1f270c1e13a43f2c8c3cfe/survey/src/com/gallatinsystems/survey/device/activity/AbstractListEditActivity.java][fillData][1] = -> IF { -> TRY { -> dataCursor.close()@dataCursor!=null } CATCH(Exception) { -> Log.w(TAG,"Could not close old cursor",e,)@ } } -> dataCursor=getData()@ -> notes=new SimpleCursorAdapter(this,R.layout.itemlistrow,dataCursor,from,to,)@
results[https://github.com/maxirosson/jdroid/blob/532ff7ae63fa44fe7eb7c9a9ca01a4d19462c6f8/jdroid-android/src/main/java/com/jdroid/android/repository/sqlite/SQLiteRepository.java][isEmpty][1] = -> TRY { -> cursor=db.query(getTableName(), new String[],null,null,null,null,null,)@ -> count=cursor.getCount()@ } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/jasta/five-android/blob/a83dede3769cae5469bdc297e6ba3fde5699ee13/src/org/devtcg/five/util/DbUtils.java][cursorForLong][1] = -> IF { -> TRY { -> IF { -> return cursor.getLong(0,)@cursor!=null && cursor.moveToFirst() } } FINALLY { -> cursor.close()@!(cursor.moveToFirst()) && cursor!=null } }
results[https://github.com/fumingshih/mytracks/blob/34857a9f0c84be8b4dde27400892ff81f43bb7ca/MyTracksLib/src/com/google/android/apps/mytracks/content/MyTracksProviderUtilsImpl.java][getLastTrack][1] = -> TRY { -> cursor=getTrackCursor(null,selection,null,TracksColumns._ID,)@ -> IF { -> return createTrack(cursor,)@cursor!=null&&cursor.moveToNext() } } FINALLY { -> IF { -> cursor.close()@!(cursor!=null&&cursor.moveToNext()) && cursor!=null } }
results[https://github.com/faux123/android_frameworks_base/blob/2f5966eee0107041ef7984d93ca43b2f0aaa7057/core/java/android/net/Downloads.java][getMimeTypeForId][1] = -> TRY { -> downloadCursor=cr.query(downloadUri, new String[],null,null,null,)@ -> IF { -> mimeType=downloadCursor.getString(0,)@downloadCursor.moveToNext() } } FINALLY { -> IF { -> downloadCursor.close()@downloadCursor!=null } }
results[https://github.com/maddoggin/platform_packages_providers_CalendarProvider/blob/72372acafbf79d94ddf08052b3c4101239724bec/src/com/android/providers/calendar/CalendarProvider2.java][getOriginalId][7] = -> TRY { -> c=query(Events.CONTENT_URI,ID_ONLY_PROJECTION,Events._SYNC_ID+"=?"+" AND "+Events.CALENDAR_ID+"=?", new String[],null,)@ -> IF { -> originalId=c.getLong(0,)@c!=null&&c.moveToFirst() } } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/android/platform_packages_apps_mms/blob/c277c869e7a4bdc6c4779cbb9a9e5ae802fbc9ee/src/com/android/mms/transaction/SmsReceiverService.java][replaceMessage][2] = -> cursor=SqliteWrapper.query(context,resolver,Inbox.CONTENT_URI,REPLACE_PROJECTION,selection,selectionArgs,null,)@ -> IF { -> TRY { -> IF { -> messageId=cursor.getLong(REPLACE_COLUMN_ID,)@cursor.moveToFirst() && cursor!=null -> return messageUri@cursor.moveToFirst() && cursor!=null } } FINALLY { -> cursor.close()@!(cursor.moveToFirst()) && cursor!=null } }
results[https://github.com/zhoulzhou/IPCPlayer/blob/abbb1084a95deb586e5decf8c732a02dc089074d/src/com/squareup/picasso/Utils.java][getContentProviderExifRotation][1] = -> TRY { -> cursor=contentResolver.query(uri,CONTENT_ORIENTATION,null,null,null,)@ -> IF { -> return 0@cursor==null||!(cursor.moveToFirst()) } -> return cursor.getInt(0,)@!(cursor==null||!(cursor.moveToFirst())) } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/SM-froyo/android_packages_apps_Mms/blob/6bbfd941885c588cc5d94e345d2cfc4197134a19/src/com/android/mms/data/Conversation.java][blockingMarkAllMmsMessagesAsSeen][8] = -> cursor=resolver.query(Mms.Inbox.CONTENT_URI,SEEN_PROJECTION,"seen=0",null,null,)@ -> IF { -> TRY { -> count=cursor.getCount()@cursor!=null } FINALLY { -> cursor.close()@cursor!=null } } -> IF { -> return @count==0 }
results[https://github.com/cubieboard/openbox_development/blob/1c33479a7c427df708d14c948f2457f377b3c088/samples/SampleSyncAdapter/src/com/example/android/samplesync/platform/ContactManager.java][lookupRawContact][2] = -> c=resolver.query(UserIdQuery.CONTENT_URI,UserIdQuery.PROJECTION,UserIdQuery.SELECTION, new String[],null,)@ -> TRY { -> IF { -> rawContactId=c.getLong(UserIdQuery.COLUMN_RAW_CONTACT_ID,)@c!=null&&c.moveToFirst() } } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/Blak-KANG/android_packages_apps_Bluetooth/blob/138a7c288f5828f5d06ccd971262327a82967228/src/com/android/bluetooth/pbap/BluetoothPbapVcardManager.java][getContactsSize][7] = -> TRY { -> contactCursor=mResolver.query(myUri,null,CLAUSE_ONLY_VISIBLE,null,null,)@ -> IF { -> size=contactCursor.getCount()+1@contactCursor!=null } } FINALLY { -> IF { -> contactCursor.close()@contactCursor!=null } }
results[https://github.com/AndlyticsProject/andlytics/blob/02605689ed74ad5714e65c986bd6ad209eec1b46/src/com/github/andlyticsproject/DeveloperAccountManager.java][findDeveloperAccountByName][1] = -> TRY { -> c=db.query(DeveloperAccountsTable.DATABASE_TABLE_NAME,DeveloperAccountsTable.ALL_COLUMNS,"name = ?", new String[],null,null,"_id asc",null,)@ -> IF { -> return null@!(c.moveToNext()) } -> return createAcount(c,)@!(!(c.moveToNext())) } FINALLY { -> IF { -> c.close()@!(!(c.moveToNext())) && c!=null } }
results[https://github.com/stephenfox/iceweasel-dev/blob/cdd8a076d28a6dc919f519243825a8f747f75d6b/mobile/android/base/db/AndroidBrowserDB.java][updateHistoryEntry][2] = -> TRY { -> cursor=cr.query(Browser.BOOKMARKS_URI, new String[],Browser.BookmarkColumns.URL+" = ?", new String[],null,)@ -> IF { -> oldVisits=cursor.getInt(0,)@cursor.moveToFirst() } } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/CyanMobile/android_frameworks_base_cyanmobile/blob/04958af4a6c5a2a5399594690e12eed1429b9fd5/core/java/android/provider/CallLog.java][getLastOutgoingCall][2] = -> TRY { -> c=resolver.query(CONTENT_URI, new String[],TYPE+" = "+OUTGOING_TYPE,null,DEFAULT_SORT_ORDER+" LIMIT 1",)@ -> IF { -> return ""@c==null||!(c.moveToFirst()) } -> return c.getString(0,)@!(c==null||!(c.moveToFirst())) } FINALLY { -> IF { -> c.close()@!(c==null||!(c.moveToFirst())) && c!=null } }
results[https://github.com/ReVolt-ROM/packages_apps_Email/blob/f11da417dbca37b16a754bac4ddfa30fbc457248/src/com/android/email/activity/MessageCompose.java][loadAttachmentInfo][9] = -> metadataCursor=contentResolver.query(uri,ATTACHMENT_META_SIZE_PROJECTION,null,null,null,)@ -> IF { -> TRY { -> IF { -> size=metadataCursor.getLong(ATTACHMENT_META_SIZE_COLUMN_SIZE,)@metadataCursor.moveToFirst() && metadataCursor!=null } } FINALLY { -> metadataCursor.close()@metadataCursor!=null } }
results[https://github.com/PolishBloodProject/android_packages_apps_Gallery2/blob/635aab5631e25488610ff5546c51ea2895dda2f0/src/com/android/gallery3d/app/TrimVideo.java][querySource][3] = -> TRY { -> cursor=contentResolver.query(mUri,projection,null,null,null,)@ -> IF { -> callback.onCursorResult(cursor,)@cursor!=null&&cursor.moveToNext() } } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/scotthartbti/android_packages_apps_Calendar/blob/9e9ee5d52d15ea7cdda6de176a1cbc75abae19b7/src/com/android/calendar/event/EventLocationAdapter.java][queryRecentLocations][1] = -> c=resolver.query(Events.CONTENT_URI,EVENT_PROJECTION,LOCATION_WHERE, new String[],Events._ID+" DESC",)@ -> TRY { -> IF { -> recentLocations=processLocationsQueryResults(c,)@c!=null } } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/TeamBAKED/packages_apps_Browser/blob/557ec3e82ca827ec7e6463865acc6aec70ddc9f8/src/com/android/browser/DataController.java][doLoadThumbnail][3] = -> TRY { -> c=cr.query(uri, new String[],null,null,null,)@ -> IF { -> data=c.getBlob(1,)@c.moveToFirst() } } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/nolanlawson/KeepScore/blob/14fbe8065fac7054d082a742155f16664dea4437/KeepScore/src/com/nolanlawson/keepscore/db/GameDBHelper.java][findGameCount][1] = -> TRY { -> cursor=db.query(TABLE_GAMES,columns,null,null,null,null,null,)@ -> IF { -> return cursor.getInt(0,)@cursor.moveToNext() } } FINALLY { -> IF { -> cursor.close()@!(cursor.moveToNext()) && cursor!=null } }
results[https://github.com/classicnerd/android_packages_providers_ContactsProvider/blob/0aaa5a1291d849479febc04ca0313b7f148a75e4/src/com/android/providers/contacts/LegacyApiSupport.java][getContactMethodType][2] = -> c=query(url, new String[],null,null,null,null,)@ -> IF { -> TRY { -> IF { -> kind=c.getInt(0,)@c.moveToFirst() && c!=null } } FINALLY { -> c.close()@c!=null } }
results[https://github.com/kfazz/android_packages_inputmethods_LatinIME/blob/ab619812a52e3d957156e37610392e2b03659891/java/src/com/android/inputmethod/latin/UserBinaryDictionary.java][loadDictionaryAsync][1] = -> cursor=mContext.getContentResolver().query(Words.CONTENT_URI,PROJECTION_QUERY,request.toString(),requestArguments,null,)@ -> TRY { -> addWords(cursor,)@ } FINALLY { -> IF { -> cursor.close()@null!=cursor } }
results[https://github.com/CyberAgent/android-gpuimage/blob/b7784804506456aba812cc906c12c180038bac28/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java][getImageOrientation][1] = -> TRY {  -> cursor=mContext.getContentResolver().query(mUri, new String[],null,null,null,)@ -> IF { -> return 0@cursor==null||cursor.getCount()!=1 } -> cursor.moveToFirst()@!(cursor==null||cursor.getCount()!=1) -> orientation=cursor.getInt(0,)@!(cursor==null||cursor.getCount()!=1) -> cursor.close()@!(cursor==null||cursor.getCount()!=1) } CATCH(IOException) {}
results[https://github.com/XYAOSP/packages_apps_Contacts/blob/75ba99fb26ca17208ea60b3bdccda0a4cc752ac7/src/com/android/contacts/list/ShortcutIntentBuilder.java][loadPhoto][1] = -> cursor=resolver.query(Data.CONTENT_URI,PHOTO_COLUMNS,PHOTO_SELECTION, new String[],null,)@ -> IF { -> TRY { -> IF { -> mBitmapData=cursor.getBlob(PHOTO_PHOTO_COLUMN_INDEX,)@cursor!=null && cursor.moveToFirst() } } FINALLY { -> cursor.close()@cursor!=null } }
results[https://github.com/AOKP/packages_apps_Email/blob/8094e07f469d262ccb1d15845024cf4632a61456/src/com/android/email/Controller.java][deleteAttachmentMessages][1] = -> TRY { -> c=resolver.query(Mailbox.CONTENT_URI,EmailContent.ID_PROJECTION,WHERE_TYPE_ATTACHMENT,null,null,)@ -> LOOP { -> mailboxId=c.getLong(EmailContent.ID_PROJECTION_COLUMN,)@c.moveToNext() } } FINALLY { -> IF { -> c.close()@c!=null } }
results[https://github.com/Mahdi-Rom/android_packages_apps_CMFileManager/blob/49eb6d624ef3d7a8bc1b607e5f11abcac58c0499/src/com/cyanogenmod/filemanager/util/MediaHelper.java][getAlbumThumbnailPath][1] = -> c=cr.query(MediaStore.Audio.Albums.EXTERNAL_CONTENT_URI,projection,where, new String[],null,)@ -> TRY { -> IF { -> return c.getString(0,)@c!=null&&c.moveToNext() } } FINALLY { -> IF { -> c.close()@!(c!=null&&c.moveToNext()) && c!=null } }
results[https://github.com/fumingshih/mytracks/blob/34857a9f0c84be8b4dde27400892ff81f43bb7ca/MyTracksLib/src/com/google/android/apps/mytracks/content/MyTracksProviderUtilsImpl.java][getNextWaypointNumber][1] = -> TRY { -> cursor=getWaypointCursor(projection,selection,selectionArgs,WaypointsColumns._ID,0,)@ -> IF { -> count=cursor.getCount()@cursor!=null -> return (statistics)?count:count+1@cursor!=null } } FINALLY { -> IF { -> cursor.close()@cursor!=null } }
results[https://github.com/scotthartbti/android_packages_apps_Browser/blob/2bb5c96f3f0cf9717b6878049cd0d86bffd8d57c/src/com/android/browser/provider/SnapshotProvider.java][deleteDataFiles][1] = -> TRY { -> c=db.query(TABLE_SNAPSHOTS,DELETE_PROJECTION,selection,selectionArgs,null,null,null,)@ -> LOOP { -> filename=c.getString(0,)@c.moveToNext() } } FINALLY { -> IF { -> c.close()@c!=null } }
