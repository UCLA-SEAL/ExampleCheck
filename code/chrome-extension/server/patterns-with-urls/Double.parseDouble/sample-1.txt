results[https://github.com/monaca/monaca-framework-android/blob/24171aaf581c48bf2f18570028f8cdecdad40824/android/BarcodeScannerLibrary/src/com/google/zxing/client/android/camera/CameraConfigurationManager.java][findBestMotZoomValue][35] = -> LOOP { -> TRY { -> value=Double.parseDouble(stringValue,)@ } -> tenValue=(int) 10.0*value@ }
results[https://github.com/SonarSource/sonar/blob/f295be020a090f4681e8da0ece96ddb18d3e66c4/sonar-server/src/main/java/org/sonar/server/charts/deprecated/BaseChartWeb.java][convertParamToDouble][53] = -> IF { -> TRY { -> result=Double.parseDouble(paramValue,)@isParamValueValid(paramValue,) } }
results[https://github.com/cytoscape/cytoscape2/blob/ac9cc63943d579cb5df89e8c3ea6685c3c4ccac9/coreplugins/browser/src/main/java/browser/util/StringUtil.java][isNumeric][7] = -> TRY { -> IF { -> dblCheck=Double.parseDouble(sCheck,)@sCheck!=null } }
results[https://github.com/rubil4x/cmsc425/blob/971850609ac1fa73fadb65159c4ee54b5a47c884/CMSC425/src/com/piss/editor/ui/gui/fields/DoubleTextField.java][parseInternal][40] = -> TRY {  -> return Double.parseDouble(src,)@ } CATCH(NumberFormatException) {}
results[https://github.com/NEXUS-EVO/frameworks_base/blob/6849ad8fbb03c21d6aa61e1bd53fe7b449cd6adb/core/java/android/util/JsonReader.java][nextDouble][12] = -> TRY {  -> result=Double.parseDouble(value,)@!(token!=JsonToken.STRING&&token!=JsonToken.NUMBER) } CATCH(IOException) {}
results[https://github.com/cytoscape/cytoscape-impl/blob/4bd0c5707c210f096070c57d00b2213729027a39/command-executor-impl/src/main/java/org/cytoscape/command/internal/tunables/DoubleTunableHandler.java][processArg][15] = -> TRY {  -> return Double.parseDouble(arg,)@ } CATCH(Exception) {}
results[https://github.com/Stargoniy/MyPal/blob/61886e193f0f8d132bde8614ad8147d26b37ab95/src/main/java/com/mypal/service/TransactionService.java][validateSum][4] = -> TRY { -> sum=Double.parseDouble(inputSum,)@ } -> IF { -> return 0@sum>UserDao.getBalance(user,) }
results[https://github.com/kiha/jackson/blob/40753a1bf745074d09245b738f12bf52809f3cee/src/mapper/java/org/codehaus/jackson/map/deser/StdKeyDeserializer.java][_parseDouble][3] = -> TRY {  -> return Double.parseDouble(key,)@ } CATCH(IllegalArgumentException) {}
results[https://github.com/wjsl/accumulo/blob/8992380c18cc3b46b35f922b5fecc5cae9371aad/src/wikisearch/query/src/main/java/org/apache/accumulo/wikisearch/function/QueryFunctions.java][between][8] = -> TRY { -> value=Double.parseDouble(fieldValue,)@ -> IF { -> return true@value>=left&&value<=right } }
results[https://github.com/calrissian/mango/blob/b720d9a72d544f8617dfbab20d472029560971cc/types/src/main/java/mango/types/normalizers/DoubleNormalizer.java][fromString][2] = -> TRY {  -> return Double.parseDouble(str,)@ } CATCH(TypeNormalizationException) {}
results[https://github.com/UltraNurd/robot-mason-gp/blob/ae68c8eac79099a50f3b1f3d3c3df0fd798373d8/simulator/Tournament/src/edu/harvard/seas/cs266/naptime/Grammar.java][<init>][1] = -> TRY {  -> this.value=Double.parseDouble(value,)@ } CATCH(InvalidSexpException) {}
results[https://github.com/mhl/libbio-formats-java/blob/d9dd630b0aa28918ae68b8b0fee7e25f624019a4/components/bio-formats/src/loci/formats/in/TextReader.java][getRowData][3] = -> TRY { -> LOOP { -> rowData[i]=Double.parseDouble(tokens[i],)@i<tokens.length } }
results[https://github.com/th365thli/SLogo/blob/5935ea4eaac4d8d7d3e0df9988928fbc606387d5/src/behavior/OneParameterCommand.java][initialize][1] = -> TRY {  -> myValue=Double.parseDouble(information[0],)@ } CATCH(SyntaxException) {}
results[https://github.com/lenxyang/emmet2/blob/edf24f59bf83a24bbac26ef22d1cf6050b79b955/third_party/Ice/Ice-3.5.0/java/src/IceGridGUI/LiveDeployment/MetricsViewEditor.java][setScaleFactor][2] = -> TRY {  -> _scaleFactor=Double.parseDouble(scaleFactor,)@ } CATCH(java.lang.NumberFormatException) {}
results[https://github.com/mahogny/Endrov/blob/9d1e9fe2c1543cd927fa3b22faf645e397750a72/ev/endrov/util/mathExpr/MathExprNumber.java][evalExpr][1] = -> TRY {  -> return Double.parseDouble(val,)@ } CATCH(MathExpr.EvalException) {}
results[https://github.com/roalex/android_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/sqlite/OldFunctionContextTest.java][testSet_resultDouble][8] = -> TRY {  -> assertEquals(testD.testDouble,Double.parseDouble(val,),)@ } CATCH(Exception) {}
results[https://github.com/freezy/android-xbmcremote/blob/a2f62dbb36b51a8acd590c6da4332fb4f9e5b6cc/lib-src/org/codehaus/jackson/util/TextBuffer.java][contentsAsDouble][2] = -> TRY {  -> return Double.parseDouble(contentsAsString(),)@ } CATCH(NumberFormatException) {}
results[https://github.com/jdeolive/geotools-old/blob/7a6531ade31f4ad1f107819eae16c0922a69a1b4/modules/unsupported/coveragetools/src/main/java/org/geotools/utils/imagepyramid/PyramidBuilder.java][parseArgs][5] = -> IF { -> TRY { -> compressionRatio=Double.parseDouble((String) getOptionValue(compressionRatioOpt,),)@hasOption(compressionRatioOpt,) } }
results[https://github.com/mastersobg/contests/blob/8b1422ddb44f5f9f85db2ca9abaa0b06ed9155c3/yandex/trains/28.09.2013/G/src/Radarset.java][nextDouble][5] = -> TRY {  -> return Double.parseDouble(nextToken(),)@ } CATCH(IOException) {}
results[https://github.com/lenik/jazz/blob/22095f786de4a00d4822f67861ae370beb386b4f/bas/layer-1/bas-type/bas-type-srt/src/main/java/net/bodz/bas/type/srt/impl/DoubleSerializer.java][unserialize][3] = -> TRY {  -> text=readTill(s,';',)@ -> return Double.parseDouble(text,)@ } CATCH(IOException) {}
results[https://github.com/samthiriot/genlab/blob/6ff6ce9e38a14397a40e3c72db10f685a4772593/genlab.graphstream.corejar/src/org/graphstream/stream/file/FileSourceGPX.java][__hdop][2] = -> TRY {  -> hdop=__characters()@ -> return Double.parseDouble(hdop,)@ } CATCH(IOException,XMLStreamException) {}
results[https://github.com/Flipkart/loader/blob/a93b18ebf9b8950eabb1419a96b5df5252aa862f/loader-server/src/main/java/com/flipkart/perf/server/daemon/HistogramComputationThread.java][main][1] = -> TRY {  -> System.out.println(""+(long) Double.parseDouble("2.636512277E9",),)@ } CATCH(IOException) {}
results[https://github.com/shantanusharma/weka/blob/1f95a87c26bece411d64c799d89d74ff9afff44d/weka/src/main/java/weka/core/pmml/Array.java][valueDouble][2] = -> TRY {  -> return Double.parseDouble(value(index,),)@ } CATCH(Exception) {}
results[https://github.com/svn2github/sakai-kernel/blob/2ddd50bf562d864f90a7c856df6caf3b8b5db223/tags/kernel-1.1.0-beta09/kernel-impl/src/main/java/org/sakaiproject/conditions/impl/BooleanExpression.java][setArgument][16] = -> IF { -> TRY { -> this.argument=Double.parseDouble((String) argument.trim(),)@argument instanceof String } }
results[https://github.com/gems-uff/oceano/blob/3ca5f2367549f47612ce2bc14a0f2b1d9a336e02/util/src/main/java/br/uff/ic/oceano/util/NumberUtil.java][parseDouble][1] = -> TRY { -> return Double.parseDouble(value,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/svn2github/crux-framework/blob/b3837e0075e587faf1bfe1322d34d26848ab733f/branches/old/5.0.0/Crux/src/ui/gwt/org/cruxframework/crux/gwt/rebind/StackLayoutPanelFactory.java][processChildren][6] = -> TRY {  -> context.headerSize=Double.parseDouble(context.readChildProperty("size",),)@ } CATCH(CruxGeneratorException) {}
results[https://github.com/talhatariktemiz/twitter-topic-strand/blob/52fc8e02250e8aaf385948a28def2675b34ad15b/twitter4j-core/src/main/java/twitter4j/internal/http/HttpClientImpl.java][<clinit>][7] = -> TRY { -> versionStr=System.getProperty("java.specification.version",)@ -> IF { -> isJDK14orEarlier=1.5d>Double.parseDouble(versionStr,)@versionStr!=null } }
results[https://github.com/mastersobg/contests/blob/c29000e68903a7ce1d2f02d7496946a6d6906f33/opencup/2014-11-23/O/src/Main.java][nd][2] = -> TRY {  -> return Double.parseDouble(ns(),)@ } CATCH(IOException) {}
results[https://github.com/openplanets/plato/blob/e940c090e642adbea36adc7a72cbc1011eea91db/planning-core/src/main/java/eu/scape_project/pw/planning/xml/plan/NumericTransformerThresholdFactory.java][createObject][2] = -> TRY {  -> return Double.parseDouble(arg0.getValue("value",),)@ } CATCH(Exception) {}
results[https://github.com/PetarV-/CSTIA-Ticks/blob/2d30b6129ce16d60ad995bb935ed4b3e66069f1f/Java/Tick-1star/InspectDouble.java][main][1] = -> TRY {  -> d=Double.parseDouble(args[0],)@ -> bits=Double.doubleToLongBits(d,)@ } CATCH(Exception) {}
results[https://github.com/RomRaider/assembla.flat/blob/bc4754452aacc2656be35b59803de4283b282411/branches/dev_gui_def_overhaul/src/com/romraider/maps/Table.java][pasteValues][8] = -> LOOP { -> TRY { -> Double.parseDouble(input[i],)@i<input.length -> data[i].setRealValue(input[i],)@i<input.length } }
results[https://github.com/apache/opennlp/blob/6cc5c2ba2fc1dd4f51f36cee1cf6c8e353ab70f2/maxent/trunk/src/main/java/opennlp/model/PlainTextFileDataReader.java][readDouble][5] = -> TRY {  -> return Double.parseDouble(input.readLine(),)@ } CATCH(IOException) {}
results[https://github.com/sammthomson/semafor/blob/0349e9f43629e5875cce7f1971e0e7b23b6547e9/src/main/java/edu/cmu/cs/lti/ark/fn/identification/training/ConvertAlphabetFile.java][main][1] = -> TRY {  -> threshold=(args.length>=5)?Double.parseDouble(args[4].trim(),):DEFAULT_THRESHOLD@ } CATCH(Exception) {}
results[https://github.com/vijeshm/gephi-gsoc13-legendmodule/blob/8d61de9db19c06b3d5a8dbc2ef3cbc9361b65703/ValidationAPI/src/org/gephi/lib/validation/BetweenZeroAndOneValidator.java][validate][3] = -> TRY { -> d=Double.parseDouble(model,)@ } -> IF { -> message=NbBundle.getMessage(PositiveNumberValidator.class,"PositiveNumberValidator_NOT_POSITIVE",model,)@ }
results[https://github.com/anisimovdenis2009/AntRepo/blob/1748aece4ae1516bf393d0b055eeda12d9b168ff/src/com/app/ant/app/ServiceLayer/Convert.java][toDouble][1] = -> TRY { -> str=toString(obj,"",)@ -> IF { -> rez=Double.parseDouble(str,)@str.length()>0 } }
results[https://github.com/svn2github/protostuff/blob/51a8c78ebd9e9798fc9e909a61c337ebf904b9bd/protostuff-kvp/src/main/java/com/dyuproject/protostuff/KvpInput.java][readDouble][2] = -> TRY {  -> return Double.parseDouble(readString(),)@ } CATCH(IOException) {}
results[https://github.com/INBio/Threat-Modeling-System/blob/b7322a25b7ddff62bd0668330f81e32b265baaaa/modeling-web/src/main/java/org/inbio/modeling/web/controller/IntervalsController.java][calculateDensity][1] = -> TRY {  -> conversionRate=Double.parseDouble(configManager.retrieveResolution(),)@ } CATCH(Exception) {}
results[https://github.com/duckweed/fitnesse-verify/blob/6deaa389fbfe9fca6a12c4d47181bdcf5fc7236f/src/fitnesse/responders/run/slimResponder/SlimTestSystem.java][getExpectedSlimVersion][1] = -> pageSpecificSlimVersion=pageData.getVariable("SLIM_VERSION",)@ -> IF { -> TRY { -> pageSpecificSlimVersionDouble=Double.parseDouble(pageSpecificSlimVersion,)@pageSpecificSlimVersion!=null } }
results[https://github.com/in-pr/KFP/blob/54fe48bd204925628ad05903e4f3668f00fc455b/task2/src/ee/ut/math/tvt/salessystem/ui/tabs/StockTab.java][addItemOkPressed][2] = -> TRY { -> price=Double.parseDouble(itemPrice,)@ } -> IF { -> newItem=new StockItem(itemName,"",price,quantity,)@ }
results[https://github.com/google-web-toolkit/gwt/blob/2c1e3327d3e9781f1fb1a491d4831df86791f5b8/user/src/com/google/gwt/user/server/rpc/impl/ServerSerializationStreamReader.java][readFloat][5] = -> TRY {  -> return (float) Double.parseDouble(extract(),)@ } CATCH(SerializationException) {}
results[https://github.com/brooklyncentral/brooklyn/blob/5c13c3b62a72dacf2b728637c5c03e32a41b04da/extra/src/main/java/brooklyn/policy/followthesun/FollowTheSunParameters.java][parseDouble][2] = -> TRY { -> d=Double.parseDouble(text,)@ } CATCH(Exception) { -> LOG.warn("Illegal double value '"+text+"', using default "+defaultValue+": "+e,e,)@ }
results[https://github.com/mduduzik/flowframe/blob/ceabb60046e133d8b3efc084b1a59dceb6229f79/editors/oryx/frontend/src/main/java/de/hpi/cpn/attributes/CPNModellingThing.java][getXCoordinateWith][4] = -> TRY {  -> x=(int) Double.parseDouble(modelElement.getString("x",),)@ } CATCH(JSONException) {}
results[https://github.com/lukaszlew/EasyGoGui/blob/f913af7303329dde7c20179f5f9d8ebd4df5ca1f/src/net/sf/gogui/sgf/SgfReader.java][parseOvertimePeriod][1] = -> TRY { -> m_byoyomi=(long) Double.parseDouble(value,)*1000@ } CATCH(NumberFormatException) { -> setWarning("Invalid value for byoyomi time",)@ }
results[https://github.com/lukaszlew/EasyGoGui/blob/1c057e03855673a0c607795758661e7d610f2297/src/gtp/GtpServer.java][parseDoubleArgument][2] = -> TRY { -> f=Double.parseDouble(cmdArray[1],)@ } CATCH(NumberFormatException) { -> response.append("Invalid float argument",)@ }
results[https://github.com/matthewhorridge/gwt-owlapi/blob/958457aee15159f4af243b16e0b5008160dc43c8/owlapi-gwt-super-source/src/main/java/uk/ac/manchester/cs/owl/owlapi/OWLLiteralImplNoCompression.java][parseDouble][3] = -> TRY {  -> return Double.parseDouble(getLiteral(),)@ } CATCH(NumberFormatException) {}
results[https://github.com/dnt5020/IST440W-Android-App/blob/4a9f30da0592112a8b55f6d349ac892a022f9531/TheLuvExchange/src/com/theluvexchange/android/Pick.java][setLongitude][1] = -> TRY { -> Double.parseDouble(longitude,)@ } CATCH(NumberFormatException) { -> Log.e("PickLongitudeFormat","Longitude was set with non-numeric value",)@ }
results[https://github.com/CampagneLaboratory/icb-utils/blob/4244080b5f6fbee0694d93f59f84c80ed6720952/src/edu/cornell/med/icb/io/ConditionsParser.java][parseFieldValueDouble][1] = -> TRY {  -> fieldValue=parseFieldValueString(fieldName,)@ -> return Double.parseDouble(fieldValue,)@ } CATCH(ConditionsParsingException) {}
results[https://github.com/jdeolive/geoserver-old/blob/adcc6bd6bd7c515a871db5d7970eef91f86e86a6/community/sfs/src/main/java/org/geoserver/sfs/FeatureCollectionFinder.java][parseDouble][2] = -> TRY { -> return Double.parseDouble(value,)@ } CATCH(NumberFormatException) { -> throw new RestletException("Expected a number for "+name+" but got "+value,Status.CLIENT_ERROR_BAD_REQUEST,)@ }
results[https://github.com/atubo/codeforces/blob/c4803308fff12d8256dfc971b49c667e837d3014/P073E.java][nextDouble][7] = -> TRY {  -> return Double.parseDouble(next(),)@ } CATCH(IOException) {}
results[https://github.com/ovitas/compass2/blob/a46281fa246fc6eb80ef328c427759f0e7037b21/core/src/main/java/no/ovitas/compass2/config/AssociationType.java][setWeightAback][1] = -> TRY { -> this.weightAback=Double.parseDouble(weightAback,)@ } CATCH(NumberFormatException) { -> logger.error("Wrong weightAback value: "+weightAback,)@ }
results[https://github.com/Top-Q/jsystem/blob/442f8e439d673acdeb4eb80494d9eec9bcff77c6/jsystem-core-projects/jsystemCommon/src/main/java/jsystem/extensions/analyzers/csv/CheckMinMaxAnalyzer.java][process][2] = -> TRY {  -> current=Double.parseDouble(toAnalyze[getColumnToAnalyzeIndex()],)@ } CATCH(Exception) {}
results[https://github.com/nodebox/scenebuilder/blob/928f274bfbc3012648a476fad6fdbc23a49b33ea/src/scenebuilder/gui/DraggableNumber.java][setValueFromString][2] = -> TRY {  -> setValue(Double.parseDouble(s,),)@ } CATCH(NumberFormatException) {}
results[https://github.com/RamesesDev/osiris2/blob/1f560b96485e3a39e6a972ad825097da1d192ab2/common/rameses-common/src/com/rameses/service/jdbc/DBServiceResultSet.java][getDouble][1] = -> TRY {  -> d=Double.parseDouble(currentRecord.get(columnName,)+"",)@ } CATCH(SQLException) {}
results[https://github.com/rehfeldchris/cs153/blob/80f0ebf61d59e62fab64ccb459b6f7ce3f1655a0/hw7/src/VariantComparator.java][looksLikeNumericString][1] = -> IF { -> TRY { -> Double.parseDouble(v.stringVal(),)@v instanceof StringVariant -> return true@v instanceof StringVariant } }
results[https://github.com/mahogny/Endrov/blob/e40fd92f6fbb50045fbb894139fff6e35543d0a6/ev/endrov/hardwareFrivolous/FrivolousSettings.java][setNoiseLambda][1] = -> TRY {  -> return setNoiseLambda(Double.parseDouble(s,),)@ } CATCH(NumberFormatException,IllegalValueException) {}
results[https://github.com/jesseeichar/debrief/blob/46e14b5cd4eba2736b74dda581715dd7b6c517b1/trunk/org.mwc.cmap.TimeController/src/com/visutools/nav/bislider/BiSliderPresentation.java][changeMaxValue][1] = -> TRY { -> NV=Double.parseDouble(NewValue_Arg,)@ -> IF { -> Ctrl.setMaximumValue(NV,)@NV>Ctrl.getMinimumValue() } }
results[https://github.com/cytoscape/cytoscape2/blob/ac9cc63943d579cb5df89e8c3ea6685c3c4ccac9/coreplugins/AutomaticLayout/src/main/java/org/jgraph/layout/GEMLayoutSettings.java][assertDouble][3] = -> TRY { -> Double.parseDouble(text,)@ } CATCH(NumberFormatException) { -> errList.add(errMsg,)@ }
results[https://github.com/dongpd/ecms/blob/bd5663ab75117416dbe371be26270e409effe9f9/core/connector/src/main/java/org/exoplatform/wcm/connector/fckeditor/DriverConnector.java][createUploadFileResponse][1] = -> TRY {  -> return fileUploadHandler.upload(uploadId,contentType,Double.parseDouble(contentLength,),inputStream,currentFolderNode,language,limit,)@ } CATCH(Exception) {}
results[https://github.com/uditrugman/openjdk8-jaxp/blob/6e22805fcae905be1e5dab07fda9c527c074a341/src/com/sun/org/apache/xalan/internal/xsltc/runtime/BasisLibrary.java][sumF][2] = -> TRY { -> LOOP { -> result+=Double.parseDouble(dom.getStringValueX(node,),)@(node=iterator.next())!=DTMAxisIterator.END } }
results[https://github.com/TeamNyx/sdk/blob/bdf93e9fe3ae8317e721d775e948b5c09ebc2f36/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/common/layout/LinearLayoutRule.java][distributeWeights][1] = -> weightSum=parentNode.getStringAttr(ANDROID_URI,ATTR_WEIGHT_SUM,)@ -> IF { -> TRY { -> sum=Double.parseDouble(weightSum,)@weightSum!=null } }
results[https://github.com/Benoker/DockingFrames/blob/7918d9490c9a3bf9501c8364c2896fe95c0c3b7a/dockingFrames/src/bibliothek/util/xml/XContainer.java][getDouble][1] = -> TRY { -> return Double.parseDouble(value,)@ } CATCH(NumberFormatException) { -> throw new XException(ex,)@ }
results[https://github.com/luigiliquori/myMed/blob/94b4f2db6e3a987482e8b0bcff2d0fdc3585ad41/backend/src/com/mymed/utils/MatchMakingv2.java][parseDouble][1] = -> TRY { -> return Double.parseDouble(s,)@ } CATCH(NumberFormatException) { -> throw new InternalBackEndException(e,)@ }
results[https://github.com/choreos/choreos_middleware/blob/df6f2a29ae57422c859992c975265716da463a86/Monitoring/ThresholdEvaluationDaemon/src/main/java/eu/choreos/monitoring/platform/daemon/ThresholdManager.java][getMetricNumericalValue][1] = -> TRY {  -> value=host.getMetricValue(metricName,)@ -> return Double.parseDouble(value,)@ } CATCH(GangliaException) {}
results[https://github.com/mortice/Colloquy/blob/10fd25e4526e885fbcf28680344e3c6d72b513b9/Plug-Ins/SocialNetworkView/PieSpy-0/org/jibble/socnet/Configuration.java][getDouble][1] = -> TRY {  -> value=getString(label,)@ -> return Double.parseDouble(value,)@ } CATCH(NoSuchElementException) {}
results[https://github.com/goodow/gwt/blob/9a20337ff37adb92964d6622e5c060904ab0322e/user/super/com/google/gwt/emul/java/lang/Double.java][valueOf][3] = -> TRY {  -> return new Double(Double.parseDouble(s,),)@ } CATCH(NumberFormatException) {}
results[https://github.com/Monomachus/Jason.NET/blob/23d9c8233e0262777ac1fffe1fcbfdf9b05d8dbd/jason/asSyntax/NumberTermImpl.java][<init>][1] = -> TRY { -> t=Double.parseDouble(sn,)@ } CATCH(Exception) { -> logger.log(Level.SEVERE,"Error setting number term value from "+sn,e,)@ }
results[https://github.com/mdaniel/svn-caucho-com-resin/blob/303b5d6aac3d758dbd873c8928ec9ec80da16539/modules/extra/src/com/caucho/jcr/base/BaseValue.java][getDouble][1] = -> TRY {  -> return Double.parseDouble(getString(),)@ } CATCH(ValueFormatException,IllegalStateException,RepositoryException) {}
results[https://github.com/ubi-city/yolo/blob/0b59c00e0d69bdc98b9015b2d985df2733e5d932/modules/elasticsearch/src/main/java/org/elasticsearch/index/field/data/doubles/DoubleFieldDataType.java][newComparator][1] = -> TRY {  -> return new DoubleFieldDataMissingComparator(numHits,fieldname,cache,Double.parseDouble(missing,),)@ } CATCH(IOException) {}
results[https://github.com/GreenTeaScript/GreenTeaScript/blob/2969f4f3552dfedcdef484eab52caa0972e3c735/src/org/GreenTeaScript/LibGreenTea.java][ParseFloat][1] = -> TRY { -> return Double.parseDouble(Text,)@ } CATCH(NumberFormatException) { -> LibGreenTea.VerboseException(e,)@ }
results[https://github.com/bwkimmel/jmist/blob/cac4e36385ce62ae338a48c2acdc3d75d3d8d3ab/src/ca/eandb/jmist/framework/loader/dxf/AsciiDxfReader.java][getFloatValue][1] = -> TRY { -> return Double.parseDouble(valueLine,)@ } CATCH(NumberFormatException) { -> throw new AsciiDxfException(lineNumber+1,"Incorrect value type",e,)@ }
results[https://github.com/ib-ruby/ib-ruby/blob/245cdb439149a3360ef1f7740bc8532e2ade92d6/misc/IBJts-967final/java/com/ib/client/EReader.java][readDouble][1] = -> TRY {  -> str=readStr()@ -> return (str==null)?0:Double.parseDouble(str,)@ } CATCH(IOException) {}
results[https://github.com/Starlink/starjava/blob/380ffeac72b31676502d05c6fdb2b7a3a077cae7/jsky/src/main/jsky/util/gui/QuantitySlider.java][popupQuantityRequest][1] = -> reply=JOptionPane.showInputDialog(this,message,title,JOptionPane.QUESTION_MESSAGE,)@ -> IF { -> TRY { -> returnValue=Double.parseDouble(reply,)@reply!=null } }
results[https://github.com/cxjava/maty-project/blob/2562b7fe8d787bf4c4afc500280ab6b5b2ebdba6/j2ee-parent/j2ee-common/src/main/java/com/maty/j2ee/common/utils/PropertiesHelper.java][getRequiredDouble][2] = -> TRY {  -> return Double.parseDouble(getRequiredProperty(key,),)@ } CATCH(IllegalStateException) {}
results[https://github.com/Mylyn-Mantis/mylyn-mantis/blob/33957d52df481c4d6957f84ab48c69a50df66e05/com.itsolut.mantis.core/src/com/itsolut/mantis/core/MantisTaskDataMigrator.java][migrateTaskData][1] = -> taskDataVersionValue=taskData.getVersion()@ -> IF { -> TRY { -> taskDataVersion=Double.parseDouble(taskDataVersionValue,)@taskDataVersionValue!=null } }
results[https://github.com/rwilson/J2Free/blob/ff17765879f58fa12eb391cb5e395769529976a5/lib/src/java/org/j2free/util/ServletUtils.java][getDoubleParameter][1] = -> s=req.getParameter(name,)@ -> IF { -> TRY { -> i=Double.parseDouble(s,)@s!=null } }
results[https://github.com/ettrema/clyde/blob/4e95da452130db5d00a2559eb5ca8723a129fa61/clyde-core/src/main/java/com/ettrema/web/Scratch.java][main][1] = -> TRY {  -> dd=Double.parseDouble("0.0",)@ -> bd=new BigDecimal(dd,)@ } CATCH(Exception) {}
results[https://github.com/justinedelson/felix/blob/122a404a258c925c7e3cef2c65308622f05ce13c/prefs/src/main/java/org/apache/felix/sandbox/preferences/PreferencesImpl.java][getDouble][1] = -> value=this.get(key,null,)@ -> IF { -> TRY { -> result=Double.parseDouble(value,)@value!=null } }
results[https://github.com/peshkira/c3po/blob/a3a494d052dd2167f27cb5bae3554e082d575fb1/c3po-core/src/main/java/com/petpet/c3po/utils/DataHelper.java][getDoubleValue][1] = -> TRY { -> return Double.parseDouble(value,)@ } CATCH(NumberFormatException) { -> LOG.warn("Value {} is not an float",value,)@ }
results[https://github.com/DailyEfforts/programming/blob/45027bd5e2c5853e2facefffe4994b28c1c04d2c/java/src/java/util/prefs/AbstractPreferences.java][getDouble][1] = -> TRY { -> value=get(key,null,)@ -> IF { -> result=Double.parseDouble(value,)@value!=null } }
results[https://github.com/sudarshang/lucene-solr/blob/4bfe1847d6ded3f7cabb6186b77752f9d7c9cd4f/solr/core/src/java/org/apache/solr/search/QueryParsing.java][getDouble][2] = -> TRY {  -> return Double.parseDouble(new String(arr,0,i,),)@ } CATCH(ParseException) {}
results[https://github.com/AbdullahAli/TeamProject/blob/3ee343831943347457dcef1db355e95b66af190a/InfoPharma/src/infopharma/rprt/GeneralReport.java][convertToDoubleWithoutPrecisionLose][1] = -> IF { -> TRY { -> d=Double.parseDouble(e,)@!(e.isEmpty()) -> return df.format(d,)@!(e.isEmpty()) } }
results[https://github.com/Patre/Energy-saving-in-sensors--networks/blob/5fd926c1fa47b40e0ad3827cebaab689149b50f3/wsnet/utils/replay/replay.java][conversionDouble][1] = -> TRY { -> tmp=Double.parseDouble(chaine,)@ } CATCH(Exception) { -> System.out.println("Error while converting "+chaine+" to double...",)@ }
results[https://github.com/DarksCoreMachine/Assembly-Line/blob/22915fbc2608aad2e12e326f2801111a33a59354/src/minecraft/assemblyline/common/machine/command/Command.java][getDoubleArg][1] = -> IF { -> TRY { -> return Double.parseDouble(getArg(i,),)@getArg(i,)!=null } }
results[https://github.com/rmct/AutoReferee/blob/144937650e2ed9139dbbfd124f17ed4f01ed9218/src/main/java/org/mctourney/autoreferee/commands/ConfigurationCommands.java][setHeight][1] = -> TRY { -> newHeight=Double.parseDouble(args[0],)@ } CATCH(NumberFormatException) { -> sender.sendMessage(ChatColor.RED+args[0]+" is not a valid height.",)@ }
results[https://github.com/calpath/aurora/blob/4700d046e0fb4750210ce3db18a63f8ddce76592/src/aurora/hwc/config/WindowNode.java][setValueAt][1] = -> buf=(String) value@ -> TRY { -> wfm[i][j]=Double.parseDouble(buf,)@!(i<0||i>=nIn||j<0||j>=nOut) -> IF { -> wfm[i][j]=Math.max(1.0,wfm[i][j],)@wfm[i][j]>-1 && !(i<0||i>=nIn||j<0||j>=nOut) } }
results[https://github.com/panbasten/BA/blob/5fb750016005f368455de7b82718436220d31b33/mondrian/mondrian-model/src/main/java/com/tonbeller/tbutils/res/Resources.java][getDouble][1] = -> TRY {  -> s=getString(key,)@ -> return Double.parseDouble(s,)@ } CATCH(MissingResourceException) {}
results[https://github.com/ariesteam/thinklab/blob/068fa8b4f35a13762db8f952d651665014a617a6/plugins/org.integratedmodelling.thinklab.modelling/src/org/integratedmodelling/modelling/corescience/MeasurementModel.java][validateState][1] = -> TRY {  -> return (state instanceof Double)?state:Double.parseDouble(state.toString(),)@ } CATCH(ThinklabValidationException) {}
results[https://github.com/jwhitbeck/ditl/blob/042a341b99baabf98053b9e43276e4d48ca07bea/src/main/java/ditl/graphs/cli/MovementToEdges.java][parseArgs][1] = -> TRY {  -> super.parseArgs(cli,args,)@ -> range=Double.parseDouble(args[1],)@ } CATCH(ParseException,HelpException) {}
results[https://github.com/jazzywhit/Haploview/blob/69f7ca282dc243a77b912d76385a8ff209ddcfce/edu/mit/wi/haploview/HaploText.java][getDoubleArg][1] = -> TRY { -> argument=Double.parseDouble(args[valueIndex],)@ } CATCH(NumberFormatException) { -> die(argName+" requires a value between "+min+" and "+max,)@ }
results[https://github.com/martoe/mytourbook/blob/c1019dcc50aa9cab10ddf606d4b67037a3ff6357/net.tourbook.device.nmea/src/org/opengts/util/StringTools.java][parseDouble][1] = -> IF { -> TRY { -> return Double.parseDouble(num.getValueString(),)@num!=null&&num.supportsType(Double.class,) } }
results[https://github.com/eclipse/qvtd/blob/7cb3441985ea04f1ac28c9a928bfe2f2cf31f775/archive/org.eclipse.qvt.declarative.editor.imp.runtime/src/org/eclipse/imp/preferences/fields/DoubleFieldEditor.java][getDoubleValue][1] = -> TRY {  -> return Double.parseDouble(getStringValue(),)@ } CATCH(NumberFormatException) {}
results[https://github.com/tfg13/Centuries-of-Rage/blob/a6a029ce923b3e3d38dc9d669b48e98013767c5d/src/de/_13ducks/cor/game/client/ClientMapModule.java][saveStrtoDouble][1] = -> TRY { -> i=Double.parseDouble(transform,)@ } CATCH(java.lang.NumberFormatException) { -> rgi.logger("[RogMapModule][ERROR]: Syntax-Error in line "+line+": \""+transform+"\" is not a valid number! - Defaulting to 1",)@ }
results[https://github.com/auxgroup-sanxing/Sesame/blob/061175727614cfcbd9cd7ce5b0536d981b54aa64/sesame-util/src/main/java/com/sanxing/sesame/util/StringUtil.java][split][1] = -> array=split(s,delimiter,)@ -> LOOP { -> TRY { -> value=Double.parseDouble(array[i],)@i<array.length } }
results[https://github.com/patrickvane/my_java_library/blob/a5f3ba403765416b306bf56488037f03ba045bde/01a. My Common Objects/lib/patrick_vane/My_Property_Files/To_Extend/MyPropertiesReader_Extender.java][getDouble][1] = -> TRY {  -> return Double.parseDouble(get(key,),)@ } CATCH(NumberFormatException) {}
results[https://github.com/alibaba/mdrill/blob/7ecba4091cba5405e65c0b95419eafe95bf13129/trunk/adhoc-public/src/main/java/weka/classifiers/timeseries/gui/AdvancedConfigPanel.java][getHoldoutSetSize][1] = -> IF { -> TRY { -> result=Double.parseDouble(m_holdoutSize.getText(),)@ } }
results[https://github.com/dCache/dcache/blob/2962b546f98dded928f07f39503a1ac229880889/modules/dCache/src/main/java/org/dcache/poolmanager/Partition.java][getDouble][1] = -> TRY {  -> return Double.parseDouble(getProperty(name,),)@ } CATCH(NoSuchElementException,IllegalArgumentException) {}
results[https://github.com/mhl/libbio-formats-java/blob/eaf971eb7530dd92667fab8f50270ed725e13122/components/scifio/src/loci/formats/in/TiffReader.java][parseDouble][1] = -> TRY { -> return Double.parseDouble(s,)@ } CATCH(NumberFormatException) { -> LOGGER.debug("Failed to parse floating point value",e,)@ }
results[https://github.com/eclipse/rap/blob/2e3ea131bd60243a55a08a67b4042b92b9edeedc/bundles/org.eclipse.rap.ui.workbench/Eclipse UI/org/eclipse/rap/ui/internal/preferences/SessionPreferencesNode.java][getDouble][1] = -> value=internalGet(key,)@ -> IF { -> TRY { -> result=Double.parseDouble(value,)@value!=null } }
results[https://github.com/kevinweil/elephant-bird/blob/cd7a6b66647280857905e5bee5c02700942e11f2/src/java/com/twitter/elephantbird/pig/util/TextConverter.java][toDouble][1] = -> TRY {  -> return Double.parseDouble(writable.toString(),)@ } CATCH(IOException) {}
results[https://github.com/eswartz/emul/blob/a91d45d740bada1492c2ae8ab80e3e3c4cf6300c/org.eclipse.tcf/target_explorer/plugins/org.eclipse.tm.te.ui.controls/src/org/eclipse/tm/te/ui/controls/validator/DoubleNumberVerifyListener.java][verifyText][1] = -> fullText=getFullText(e,)@ -> IF { -> TRY { -> Double.parseDouble(fullText,)@e.doit&&fullText!=null&&fullText.length()>0 } }
