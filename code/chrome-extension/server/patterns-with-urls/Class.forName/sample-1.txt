results[https://github.com/jdeolive/suite-old/blob/9a748c78fb2eee1e5c36f67b9607d64d0b99f135/geoserver/importer/src/main/java/org/opengeo/data/importer/rest/ImportResource.java][getCurrentUser][2] = -> CATCH(NoClassDefFoundError) { -> TRY { -> clazz=Class.forName("org.springframework.security.core.context.SecurityContextHolder",)@ } }
results[https://github.com/GazeboHub/mirror-docbook/blob/78af0898aa23ee353b4a382f3d6b2190f4d60b58/xsl-saxon/src/com/nwalsh/saxon/TextFactory.java][getExtensionClass][166] = -> IF { -> TRY { -> return Class.forName("com.nwalsh.saxon.Text",)@ } }
results[https://github.com/kirakira/fatworm/blob/39d5165b66f695133607f52a15cbf2579f48dfca/src/fatworm/tester/IndexTester.java][test][1501] = -> TRY {  -> Class.forName("fatworm.driver.Driver",)@ } CATCH(Exception) {}
results[https://github.com/ekonijn/wicket-demo/blob/d96d14d0750a278ef10a859073d1b5260f2ba1e3/tst8-war/src/test/java/nl/xs4all/banaan/tst8/playwithdb/DatabaseConnectionTest.java][testCreatingInsertingAndReadingFromIt][386] = -> TRY {  -> Class.forName("org.hsqldb.jdbcDriver",)@ } CATCH(ClassNotFoundException,SQLException) {}
results[https://github.com/eclipse/vjet.all/blob/080b6fe24584b3dd84b5c35fd6b2ffe90b2f3037/eclipse/plugins/org.eclipse.vjet.eclipse.core/src/org/eclipse/vjet/eclipse/core/ts/JstLibResolver.java][loadClass][726] = -> TRY {  -> return Class.forName(clsName,)@ } CATCH(ClassNotFoundException) {}
results[https://github.com/greearb/jfreechart-fse-ct/blob/af245c37a1245e649061904ecf96fbdbe5a8f430/src/main/java/org/jfree/data/jdbc/JDBCPieDataset.java][<init>][220] = -> TRY {  -> Class.forName(driverName,)@ } CATCH(SQLException,ClassNotFoundException) {}
results[https://github.com/shilad/wikAPIdia/blob/17c259cb89225abb0ef5ffedb2a8fd585a2c266e/wikapidia-core/src/test/java/org/wikapidia/core/dao/TestDaoUtil.java][getDataSource][3] = -> TRY {  -> Class.forName("org.h2.Driver",)@ } CATCH(ClassNotFoundException,IOException) {}
results[https://github.com/irstv/H2GIS/blob/83e6e9175c621913fc1d373d7b824dd4f021e4b9/src/test/java/org/h2spatial/BasicTest.java][testWriteRead3DGeometryWithNaNZ][3] = -> TRY {  -> Class.forName("org.h2.Driver",)@ } CATCH(ClassNotFoundException,SQLException,ParseException) {}
results[https://github.com/l2jserver2/l2jserver2/blob/91b770a923553f18a748c050125744bb2f2b9dbc/src/tool/java/com/l2jserver/model/template/SkillTemplateConverter.java][main][7] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(SQLException,IOException,ClassNotFoundException,JAXBException) {}
results[https://github.com/fnl/txtfnnl/blob/750a025dbd7fedbb06cafa54fe4d20fd107ee10f/txtfnnl-bin/src/main/java/txtfnnl/pipelines/GeneMentionAnnotator.java][<init>][2] = -> TRY {  -> Class.forName("org.postgresql.Driver",)@ } CATCH(IOException,UIMAException,ClassNotFoundException) {}
results[https://github.com/buddycloud/buddycloud-server-java/blob/7b5d14d26e35f940438f557aa99091857f368e5c/src/main/java/org/buddycloud/channelserver/db/JDBCConnectionFactory.java][<init>][2] = -> TRY {  -> Class.forName("org.logicalcobwebs.proxool.ProxoolDriver",)@ } CATCH(ClassNotFoundException,ProxoolException) {}
results[https://github.com/ikeji/openjdk7-langtools/blob/d814a2256a8f2e53e233eb01d402357db1bab19b/test/tools/javac/DefiniteAssignment/DALoop1.java][className][45] = -> LOOP { -> TRY { -> Class.forName("",)@ } }
results[https://github.com/smartSocialNetwork/project/blob/69d592463ecf00ce0d0548f1f00b057167ea0e92/projetFinal/src/srcFaceCrypt/data/DataProcess.java][<init>][1] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@ } CATCH(NoSuchAlgorithmException,ClassNotFoundException,SQLException) {}
results[https://github.com/donut87/saros/blob/2896e9322f59954652d673b55040c5b8e006df2b/de.fu_berlin.inf.dpp/test/framework/stf/src/de/fu_berlin/inf/dpp/stf/TestLinkFinder.java][main][5] = -> TRY {  -> testLinkAnnotation=Class.forName("de.fu_berlin.inf.dpp.stf.annotation.TestLink",)@ } CATCH(IOException,ClassNotFoundException) {}
results[https://github.com/Thidox/GiantBanks/blob/c759cdac83f16c0a1ff52e27f714115651753dc7/src/main/java/nl/giantit/minecraft/GiantBanks/core/perms/PermHandler.java][packageExists][17] = -> TRY { -> LOOP { -> Class.forName(pckg,)@ } }
results[https://github.com/pufm2/hms/blob/c4dbe7e5f0fe482b856977f3d37861e8d0eb220a/src/test/java/puf/m2/hms/db/SqliteDatabaseTest.java][beforeClass][1] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@ } CATCH(IOException,DbException,ClassNotFoundException) {}
results[https://github.com/luca91/EMS/blob/a1ff0a9b1057b7288c914d0e0fe0c48b86f60bbd/src/com/ems/test/dao/EventDaoTest.java][testAddRecord][9] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(NamingException,ClassNotFoundException) {}
results[https://github.com/SAP/cloud-odata-java/blob/9858402c192942ca75a1770083b07d27bcda8f2b/odata-testutils/src/main/java/com/sap/core/odata/testutils/helper/ClassHelper.java][getClass][10] = -> TRY { -> clazzForName=Class.forName(className,)@ -> IF { -> return (Class<T>) clazzForName@clazz.isAssignableFrom(clazzForName,) } }
results[https://github.com/dskarataev/dskopenerp/blob/22165aa16bc0e8c5480e846f7b805559d76fe1b9/modules/jasper_reports/java/com/nantic/jasperreports/JasperServer.java][getConnection][1] = -> TRY {  -> Class.forName("org.postgresql.Driver",)@ } CATCH(java.lang.ClassNotFoundException,java.sql.SQLException) {}
results[https://github.com/burrrya1/EventPlanner/blob/fe0819a5d9683a79bd17be9a92dd41975781ffea/src/msu/teamAO/eventplanner/ConnectionManager.java][getConnection][1] = -> TRY {  -> Class.forName("com.ibm.db2.jcc.DB2Driver",)@ } CATCH(SQLException,ClassNotFoundException,InstantiationException,IllegalAccessException) {}
results[https://github.com/magmax/master-java/blob/8eff978362d376f0f4d556e7b9c2af5057197641/temajava10/jdbc-example/src/main/java/org/magmax/masterjava/tema10/jdbc_example/App.java][main][1] = -> TRY {  -> Class.forName("org.apache.derby.jdbc.EmbeddedDriver",)@ } CATCH(HeadlessException,ClassNotFoundException,SQLException) {}
results[https://github.com/gantu/u-ims/blob/b2111da1dfbf9aad0bff200545944207fb4164f1/src/main/java/kg/cloud/uims/dao/BaseDb.java][connect][8] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(ClassNotFoundException,SQLException,IOException) {}
results[https://github.com/picpromusic/incubator/blob/97dd26b2df2c91983b580602f44891662f5e1b0d/misc/inc-utils/src/inc/util/serialization/token/DumpExceptions.java][dumpOneClass][2] = -> TRY {  -> forName=Class.forName(className,)@ -> eclass=(Class<? extends Throwable>) forName@ } CATCH(ClassNotFoundException,IOException,InstantiationException,IllegalAccessException,InvocationTargetException) {}
results[https://github.com/JRebirth/JRebirth/blob/6af2d4765d99ebdfb5b11fcba2414211b6bab894/org.jrebirth/core/src/main/java/org/jrebirth/core/event/EventImpl.java][getClass][12] = -> TRY { -> IF { -> cls=Class.forName(className,)@!("null".equals(className,)) } }
results[https://github.com/CaptFrank/ECGVer2/blob/ce298f9bf348d7eeb298aaf2d5c2402e7725f179/ECGJAVa2GOOD/src/ecgjava2/SQL.java][connectArduinoData][4] = -> TRY {  -> Class.forName("org.gjt.mm.mysql.Driver",)@ } CATCH(IOException,InstantiationException,IllegalAccessException,SQLException,ClassNotFoundException,SocketException) {}
results[https://github.com/alibaba/otter/blob/78e112c7a9337f367accbcebebbe7f2d9a529c9c/node/etl/src/test/java/com/alibaba/otter/node/etl/common/datasource/TestMysqlUnsignedInt.java][main][2] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(ClassNotFoundException,SQLException,InterruptedException) {}
results[https://github.com/hendleyr/UmlDesigner/blob/95d4b21351d18f50504369aeaa9aa64fc3939bae/Source/jhotdraw7/src/main/java/org/jhotdraw/gui/datatransfer/ClipboardUtil.java][getClipboard][5] = -> CATCH(SecurityException) { -> TRY { -> serviceManager=Class.forName("javax.jnlp.ServiceManager",)@!(instance!=null) } }
results[https://github.com/encog/encog-java-core/blob/c22c483c1e8a95caddceddf9cc169c10948fd4ae/src/test/java/org/encog/util/HSQLUtil.java][loadDriver][2] = -> TRY {  -> Class.forName("org.hsqldb.jdbcDriver",)@ } CATCH(InstantiationException,IllegalAccessException,ClassNotFoundException) {}
results[https://github.com/svn2github/jxls/blob/81597efbfaea440dd75c0ff7c81eb2f16024ee44/jxls-examples/src/main/java/net/sf/jxls/sample/ResultSetExport.java][main][6] = -> TRY {  -> Class.forName("org.hsqldb.jdbcDriver",)@ } CATCH(Exception,ClassNotFoundException,SQLException) {}
results[https://github.com/iweinzierl/passsafe/blob/ba4a88ba5df2f7fd444d7aeebaca39e3ad93e43d/swing-gui/src/main/java/de/iweinzierl/passsafe/gui/data/SqliteDataSource.java][<init>][2] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@ } CATCH(SQLException,ClassNotFoundException,IOException,PassSafeSqlException) {}
results[https://github.com/haku/Lookfar/blob/7c1c9778627e10ec8f2fce7f4927eb4084749d60/src/main/java/com/vaguehope/lookfar/DataStore.java][getConnection][2] = -> TRY {  -> Class.forName("org.postgresql.Driver",)@ } CATCH(URISyntaxException,ClassNotFoundException,SQLException) {}
results[https://github.com/cfeclipse/cfeclipse/blob/c6b21f6dd48ab5792fc02a2ccdcb4d8db69fd94a/svn/org.cfeclipse.cfml/trunk/src/org/cfeclipse/cfml/editors/CFMLEditor.java][setupSelectionListeners][8] = -> TRY { -> c=Class.forName("org.eclipse.ui.internal.editors.text.JavaFileEditorInput",)@ } -> IF { -> return @c==null }
results[https://github.com/illarionov/OsmDroid/blob/fb15e448fe36b1717b78500453f27ab22ab204f7/OSMMapTilePackager/src/org/andnav2/osm/mtp/util/DbCreator.java][putFolderToDb][14] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@ } CATCH(ClassNotFoundException,SQLException,FileNotFoundException,IOException) {}
results[https://github.com/phenoscape/phenoscape-nlp/blob/750dcb72b92e58419e3121c8cc37b4c6c1eaa8f8/phenoscapeII/src/owlaccessor/Extract_relationallist.java][main][1] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(FileNotFoundException,ClassNotFoundException,SQLException) {}
results[https://github.com/NCIP/catissue-core/blob/7bb72a71e49a515ef24a03a2cbe59ed1051d5337/software/caTissue/modules/core/src/main/java/edu/wustl/catissuecore/querysuite/metadata/DeletePermissibleValue.java][main][11] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(SQLException,ClassNotFoundException,IOException) {}
results[https://github.com/pegasus-isi/pegasus/blob/96169667136a588cd01fe3b8347901ceddd57427/src/org/griphyn/common/catalog/work/Database.java][<init>][4] = -> TRY {  -> Class.forName(jdbc,)@ } CATCH(LinkageError,ExceptionInInitializerError,ClassNotFoundException,SQLException) {}
results[https://github.com/opencb/cellbase/blob/11e663982a0ed621d7f1d881a9637318362e48b9/cellbase-build/src/main/java/org/opencb/cellbase/build/transform/RegulatoryRegionParser.java][createSQLiteRegulatoryFiles][5] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@!(Files.exists(dbPath,)) } CATCH(ClassNotFoundException,IOException,SQLException) {}
results[https://github.com/dduvnjak/apache-bigtop/blob/7ad1b6ac4b758b8ddb2275bcc56307eec81ae0f9/test/src/smokes/hive/src/test/groovy/com/cloudera/itest/hivesmoke/TestJdbcDriver.java][setUp][14] = -> TRY {  -> Class.forName(driverName,)@ } CATCH(ClassNotFoundException,InterruptedException) {}
results[https://github.com/BrianDiao/fatworm/blob/bdf736cacb822169cf9f99dd087986c84cebd37f/Judger/src/adapter/Pooling.java][getConnection][2] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(SQLException,java.lang.ClassNotFoundException) {}
results[https://github.com/mz2/nmica-extra/blob/069c0f94d7e71d01ace18ceb08489e3053319085/src/net/derkholm/nmica/extra/app/seq/nextgen/DepthMovingAverage.java][main][1] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@ } CATCH(BioException,ClassNotFoundException,SQLException) {}
results[https://github.com/vorburger/mifos-head/blob/ae913cbe7a61df45a5fa83ea3b888b2ecd9f4bb8/application/src/test/java/org/mifos/framework/util/DataSetUpgradeUtil.java][upgrade][1] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(ClassNotFoundException,SQLException,DatabaseUnitException,IOException,TaskSystemException,PersistenceException,ConfigurationException,FinancialException) {}
results[https://github.com/shilad/wikAPIdia/blob/e3643f36d850b33f3093f134c5e3ae59bb44f790/foo-core/src/test/java/org/wikapidia/core/dao/TestRawPageDao.java][test][7] = -> TRY {  -> Class.forName("org.h2.Driver",)@ } CATCH(ClassNotFoundException,IOException,SQLException,DaoException) {}
results[https://github.com/geoserver/geoserver-history/blob/748267a6a1451c93e9a3581801d4a389e4748c3c/org.vfny.geoserver.wms/src/org/vfny/geoserver/wms/responses/map/gif/basic.java][<init>][4] = -> TRY {  -> Class.forName("org.postgresql.Driver",)@ } CATCH(ClassNotFoundException,FileNotFoundException,IOException,SQLException) {}
results[https://github.com/Xephi/AuthMeReloaded/blob/630d7a6bccba52a3889b4a4c720f731d7523a9f4/src/fr/xephi/authme/threads/MySQLThread.java][connect][6] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(ClassNotFoundException,SQLException,TimeoutException) {}
results[https://github.com/elka-projekt/cs-voltdb/blob/8b01731a091d92a069ecc5174a813523d6abdb50/examples/voter/src/voter/JDBCBenchmark.java][connect][2] = -> TRY {  -> Class.forName("org.voltdb.jdbc.Driver",)@ } CATCH(InterruptedException,ClassNotFoundException,SQLException) {}
results[https://github.com/opencb/cellbase/blob/a1cb88367b4dafdf0c6513bd61fbbbb31e60c332/cellbase-build/src/main/java/org/opencb/cellbase/build/transform/VariationParser.java][connect][1] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@ } CATCH(SQLException,ClassNotFoundException,FileNotFoundException) {}
results[https://github.com/fadmaa/grefine-rdf-extension/blob/f3fbc267d08bdcb14749b606a3065b3f9275b6bb/src/com/google/refine/org/deri/reconcile/util/RdfUtilitiesImpl.java][dereferenceUri][2] = -> CATCH(Exception) { -> TRY { -> Class.forName("net.rootdev.javardfa.jena.RDFaReader",)@ } }
results[https://github.com/marubinotto/Piggydb/blob/0cb67acfb16cc1678a76c627e424cd3ce32ec33a/src/main/java/marubinotto/piggydb/impl/jdbc/h2/util/H2DbUpgrade.java][connectWithVersion1_1][5] = -> TRY {  -> Class.forName("org.h2.upgrade.v1_1.Driver",)@ } CATCH(SQLException,IOException,ClassNotFoundException) {}
results[https://github.com/jdmr/mateo/blob/04651fd779fb3990afd5fd69f7e18447f584e2d1/src/main/java/mx/edu/um/mateo/inscripciones/model/ccobro/estudiantes/Aviso.java][getConnectionNoe][2] = -> CATCH(NamingException) { -> TRY { -> Class.forName("oracle.jdbc.driver.OracleDriver",)@ } }
results[https://github.com/jazzlly/Notes/blob/dda559f32360c6c9038b7368ad13b572cd6f85d4/computer.science/languages/java/JavaExamples/src/com/java/examples/reflection/filed/R200ObtainFieldType.java][main][1] = -> TRY {  -> c=Class.forName("com.java.examples.reflection.filed.R200ObtainFieldType",)@ } CATCH(ClassNotFoundException,SecurityException,NoSuchFieldException) {}
results[https://github.com/utcompling/textgrounder/blob/a6978faa256ca5e876daf16b938e5d71f55abc77/java/opennlp/textgrounder/geo/TRGazetteer.java][<init>][2] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@ } CATCH(FileNotFoundException,IOException,Exception) {}
results[https://github.com/utcompling/textgrounder/blob/5b25992521f098325327ab8865886487b2c95dea/src/main/java/opennlp/textgrounder/gazetteers/TRGazetteer.java][initialize][8] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@ } CATCH(FileNotFoundException,IOException,ClassNotFoundException,SQLException) {}
results[https://github.com/wkm/Axirassa/blob/7c14e52a70861d2419f771731978cf160ec58f6c/src/main/java/axirassa/overlord/ExecutionTarget.java][<init>][2] = -> TRY {  -> this.targetClass=Class.forName(classname,)@!(!(OverlordUtilities.isValidName(name,))) } CATCH(ClassNotFoundException,OverlordException) {}
results[https://github.com/sleuthkit/sleuthkit/blob/866aa55a6bb84153094a171a095192d2f748d419/bindings/java/src/org/sleuthkit/datamodel/SleuthkitCase.java][<init>][1] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@ } CATCH(SQLException,ClassNotFoundException,TskCoreException) {}
results[https://github.com/shilad/wikAPIdia/blob/d281b4bbb02d28de32dcc9a39bd89a791ddbec42/wikAPIdia-sr/src/test/java/org/wikapidia/sr/TestMilneWitten.java][testArticle][1] = -> TRY {  -> Class.forName("org.h2.Driver",)@ } CATCH(ClassNotFoundException,IOException,SQLException,DaoException,ConfigurationException) {}
results[https://github.com/jkiddo/jolivia/blob/6c71576430faf22aae57ef272d2333e7abc267b0/jolivia.dacp/src/main/java/org/dyndns/jkiddo/service/dacp/client/PairingDatabase.java][<init>][1] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@ } CATCH(UnsupportedEncodingException,ClassNotFoundException) {}
results[https://github.com/jmxtrans/jmxtrans/blob/5be4b9212bbff409c84b35885e73ec3551faf248/jmxtrans-utils/src/test/java/com/googlecode/jmxtrans/classloader/ClassLoadingTests.java][loadedJarCanBeAccessed][1] = -> TRY {  -> Class.forName("dummy.Dummy",)@ } CATCH(ClassNotFoundException,MalformedURLException,FileNotFoundException,URISyntaxException) {}
results[https://github.com/mifos/cheetah/blob/b812cf46094c04ae1583feac67e20b9b32ecd16b/testFramework/src/main/java/org/mifos/test/framework/util/DbUnitDataImportExport.java][dumpData][2] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(ClassNotFoundException,SQLException,DatabaseUnitException,FileNotFoundException,IOException) {}
results[https://github.com/dtracers/PumpAndJump/blob/43cda71db149583a5289574541c0f54b2dd667de/PumpAndJump/libs/minim/src/ddf/minim/javasound/JSMinim.java][getAudioInputStream][2] = -> CATCH(IllegalArgumentException) { -> TRY { -> Class.forName("javazoom.spi.mpeg.sampled.convert.MpegFormatConversionProvider",)@ } }
results[https://github.com/egonw/pathvisio/blob/243871e967ab370d43b2c33acbf3869c05798b53/tools/superpathways/src/org/pathvisio/cytoscape/superpathways/SuperpathwaysPlugin.java][getIDMapper][1] = -> TRY {  -> Class.forName("org.bridgedb.rdb.IDMapperRdb",)@ } CATCH(ClassNotFoundException,IDMapperException) {}
results[https://github.com/goobi/goobi-production/blob/733c457a308b8cd89967f28674cf71e5c792c96e/Goobi/src/org/goobi/production/importer/FireburnDataImport.java][connectToDB][4] = -> TRY {  -> Class.forName(driverName,)@ } CATCH(ClassNotFoundException,SQLException,ConfigurationException,IOException) {}
results[https://github.com/shilad/wikAPIdia/blob/e3643f36d850b33f3093f134c5e3ae59bb44f790/foo-core/src/test/java/org/wikapidia/core/dao/TestSqlCache.java][test][2] = -> TRY {  -> Class.forName("org.h2.Driver",)@ } CATCH(ClassNotFoundException,IOException,SQLException,DaoException,InterruptedException) {}
results[https://github.com/dCache/dcache/blob/63f09d1b1b49dcfd97c4ce3feaec7c7ebdd98870/modules/dCacheJUnit/org/dcache/chimera/ChimeraFsHelper.java][getFileSystemProvider][4] = -> TRY {  -> Class.forName(drv,)@ } CATCH(IOException,ClassNotFoundException,SQLException) {}
results[https://github.com/dduvnjak/apache-bigtop/blob/a7eb46c344cd952f94aeed9e32cb560b06914e52/bigtop-tests/test-artifacts/hive/src/main/groovy/org/apache/bigtop/itest/hivesmoke/TestJdbcDriver.java][setUp][4] = -> TRY {  -> Class.forName(driverName,)@ } CATCH(ClassNotFoundException,InterruptedException,NoSuchFieldException,IllegalAccessException) {}
results[https://github.com/Vitek000/Test/blob/5daa5fd22b5a4635f476a1f47dec41dc2bb3efda/src/garbage/Test11112.java][createFile][2] = -> TRY {  -> aClass=Class.forName("java.io.File",)@ } CATCH(ClassNotFoundException,NoSuchMethodException,InvocationTargetException,IllegalAccessException,InstantiationException) {}
results[https://github.com/mz2/nmica-extra/blob/71030660b868376af91501fda196b486d367536e/src/net/derkholm/nmica/extra/app/seq/CalculateGCContent.java][main][1] = -> TRY {  -> Class.forName("org.sqlite.JDBC",)@ } CATCH(FileNotFoundException,BioException,SQLException,ClassNotFoundException) {}
results[https://github.com/elka-projekt/cs-voltdb/blob/8b01731a091d92a069ecc5174a813523d6abdb50/tests/frontend/org/voltdb/regressionsuites/TestSystemCatalogSuite.java][testJdbcAccess][1] = -> TRY {  -> Class.forName(driver,)@ } CATCH(IOException,ProcCallException,ClassNotFoundException,SQLException) {}
results[https://github.com/Hive13/jIRCBot/blob/ac0592c6981dc79d6e81788eced94a0a3464ca99/src/org/hive13/jircbotx/support/BotDatabase.java][getConnection][1] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(SQLException,ClassNotFoundException,InvalidAttributesException) {}
results[https://github.com/azzy/Foodle/blob/fdcdaadd8a5cfebdca31063e4622cb9a5005d321/cron-jobs/grabInfoBetter.java][main][2] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(java.lang.ClassNotFoundException) {}
results[https://github.com/mifos/cheetah/blob/b812cf46094c04ae1583feac67e20b9b32ecd16b/testFramework/src/main/java/org/mifos/test/framework/util/DbUnitDataImportExport.java][loadDataFromFile][2] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(DatabaseUnitException,SQLException,IOException,ClassNotFoundException) {}
results[https://github.com/ieb/vivo-harvester/blob/bb479f6cf378a98e66adeb9f468b3ffaa0c07bf7/src/main/java/org/vivoweb/harvester/demo/DemoPSMerge.java][main][1] = -> TRY {  -> Class.forName("net.sourceforge.jtds.jdbc.Driver",)@ } CATCH(SQLException,ClassNotFoundException,IOException,UsageException) {}
results[https://github.com/tavlima/fosstrak-epcis/blob/9767c731668b1fb937ea8bb3f0a61c90fba3cff8/epcis-interop-test/src/test/java/org/fosstrak/epcis/utils/FosstrakDatabaseHelper.java][getDatabaseConnection][5] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(ClassNotFoundException,SQLException,DatabaseUnitException) {}
results[https://github.com/OpenIotOrg/openiot/blob/ab006c734941776297172389f1bc1d67fd7f17ea/modules/x-gsn/src/main/java/org/openiot/gsn/simulation/QueryGenerator.java][main][1] = -> TRY {  -> Class.forName("org.hsqldb.jdbcDriver",)@ } CATCH(ClassNotFoundException,Exception) {}
results[https://github.com/jmxtrans/jmxtrans/blob/327e076671d98063f241aac729edcd072f575992/jmxtrans/test/com/googlecode/jmxtrans/classloader/ClassLoadingTests.java][loadedJarCanBeAccessed][2] = -> TRY {  -> Class.forName("dummy.Dummy",)@ } CATCH(ClassNotFoundException,MalformedURLException,FileNotFoundException) {}
results[https://github.com/rzwitserloot/lombok.ast/blob/2a72f699534efd2938a7d02d61b6186d0518604b/test/resources/idempotency/B002_SimpleTypes.java][setup][1] = -> TRY {  -> Class.forName("org.hsqldb.jdbcDriver",)@ } CATCH(SQLException,ClassNotFoundException,SecurityException,NoSuchFieldException,IllegalArgumentException,IllegalAccessException) {}
results[https://github.com/sandeepsundaram/Heroku/blob/af90a627713746c82aa47a4319ef3ec7c9a435b3/src/main/java/DBUtils/DBUtil.java][getConnection][1] = -> TRY {  -> Class.forName("org.postgresql.Driver",)@ } CATCH(URISyntaxException,SQLException,ClassNotFoundException) {}
results[https://github.com/NoNSAChat/Server/blob/8ab7e9ad4348d8f1c91eee38e45b02a05ca5140f/src/RMIChatServer/Intern/ChatServer.java][<init>][1] = -> TRY {  -> Class.forName(this.MySQLDriver,)@ } CATCH(RemoteException,Exception) {}
results[https://github.com/jgf/wala-mirror/blob/e545745d2d0a0b98bb7d081b1fac59dbf716196b/com.ibm.wala.core.testdata/src/reflection/Reflect2.java][main][1] = -> TRY {  -> Class.forName("java.lang.Integer",)@ } CATCH(ClassNotFoundException,InstantiationException,IllegalAccessException) {}
results[https://github.com/Spravce-Ukolu-Tym/Spravce-ukolu/blob/4626538581871c014874584736e11977e5bf478b/source/nextQuest/src/nextQuest/server/nextQuestServer.java][main][1] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(RemoteException,AlreadyBoundException,NotBoundException,InterruptedException,ClassNotFoundException,SQLException) {}
results[https://github.com/bdombrow/CS-510-NiagaraST-Last-Known-Good/blob/8830d95f34e1de9c0c516d2ac9a68bcebad6dc7b/src/niagara/logical/LogicalOperator.java][setSelectedAlgorithm][1] = -> TRY {  -> c=Class.forName(className,)@ } CATCH(ClassNotFoundException,InvalidAlgorithmException) {}
results[https://github.com/nickboldt/temp-jbosstools-central/blob/b02bd513e00e011ab16f65ca55c98c6d4387312c/maven/plugins/org.jboss.tools.maven.jpa/src/org/jboss/tools/maven/jpa/configurators/JptUtils.java][getResourceLocator][1] = -> CATCH(NoSuchMethodException) { -> TRY { -> resourceLocatorManagerClass=Class.forName("org.eclipse.jpt.common.core.internal.resource.ResourceLocatorManager",)@ } }
results[https://github.com/AKSW/jena-sparql-api/blob/3c29fd301331d774e45cc6c5cf967d1744433952/jena-sparql-api-cache-h2/src/test/java/org/aksw/jena_sparql_api/SparqlTest.java][testMultiThreaded][1] = -> TRY {  -> Class.forName("org.h2.Driver",)@ } CATCH(InterruptedException,ClassNotFoundException,SQLException,IOException) {}
results[https://github.com/wwadge/bonecp/blob/891a7eeb876b0456217569dca65b6d4a3d811d6e/bonecp-hbnprovider/src/test/java/com/jolbox/bonecp/provider/TestBoneCPConnectionProvider.java][testConfigure][1] = -> TRY {  -> Class.forName("com.jolbox.bonecp.MockJDBCDriver",)@ } CATCH(SecurityException,NoSuchFieldException,IllegalArgumentException,IllegalAccessException,NoSuchMethodException,ClassNotFoundException,SQLException) {}
results[https://github.com/wwadge/bonecp/blob/891a7eeb876b0456217569dca65b6d4a3d811d6e/bonecp-hbnprovider/src/test/java/com/jolbox/bonecp/provider/TestBoneCPConnectionProvider.java][testCreatePool][1] = -> TRY {  -> Class.forName(DRIVER,)@ } CATCH(SQLException,ClassNotFoundException,CloneNotSupportedException) {}
results[https://github.com/himalayas/casi/blob/ad3837cf012a34b184119cc9cef42d981b6fa66e/casi-demo/src/main/java/com/casi/demo/mysql/MysqlDemo.java][main][1] = -> TRY {  -> Class.forName("com.mysql.jdbc.Driver",)@ } CATCH(ClassNotFoundException,SQLException,UnsupportedEncodingException) {}
results[https://github.com/shilad/wikAPIdia/blob/6e69ee30437809930669205e0dcb10f665868e81/wikAPIdia-sr/src/test/java/org/wikapidia/sr/TestSRMetricMatrixWriter.java][createTestData][1] = -> TRY {  -> Class.forName("org.h2.Driver",)@ } CATCH(IOException,ClassNotFoundException,DaoException) {}
results[https://github.com/wwadge/bonecp/blob/602d6787cd8505ef23b18f0c6f8e69c4686f2c13/bonecp-benchmark/src/main/java/com/jolbox/benchmark/BenchmarkMain.java][main][1] = -> TRY {  -> Class.forName("com.jolbox.bonecp.MockJDBCDriver",)@ } CATCH(ClassNotFoundException,SQLException,PropertyVetoException,IllegalArgumentException,SecurityException,InterruptedException,IllegalAccessException,InvocationTargetException,NoSuchMethodException,NamingException,ParseException) {}
results[https://github.com/shilad/wikAPIdia/blob/e3643f36d850b33f3093f134c5e3ae59bb44f790/foo-core/src/test/java/org/wikapidia/core/dao/TestLocalLinkDao.java][testLink][1] = -> TRY {  -> Class.forName("org.h2.Driver",)@ } CATCH(ClassNotFoundException,IOException,DaoException) {}
results[https://github.com/dimitarp/basex-all/blob/7b2c7fc5c912e2dde52cccce7a7e245141f49478/src/main/java/org/basex/build/HTMLParser.java][getHTMLReader][1] = -> TRY {  -> return (XMLReader) Class.forName("org.ccil.cowan.tagsoup.Parser",).newInstance()@ } CATCH(Exception) {}
results[https://github.com/eea/eea.eunis/blob/027e417c38a84aad3f8a5793fa47b3628a711272/src/main/java/ro/finsiel/eunis/search/AdvancedSearch.java][DeleteBranch][4] = -> TRY { -> Class.forName(SQL_DRV,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/shyamalprasad/jdee/blob/570a8a00fb30781f53db412a3954c62d8276b137/jdee/java/src/jde/util/CompileServer.java][<clinit>][2] = -> TRY { -> compiler=Class.forName("com.sun.tools.javac.Main",)@ } CATCH(ClassNotFoundException) { -> e.printStackTrace()@ }
results[https://github.com/cis423-team1/gps_with_friends/blob/0331e040c3f1e2fec15653b5a050024d57e67c17/mysql-connector-java-5.1.25/src/com/mysql/jdbc/SQLError.java][notImplemented][1] = -> IF { -> TRY { -> return (SQLException) Class.forName("java.sql.SQLFeatureNotSupportedException",).newInstance()@ } }
results[https://github.com/opencb/cellbase/blob/11e663982a0ed621d7f1d881a9637318362e48b9/cellbase-build/src/main/java/org/opencb/cellbase/build/transform/RegulatoryRegionParser.java][queryChromosomesRegulatoryDB][1] = -> TRY { -> Class.forName("org.sqlite.JDBC",)@ } CATCH(ClassNotFoundException | SQLException) { -> e.printStackTrace()@ }
results[https://github.com/mindstream99/Cornerstone/blob/f031e992fdb163f8d57bd90abed188302eacc999/ChimeServiceCommon/src/main/java/com/paxxis/chime/database/DatabaseConnection.java][initDriver][3] = -> TRY { -> clazz=Class.forName(driverName,)@ } CATCH(ClassNotFoundException) { -> throw new RuntimeException(ex,)@ }
results[https://github.com/lboynton/XMPP-Client/blob/d6cb75a70fc41a81125fb93ce5e78101005b61a3/lib/smack/source/org/jivesoftware/smack/XMPPConnection.java][useCompression][1] = -> TRY { -> Class.forName("com.jcraft.jzlib.ZOutputStream",)@ } CATCH(ClassNotFoundException) { -> throw new IllegalStateException("Cannot use compression. Add smackx.jar to the classpath",)@ }
results[https://github.com/bslund/jetty-maven-plugin/blob/017177f13ad1a55428a091d19a3077df0e1e7c62/modules/server/jetty-start/src/main/java/org/mortbay/start/Main.java][isAvailable][1] = -> TRY { -> Class.forName(classname,)@ } -> TRY { -> loader.loadClass(classname,)@ }
results[https://github.com/IanDarwin/darwinsys-api/blob/77f3ee948ca5755750d16174b9e7eeb02916db90/src/com/darwinsys/testing/CheckAccessors.java][process][1] = -> TRY {  -> c=Class.forName(className,)@ -> process(c,)@ } CATCH(Exception) {}
results[https://github.com/TaintDroid/android_platform_libcore/blob/b7dd9ee69383daef7e0192b83bdc8257739679bd/luni/src/test/java/libcore/java/nio/BufferTest.java][testHasArrayOnJniDirectByteBuffer][1] = -> TRY {  -> c=Class.forName("java.nio.ReadWriteDirectByteBuffer",)@ -> ctor=c.getDeclaredConstructor(int.class,int.class,)@ } CATCH(Exception) {}
results[https://github.com/svn2github/javassist/blob/4b2de8a77ed0e754a8a0c0f934422a587f4f6b31/src/main/javassist/rmi/ObjectImporter.java][createProxy][1] = -> TRY {  -> c=Class.forName(classname,)@ -> cons=c.getConstructor(proxyConstructorParamTypes,)@ } CATCH(Exception) {}
results[https://github.com/UniversalMediaServer/UniversalMediaServer/blob/c58561038516bac144e8f4ae39d9f5d39dffb093/src/main/java/net/pms/dlna/DLNAMediaDatabase.java][<init>][1] = -> TRY { -> Class.forName("org.h2.Driver",)@ } CATCH(ClassNotFoundException) { -> LOGGER.error(null,e,)@ }
