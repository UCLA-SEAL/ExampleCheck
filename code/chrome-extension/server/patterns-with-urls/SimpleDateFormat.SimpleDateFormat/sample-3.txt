results[https://github.com/Slim3/slim3/blob/bb2d88eed3a840a0778671e7668c9782542984c4/slim3-gen-json-test/test/org/slim3/json/test/OtherJavaTypeAttrsModelTest.java][<clinit>][1] = -> setDateAttr(new SimpleDateFormat("yyyy-MM-dd hh:mm:ss",).parse("2010-11-11 11:11:11",),)@
results[https://github.com/zoho/creator-java/blob/76516f78f7dd04a1c14b4df76c82300179cff43e/src/com/zoho/creator/jframework/XMLParser.java][getDateValue][113] = -> TRY { -> formatter=new SimpleDateFormat(dateFormat,)@ -> return formatter.parse(dateString,)@ }
results[https://github.com/kvite/astridclone/blob/be57b599a99804f07e43919932f409739e899e23/src-legacy/com/timsu/astrid/utilities/DateUtilities.java][wasCreatedBefore][153] = -> df=new SimpleDateFormat("yyMMdd",)@ -> TRY { -> date=df.parse(s,)@ }
results[https://github.com/mosesn/Beer-Battle/blob/5efda999f260560988372facae62d8bc352c37ba/twilio-java/src/main/java/com/twilio/sdk/resource/instance/Recording.java][getDateCreated][185] = -> format=new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss Z",)@ -> TRY { -> return format.parse(this.getProperty("date_created",),)@ }
results[https://github.com/jbsalgado/bpa-i/blob/e3fe33c83d99bfc56307bcc12557d2b31674d858/src/br/gov/saudecaruaru/bpai/util/DateUtil.java][parserStringToDate][93] = -> format=new SimpleDateFormat(formato,)@ -> format.setLenient(false,)@ -> TRY { -> return format.parse(date,)@ }
results[https://github.com/bulanlily/kabbadi/blob/a61100cb9cdbb148d13f96c2a15ed9d21b1e9da2/src/test/java/kabbadi/domain/builder/InvoiceTestBuilder.java][withInvoiceDate][4] = -> TRY { -> invoice.setDateOfInvoice(new SimpleDateFormat(DATE_FORMAT,).parse(date,),)@ }
results[https://github.com/frostwire/frostwire-desktop/blob/ce0435631aa98661a74f31d40a983b7bc071dfde/components/core/com/frostwire/search/kat/KATSearchResult.java][buildCreationTime][15] = -> date=new SimpleDateFormat("EEEE dd MMM yyyy HH:mm:ss Z ",)@ -> TRY { -> result=date.parse(item.pubDate,).getTime()@ }
results[https://github.com/mytcg/GameCardsBB/blob/7269d5cad94b905e423c368d4c27f065cdb5f233/Mobidex/src/net/mytcg/dex/util/SettingsBean.java][noteloaded][6] = -> dateFormat=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ -> date=new Date(HttpDateParser.parse(dateFormat.format(calender.getTime(),),),)@
results[https://github.com/iisihub/CAP/blob/6ad5b4a1dd4487eab5a715e538da9e4ac15a12df/cap-core/src/main/java/com/iisigroup/cap/utils/CapDate.java][isMatchPattern][4] = -> TRY { -> fomrat=new SimpleDateFormat(pattern,)@ -> date=fomrat.parse(value,)@ -> formatDateStr=fomrat.format(date,)@ }
results[https://github.com/Omertron/api-themoviedb/blob/9436701f5cc07038bba37138b34bca098d101572/themoviedbapi/src/com/moviejukebox/themoviedb/model/MovieDB.java][setLastModifiedAt][2] = -> df=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ -> TRY { -> setLastModifiedAt(df.parse(lastModifiedAt,),)@ }
results[https://github.com/bulanlily/kabbadi/blob/a61100cb9cdbb148d13f96c2a15ed9d21b1e9da2/src/test/integration/domain/builder/InvoiceTestBuilder.java][withBillOfEntryDate][4] = -> TRY { -> invoice.setBillOfEntryDate(new SimpleDateFormat(DATE_FORMAT,).parse(date,),)@ }
results[https://github.com/robindecroon/homeviz-git/blob/a1364a92a3faed073e1195c4d756f613c7057542/src/robindecroon/homeviz/Constants.java][getStartTime][4] = -> TRY { -> df=new SimpleDateFormat(DATE_FORMAT,)@ -> return df.parse(date,).getTime()@ }
results[https://github.com/racker/java-service-registry-client/blob/94f18aebbc30fbed9858667eebfb70ec16e21e10/src/main/java/com/rackspacecloud/client/service_registry/auth/Token.java][getExpires][2] = -> ISO8601DATEFORMAT=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.sssZ",)@ -> TRY { -> date=ISO8601DATEFORMAT.parse(expires.replaceAll("\\-0([0-9]){1}\\:00","-0$100",),)@ }
results[https://github.com/OpenHDS/openhds-server/blob/0a8d63bc1980964ca53ca1e553b003115c365065/controller/src/main/java/org/openhds/controller/beans/DHISDocumentBean.java][setEndDate][4] = -> TRY { -> sdf=new SimpleDateFormat(siteProperties.getDateFormat(),)@ -> date=sdf.parse(endDate,)@ }
results[https://github.com/dstucki/RadioTour/blob/60df4d8ebc5d4e52ca45025272c98a9eed282f6b/src/ch/hsr/sa/radiotour/utils/RiderImport.java][getBirthday][2] = -> formater=new SimpleDateFormat("yyyyMMdd",)@ -> TRY { -> temp=formater.parse(string.substring(3,),)@ }
results[https://github.com/panbasten/BA/blob/79bfeb4e4a713119961a9db63c30b0e66897e6db/kettle/kettle-ui/src/main/java/org/pentaho/di/ui/trans/steps/getxmldata/XMLInputFieldsImportProgressDialog.java][IsDate][10] = -> TRY { -> fdate=new SimpleDateFormat("yyyy/MM/dd",)@ -> fdate.setLenient(false,)@ -> fdate.parse(str,)@ }
results[https://github.com/kdeforche/jwt/blob/4de490befc1a1062517a9c67f2129b387da36ae3/src/eu/webtoolkit/jwt/WDate.java][fromString][3] = -> formatter=new SimpleDateFormat(format,)@ -> TRY { -> formatter.setLenient(false,)@ -> d=formatter.parse(text,)@ }
results[https://github.com/TWChennai/kabbadi/blob/a61100cb9cdbb148d13f96c2a15ed9d21b1e9da2/src/test/integration/domain/builder/InvoiceTestBuilder.java][withBondDate][4] = -> TRY { -> invoice.setBondDate(new SimpleDateFormat(DATE_FORMAT,).parse(date,),)@ }
results[https://github.com/BetaCONCEPT/astroboa/blob/3dab223bd71e9fea54807bafba92540f4f3af203/astroboa-model/src/main/java/org/betaconceptframework/astroboa/util/DateUtils.java][fromString][1] = -> df=new SimpleDateFormat(pattern,)@ -> TRY { -> return toCalendar(df.parse(date,),)@ }
results[https://github.com/iliasbartolini/twu28a_timemachine/blob/f25baaf1e96d4370b378c71c6d32434b25baa916/src/main/java/com/thoughtworks/twu/domain/timesheet/forms/TimesheetForm.java][toTimesheet][1] = -> date=new SimpleDateFormat("dd-MMM-yy",)@ -> TRY { -> timesheet.setWeekEndingDate(date.parse(weekEndingDate,),)@ }
results[https://github.com/svn2github/dujiaok_dev/blob/97db34eef172708925ad0afa1a2a45fe261db9c5/source/webapp/src/main/java/com/ssnn/dujiaok/util/DateUtil.java][formatDate][1] = -> temp=(StringUtil.isEmpty(format,))?"yyyy-MM-dd":format@ -> tempFormat=new SimpleDateFormat(temp,)@ -> TRY { -> return tempFormat.parse(dateStr,)@ }
results[https://github.com/InMobi/conduit/blob/53d1b9221378a4312e7bbded52a1007a70f1eedc/conduit-core/src/main/java/com/inmobi/conduit/utils/CalendarHelper.java][getDateTime][18] = -> format=new SimpleDateFormat("yyyy-MM-dd-HH-mm",)@ -> TRY { -> calendar.setTime(format.parse(dateTime,),)@ }
results[https://github.com/araqne/logdb/blob/4c54e5b785fa9de496d4b5c84f9f118a5ff1f1d6/araqne-krsyslog-parser/src/main/java/org/araqne/logparser/krsyslog/ahnlab/TrusGuardLogParser.java][parseFirewallLogV1][4] = -> dateFormat=new SimpleDateFormat("yyyyMMdd HH:mm:ss",)@ -> TRY { -> m.put("date",dateFormat.parse(dateToken+" "+timeToken,),)@ }
results[https://github.com/logsaw/logsaw-app/blob/9afec609ed1dd526a5d3ba08cd8f02b0be89eba4/net.sf.logsaw.core/src/net/sf/logsaw/core/field/model/DateLogEntryField.java][isValidInput][1] = -> TRY { -> new SimpleDateFormat(getTimestampPattern(log,),).parse(str,)@ }
results[https://github.com/sukrupa/school-admin/blob/d5f7361c5b6af31097f40d1bf3be7e129b4d596b/lib/twist/com.thoughtworks.twist.driver.sahi_3.0.0.9411/sahi/src/net/sf/sahi/util/Utils.java][getDateFromFileName][3] = -> dateString=fileName.substring(start,end,)@ -> TRY { -> return new SimpleDateFormat("ddMMMyyyy__HH_mm_ss",).parse(dateString,)@ }
results[https://github.com/rockamorales/ClinicaEJB/blob/ee04e96607345558a6596974f9dd7ce5acc780a6/src/java/sv/com/cormaria/servicios/entidades/archivo/TblProgramacionCitas.java][setHorCita1][1] = -> formatter=new SimpleDateFormat("HH:mm:ss",)@ -> TRY { -> this.setHorCita(formatter.parse(horCita1,),)@ }
results[https://github.com/digitalabs/IBFb/blob/c35c463737937d3b8f3e21a9218e057b5dc96032/IBFbWorkbook/src/ibfb/workbook/utils/ExcelUtils.java][getDateValueFromCell][1] = -> sdf=new SimpleDateFormat("m/dd/yyyy",)@ -> TRY { -> cellValue=sdf.parse(cellData.getStringCellValue(),)@ }
results[https://github.com/reyoung/ASIMS/blob/0b6c647e3f5518ade39b05bcfcace09bfd7d6045/app/controllers/AdminAirlinePlan.java][handleEdit][1] = -> TRY { -> leaveTime=new SimpleDateFormat("yyyy/MM/dd HH:mm:ss",)@ -> alp.LeaveTime=leaveTime.parse(LeaveTime,)@ } CATCH(Throwable) { -> badRequest()@ }
results[https://github.com/redlinesmedia/em-server/blob/34e810725fa67ca5a047ee8fe04f10a782dc2f9a/src/com/openedit/comments/Comment.java][setCreationDate][2] = -> TRY { -> setDate(new SimpleDateFormat(fieldFormat,).parse(inCreationDate,),)@ }
results[https://github.com/micromata/projectforge-continuous-db/blob/44e9ec7163734fc03c217b9a159c7869e75235ae/src/main/java/org/projectforge/continuousdb/UpdateEntryImpl.java][parseUTCIsoDate][2] = -> df=new SimpleDateFormat("yyyy-MM-dd",)@ -> df.setTimeZone(UTC,)@ -> TRY { -> date=df.parse(isoDateString,)@ }
results[https://github.com/logsaw/logsaw-app/blob/9afec609ed1dd526a5d3ba08cd8f02b0be89eba4/net.sf.logsaw.core/src/net/sf/logsaw/core/util/DateFormatUtils.java][hasDateComponent][1] = -> TRY { -> df=new SimpleDateFormat(pattern,)@ -> str=df.format(dateIn,)@ -> dateOut=df.parse(str,)@ }
results[https://github.com/ewcmsfree/ewcms/blob/6b08eedccdfef177d96f246dd5013957eb1fb7b8/src/main/java/com/ewcms/plugin/visit/util/DateTimeUtil.java][getCurrent][1] = -> simple=new SimpleDateFormat(format,)@ -> TRY { -> current=simple.parse(simple.format(current,),)@ }
results[https://github.com/CloudStack-extras/CloudBridge-archive/blob/cb6c3f74cf6b13c546c71c74d3a8a209fbe007fd/src/com/cloud/bridge/service/core/s3/S3ConditionalHeaders.java][setModifiedSince][2] = -> TRY { -> formatter=new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss z",)@ -> cal.setTime(formatter.parse(ifModifiedSince,),)@ }
results[https://github.com/httpcache4j/httpcache4j/blob/3f8e3f8664f2ac10fdb01998e71ebc11475b61f3/httpcache4j-api/src/main/java/org/codehaus/httpcache4j/HTTPUtils.java][fromHttpDate][4] = -> format=new SimpleDateFormat(PATTERN_RFC1123,)@ -> TRY { -> date=format.parse(header.getValue(),)@ }
results[https://github.com/bdelacretaz/terye/blob/32418acb7c206b418e42d5f8ac35f3c04e75a4c0/solr-firsthops/src/main/java/ch/x42/terye/query/QueryTerm.java][toSolrQuery][1] = -> TRY { -> formatter=new SimpleDateFormat(DateUtils.FORMAT,)@ -> formatter.parse(expression.replaceAll("\"","",),)@ }
results[https://github.com/jsnoriegam/flame/blob/20bf1106ae7fba64db7c79bdf804a823b175b51f/src/main/java/flame/Request.java][getDate][1] = -> formatter=new SimpleDateFormat(format,)@ -> TRY { -> return formatter.parse(servletRequest.getParameter(param,),)@ }
results[https://github.com/gogoego-gerrit/iucn-sis/blob/3ce50bc86fe0ae8c8eaff0e78ec53b26aeaa0808/com.solertium.db/src/com/solertium/db/SQLDateHelper.java][parse][1] = -> TRY { -> date=new SimpleDateFormat(pattern,).parse(source,)@ } -> return new SQLDate(date,)@
results[https://github.com/xiamike/parcupine/blob/dd001cf4abfddb892262fe61a8df482acc10048a/NumberPicker/src/com/quietlycoding/android/picker/NumberPicker.java][formatMe][1] = -> sdf=new SimpleDateFormat("HH:mm",)@ -> TRY { -> x=sdf.parse("00:00",)@ -> return sdf.format(x,)@ }
results[https://github.com/trishika/DroidUPnP/blob/19e302ba953675bc66c8e34a5aaf2e6873193a16/src/main/java/org/droidupnp/model/cling/didl/ClingImageItem.java][getCount][1] = -> TRY { -> formatIn=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss",)@ -> date=formatIn.parse((ImageItem) item.getDate(),)@ }
results[https://github.com/seppo0010/Tuit-ar/blob/6321fe3fe1ef143b677bf0a6c8c101cd09d259d7/android/src/com/tuit/ar/models/DirectMessage.java][getDate][1] = -> TRY { -> sdf=new SimpleDateFormat("EEE MMM d hh:mm:ss Z yyyy",)@!(createDate!=null) -> return createDate=sdf.parse(dataSourceJSON.getString("created_at",),)@!(createDate!=null) }
results[https://github.com/Yarl-IT-Hub/ySchool/blob/115e6f5b345b64c1edd43a9170769eb03863a229/yschool/src/test/java/org.yarlithub.yschool.test/integration/student/StudentNewTest.java][setUp][108] = -> TRY {  -> formatter=new SimpleDateFormat("d-MMM-yyyy,HH:mm:ss aaa",)@ -> date=formatter.parse(testDate,)@ } CATCH(Exception) {}
results[https://github.com/evanchooly/javabot/blob/5a94ced071f040d8e1aec9a466eed0e2c2835f9d/core/src/main/java/javabot/wicket/pages/Index.java][<init>][3] = -> sdf=new SimpleDateFormat("yyyy-MM-dd",)@ -> IF { -> TRY { -> date=sdf.parse(year+"-"+month+"-"+day,)@channel!=null&&year!=null } }
results[https://github.com/teropa/stem/blob/e018a7aa0b1121c3be27c74fbdeff67e464a6061/org.eclipse.stem.core/src/org/eclipse/stem/core/common/impl/DublinCoreImpl.java][createDateFromISO8601DateString][242] = -> TRY {  -> return new SimpleDateFormat("yyyy-MM-dd",).parse(iso8601DateString,)@ } CATCH(ParseException) {}
results[https://github.com/partakein/partake/blob/153feea64960c1e2ef583e74069226be9dfba042/app/in/partake/base/TimeUtil.java][parseForEvent][2] = -> dateFormatForEvent=new SimpleDateFormat(Constants.READABLE_DATE_FORMAT,)@ -> TRY { -> return new DateTime(dateFormatForEvent.parse(dateStr,).getTime(),)@ }
results[https://github.com/geotools/geotools/blob/b0ddacc545aabeafc134cd0a050d0353829aca3b/modules/library/referencing/src/main/java/org/geotools/referencing/operation/transform/WarpTransform2D.java][<clinit>][2] = -> df=new SimpleDateFormat("yyyy-MM-dd' 'hh:mm:ss.SSSZ",)@ -> df.setTimeZone(tz,)@ -> TRY { -> date_=(buildVersion!=null)?df.parse(buildVersion,):new java.util.Date()@ }
results[https://github.com/RestOpenGov/RestOpenGov/blob/94e180b70b2fc0c14fa0bd4ba72b60df415abb74/crawler/src/main/java/com/nardoz/restopengov/utils/DateChecker.java][findFormat][2] = -> LOOP { -> sdf=new SimpleDateFormat(format,)@ -> TRY { -> date=sdf.parse(str,)@ } }
results[https://github.com/stephenh/jxls/blob/028f25df72bc7cc77265b78da7af6bcb3eb16456/jxls-reader/src/test/java/net/sf/jxls/reader/ErrorHandlingTest.java][testSkipErrors][1] = -> TRY {  -> format=new SimpleDateFormat("M/d/yyyy",)@ -> date=format.parse("3/14/2007",)@ } CATCH(IOException,SAXException,ParseException,InvalidFormatException) {}
results[https://github.com/wso2/commons/blob/792242f96b420a51317e4c4febeba66458320302/siddhi/trunk/modules/siddhi-core/src/test/java/org/wso2/siddhi/test/samples/simple/filter/_date/SimpleFilterDateTestCase.java][testAPI][1] = -> TRY {  -> formatter=new SimpleDateFormat("dd-MMM-yy",)@ -> date=(Date) formatter.parse("15-June-07",)@ } CATCH(SiddhiException,InterruptedException,EventStreamNotFoundException,ParseException) {}
results[https://github.com/codwar/ipdburt/blob/afa994740f4a72356ba2449bc6f32a565c951ab0/iddb-remote/src/main/java/jipdbs/admin/utils/Transformer.java][string_to_date][7] = -> IF { -> return null@str==null||str.equals("\"null\"",) } -> format=new SimpleDateFormat(DATE_FORMAT,)@!(str==null||str.equals("\"null\"",)) -> TRY { -> return format.parse(str,)@!(str==null||str.equals("\"null\"",)) }
results[https://github.com/dotCMS/dotCMS/blob/793528e15b4b6ef7a0394e9309e9dac56cb6d670/src/com/dotmarketing/portlets/campaigns/struts/CampaignForm.java][setWebCompletedDate][2] = -> TRY { -> Logger.debug(this,"Setting Web Completed Date "+webCompletedDate,)@ -> this.completedDate=new SimpleDateFormat("MM/dd/yyyy HH:mm",).parse(webCompletedDate,)@ -> Logger.debug(this,"Setting Completed Date "+this.completedDate,)@ }
results[https://github.com/shivekkhurana/learning/blob/00d04218cc3cbc3372cc7cec77ee9cde141f40fd/java/Calender.java][C_make][2] = -> sdf=new SimpleDateFormat("dd/MM/yyyy",)@ -> TRY { -> a=sdf.parse("1/"+month+"/"+year,).toString().toCharArray()@ }
results[https://github.com/maxpower47/PinDroid/blob/fe7f73c4f57916703def55c731aa6e0eef40cf21/src/com/deliciousdroid/util/DateParser.java][parse][6] = -> TRY {  -> df=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssz",)@ -> return df.parse(input,)@ } CATCH(java.text.ParseException) {}
results[https://github.com/svn2github/jxls/blob/35b01064391196708c634d17257defbb54b6891d/jxls-reader/src/test/java/net/sf/jxls/reader/XLSBlockReaderTest.java][testRead][1] = -> TRY {  -> format=new SimpleDateFormat("MM/dd/yyyy",)@ -> date=format.parse("12/20/1976",)@ } CATCH(IOException,IllegalAccessException,InvocationTargetException,NoSuchMethodException,InstantiationException,ParseException,InvalidFormatException) {}
results[https://github.com/wwyz/DotaSpark/blob/5be9136e63de32dbb676de044a05c1b2e83d7e1a/gg/src/com/examples/gg/loadMore/LoadMore_Gosu_News.java][processDate][2] = -> sdf=new SimpleDateFormat("MMMM d, yyyy HH:mm",)@ -> sdf.setTimeZone(TimeZone.getTimeZone("CET",),)@ -> TRY { -> pastDate=sdf.parse(s,)@ }
results[https://github.com/victoryckl/android-demos/blob/710efa2f9ea99d73488c17b7022b54c5fd131861/Shelves/src/org/curiouscreature/android/shelves/provider/BooksStore.java][fromCursor][1] = -> format=new SimpleDateFormat("MMMM yyyy",)@ -> TRY { -> book.mPublicationDate=format.parse(c.getString(c.getColumnIndexOrThrow(PUBLICATION,),),)@ }
results[https://github.com/llbit/chunky/blob/214d9eab67d00f02c4fc60aa5464f1f753060785/lib/src/se/llbit/util/Util.java][isValidISO8601][9] = -> IF { -> return false@time.length()<6 } -> TRY { -> dateFormat=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssz",)@!(time.length()<6) -> dateFormat.parse(time,)@!(time.length()<6) }
results[https://github.com/mrdon/jforum-plugins/blob/f2c0b27255dbe338037540942f288f6d8bd231a1/src/net/jforum/search/LuceneCommandLineReindexer.java][parseDate][7] = -> IF { -> TRY { -> date=new SimpleDateFormat("dd/MM/yyyy",).parse(s,)@!(StringUtils.isEmpty(s,)) } }
results[https://github.com/apache/tuscany-sdo/blob/fa2428326e342a42d96858f1f8aaca25c9e54cd0/impl/src/test/java/org/apache/tuscany/sdo/test/TypeRoundTripTest.java][compare][1] = -> TRY { -> IF { -> sdf=new SimpleDateFormat("yyyy-MM-dd'Z'",)@ -> o1=sdf.parse((String) o1,)@o1 instanceof String&&o2 instanceof Date } }
results[https://github.com/osi/mulgara/blob/23166a90ca6840991582abe5661fa2184c1956f8/src/jar/querylang/java/org/mulgara/store/jxunit/TimeZoneSubstituteJX.java][eval][4] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ",)@ -> d=sdf.parse(timedate,)@ -> sdf=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss",)@ -> localTime=sdf.format(d,)@ } CATCH(Throwable) {}
results[https://github.com/srt/openarchive/blob/d0c482e3d776f9dd8a13cb5d35e6d5089800b8ff/src/main/java/com/reucon/openfire/plugin/archiver/ajax/AjaxFacade.java][parseDate][2] = -> df=new SimpleDateFormat(DATE_FORMAT,)@ -> IF { -> return null@s==null||s.length()==0 } -> TRY { -> return df.parse(s,)@!(s==null||s.length()==0) }
results[https://github.com/ewcmsfree/ewcms/blob/6b08eedccdfef177d96f246dd5013957eb1fb7b8/src/main/java/com/ewcms/plugin/visit/util/DateTimeUtil.java][getCurrentToNextDaySecond][1] = -> TRY { -> simple=new SimpleDateFormat("yyyy-MM-dd",)@ -> nextDay=simple.parse(simple.format(calendar.getTime(),),)@ }
results[https://github.com/cstamas/nexus-peedy/blob/8d8a91a1e520ec9bc5455c3510e0e19f5086aab7/nexus-indexer/src/main/java/org/sonatype/nexus/index/incremental/DefaultIncrementalHandler.java][parse][2] = -> TRY { -> df=new SimpleDateFormat(IndexingContext.INDEX_TIME_FORMAT,)@ -> df.setTimeZone(TimeZone.getTimeZone("GMT",),)@ -> return df.parse(s,)@ }
results[https://github.com/araujodavid/mydbaas-monitor/blob/96e3e30c578aa1814bd6eacd14b542a4f42b495f/mydbaasmonitor/src/main/java/br/com/arida/ufc/mydbaasmonitor/core/util/DataUtil.java][isDataValida][4] = -> sdf=new SimpleDateFormat("dd/MM/yyyy",)@ -> TRY { -> testDate=sdf.parse(date,)@ } -> IF { -> return false@!(sdf.format(testDate,).equals(date,)) }
results[https://github.com/cjashfor/LinuxToolsProjectPatches/blob/54fdb19c42d69e0586a3f0aad9c9c09f50da444d/changelog/org.eclipse.linuxtools.changelog.core/src/org/eclipse/linuxtools/changelog/core/editors/ChangeLogFormattingStrategy.java][isDate][2] = -> isoDate=new SimpleDateFormat("yyyy-MM-dd",)@ -> TRY { -> ad=isoDate.parse(inputStr,)@ -> IF { -> return true@ad!=null } }
results[https://github.com/ericSaksa/CapstoneLab/blob/e707298ddda325706d3d4461ba4308b50a207dff/JavaTunes-portlet/docroot/WEB-INF/src/com/inventory/InventoryForm.java][createNewItem][1] = -> TRY {  -> sdf=new SimpleDateFormat("mm/dd/yyyy",)@ -> releaseDate=sdf.parse(releaseDateStr,)@ } CATCH(JSONException,IOException,ParseException,SystemException) {}
results[https://github.com/wso2/commons/blob/792242f96b420a51317e4c4febeba66458320302/siddhi/trunk/modules/siddhi-core/src/test/java/org/wso2/siddhi/test/samples/simple/_null/SimpleFilterDateTestCase.java][testQuery][1] = -> TRY {  -> formatter=new SimpleDateFormat("dd-MMM-yy",)@ -> date=(Date) formatter.parse("15-June-07",)@ } CATCH(SiddhiException,ParseException,SiddhiPraserException) {}
results[https://github.com/sgbell/podsalinan/blob/abcc11ed626fd6fe8541a2c9194f6df7cc3f83c1/podsalinan/src/com/mimpidev/podsalinan/cli/CLInterface.java][convertDate][4] = -> LOOP { -> TRY { -> date=new SimpleDateFormat(dateFormat[dateCounter],).parse(menuInput,)@date==null&&dateCounter<dateFormat.length } }
results[https://github.com/cyclestreets/android/blob/476f9c4f0b15bee1327d5cd00f3e5237176aacbc/libraries/cyclestreets-view/src/main/java/net/cyclestreets/PhotoUploadActivity.java][photoTimestamp][1] = -> TRY { -> df=new SimpleDateFormat("yyyy:MM:dd HH:mm:ss",)@ -> IF { -> date=df.parse(dateString,)@dateString!=null&&dateString.length()>0 } }
results[https://github.com/NewMediaCenter/MobileWeb/blob/dd1cdd4537bcd4adf724b9abd8af8eb7e48bd8d9/events/web/src/main/java/org/kuali/mobility/events/controllers/CalendarController.java][event][2] = -> sdf=new SimpleDateFormat("MMddyyyy",)@ -> TRY { -> IF { -> selectedDate=sdf.parse(date,)@date!=null } }
results[https://github.com/sakai-mirror/mneme/blob/4c51ee44abff811aeb87504412cca5e9f2c779b7/mneme-impl/impl/src/java/org/etudes/mneme/impl/ImportQti2ServiceImpl.java][getDateFromString][1] = -> TRY { -> IF { -> return null@dateStr==null||dateStr.length()==0||dateStr.equals("",) } -> sdf=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss",)@!(dateStr==null||dateStr.length()==0||dateStr.equals("",)) -> date=sdf.parse(dateStr,)@!(dateStr==null||dateStr.length()==0||dateStr.equals("",)) }
results[https://github.com/zhjt19800720/dms-project/blob/ad99df5e397d5d48b4ac2bffae07eebf40c17bda/yijava-parent/yijava-dms/src/main/java/dms/yijava/service/system/SysLogService.java][paging][1] = -> format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ -> TRY { -> LOOP { -> d2=format.parse(propertyValue+hhmmss,)@ } }
results[https://github.com/otavanopisto/pyramus/blob/f1a45d7ceab944d4fa5e7f96af1ae12adf6f814d/rest/src/test/java/fi/pyramus/rest/test/AllRESTServiceTests.java][testUpdateStudentGroup][3] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd",)@ -> beginDate=sdf.parse("2013-09-13",)@ } CATCH(ClientProtocolException,IOException,ParseException) {}
results[https://github.com/gephi/gephi-archive/blob/eb4a1adc1899e3d92d10f02865b53c18c51f180e/DynamicAPI/src/org/gephi/dynamic/DynamicUtilities.java][getDoubleFromXMLDateTimeString][2] = -> CATCH(IllegalArgumentException) { -> dateFormat=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ -> TRY { -> date=dateFormat.parse(str,)@ } }
results[https://github.com/chrismarx/cmestemp22/blob/13068f3f0b657f99895d81e6c1a9184f4f7f255b/server/src/test/java/org/eurekastreams/server/service/restlets/EnrollmentEntryResourceTest.java][setupPUTExpectations][2] = -> TRY {  -> df=new SimpleDateFormat("yyyy",)@ -> gradDate=df.parse("2008",)@ } CATCH(IOException,ParseException) {}
results[https://github.com/ramesesinc/clfc/blob/b782b692c1b2f4630b35c02e6e21e1482d6d92f5/platform/android/PaymentCollectionApp/src/com/rameses/paymentcollectionapp/Route.java][handleMessage][1] = -> TRY { -> dt=getDbHelper().getServerDate(db,collectorid,)@ -> date=new SimpleDateFormat("yyyy-MM-dd",).parse(dt,)@ }
results[https://github.com/k3b/EzTimeTracker/blob/894bc7eea3de31b777044d5785487ac320e0e21a/src/com/zettsett/timetracker/activity/TimeSheetReportActivity.java][onContextItemSelected][1] = -> format=new SimpleDateFormat("E, MMMM dd, yyyy",)@ -> TRY { -> showTimeSliceEditDialog(TimeSlice.IS_NEW_TIMESLICE,format.parse(mDateSelectedForAdd,).getTime(),)@ }
results[https://github.com/irina-andreevna-ivanova/ivanova_p01/blob/83db82ea2a9ab1c178d4bbc26f537c1cdaab97f0/tests/test-zendo2/zendo-playground/src/main/java/zendo/playground/sse/serialization/TestJavaSerialization.java][main][1] = -> TRY {  -> apple.pickingDate=new SimpleDateFormat("dd.MM.yyyy",).parse("10.06.2010",)@ } CATCH(ParseException,IOException,ClassNotFoundException) {}
results[https://github.com/arago/rike/blob/181f76944b6fec724bf8b1bf7f6c60def275f50a/arago-rike/src/main/java/de/arago/rike/task/action/SaveMilestone.java][execute][1] = -> TRY { -> format=new SimpleDateFormat("yyyy-MM-dd",)@ -> milestone.setDueDate(format.parse(data.getRequestAttribute("due_date",),),)@ }
results[https://github.com/zendtech/zendserver-sdk-java/blob/3b20cad3003d1e7a14d29e6b2208bb4b2b3a6e44/zendserver-sdk-java/org.zend.sdk/sdklib/org/zend/sdklib/monitor/ZendMonitor.java][getTime][1] = -> TRY { } ELSE { -> formatter=new SimpleDateFormat("dd-MMM-yyyy HH:mm",)@ -> date=formatter.parse(time,)@ }
results[https://github.com/nyetwurk/ecuxplot/blob/1772426b3b5fca40d95adaa86160652b52946e29/org/nyet/logfile/Dataset.java][add][3] = -> IF { -> fmt=new SimpleDateFormat("HH:mm:ss.SSS",)@ -> TRY { -> d=fmt.parse(s,)@this.id.toString().equalsIgnoreCase("time",)&&s.matches("\\d{2}:\\d{2}:\\d{2}.\\d{3}",) } }
results[https://github.com/bentmann/maven-3/blob/16c46a696654c5b31fcd4272f7c5c99c3a5c54a6/bootstrap/src/main/java/org/apache/maven/bootstrap/download/RepositoryMetadata.java][getLastUpdatedUtc][1] = -> fmt=new SimpleDateFormat("yyyyMMddHHmmss",)@ -> fmt.setTimeZone(timezone,)@ -> TRY { -> return fmt.parse(lastUpdated,).getTime()@ }
results[https://github.com/freenet/plugin-Freemail-v0.1/blob/12655e00ad21d0b8a349898e494d4277df613f7f/src/freemail/utils/DateStringFactory.java][dateFromKeyString][1] = -> TRY { -> sdf=new SimpleDateFormat("yyyyMMdd",)@ -> sdf.setTimeZone(gmt,)@ -> sdf.setLenient(false,)@ -> return sdf.parse(str,)@ }
results[https://github.com/justayak/emcserver/blob/aca90807e11a205fceccc8dae9365e0d2e7f8810/src/emc/communication/concretes/NetworkService.java][getWday][1] = -> sdf=new SimpleDateFormat("EEEE, dd.MM.yyyy",)@ -> TRY { -> res=sdf.format(DateFormat.getDateInstance().parse(s,),)@ }
results[https://github.com/hampelratte/VCH/blob/07c512abab12920203cf25407f37e68a2571962e/src/main/java/de/berlios/vch/parser/dmax/VideoPageParser.java][parsePubDate][1] = -> TRY {  -> sdf=new SimpleDateFormat("dd-MMMM-yyyy",)@ -> pubDate=sdf.parse(dateString,)@ } CATCH(ParserException,ParseException) {}
results[https://github.com/dalvik/WebCam/blob/69438683e79157703254a1bb143cd3b050f6555e/src/com/iped/ipcam/utils/DateUtil.java][formatTimeStrToTimeStr2][2] = -> sdf=new SimpleDateFormat("yyyyMMddHHmmss",)@ -> TRY { -> date=sdf.parse(dateStr,)@ -> sdf=new SimpleDateFormat("yyyy-MM-dd",)@ -> return sdf.format(date,)@ }
results[https://github.com/apache/any23/blob/c0b47d65bd39f4e9cddc2a6d443890db2e21cc27/core/src/main/java/org/apache/any23/rdf/RDFUtils.java][getXSDDate][3] = -> TRY {  -> simpleDateFormat=new SimpleDateFormat(format,)@ -> date=simpleDateFormat.parse(dateToBeParsed,)@ } CATCH(ParseException,DatatypeConfigurationException) {}
results[https://github.com/jhpoelen/eol-globi-data/blob/65656a2743c61cdd2eabb83df635db61bd43c789/src/test/java/org/trophic/graph/data/StudyImporterForAkinTest.java][importHeaderAndASingleSpecimen][2] = -> TRY {  -> formatter=new SimpleDateFormat("yyyy-MM-dd",)@ -> expectedDate=formatter.parse("1998-03-07",)@ } CATCH(StudyImporterException,NodeFactoryException,ParseException) {}
results[https://github.com/provirus/jmodder/blob/9ba8b1ee15cbb218a40f64b69d64c9d914245c45/jmodder-core/src/test/java/ca/pgon/jmodder/core/tools/reflexion/stringtotype/StringToTypeProcessorTest.java][testDate][1] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd hh:mm",)@ -> date=sdf.parse("2010-10-10 10:10",)@ } CATCH(NotSupportedType,ParseException) {}
results[https://github.com/analytica-devteam/analytica-server/blob/f4244e85c3486c8c1f224badb10c69d333f1bb9d/analytica-hcube-impl/src/test/java/io/analytica/hcube/HCubeManagerMemoryTest.java][testAppNames][3] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy/MM/dd",)@ -> start=dateFormat.parse("2012/12/12",)@ } CATCH(ParseException,HCubeStoreException) {}
results[https://github.com/bigbluebutton/bigbluebutton/blob/bdc12d7f4e04a2f936013202fc37eed7e928d79e/bigbluebutton-web/src/java/org/bigbluebutton/api/domain/Recording.java][convertOldDateFormat][1] = -> TRY { -> sdf=new SimpleDateFormat("EEE MMM d HH:mm:ss z yyyy",)@ -> sdf.setLenient(false,)@ -> cal.setTime(sdf.parse(olddate,),)@ }
results[https://github.com/StratusLab/claudia/blob/ecdd16ac71397fde4a8b804765f54c0b3ebc5aff/reportclient/src/main/java/com/telefonica/claudia/slm/monitoring/PersistenceClient.java][sendvalue][1] = -> TRY { -> LOOP { -> sdf=new SimpleDateFormat(pattern,)@ -> date=sdf.parse(timestamp,)@ } }
results[https://github.com/bmuschko/gradle-in-action-source/blob/fc35a0f6d2a99c4278656be2cdb4eda507c673f8/chapter15/listing_15_06-11-todo-ssh-deploy/web/src/main/java/com/manning/gia/todo/utils/BuildInfoReader.java][read][1] = -> TRY { -> formatter=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ -> buildInfo.setTimestamp(formatter.parse(props.getProperty("timestamp",),),)@ }
results[https://github.com/statsbiblioteket/newspaper-batch-metadata-checker/blob/9c0585de1816f5905c75fc47b897593313c0419b/src/test/java/dk/statsbiblioteket/newspaper/metadatachecker/MixValidationTest.java][testXpathValidationObjectIdentifierWorkshift][2] = -> TRY {  -> formatter=new SimpleDateFormat("yyyy-MM-dd",)@ -> shipmentDate=formatter.parse("2010-01-02",)@ } CATCH(ParseException,SQLException) {}
results[https://github.com/statsbiblioteket/newspaper-batch-metadata-checker/blob/fdb63612f09c8437d5039ffd375a77892ebf1dfc/src/test/java/dk/statsbiblioteket/newspaper/metadatachecker/mix/MixValidationTest.java][testXpathValidationScannedDate][1] = -> TRY {  -> formatter=new SimpleDateFormat("yyyy-MM-dd",)@ -> shipmentDate=formatter.parse("2010-01-02",)@ } CATCH(ParseException,SQLException,IOException) {}
results[https://github.com/CrowdDJ/player/blob/680b9dda46837bd247b2d84bdf74a1bd07561d26/src/dj/crowd/libcrowddj/Session.java][changeSong][1] = -> df=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ",)@ } ELSE { -> command=parser.parse("{ \"cmd\": \"change_song\", \"params\": { \"timestamp\": \""+df.format(date,)+"\", \"song_id\": "+song.id+", \"duration\": "+song.duration+"}}",).getAsJsonObject()@
results[https://github.com/scrumbleruser/TDWM/blob/af7e98c442d7a0d0e57b4d93d035abc671e0c24f/src/API/Revision.java][getDateString][1] = -> sdf=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'",)@ -> TRY { -> d=sdf.parse(timestamp,)@ } -> out=new SimpleDateFormat("yyyy-MM-dd",)@ -> return out.format(d,)@
results[https://github.com/nuxeo/nuxeo-jsf/blob/8c5c6b088827cfe6d658e89d71d738ec59717f35/nuxeo-platform-ui-web/src/main/java/org/nuxeo/ecm/platform/ui/web/tag/handler/InputDateTimeTagHandler.java][setDefaultTime][1] = -> format=new SimpleDateFormat("HH:mm",)@ -> format.setTimeZone(instance.getTimeZone(),)@ -> TRY { -> date=format.parse(defaultTime,)@ }
results[https://github.com/wishop/wishop-webapp/blob/371de5f2d16008b4789edf44426b4a83f2c43dce/src/main/java/com/wishop/run/SimpleCommand.java][populateDatabase][1] = -> TRY {  -> formatter=new SimpleDateFormat("MM/dd/yy",)@ -> date=formatter.parse("24/01/2013",)@ } CATCH(NoSuchAlgorithmException,ParseException) {}
results[https://github.com/twilio/twilio-java/blob/ba0bfa746662bebe3da8c406dff3d23424c39a10/src/main/java/com/twilio/sdk/resource/instance/UsageTrigger.java][getDateFired][1] = -> format=new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss Z",)@ -> TRY { -> IF { -> return null@dateFired==null } -> return format.parse(dateFired,)@!(dateFired==null) }
results[https://github.com/amarfurt/healthbank/blob/1995a176915008a42214c19578ba2b75d1676a81/app/utils/DateTimeUtils.java][extract][1] = -> TRY { -> date=new SimpleDateFormat(COMPLETE,).parse(dateTimeString,)@ } -> return new SimpleDateFormat(format,).format(date,)@
