results[https://github.com/madiator/HadoopUSC/blob/205614a2a9393d036ef68387b707680bb053cc1d/trunk/src/test/org/apache/hadoop/io/file/tfile/TestTFileSeqFileComparison.java][setUp][104] = -> TRY {  -> formatter=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ } CATCH(IOException) {}
results[https://github.com/elms1990/mc715/blob/0ffed87e754f484c54e93b9c0e36c731cdb4960b/projeto02/zookeeper-3.4.5/contrib/loggraph/src/java/org/apache/zookeeper/graph/Log4JSource.java][<init>][8] = -> TRY {  -> this.dateformat=new SimpleDateFormat(DATE_FORMAT,)@ } CATCH(IllegalArgumentException,FilterException) {}
results[https://github.com/Felix91/flight-reservation-system/blob/2a21f0c6527209e4a00790617174faea0fe7ef7c/src/ufly/frs_test/FlightTest.java][doPost][1] = -> TRY {  -> convertToDate=new SimpleDateFormat("yyyy.MM.dd.HH.mm",)@ } CATCH(IOException,ServletException) {}
results[https://github.com/ekirkilevics/Spring/blob/06017e7ecc38471b99b211165c1bfbd36a7f4568/spring-webmvc-portlet/src/test/java/org/springframework/web/portlet/mvc/CommandControllerTests.java][testWithCustomDateEditorEmptyNotAllowed][116] = -> TRY {  -> dateFormat=new SimpleDateFormat("dd-MM-yyyy",)@ } CATCH(Exception) {}
results[https://github.com/UOC/PeLP/blob/9de83a536884eb5dcbc8a01bb114fbec76f873ea/src/main/java/uoc/edu/pelp/bussines/UocBussinesImpl.java][getActivitiClassroom][2] = -> TRY {  -> df=new SimpleDateFormat("dd/MM/yyyy",)@ } CATCH(Exception,PelpException) {}
results[https://github.com/dobrosi/programgyar/blob/45357bea721cfa1db04409c617536578bb5b41c4/mdbk/src/main/java/com/programgyar/mdbk/MDBKSmall.java][loadSettings][3] = -> TRY {  -> df=new SimpleDateFormat(dateFormat,)@ } CATCH(IOException,FileNotFoundException) {}
results[https://github.com/BladeRunnerJS/brjs/blob/922efb3a45f16a3e7a9927a58392d63a85410ffb/brjs-core/src/main/java/org/bladerunnerjs/plugin/plugins/commands/standard/JsDocCommand.java][replaceBuildDateToken][2] = -> TRY {  -> dateFormat=new SimpleDateFormat("dd MMMMM yyyy",)@ -> resultFileContent=fileContent.replace("@buildDate@",dateFormat.format(date,),)@ } CATCH(IOException,ConfigException) {}
results[https://github.com/AbdullahAli/TeamProject/blob/3ee343831943347457dcef1db355e95b66af190a/InfoPharma/src/infopharma/rprt/GeneralReport.java][addDateGenerated][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy/MM/dd HH:mm:ss",)@ } CATCH(DocumentException) {}
results[https://github.com/Jasig/SSP/blob/46688f7316c864c59d0456b262fc6ddccbbf9a0c/src/main/java/org/jasig/ssp/util/liquibase/ConvertPersonStrengthsToStrength.java][generateStatements][1] = -> TRY {  -> df=new SimpleDateFormat(DATE_TIME_FORMAT,)@ } CATCH(CustomChangeException) {}
results[https://github.com/jdeolive/geotools-old/blob/98f8fe09ef3f6928e46392e3ba3b5b9b2642e18f/modules/plugin/imagemosaic/src/test/java/org/geotools/gce/imagemosaic/DataStoreTimeTest.java][timeTest][4] = -> TRY {  -> iso801=new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss",)@ } CATCH(IOException,MismatchedDimensionException,FactoryException,InterruptedException,CQLException) {}
results[https://github.com/apache/continuum/blob/bf82a85c33eb891bbf803bef5805798f8bd3f99a/continuum-distributed/gbuild-agent/src/main/java/org/apache/geronimo/gbuild/agent/LogFailedBuildsExtension.java][start][4] = -> TRY {  -> dateFormatter=new SimpleDateFormat(dateFormat,)@!(!(directory.isDirectory())) && !(!(directory.canWrite())) && !(!(directory.exists())) } CATCH(StartingException) {}
results[https://github.com/apache/archiva/blob/97009cdf8f6ab847218ab87ca5d0ac58708b3a09/archiva-webapp/src/main/java/org/apache/maven/archiva/web/repository/AuditLog.java][initialize][3] = -> TRY {  -> timestamp=new SimpleDateFormat(timestampFormat,)@ } CATCH(InitializationException) {}
results[https://github.com/pcoriente/LaAnita/blob/a3ab35b6ad17742fb52093a82be64fd44da10c6d/LaAnita/src/java/entradas/dao/DAOEntradas.java][grabarEntradaAlmacen][6] = -> TRY {  -> formatter=new SimpleDateFormat("yyyy-MM-dd",)@ } CATCH(SQLException) {}
results[https://github.com/DawnScience/dawn-workflow/blob/854115351ff287290df81605bf6d20157290dc37/org.dawb.passerelle.actors/src/org/dawb/passerelle/actors/process/ProcessTransformer.java][<init>][1] = -> TRY {  -> this.dateFormat=new SimpleDateFormat("dd_MMM_yyyy[HH'h'_mm'm'_ss's'_SS'ms']",)@ } CATCH(NameDuplicationException,IllegalActionException) {}
results[https://github.com/xbaro/PeLP/blob/9de83a536884eb5dcbc8a01bb114fbec76f873ea/src/main/java/uoc/edu/pelp/bussines/UocBussinesImpl.java][getDelivers][2] = -> TRY {  -> df=new SimpleDateFormat("dd/MM/yyyy",)@ } CATCH(PelpException,Exception) {}
results[https://github.com/deepsky/SQL-Code-Assistant-/blob/b69a5e87849668b88c8f241eaa307c69e8bb7e50/shared/root/java/database/com/deepsky/database/ora2/DbCacheManager.java][createUserObjList][1] = -> TRY {  -> fmt=new SimpleDateFormat("yyyy-MM-dd:HH:mm:ss",)@ } CATCH(DBException) {}
results[https://github.com/kiniry/KOA/blob/6baf9cb66b6e3aec07860962f3ecc826ff19e70b/branches/split-projects/koa/src/ie/ucd/srg/koa/databeheer/command/SelectExportCommand.java][execute][7] = -> TRY {  -> xFormat=new SimpleDateFormat("dd.MM.yyyy HH:mm",)@ } CATCH(ie.ucd.srg.logica.eplatform.command.CommandException,EPlatformException) {}
results[https://github.com/adempiere/adempiere/blob/be9607f007acde18954e8ba1a82d45f3fc376d63/posterita/posterita/src/main/org/posterita/struts/pos/POSInfoAction.java][getCurrentMonthReport][1] = -> TRY {  -> sdf=new SimpleDateFormat(TimestampConvertor.DEFAULT_DATE_PATTERN1,)@!(fwd!=null) } CATCH(ApplicationException,OperationException) {}
results[https://github.com/CRISES-URV/eVerification-2/blob/72acdad5afc21ab799916ffe8e6bed28032453ed/source/thresholdClient/src/cat/urv/crises/smartcard/elgamal/WaitGenerator.java][<init>][3] = -> TRY {  -> sdf=new SimpleDateFormat("mm:ss.SSS",)@ } CATCH(CardException) {}
results[https://github.com/statsbiblioteket/newspaper-batch-metadata-checker/blob/9c0585de1816f5905c75fc47b897593313c0419b/src/test/java/dk/statsbiblioteket/newspaper/metadatachecker/MixValidationTest.java][testXpathValidationScannedBeforeShipment][1] = -> TRY {  -> formatter=new SimpleDateFormat("yyyy-MM-dd",)@ } CATCH(ParseException,SQLException) {}
results[https://github.com/daxzel/NetCracker-ProGroupShop/blob/d4ecab776d705e075966c9fb8263f30cb59591e6/lab2/ProShop/ProShop-ejb/src/java/SessionBeans/XmlBean.java][exportToXMLProduct][1] = -> TRY {  -> formt=new SimpleDateFormat("yyyy-MM-dd",)@ } CATCH(EJBException) {}
results[https://github.com/xhanin/voxxrin/blob/9f6c5f58f0540269853a23268a8553de7a93a841/voxxr-web/src/main/java/voxxr/web/DayScheduleResources.java][prepare][1] = -> TRY {  -> format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S",)@ } CATCH(JSONException) {}
results[https://github.com/NCIP/catissue-dynamic-extensions/blob/d7578216398aafc0d5b50ec3f0a239a4891839b1/help/edu/common/dynamicextensions/entitymanager/MockEntityManager.java][getAllEntities][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ } CATCH(DynamicExtensionsApplicationException) {}
results[https://github.com/ggrandes/sandbox/blob/4a77ef8ee2d68e4a23be71130c663fac513d8d92/src/SafeSimpleDateFormat.java][main][1] = -> TRY {  -> t=new SimpleDateFormat("dd-MM-yyyy",)@ } CATCH(InterruptedException) {}
results[https://github.com/alibaba/mdrill/blob/c5212d75bf55ecc53fdb57f7b7bffce7baeeb215/trunk/adhoc-web/src/main/java/com/alimama/web/TableJoin.java][getUserTables][1] = -> TRY {  -> fmt=new SimpleDateFormat("yyyyMMdd",)@ } CATCH(SQLException,JSONException) {}
results[https://github.com/creechley/Calendar/blob/8ac2dc3ec42c018d4f6b1097b69502387ee7004a/src/identity/server/IdentityServer.java][getFreeTimeSlots][1] = -> TRY {  -> formatter=new SimpleDateFormat(dfr,)@ } CATCH(UserInfoException,RemoteException,ParseException) {}
results[https://github.com/BloatIt/bloatit/blob/b3312d4c14bffdb3732463f1570095b1271deb72/main/src/main/java/com/bloatit/framework/utils/i18n/DateLocale.java][<init>][1] = -> TRY {  -> this.parser=new SimpleDateFormat("yyyy-MM-dd",)@ } CATCH(DateParsingException) {}
results[https://github.com/PIH/openmrs-module-rwandareports/blob/eb18f662a4f10a4141062f5bfdc7922234991d0a/api/src/main/java/org/openmrs/module/rwandareports/dataset/evaluator/DrugOrderDataSetEvaluator.java][evaluate][1] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd",)@ } CATCH(EvaluationException) {}
results[https://github.com/OpenIAM/openiam-idm-ce/blob/7ab659a870ae2d68d2d3a0c1760a326e91bfb191/idm/openiam-idm-services/src/main/java/org/openiam/provision/service/UserAttributeHelper.java][modifyUser][2] = -> TRY {  -> df=new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss Z",)@ } CATCH(IllegalArgumentException,IllegalAccessException,InvocationTargetException) {}
results[https://github.com/AsherBond/opentaps/blob/409fe38aadba87876670510c79d91e749b0241c7/framework/base/src/org/ofbiz/base/conversion/MiscConverters.java][convert][2] = -> TRY {  -> return new SimpleDateFormat(obj,)@ } CATCH(ConversionException) {}
results[https://github.com/Sjtu-SWE/Online-Digital-Library/blob/0d9fef2746915c7697e6a233ad2bd0f1ed845f7b/src/main/java/com/sjtu/onlinelibrary/web/user/UserController.java][save][1] = -> TRY {  -> fmt=new SimpleDateFormat("yyyy-MM-dd",)@ } CATCH(DataAccessException) {}
results[https://github.com/rackerlabs/repose/blob/d5c40e0cf9facbdf267b9fbabf78ea35dc932dd9/tests/TestSupport/src/main/java/com/testing/testsupport/mockTokenServlet.java][processRequest][1] = -> TRY {  -> sdf=new SimpleDateFormat(DATE_FORMAT,)@ } CATCH(ServletException,IOException) {}
results[https://github.com/fozziethebeat/S-Space/blob/5fa3b7e77ac59b841c1d8fa85dbf3859a9cef170/src/main/java/edu/ucla/sspace/mains/FixedDurationTemporalRandomIndexingMain.java][parseDocumentsMultiThreaded][2] = -> TRY {  -> df=new SimpleDateFormat("yyyy_MM_ww_dd_hh",)@ } CATCH(IOException,InterruptedException) {}
results[https://github.com/tatodelaporte/projetointegrado/blob/adecaa2b64d2da9c07efe9ae28e034c2d1407ff2/PI-Sistema/src/br/edu/utfpr/cm/tsi/projetointegrador/view/CadastroFuncionario.java][setFuncionario][1] = -> TRY {  -> data=new SimpleDateFormat("dd/MM/yyyy",)@ } CATCH(ParseException,Exception) {}
results[https://github.com/devtao/KeepEX/blob/699b98f240c364269f05333a8646eb54a605aa3c/PersonSpring/src/me/tspace/common/handler/date/DateUtil.java][getDateFormat][2] = -> TRY {  -> return new SimpleDateFormat(parttern,)@ } CATCH(RuntimeException) {}
results[https://github.com/shazichuanhuo/heat_final_version/blob/bb33c22e9b7215bbba8ec6fedec9a93f288d006c/heat_final_version/src/org/spring/heat/services/DateMappingService.java][getLastDayOfMonth][2] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd",)@ } CATCH(ParseException) {}
results[https://github.com/adempiere/adempiere/blob/be9607f007acde18954e8ba1a82d45f3fc376d63/posterita/posterita/src/main/org/posterita/struts/pos/POSReportAction.java][getStockEnquiryReport][2] = -> TRY {  -> dateFormat2=new SimpleDateFormat("dd-MMM-yyyy",)@!(fwd!=null) && dateRange.endsWith(Constants.FIXED_DATE_RANGE,) } CATCH(ApplicationException,OperationException,DocumentException,IOException,SQLException,ParseException) {}
results[https://github.com/bogeblad/infoglue2/blob/ffc76a5bd6d6c691e6b3c055687df52cc2d9f7c2/src/java/org/infoglue/deliver/util/rss/RssHelper.java][addEntry][2] = -> TRY {  -> dateParser=new SimpleDateFormat(DATE_FORMAT,)@ } CATCH(IOException,FeedException) {}
results[https://github.com/yano2h/TESIS/blob/7663d4467f35721e591fc3d830914da72a2420d3/CodigoFuente/ProyectoBase_JSF2.0/ProyectoBase_JSF2.0-war/src/java/cl/uv/ViewController/base/utils/DateUtils.java][comparaFechas][1] = -> TRY { -> IF { -> sdf=new SimpleDateFormat("dd/MM/yyyy",)@ } }
results[https://github.com/deepsky/SQL-Code-Assistant-/blob/b69a5e87849668b88c8f241eaa307c69e8bb7e50/shared/root/java/database/com/deepsky/database/ora2/DbCacheManager.java][getTypesNeedInUpdate][1] = -> TRY {  -> fmt=new SimpleDateFormat("yyyy-MM-dd:HH:mm:ss",)@ } CATCH(ClosedConnectionException,DBException) {}
results[https://github.com/thomasmrqs/TCPcom/blob/3f516e203a60e4009f2e537b81c1c2b6ff8928e7/TCPcom/src/graphique/ClientConsolePanel.java][<init>][1] = -> TRY {  -> dateformat=new SimpleDateFormat("yyyy-MM-dd",)@ } CATCH(SocketException) {}
results[https://github.com/dannyemf/cail/blob/51e1bbe08df71ac19dbba27909367844cd3d93a9/Cmail-Web/src/java/org/cmail/rehabilitacion/vista/util/ReporUtil.java][getReportData][1] = -> CATCH(Exception) { -> TRY { -> sf=new SimpleDateFormat("dd/MM/yyyy HH:mm:ss",)@ } }
results[https://github.com/objectledge/cyklotron/blob/dd92d719632b56a3eae3733f3f94d41875ff68fa/cyklotron-ui/src/main/java/net/cyklotron/cms/modules/actions/fixes/FixCustomModificationTime.java][execute][1] = -> TRY {  -> df=new SimpleDateFormat(DateAttributeHandler.DATE_TIME_FORMAT,)@ } CATCH(ProcessingException) {}
results[https://github.com/maurodim/siderconCapaDeDatos/blob/a9a7c258a7172e067a220a4edf20f5e7e25a06d9/src/proceso/Procesos.java][actualizarComprobantesPedidos][1] = -> TRY {  -> sfd=new SimpleDateFormat("yyyy-MM-dd",)@ } CATCH(SQLException,ParseException) {}
results[https://github.com/librecoop/GOOL/blob/261a04d0168e75a41c7cdd9e24b3d95a2e3cbb4f/src/logger/Printer.java][<init>][1] = -> IF { -> TRY { -> dateFormat=new SimpleDateFormat(d,)@!(d.isEmpty()) } }
results[https://github.com/mollyproject/mollyandroid/blob/fc20d64ac9b541213c8077a02586807cda9893e6/src/org/mollyproject/android/controller/CookieManager.java][<init>][1] = -> TRY {  -> dateFormatWithoutTimeZone=new SimpleDateFormat(DATE_FORMAT_WITHOUT_TIMEZONE,)@ } CATCH(IOException,JSONException,ParseException) {}
results[https://github.com/dotCMS/dotCMS/blob/793528e15b4b6ef7a0394e9309e9dac56cb6d670/src/com/dotcms/cmsmaintenance/ajax/UserSessionAjax.java][getSessionList][1] = -> TRY {  -> sdf=new SimpleDateFormat("HH:mm:ss",)@ } CATCH(NoSuchUserException,DotDataException,DotSecurityException) {}
results[https://github.com/Yarl-IT-Hub/ySchool/blob/115e6f5b345b64c1edd43a9170769eb03863a229/yschool/src/test/java/org.yarlithub.yschool.test/integration/student/StudentNewTest.java][setUp][42] = -> TRY {  -> formatter=new SimpleDateFormat("d-MMM-yyyy,HH:mm:ss aaa",)@ -> date=formatter.parse(testDate,)@ } CATCH(Exception) {}
results[https://github.com/teropa/stem/blob/e018a7aa0b1121c3be27c74fbdeff67e464a6061/org.eclipse.stem.core/src/org/eclipse/stem/core/common/impl/DublinCoreImpl.java][createDateFromISO8601DateString][98] = -> TRY {  -> return new SimpleDateFormat("yyyy-MM-dd",).parse(iso8601DateString,)@ } CATCH(ParseException) {}
results[https://github.com/ekirkilevics/Spring/blob/3d06246195ffc81015ad0559e64796ce8c15e4e5/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/tags/BindTagTests.java][testTransformTagNonExistingValue][5] = -> TRY {  -> df=new SimpleDateFormat("yyyy-MM-dd",)@ -> l=new CustomDateEditor(df,true,)@ } CATCH(JspException) {}
results[https://github.com/jior/isdp/blob/db8379fc9cc196638d7afe5d51daffb31cfe7388/workspace/glaf-isdp/src/main/java/com/glaf/isdp/bean/ReceiveMailBean.java][getSendDate][1] = -> TRY {  -> smd=new SimpleDateFormat(dateFormat,)@ -> return smd.format(sendDate,)@ } CATCH(MessagingException) {}
results[https://github.com/openfurther/further-open-core/blob/2f18528f59e0af13e260d7ed8e31ead3b0a10508/i2b2/i2b2-query/src/main/java/edu/utah/further/i2b2/query/model/DateNoTimeZoneAdapter.java][marshal][24] = -> TRY {  -> dateFormat=new SimpleDateFormat(datePatternWithTimezone,)@ -> return dateFormat.format(date,)@ } CATCH(Exception) {}
results[https://github.com/apache/commons-betwixt/blob/b2b239ca3f54db6a0e1746b86ae8c1e6f07301fd/src/test/org/apache/commons/betwixt/strategy/Testi18nObjectStringConversion.java][testFrenchDefaultLocale][1] = -> TRY {  -> format=new SimpleDateFormat("EEE MMM dd HH:mm:sss yyyy",)@ -> formatted=format.format(date,)@ } CATCH(Exception) {}
results[https://github.com/wso2/commons/blob/792242f96b420a51317e4c4febeba66458320302/siddhi/trunk/modules/siddhi-core/src/test/java/org/wso2/siddhi/test/samples/simple/filter/_date/SimpleFilterDateTestCase.java][testAPI][1] = -> TRY {  -> formatter=new SimpleDateFormat("dd-MMM-yy",)@ -> date=(Date) formatter.parse("15-June-07",)@ } CATCH(SiddhiException,InterruptedException,EventStreamNotFoundException,ParseException) {}
results[https://github.com/DBC-as/opensearch/blob/cb02cfd3373f4a15aca4947347f662e2b0c83785/src/dbc/opensearch/tools/tests/FedoraToolsTest.java][SetUp][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.S",)@ -> timeNow=dateFormat.format(now,)@ } CATCH(IllegalArgumentException,NullPointerException,IOException) {}
results[https://github.com/yukkigogo/cyberhoodwatch/blob/ab3ba19cad3737d4c4f8dcc42d5ab857327ec958/src/com/sociam/android/report/ReportEvidence.java][saveBitmap][8] = -> TRY {  -> fileNameDate=new SimpleDateFormat("yyyyMMdd_HHmmss",)@ -> fileName=fileNameDate.format(mDate,)+".jpg"@ } CATCH(IOException) {}
results[https://github.com/moberhuber/eclipse-ccase-clone/blob/a1922ab870c8ca60e2b379b8a223f3717d6119e5/net.sourceforge.eclipseccase/src/net/sourceforge/eclipseccase/Activity.java][parseIso][4] = -> TRY {  -> df=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssz",)@ -> return df.parse(input,)@ } CATCH(java.text.ParseException) {}
results[https://github.com/percussion/PSOToolkit/blob/c78e84864fdf08712c1c6e44b7128152c5fcfc97/PSOToolkit/src/com/percussion/pso/jexl/PSODateTools.java][formatDate][1] = -> TRY {  -> fmt=new SimpleDateFormat(format,)@ -> return fmt.format(date_value,)@ } CATCH(ParseException) {}
results[https://github.com/xwiki-contrib/retired/blob/897d5690aa39ca371b0664ec64cc6eb759ed8028/xwiki-platform-chart-plugin/src/main/java/com/xpn/xwiki/plugin/charts/params/DefaultChartParams2.java][<init>][1] = -> TRY {  -> set(DATE_FORMAT,new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss",),)@ } CATCH(ParamException) {}
results[https://github.com/adempiere/adempiere/blob/be9607f007acde18954e8ba1a82d45f3fc376d63/posterita/posterita/src/main/org/posterita/businesslogic/performanceanalysis/POSReportManager.java][getDailySalesReport][1] = -> TRY {  -> sdf=new SimpleDateFormat(TimestampConvertor.DEFAULT_DATE_PATTERN1,)@ -> subtitle=sdf.format(today,)@ } CATCH(SQLException,OperationException) {}
results[https://github.com/harvimt/Group9_CS300_Project/blob/6aac5782090fa32a6455e769589fc5854ce69cb8/src/border/HomeScreen.java][jMenuItem1ActionPerformed][1] = -> TRY { -> df=new SimpleDateFormat("MMM dd, yyyy",)@ } CATCH(Exception) { -> JOptionPane.showMessageDialog(null,"Failed to add debug data","ERROR",JOptionPane.ERROR_MESSAGE,)@ }
results[https://github.com/oVirt/ovirt-dwh/blob/9f22ecabbd5fdd433802c6a5d0d89ea053f01e41/data-warehouse/history_etl/etl_sources/talendRoutines/src/main/java/routines/RoutineHistoryETL.java][dateFormat][11] = -> TRY {  -> format=new SimpleDateFormat(pattern,)@ -> return format.format(date,)@ } CATCH(ParseException) {}
results[https://github.com/ralli/anwesenheit/blob/bd5a8f6e318fb110aeb4740404a66cf4872291d1/anwesenheit-core/src/test/java/de/fisp/anwesenheit/core/util/JsonDateSerializer.java][serialize][4] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy-MM-dd'T'HH:mmZ",)@ -> formattedDate=dateFormat.format(date,)@ } CATCH(IOException,JsonProcessingException) {}
results[https://github.com/Jasig/CalendarPortlet/blob/a346135897b1aad80469bd7aada6e67b7e624bed/src/test/java/org/jasig/portlet/calendar/mvc/controller/AjaxCalendarControllerTest.java][testAddShortEventToDateMap][1] = -> TRY {  -> df=new SimpleDateFormat("EEEE MMMM d",)@ -> df.setTimeZone(tz,)@ } CATCH(IOException,URISyntaxException,ParseException) {}
results[https://github.com/schibsted/sdk-android/blob/aac3d7a5294d3f2e83bc9377cafbca0ee9ca1f38/SPiDSDK/src/com/schibsted/android/sdk/jwt/SPiDJwt.java][encodedJwtString][1] = -> TRY {  -> format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ssZ",)@ -> date=format.format(exp,)@ } CATCH(SPiDException) {}
results[https://github.com/iomodo/FreeuniRestaurant/blob/28cb13af1ff3d67aba49ea26125f93476d28d7c0/src/ge/edu/freeuni/restaurant/logic/DBConnector.java][getCurrentDate][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy-mm-dd hh:mm:ss",)@ -> return dateFormat.format(date,)@ } CATCH(SQLException,ParseException) {}
results[https://github.com/xiaominglui/vello/blob/ba74358252ea2a3770d2ada7218d432289e1c30b/android/src/com/mili/xiaominglui/app/vello/data/operation/RestartWordCardOperation.java][execute][1] = -> TRY {  -> format=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",)@ -> stringDueDate=format.format(dueDate,)@ } CATCH(ConnectionException,DataException,CustomRequestException) {}
results[https://github.com/mintberry/j2ee-2011/blob/88e17fce4e6deceab0a9ae23342093eef5427c6e/StudentPortal/src/com/tongji/j2ee/sp/FindPersonalInfo.java][doPost][2] = -> TRY {  -> formater=new SimpleDateFormat("yyyy年MM月dd日",)@ -> TempString=formater.format(TempDate,)@ } CATCH(ServletException,IOException) {}
results[https://github.com/stressfree/whichdoctor-core/blob/01a2189c1669590f3bd60a836dd5d206b7ea04b4/src/main/java/com/sfs/whichdoctor/dao/MembershipDAOImpl.java][getCandidateNumber][1] = -> TRY {  -> df=new SimpleDateFormat("yyyy",)@ -> year=df.format(examDate,)@ } CATCH(WhichDoctorDaoException) {}
results[https://github.com/pangwu86/XBlink/blob/213c4c68093bcb22a5438c0d79defaeaa0021051/src/org/xblink/core/convert/converters/DateConverter.java][text2Obj][1] = -> TRY {  -> dateFormat=new SimpleDateFormat(DATA_FORMAT_TEMPLATE,)@ -> return dateFormat.parseObject(text,)@ } CATCH(Exception) {}
results[https://github.com/sgbell/podsalinan/blob/8788daedea2a434208cfb94a2ed84ea179f6f12e/podsalinan/src/com/mimpidev/podsalinan/CLInterface.java][convertDate][2] = -> LOOP { -> TRY { -> date=new SimpleDateFormat(dateFormat[dateCounter],).parse(menuInput,)@date==null&&dateCounter<dateFormat.length } }
results[https://github.com/chrismarx/cmestemp22/blob/13068f3f0b657f99895d81e6c1a9184f4f7f255b/server/src/test/java/org/eurekastreams/server/service/restlets/EnrollmentEntryResourceTest.java][setupPUTExpectations][2] = -> TRY {  -> df=new SimpleDateFormat("yyyy",)@ -> gradDate=df.parse("2008",)@ } CATCH(IOException,ParseException) {}
results[https://github.com/DozerMapper/dozer/blob/cda3d6a8752bae71b5d4945f8c61dc072e15e42e/core/src/test/java/org/dozer/converters/DateConverterTest.java][setUp][1] = -> TRY {  -> converter=new DateConverter(new SimpleDateFormat("dd.MM.yyyy",),)@ } CATCH(Exception) {}
results[https://github.com/mattbrejza/rtty_modem/blob/0005e98d3e121b4ec57ccea8d5cc9d1938fe68eb/rtty_dev/src/ukhas/Habitat_interface.java][_update_chasecar][1] = -> TRY { -> IF { -> dateFormat=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ",)@ -> t=dateFormat.format(time,)@ } }
results[https://github.com/apache/hive/blob/f7c3d0af6cad408dc6f6c811ed5d1626e9146633/ql/src/java/org/apache/hadoop/hive/ql/parse/MetaDataExportListener.java][export_meta_data][1] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss",)@ -> dateString=sdf.format(now,)@ } CATCH(MetaException) {}
results[https://github.com/UrbanCode/terraform/blob/f21ae2614be32f3437545fe7c2ca7a1fecdd440b/src/main/java/com/urbancode/terraform/tasks/vmware/CloneTask.java][takeSnapshotOfVm][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ -> name=dateFormat.format(date,)@ } CATCH(VimFault,RemoteException,InterruptedException) {}
results[https://github.com/8Yards/Nebula_Android/blob/3ffa46b6a294328f60dc30839c844afea83e484c/src/org/nebula/models/Conversation.java][setDate][1] = -> TRY {  -> formatter=new SimpleDateFormat("yy-MM-dd HH:mm:ss",)@ -> this.date=(Date) formatter.parseObject(dat,)@ } CATCH(ParseException,java.text.ParseException) {}
results[https://github.com/eclipse/org.aspectj/blob/01cc1b5d054696726a7be5ae08746376ab0e9a8a/bridge/src/org/aspectj/bridge/Version.java][getTime][1] = -> IF { -> TRY { -> format=new SimpleDateFormat(SIMPLE_DATE_FORMAT,)@ -> date=format.parse(time_text,pos,)@ } }
results[https://github.com/Luxoft/Twister/blob/828d1f71e929cd89b83ba136ef44ae765e150e5b/client/userinterface/java/extlibs/src/com/twister/MySftpBrowser.java][populateBrowser][1] = -> TRY { -> format=new SimpleDateFormat("yyyy.MM.dd HH:mm:ss",)@!(lssize==2) } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ixcode/platform/blob/c37f82f1111d4c305e6684a6a90f041758bbbdd9/core/src/main/java/ixcode/platform/text/format/UtcDateFormat.java][<init>][1] = -> TRY { -> this.utcDateFormat=new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss'Z'",)@ } FINALLY { -> TimeZone.setDefault(systemTimeZone,)@ }
results[https://github.com/dma-ais/AisAnalysis/blob/d536d47b31bd3481d07f8b7cffe4850d73394685/ais-analyzer-viewer/src/main/java/dk/dma/ais/analysis/viewer/rest/AisViewRestService.java][kml][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy/MM/dd HH:mm:ss",)@ -> filename="aistargets-"+dateFormat.format(date,)+".kml"@ } CATCH(MalformedURLException) {}
results[https://github.com/RedHatQE/rhsm-qe/blob/88829d41b062067ac593299fbd60a17ed9c539c6/src/com/redhat/qe/sm/cli/tests/ExpirationTests.java][createTestPool][1] = -> TRY {  -> iso8601DateFormat=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ",)@ -> iso8601FormatedDateString=iso8601DateFormat.format(startDate,)@ } CATCH(JSONException,Exception) {}
results[https://github.com/deric/clueminer/blob/599b7433d92770c8547b7aee3db292d62e515954/dataset-io/src/test/java/au/com/bytecode/opencsv/ResultSetHelperServiceTest.java][getDateFromResultSet][1] = -> TRY {  -> dateFormat=new SimpleDateFormat(ResultSetHelperService.DEFAULT_DATE_FORMAT,)@ -> expectedValues=dateFormat.format(date,)""@ } CATCH(SQLException,IOException) {}
results[https://github.com/otavanopisto/pyramus/blob/f1a45d7ceab944d4fa5e7f96af1ae12adf6f814d/rest/src/test/java/fi/pyramus/rest/test/AllRESTServiceTests.java][testUpdateStudentContactLogEntry][1] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd",)@ -> entryDate=sdf.parse("2014-12-14",)@ } CATCH(ClientProtocolException,IOException,ParseException) {}
results[https://github.com/amegginson/jbpm-bpel-ftl/blob/934bd77e927be1b401048f1f86114e6e6f504c1f/modules/jpdl/core/src/test/java/org/jbpm/calendar/HolidayTest.java][testHolidayMulitDayParsing][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("dd/MM/yyyy",)@ -> holiday=new Holiday("1/7/2005 - 31/8/2005",dateFormat,null,)@ } CATCH(Exception) {}
results[https://github.com/keen80/BirrettaService/blob/cd0b782d022c2eb5208fbb03a8695f687a66577e/src/main/java/it/antreem/birretta/service/util/FoursquareJsonProxy.java][findLocationNear][1] = -> TRY {  -> formatter=new SimpleDateFormat("yyyyMMdd",)@ -> v=formatter.format(today,)@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/vuamitom/openmrs/blob/c3b2d5b94e153a7949ec8a32040766c4196751ba/api/src/main/java/org/openmrs/customdatatype/datatype/Date.java][toReferenceString][1] = -> TRY {  -> return new SimpleDateFormat(dateFormat,).format(typedValue,)@ } CATCH(InvalidCustomValueException) {}
results[https://github.com/apache/any23/blob/cc5d37b86cfd99389b7d98d019f81b1fcf685f39/any23-core/src/main/java/org/deri/any23/rdf/RDFUtils.java][getXSDDate][1] = -> TRY {  -> simpleDateFormat=new SimpleDateFormat(format,)@ -> date=simpleDateFormat.parse(dateToBeParsed,)@ } CATCH(ParseException,DatatypeConfigurationException) {}
results[https://github.com/ahgittin/stratos/blob/26868da212f97104f530baac001ffc65abc59498/components/org.apache.stratos.status.monitor.agent/src/main/java/org/apache/stratos/status/monitor/agent/internal/core/MySQLConnector.java][getInsertStatus][2] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy/MM/dd HH:mm:ss",)@ -> dateFormat.format(SystemDate,)@ } CATCH(SQLException) {}
results[https://github.com/StratusLab/claudia/blob/ecdd16ac71397fde4a8b804765f54c0b3ebc5aff/reportclient/src/main/java/com/telefonica/claudia/slm/monitoring/PersistenceClient.java][sendvalue][1] = -> TRY { -> LOOP { -> sdf=new SimpleDateFormat(pattern,)@ -> date=sdf.parse(timestamp,)@ } }
results[https://github.com/shannonlal/AutorouteServices/blob/9c732b11adce4394becc405eba212da7a1ae4ca4/AutorouteServices/src/main/java/org/autoroute/common/domain/DateSerializer.java][serialize][1] = -> TRY {  -> formatter=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS",)@ -> formattedDate=formatter.format(value,)@ } CATCH(IOException,JsonProcessingException) {}
results[https://github.com/adempiere/adempiere/blob/be9607f007acde18954e8ba1a82d45f3fc376d63/posterita/posterita/src/main/org/posterita/businesslogic/performanceanalysis/POSReportManager.java][getCompleteOrderPDFReport][1] = -> TRY {  -> s=new SimpleDateFormat(TimestampConvertor.DEFAULT_DATE_PATTERN1,)@ -> dateOrdered=s.format(d,)@ } CATCH(OperationException) {}
results[https://github.com/ameenudeen/FileHaven/blob/6bb61d6e82b53b9683f0e1bf59d3db248d67caf1/FileHaven/src/servlets/CreateAccountServlet.java][doPost][1] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ -> createdTime=sdf.format(now,)@ } CATCH(ServletException,IOException) {}
results[https://github.com/mrdon/jforum-cvs/blob/f2c0b27255dbe338037540942f288f6d8bd231a1/src/net/jforum/search/LuceneCommandLineReindexer.java][parseDate][1] = -> IF { -> TRY { -> date=new SimpleDateFormat("dd/MM/yyyy",).parse(s,)@!(StringUtils.isEmpty(s,)) } }
results[https://github.com/AsherBond/opentaps/blob/409fe38aadba87876670510c79d91e749b0241c7/framework/base/src/org/ofbiz/base/util/test/UtilIOTests.java][testReadWriteObject][1] = -> TRY {  -> checkBasicReadWriteObject(new SimpleDateFormat("MM/dd/yyyy hh:mm a",),"java.text.SimpleDateFormat:MM/dd/yyyy hh:mm a\n",)@ } CATCH(Exception) {}
results[https://github.com/analytica-devteam/analytica-server/blob/f4244e85c3486c8c1f224badb10c69d333f1bb9d/analytica-hcube-impl/src/test/java/io/analytica/hcube/HCubeManagerMemoryTest.java][testMergeOnHTime2][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy/MM/dd HH:mm:ss",)@ -> current=dateFormat.parse("2012/12/12 12:12:12",)@ } CATCH(ParseException,HCubeStoreException) {}
results[https://github.com/johnrun262/CSC540_Public/blob/d00d64e7e6c81cd431e88c6e762e3ad96a817ea6/src/Sale.java][execPaid][1] = -> TRY {  -> formatter=new SimpleDateFormat("dd-MMM-yyyy",)@ -> date=formatter.format(todaysDate,)@ } CATCH(ValidationException,SQLException) {}
results[https://github.com/bgiorev/tuestech/blob/fe3b4c74f5e3e7615f97fbd970c1425987900ae0/PROEKT/TestingNewStuff.java][main][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("ddMMyyyy",)@ -> date=dateFormat.format(todayDate,)@ } CATCH(ClassNotFoundException) {}
results[https://github.com/openGDA/gda-epics/blob/80761395b3f4a1869f5086addf866b0f18204d1b/uk.ac.gda.epics.test/src/gda/epics/CAClientTest.java][testCagetWithTimeStampString][1] = -> TRY {  -> formatter=new SimpleDateFormat("MMM d,yyyy hh:mm:ss",)@ -> result=formatter.format(today,)@ } CATCH(CAException,TimeoutException,InterruptedException,FactoryException) {}
results[https://github.com/m09/glo-calendar/blob/560782ba3fb3f0d46de6f39553b887f11bcd685b/src/main/java/fr/univnantes/atal/atcal/EmploiDuTempsUtils.java][getCreneauFromUserInput][1] = -> TRY {  -> dateFormat=new SimpleDateFormat(dateFormatString,)@ -> dateFormat.setLenient(false,)@ } CATCH(NoSuchElementException,DateException) {}
