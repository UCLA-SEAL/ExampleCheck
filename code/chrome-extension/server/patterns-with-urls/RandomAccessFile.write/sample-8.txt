results[https://github.com/concord-consortium/teemss/blob/b9432575a60b0695c5b7f14f52af9eb4f10f9efb/superwaba/vmsrc/classes_java/waba/io/File.java][writeBytes][3] = -> TRY { -> jRacFile.write(b,off,len,)@ }
results[https://github.com/eclipse/eclipse.platform.resources/blob/5baad38eff1866d352608ac00d628661c2744606/bundles/org.eclipse.core.resources/src/org/eclipse/core/internal/indexing/PageStore.java][writeBuffer][1] = -> TRY { -> file.seek(fileOffset,)@ -> file.write(buffer,offset,length,)@ }
results[https://github.com/bhaviksingh/CS162/blob/9163b5a0359470884c2f76148886d226b0da29c7/machine/StubFileSystem.java][write][2] = -> TRY { -> file.seek(pos,)@ -> file.write(buf,offset,length,)@ }
results[https://github.com/tijuca/icedove/blob/4920dca05eb3b6daa968edb29fd558ff8d2a423a/directory/sdks/java-sdk/ietfldap/org/ietf/ldap/util/ByteBuf.java][write][50] = -> TRY {  -> out.write(value,0,count,)@ } CATCH(IOException) {}
results[https://github.com/apavlo/h-store/blob/e1f70e244e03e6adc24af4950455535ee2119e5f/src/hsqldb19b3/org/hsqldb/persist/LobStoreRAFile.java][setBlockBytes][2] = -> TRY { -> file.seek(address,)@ -> file.write(dataBytes,0,count,)@ } CATCH(Throwable) { -> throw Error.error(ErrorCode.DATA_FILE_ERROR,t,)@ }
results[https://github.com/anhquang/contiki/blob/42e4b2b02a2126cb7206cb7e27c0c2b8efd5fda8/tools/coffee-manager/se/sics/coffee/CoffeeImageFile.java][write][31] = -> TRY {  -> imageFile.seek(conf.startOffset+offset,)@ -> imageFile.write(bytes,0,size,)@ } CATCH(IOException) {}
results[https://github.com/fqrouter/fqrouter/blob/189077cdd078cf81df978cc424058174271c4799/android/src/fq/router/utils/Downloader.java][write][1] = -> TRY {  -> randomAccessFile.seek(offset,)@ -> randomAccessFile.write(buffer,0,length,)@ } CATCH(Exception) {}
results[https://github.com/copiousfreetime/mp4parser/blob/0b38c00e06cb994f4ac6fdb69ca61c2c28279a57/androidtest/isoparser/src/main/java/com/coremedia/iso/BufferedRandomAccessFile.java][flushBuffer][14] = -> TRY {  -> raf.seek(bufferOffset,)@ -> raf.write(buffer,0,bufferLength,)@ } CATCH(IOException) {}
results[https://github.com/joninvski/Appia/blob/01abf5b5aefaaeb4e29df7e9e6b374fe34e06316/tags/release_3_0/appia/src/org/continuent/appia/test/perf/PerfSession.java][readPayload][26] = -> TRY { -> payloadOut.write(mbuf.data,mbuf.off,mbuf.len,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/tfreese/misc/blob/cbe3214b6aa54c70e326f12e135ca8a126941492/de.freese.sonstiges/src/main/java/de/freese/sonstiges/fileDB/BaseRecordsFile.java][writeRecordData][2] = -> TRY {  -> this.file.seek(header.dataPointer,)@ -> this.file.write(data,0,data.length,)@ } CATCH(IOException,RecordsFileException) {}
results[https://github.com/fqrouter/fqrouter/blob/72ced9aa6d25026d12fa1eb8aba9d08d4724cc15/android/src/fq/router/life/DownloadService.java][write][1] = -> TRY {  -> randomAccessFile.seek(offset,)@ -> randomAccessFile.write(buffer,0,length,)@ } CATCH(Exception) {}
results[https://github.com/arekinath/jop/blob/f9c3a15861d0271335b0ee50de886d61a3cf99b6/java/pc/src/yaffs2/utils/emulation/FileEmulationUnix.java][write][2] = -> TRY { -> fildes.write(buf,bufIndex,nbyte,)@ } CATCH(IOException) { -> throw new HiddenException()@ }
results[https://github.com/blitz-research/monkey/blob/30c0bdf2e7784b2d5954315c70962bd2fba2c127/modules/brl/native/filestream.java][Write][1] = -> IF { -> return 0@_stream==null } -> TRY { -> _stream.write(buffer._data.array(),offset,count,)@!(_stream==null) }
results[https://github.com/copperflake/SAT/blob/2c1140df0cff3f33586e27f05129654dcea55754/src/sat/file/SegmentableFile.java][writeSegment][1] = -> TRY {  -> file.write(data.getData(),offset*SEGMENT_SIZE,SEGMENT_SIZE,)@ } CATCH(IOException) {}
results[https://github.com/mirror/jpcsp/blob/f8e523cb7aaeb28b4f04513de0e74c9dd3b0e62f/src/jpcsp/media/FileProtocolHandler.java][write][2] = -> TRY { -> stream.write(buf,0,size,)@ } CATCH(IOException) { -> log.error(e,)@ }
results[https://github.com/eirikbakke/studycaster/blob/e3fe8887e8ad1665ce069e9f8f6682ef91076ca2/sc_server/src/java/no/ebakke/studycaster/util/IOUtilsExt.java][copyLarge][18] = -> TRY {  -> LOOP { -> output.write(buffer,0,n,)@-1!=(n=input.read(buffer,)) } } CATCH(IOException) {}
results[https://github.com/thomasbecker/jetty-7/blob/227fb5abecbce33375255f1b34c1ee5180afd422/jetty-io/src/main/java/org/eclipse/jetty/io/nio/RandomAccessFileBuffer.java][poke][17] = -> TRY { -> _file.seek(index,)@ -> _file.write(b,offset,length,)@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/b/project-cassandra/blob/9db8da81b7f269e5a8a7f896b751d482847d7082/src/org/apache/cassandra/io/SequenceFile.java][close][7] = -> TRY {  -> file_.writeUTF(SequenceFile.marker_,)@ -> file_.writeInt(size,)@ -> file_.write(footer,0,size,)@ } CATCH(IOException) {}
results[https://github.com/freenet/plugin-XMLSpider-official/blob/1c121ff6e01d3293dc12bac6f33900372c4d4af9/src/plugins/XMLSpider/org/garret/perst/impl/OSFile.java][write][8] = -> TRY { -> file.seek(pos,)@ -> file.write(buf,0,buf.length,)@ } CATCH(IOException) { -> throw new StorageError(StorageError.FILE_ACCESS_ERROR,x,)@ }
results[https://github.com/artclarke/humble-video/blob/6e0c88c2734ae09f802018c957dea74b2c3c01bf/src/main/java/io/humble/video/customio/FileProtocolHandler.java][write][3] = -> TRY { -> stream.write(buf,0,size,)@ } CATCH(IOException) { -> log.error("Got error writing to file: {}",file,)@ -> e.printStackTrace()@ }
results[https://github.com/dCache/dcache/blob/99422739aa4ffb689721ed7ba7a35c2f50c4a3a3/modules/cells/src/main/java/dmg/util/edb/Sldb.java][put][2] = -> TRY {  -> _file.seek(ei._filePos,)@!(size>_bpdr-4) -> _file.writeInt(size,)@!(size>_bpdr-4) -> _file.write(data,off,size,)@!(size>_bpdr-4) } CATCH(IOException) {}
results[https://github.com/gurkerl83/millipede-xtreemfs/blob/fa671d8195f7c24010dd16b9d8139026a8bac791/java/servers/test/org/xtreemfs/test/common/monitoring/OSDMonitoringTest.java][testNumOpenFiles][1] = -> TRY {  -> raf=f.open("rw",0777,)@ -> raf.write(data,0,data.length,)@ -> raf.close()@ } CATCH(Exception) {}
results[https://github.com/StigLau/vdvil/blob/16ad8c66e9eb5b405b6c27e0f3a25e467575aa4b/audio-renderer/src/main/java/no/bouvet/kpro/renderer/audio/WaveFileTarget.java][write][1] = -> TRY { -> _raf.write(buffer,offset<<2,duration<<2,)@ } CATCH(Exception) { -> log.debug("Exception writing: "+e.toString(),)@ }
results[https://github.com/winsock/ElectroCraft/blob/88ec4e75eb8e184a9dbdfad5482c6fb8c80b726f/minecraft/info/cerios/electrocraft/core/jpc/support/FileBackedSeekableIODevice.java][write][1] = -> TRY {  -> image.write(data,offset,length,)@ -> image.getFD().sync()@ } CATCH(IOException) {}
results[https://github.com/Starlink/starjava/blob/5742d01da82d1485720cbe4ff84b92a5adbbd96c/tamfits/src/main/nom/tam/util/BufferedFile.java][flush][2] = -> TRY {  -> IF { -> raf.write(buffer,0,bufferOffset,)@!(doingInput)&&bufferOffset>0 } } CATCH(IOException) {}
results[https://github.com/remi/selenium/blob/ab4929acef85729b97a58a1827c78f4dc4d6e320/remote/server/src/java/org/openqa/jetty/util/TempByteHolder.java][writeToTempFile][12] = -> TRY {  -> IF { -> _tempfile.seek((long) at_offset,)@at_offset!=_file_pos } -> _tempfile.write(data,offset,len,)@ } CATCH(IOException) {}
results[https://github.com/visad/visad/blob/798d5fb9d9a7bc002b81f453f9aff44700012811/deps/src/ucar/netcdf/RandomAccessFile.java][flush][8] = -> TRY {  -> IF { -> file.seek(bufferStart,)@ -> file.write(buffer,0,dataSize,)@ } } CATCH(IOException) {}
results[https://github.com/aiQon/topkey/blob/285805064c78131a8b8c338802bb2ae93304b57a/contiki-image/tools/coffee-manager/se/sics/coffee/CoffeeImageFile.java][erase][28] = -> TRY {  -> LOOP { -> chunkSize=(size>bytes.length)?bytes.length:size@size>0 -> imageFile.seek(conf.startOffset+offset,)@ -> imageFile.write(bytes,0,chunkSize,)@ } } CATCH(IOException) {}
results[https://github.com/deruelle/mobicents/blob/e0368734b363ac3894d3f181686f773205bc40d5/servers/media/core/server-impl/src/main/java/org/mobicents/media/server/impl/resource/zap/BChannel.java][onMediaTransfer][1] = -> TRY {  -> data=(byte[]) buffer.getData()@ -> file.write(data,buffer.getOffset(),buffer.getLength(),)@ } CATCH(IOException) {}
results[https://github.com/Unidata/thredds/blob/8c350afab9c5c67957cb7817112f5d8db9bbd9fd/grib/src/ucar/jpeg/jj2000/j2k/io/BufferedRandomAccessFile.java][flush][6] = -> TRY {  -> IF { -> theFile.seek(offset,)@ -> theFile.write(byteBuffer,0,maxByte,)@ } } CATCH(IOException) {}
results[https://github.com/f1ori/yacy/blob/3b40b982564c86c4d3728d3415a970deb2c0d1a8/source/net/yacy/kelondro/io/CachedRecords.java][flushBuffer][1] = -> TRY { -> raf.seek(raf.length(),)@ -> raf.write(this.buffer,0,this.recordsize*this.buffercount,)@ } CATCH(IOException) { -> Log.logException(e,)@ }
results[https://github.com/QingpingMeng/DeID/blob/e012808914325a45ec952fdaba266256a72a1f76/src/niftijlib/Nifti1Dataset.java][writeData][1] = -> TRY {  -> raf=new RandomAccessFile(ds_datname,"rwd",)@!(ds_datname.endsWith(".gz",)) -> raf.seek(skip_head,)@!(ds_datname.endsWith(".gz",)) -> raf.write(b,0,b.length,)@!(ds_datname.endsWith(".gz",)) -> raf.close()@!(ds_datname.endsWith(".gz",)) } CATCH(IOException) {}
results[https://github.com/thihy/lucene/blob/0dc9de818d4e78426239074d025746d225181575/lucene/src/java/org/apache/lucene/store/FSDirectory.java][flushBuffer][7] = -> TRY {  -> IF { -> rateLimiter.pause(size,)@rateLimiter!=null } -> file.write(b,offset,size,)@ } CATCH(IOException) {}
results[https://github.com/varialus/jython-legacy/blob/6f4a7b930717a4a42c7615b375e081e225d1ec72/jython/org/python/core/PyFile.java][flush][3] = -> TRY {  -> file.seek(bufferStart,)@ -> file.write(buffer,0,dataSize,)@ -> file.getFD().sync()@ } CATCH(java.io.IOException) {}
results[https://github.com/eswartz/emul/blob/8cc1c3663d5f894210c949aebfc4f62318ca6c88/v9t9/v9t9-java/v9t9-common/src/v9t9/common/files/NativeTextFile.java][writeContents][4] = -> TRY {  -> raf=new RandomAccessFile(file,"rw",)@ -> raf.seek(offset,)@ -> raf.write(contents,contentOffset,length,)@ -> raf.close()@ } CATCH(IOException) {}
results[https://github.com/aldaris/opensso/blob/f28e1fdc0b2286917d6faaa873dddf964953c595/extensions/proxy/proxy-core/src/main/java/com/sun/identity/proxy/io/FileRecord.java][write][1] = -> TRY {  -> IF { -> throw new OverflowException()@limit>=0&&raf.getFilePointer()+len>limit } -> raf.write(b,off,len,)@!(limit>=0&&raf.getFilePointer()+len>limit) } CATCH(IOException) {}
results[https://github.com/f1ori/yacy/blob/83ce65707a9b1ebcc62342566271918699c7fc7d/source/de/anomic/kelondro/io/kelondroEcoFS.java][flushBuffer][4] = -> TRY { -> raf.seek(raf.length(),)@ -> raf.write(this.buffer,0,this.recordsize*this.buffercount,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/jitlogic/zorka/blob/5e5c2e756e41687da54843fbddcb66b5f327ca5c/zorka-central/src/main/java/com/jitlogic/zorka/central/rds/RAGZOutputStream.java][deflate][2] = -> TRY {  -> LOOP { -> len=deflater.deflate(outputBuf,0,outputBuf.length,Deflater.SYNC_FLUSH,)@len==outputBuf.length -> outFile.write(outputBuf,0,len,)@len==outputBuf.length } } CATCH(IOException) {}
results[https://github.com/godares79/CS848-Project/blob/5fde6a1d649c6d4cb5a086fe976d43f22f073fca/apache-cassandra-1.1.6-src/src/java/org/apache/cassandra/io/util/SequentialWriter.java][flushData][1] = -> TRY {  -> out.write(buffer,0,validBufferBytes,)@ -> IF { -> digest.update(buffer,0,validBufferBytes,)@digest!=null } } CATCH(IOException) {}
results[https://github.com/aptana/Pydev/blob/a87ccdb450e578574d15716e8d897cbbd2792ec1/plugins/org.python.pydev.jython/src_jython/org/python/core/PyFile.java][flush][1] = -> TRY {  -> file.seek(bufferStart,)@ -> file.write(buffer,0,dataSize,)@ -> file.getFD().sync()@ } CATCH(IOException) {}
results[https://github.com/xored/f4/blob/82d3c126f014bec0b060a0a2d66793d45041c562/com.xored.f4.fantom/fantom/src/sys/java/fan/sys/MemBuf.java][pipeTo][1] = -> TRY {  -> len=(int) lenLong@ -> IF { -> throw IOErr.make("Not enough bytes to write",)@pos+len>size } -> dst.write(buf,pos,len,)@!(pos+len>size) } CATCH(IOException) {}
results[https://github.com/grisu/grisu/blob/490570f70edb9fd98b3b0804f92c576dc9713475/grisu-client/src/main/java/org/jvnet/mimepull/WeakDataFile.java][writeTo][1] = -> TRY { -> raf.seek(pointer,)@ -> raf.write(data,offset,length,)@ -> return raf.getFilePointer()@ } CATCH(IOException) { -> throw new MIMEParsingException(ioe,)@ }
results[https://github.com/mcm46/lab2/blob/87a713453f5a521d08c163334654fca4402e4a23/Lab3/virtualdisk/VirtualDisk.java][writeBlock][1] = -> TRY {  -> seekLen=buf.getBlockID()*Constants.BLOCK_SIZE@ -> _file.seek(seekLen,)@ -> _file.write(buf.getBuffer(),0,Constants.BLOCK_SIZE,)@ } CATCH(IOException) {}
results[https://github.com/jitlogic/zorka/blob/58d8693d058f9313a92e0b0c8d9d37974a9c0c93/zorka-central/src/main/java/com/jitlogic/zorka/central/RAGZOutputStream.java][deflate][1] = -> TRY {  -> len=deflater.deflate(outputBuf,0,outputBuf.length,Deflater.SYNC_FLUSH,)@ -> IF { -> outFile.write(outputBuf,0,len,)@len>0 } } CATCH(IOException) {}
results[https://github.com/eclipse/eclipse.pde.build/blob/9427c1a92d5ae5ebec56d69faef91be429f77eea/org.eclipse.pde.build/src/org/eclipse/swt/tools/internal/IconExe.java][unloadShapeData][7] = -> TRY { -> LOOP { -> System.arraycopy(data,offset,buf,0,bpl,)@ -> raf.write(buf,0,destBpl,)@ } } CATCH(IOException) { -> SWT.error(SWT.ERROR_IO,e,)@ }
results[https://github.com/varialus/jython-legacy/blob/6f4a7b930717a4a42c7615b375e081e225d1ec72/jython/org/python/core/PyFile.java][close][3] = -> TRY {  -> IF { -> file.seek(bufferStart,)@ -> file.write(buffer,0,(int) dataSize,)@ } -> file.close()@ } CATCH(java.io.IOException) {}
results[https://github.com/molgenis/systemsgenetics/blob/06fbc453404531ddd4e17f3393a2e470de985981/genetics-lib/src/main/java/umcg/genetica/io/bin/RandomAccessFile.java][close][5] = -> TRY {  -> IF { -> file.seek(bufferStart,)@ -> file.write(buffer,0,(int) dataSize,)@ } -> file.close()@ } CATCH(IOException) {}
results[https://github.com/olanto/MYCAT/blob/188206ac8618d132c62a1ac055a9a15cc34c806a/prog/coreidx/src/org/olanto/idxvli/IdxIO.java][savePosChar][2] = -> TRY { -> pcf.seek(lastposchar,)@ -> intTobyte(poschar,length*4,byteidx,)@ -> pcf.write(byteidx,0,length*4,)@ } CATCH(Exception) { -> System.err.println("IO error in saveseq doc="+d,)@ -> e.printStackTrace()@ }
results[https://github.com/tiin57/luaforge/blob/38274e59b1ef89d2b949ea7e39f4fc97615a827e/src/common/luaforge/luaj/vm2/lib/jse/JseIoLib.java][write][5] = -> TRY {  } ELSE { -> IF { -> file.write(s.m_bytes,s.m_offset,s.m_length,)@file!=null } } CATCH(IOException) {}
results[https://github.com/AsyncHttpClient/async-http-client/blob/3caad234e1eb88919f7455e7866a099cc22a9fe7/api/src/main/java/com/ning/http/client/consumers/FileBodyConsumer.java][consume][2] = -> TRY {  -> file.write(byteBuffer.array(),byteBuffer.arrayOffset()+byteBuffer.position(),byteBuffer.remaining(),)@ } CATCH(IOException) {}
results[https://github.com/eswartz/emul/blob/6e6da3a7824dde7c1eec5ae825df7a2eecfe4a45/v9t9/v9t9-java/v9t9-engine/src/v9t9/engine/files/NativeFDRFile.java][writeContents][5] = -> TRY {  -> raf=new RandomAccessFile(file,"rw",)@ -> raf.seek(offset+fdr.getFDRSize(),)@ -> raf.write(contents,contentOffset,length,)@ -> raf.close()@ } CATCH(IOException) {}
results[https://github.com/marcusbb/retry/blob/7416dba0012ec322829fd9696e51de4ff04a4be9/retry-hazelcast/src/main/java/ies/retry/spi/hazelcast/LocalQueueLog.java][writeTakeMarker][1] = -> TRY {  -> bInt=ByteBuffer.allocate(INT_BYTE_SIZE,).putInt(curTakeMarker,).array()@ -> takeOs.write(bInt,0,INT_BYTE_SIZE,)@ -> takeOs.seek(0,)@ } CATCH(IOException) {}
results[https://github.com/YongJiang/org.eclipse.birt.data/blob/c8d37caedd40010fd5033db680224eee2ca02de4/plugins/org.eclipse.birt.data/src/org/eclipse/birt/data/engine/olap/data/util/BufferedRandomAccessFile.java][createRandomAccessFile][1] = -> TRY {  -> delegate=FileSecurity.createRandomAccessFile(file,mode,)@ -> IF { -> delegate.write(memoryDelegate,0,length,)@memoryDelegate!=null||length>0 -> delegate.seek(pointer,)@ } } CATCH(IOException) {}
results[https://github.com/Det-Kongelige-Bibliotek/Yggdrasil/blob/f7fa0b5a2b1d6de0c20f9a55f6bcd5ac11fdd88d/src/main/java/dk/kb/yggdrasil/HttpPayload.java][writeToFile][1] = -> TRY {  -> raf=new RandomAccessFile(tmpFile,"rw",)@ -> LOOP { -> raf.write(tmpBuf,0,read,)@(read=in.read(tmpBuf,))!=-1 } -> raf.close()@ } CATCH(IOException) {}
results[https://github.com/dickerpulli/playground/blob/e6aed280e1a7e45a45678c79042c239094b0fbf7/games/ocean/src/java/padIo/BitOutputFile.java][endBitMode][1] = -> TRY {  -> buffer[(int) bitsInBuffer/8]&=0xff>>8-bitsInBuffer%8@ -> file.write(buffer,0,(int) bitsInBuffer/8+(bitsInBuffer%8>0)?1:0,)@ -> currentPosition=file.getFilePointer()@ -> file.seek(counterPosition,)@ -> file.writeInt(totalBits,)@ -> file.seek(currentPosition,)@ } CATCH(IOException) {}
results[https://github.com/imr/Electric-VLSI/blob/e42ced0925e0d334f8aaa8ea23c099bc6f2bb49d/srcj/com/sun/electric/tool/btree/FilePageStorage.java][writePage][2] = -> TRY { -> raf.seek(pageid*getPageSize(),)@!(pageid>=numpages) -> raf.write(buf,ofs,getPageSize(),)@!(pageid>=numpages) } CATCH(IOException) { -> throw new RuntimeException(e,)@!(pageid>=numpages) }
results[https://github.com/cnfree/sanguo/blob/3dabef06edf43caae99a817e51b4d76049ecf471/org.sf.feeling.sanguo.patch_1.9a/src/org/sf/feeling/sanguo/patch/util/UpdateUtil.java][download][1] = -> TRY {  -> oSavedFile=new RandomAccessFile(file,"rw",)@ -> LOOP { -> oSavedFile.write(b,0,nRead,)@(nRead=input.read(b,0,1024,))>0&&nStartPos<nEndPos } -> oSavedFile.close()@ } CATCH(Exception) {}
results[https://github.com/b/project-cassandra/blob/674eaf5cf53d11bda1128af40f1f5342ea79e531/src/org/apache/cassandra/tools/ThreadListBuilder.java][main][9] = -> TRY {  -> LOOP { -> buffer=buffers.get(i,)@i<size -> raf=new RandomAccessFile(file,"rw",)@ -> raf.write(buffer.getData(),0,buffer.getLength(),)@ -> raf.close()@ -> buffer.close()@ } } CATCH(Throwable) {}
results[https://github.com/xored/f4/blob/82d3c126f014bec0b060a0a2d66793d45041c562/com.xored.f4.fantom/fantom/src/sys/java/fan/sys/FileBuf.java][pipeTo][1] = -> TRY {  -> temp=temp()@ -> LOOP { -> n=fp.read(temp,0,(int) Math.min(temp.length,len-total,),)@total<len -> dst.write(temp,0,n,)@ } } CATCH(IOException) {}
results[https://github.com/Aras90/Eventoo/blob/6141b881e99e431d8a28af1f84c5b604f9d6a493/mysql-connector-java-5.1.24/src/com/mysql/jdbc/NamedPipeSocketFactory.java][write][18] = -> TRY {  -> this.raFile.write(b,)@ } CATCH(IOException) {}
results[https://github.com/eclipse/eclipse.platform.releng.basebuilder/blob/435a23260df1752c5328d8c78f2f467b47c981de/plugins/org.eclipse.pde.build/src/org/eclipse/swt/tools/internal/IconExe.java][unloadMaskData][7] = -> TRY { -> LOOP { -> System.arraycopy(data,offset,buf,0,bpl,)@ -> bitInvertData(buf,0,bpl,)@ -> raf.write(buf,0,destBpl,)@ } } CATCH(IOException) { -> SWT.error(SWT.ERROR_IO,e,)@ }
results[https://github.com/ucb-bar/riscv-gcc/blob/c57740cef52139a7e763a4c17cd17ceebd233d09/gcc-4.6.1/libjava/classpath/javax/imageio/stream/FileCacheImageOutputStream.java][write][10] = -> TRY {  -> cache.write(value,)@ } CATCH(IOException) {}
results[https://github.com/kyorohiro/KyoroHelloAndroid/blob/7c5b170459e6523d23b8a5012ac56f31a74b1453/KyoroCommon/src/info/kyorohiro/helloworld/io/VirtualFile.java][syncWrite][1] = -> TRY {  -> IF { -> throw new IOException()@mRAFile==null } -> cp=mRAFile.getFilePointer()@!(mRAFile==null) -> mRAFile.seek(mCashStartPointPerFile,)@!(mRAFile==null) -> mRAFile.write(mWriteCash,0,mCashLength,)@!(mRAFile==null) } CATCH(IOException) {}
results[https://github.com/alagopus/fraglets/blob/b3291953df7bc2d9b50ac7061b3f11ea9c8c75ae/crm114j/src/net/sf/fraglets/crm114j/CSSFile.java][inflate][1] = -> TRY {  -> LOOP { -> ras.write(blank,)@ } -> IF { -> ras.write(blank,0,(int) size,)@size>0 } } CATCH(IOException) {}
results[https://github.com/codefollower/Lealone/blob/10b550d2a36bf049cc4559b1a32c8f4729355fb0/yourbase-common/src/main/java/com/codefollower/yourbase/store/fs/FilePathDisk.java][write][9] = -> TRY {  -> len=src.remaining()@ -> file.write(src.array(),src.position(),len,)@ -> src.position(src.position()+len,)@ } CATCH(IOException) {}
results[https://github.com/Paxle/Paxle/blob/83ce9b9e1c88e2d1c30dae1f0cb76f80cd1a7539/bundles/ParserCore/src/org/paxle/parser/iotools/RAFOutStream.java][write][46] = -> TRY {  -> this._file.write(b,off,len,)@ } CATCH(IOException) {}
results[https://github.com/fsteen/monopoly-for-the-gods/blob/b772b676e9c2130154e11aac3c40848d2ce84ee6/JLayer1.0.1/src/javazoom/jl/converter/RiffFile.java][Close][15] = -> TRY { -> file.seek(0,)@ -> TRY { -> br[0]=(byte) riff_header.ckID>>>24&0x000000FF@ -> br[1]=(byte) riff_header.ckID>>>16&0x000000FF@ -> br[2]=(byte) riff_header.ckID>>>8&0x000000FF@ -> br[3]=(byte) riff_header.ckID&0x000000FF@ -> br[7]=(byte) riff_header.ckSize>>>24&0x000000FF@ -> br[6]=(byte) riff_header.ckSize>>>16&0x000000FF@ -> br[5]=(byte) riff_header.ckSize>>>8&0x000000FF@ -> br[4]=(byte) riff_header.ckSize&0x000000FF@ -> file.write(br,0,8,)@ -> file.close()@ } } -> TRY { -> file.close()@ }
results[https://github.com/leif81/openmap-maven/blob/f56e367aa99c9863c448ce0eaf37caf38acdeb37/src/openmap/com/bbn/openmap/layer/shape/ShapeFile.java][add][4] = -> TRY {  -> IF { -> nBytes=r.write(recBuf,0,)@r.getShapeType()==fileShapeType -> raf.seek(raf.length(),)@ -> raf.write(recBuf,0,nBytes,)@ } } CATCH(IOException) {}
results[https://github.com/bcoverston/apache-hosted-cassandra/blob/dd8a3c45072efbc0fea14e98552b4b5a9dab9de3/src/java/org/apache/cassandra/io/util/SequentialWriter.java][flushData][1] = -> TRY { -> out.write(buffer,0,validBufferBytes,)@ } CATCH(IOException) { -> throw new FSWriteError(e,getPath(),)@ } -> IF { -> digest.update(buffer,0,validBufferBytes,)@digest!=null }
results[https://github.com/goodow/j2objc/blob/f33bcb131ceaa35061b81bfbb4ae361db3da43f1/jre_emul/android/libcore/harmony-tests/src/test/java/org/apache/harmony/tests/java/io/RandomAccessFileTest.java][test_getFilePointer][8] = -> TRY {  -> raf=new java.io.RandomAccessFile(fileName,"rw",)@ -> raf.write(fileString.getBytes(),0,1000,)@ -> assertEquals("Incorrect filePointer returned",1000,raf.getFilePointer(),)@ -> raf.close()@ } CATCH(IOException) {}
results[https://github.com/gurkerl83/millipede-xtreemfs/blob/ba3583c3fdb92050e88960eb18b0e3a6d55424b3/java/servers/test/org/xtreemfs/test/osd/rwre/RWReplicationTest.java][testReplicationWithClient][1] = -> TRY {  -> raf=f.open("rw",0444,)@ -> raf.write(data,0,data.length,)@ -> raf.seek(1024,)@ -> raf.forceReplica(1,)@ -> raf.read(data,0,data.length,)@ -> raf.close()@ } CATCH(Exception) {}
results[https://github.com/freenet/contrib-official/blob/0761aa2d2de2fbf23bd3f3dee72d1f57164caf12/db4o/src/db4oj/core/src/com/db4o/io/RandomAccessFileAdapter.java][write][1] = -> TRY {  -> TRY { -> _delegate.write(buffer,0,length,)@ } CATCH(IOException) { -> throw new Db4oIOException(e,)@ } } CATCH(Db4oIOException) {}
results[https://github.com/apache/activemq/blob/b0c2a40fb979829ceca2ca51858ca67269bd5992/activemq-core/src/main/java/org/apache/activemq/kaha/impl/index/StoreIndexWriter.java][updateIndexes][1] = -> TRY {  -> dataOut.reset()@ -> indexItem.updateIndexes(dataOut,)@ -> file.seek(indexItem.getOffset(),)@ -> file.write(dataOut.getData(),0,IndexItem.INDEXES_ONLY_SIZE,)@ } CATCH(IOException) {}
results[https://github.com/mcm46/lab2/blob/87a713453f5a521d08c163334654fca4402e4a23/Lab3/virtualdisk/VirtualDisk.java][formatStore][1] = -> setBuffer((byte) 0,b,Constants.BLOCK_SIZE,)@ -> LOOP { -> TRY { -> _file.seek(seekLen,)@ -> _file.write(b,0,Constants.BLOCK_SIZE,)@ } CATCH(Exception) { -> System.out.println("Error in format: WRITE operation failed at the device block "+i,)@i<Constants.NUM_OF_BLOCKS } }
results[https://github.com/YongJiang/org.eclipse.birt.data/blob/c8d37caedd40010fd5033db680224eee2ca02de4/plugins/org.eclipse.birt.data/src/org/eclipse/birt/data/engine/olap/data/util/BufferedRandomAccessFile.java][delegateWrite][1] = -> TRY {  -> IF { } ELSE { -> System.arraycopy(b,pos,memoryDelegate,pointer,len,)@!(delegate==null) && !(pointer+len>memoryDelegate.length&&!(pureMemory)) -> return @!(pointer+len>memoryDelegate.length&&!(pureMemory)) && delegate==null } -> delegate.write(b,pos,len,)@!(delegate==null) } CATCH(IOException) {}
results[https://github.com/xored/f4/blob/82d3c126f014bec0b060a0a2d66793d45041c562/com.xored.f4.fantom/fantom/src/sys/java/fan/sys/NioBuf.java][pipeTo][2] = -> TRY {  -> temp=temp()@ -> LOOP { -> n=Math.min(temp.length,len-total,)@total<len -> buf.get(temp,0,n,)@ -> dst.write(temp,0,n,)@ } } CATCH(IOException) {}
results[https://github.com/apache/activemq/blob/7f883f6fe207cd40211ad897ec96a56d33c46aa9/activemq-core/src/main/java/org/apache/activemq/kaha/impl/StoreIndexWriter.java][storeItem][1] = -> TRY {  -> dataOut.reset()@ -> indexItem.write(dataOut,)@ -> file.seek(indexItem.getOffset(),)@ -> file.write(dataOut.getData(),0,IndexItem.INDEX_SIZE,)@ } CATCH(IOException) {}
results[https://github.com/frostwire/frostwire-desktop/blob/90eacf1ef657a5664fd9b5e2e84d819091f9ea3c/lib/jars-src/jaudiotagger/src/org/jaudiotagger/audio/asf/io/RandomAccessFileOutputStream.java][write][1] = -> TRY {  -> this.targetFile.write(bytes:byte[],off:int,len:int,)@ } CATCH(IOException) {}
results[https://github.com/victoryckl/android-demos/blob/5aee56faef67c31d1193b9b3afdb38b3bbe8e6b4/android-demos/src/com/example/utils/FileUtils.java][copyFile][2] = -> TRY {  -> LOOP { -> count=in.read(buffer,)@ } ELSE { -> out.write(buffer,0,count,)@!(count<=0) } } CATCH(IOException) {}
results[https://github.com/apache/activemq/blob/b0c2a40fb979829ceca2ca51858ca67269bd5992/activemq-core/src/main/java/org/apache/activemq/kaha/impl/index/StoreIndexWriter.java][storeItem][1] = -> TRY {  -> dataOut.reset()@ -> indexItem.write(dataOut,)@ -> file.seek(indexItem.getOffset(),)@ -> file.write(dataOut.getData(),0,IndexItem.INDEX_SIZE,)@ } CATCH(IOException) {}
results[https://github.com/Starlink/starjava/blob/5742d01da82d1485720cbe4ff84b92a5adbbd96c/tamfits/src/main/nom/tam/util/BufferedFile.java][needBuffer][2] = -> TRY {  -> IF { -> raf.seek(fileOffset,)@ } -> IF { -> raf.write(buffer,0,bufferOffset,)@bufferOffset+need>=bufferSize } } CATCH(IOException) {}
results[https://github.com/codefollower/Lealone/blob/b9c130227ad55b6c700ea3f75b585689b6e1673d/lealone-atomicdb/src/main/java/com/codefollower/lealone/atomicdb/io/util/SequentialWriter.java][flushData][2] = -> TRY { -> out.write(buffer,0,validBufferBytes,)@ } CATCH(IOException) { -> throw new FSWriteError(e,getPath(),)@ } -> IF { -> metadata.append(buffer,0,validBufferBytes,)@metadata!=null }
results[https://github.com/olanto/MYCAT/blob/188206ac8618d132c62a1ac055a9a15cc34c806a/prog/coreidx/src/org/olanto/idxvli/IdxIO.java][saveBag][1] = -> TRY { -> bf.seek(lastbag,)@ -> bf.writeInt(length,)@ -> intTobyte(bag,length*4,byteidx,)@ -> bf.write(byteidx,0,length*4,)@ } CATCH(Exception) { -> System.err.println("IO error in savebag doc="+d,)@ -> e.printStackTrace()@ }
results[https://github.com/apache/activemq/blob/b0c2a40fb979829ceca2ca51858ca67269bd5992/activemq-core/src/main/java/org/apache/activemq/kaha/impl/index/hash/HashIndex.java][writePageHeader][2] = -> TRY {  -> dataOut.reset()@ -> page.writeHeader(dataOut,)@ -> indexFile.seek(page.getId(),)@ -> indexFile.write(dataOut.getData(),0,HashPage.PAGE_HEADER_SIZE,)@ } CATCH(IOException) {}
results[https://github.com/NLeSC/vbrowser/blob/1b7d059ee1dcab18d25c6f2af36f5ebea3e90eb1/nl.nlesc.vlet.vrs.core/src/nl/nlesc/vlet/vdriver/vfs/localfs/LFile.java][writeBytes][2] = -> TRY {  -> TRY { -> afile=new RandomAccessFile(this._file,"rw",)@ -> afile.seek(fileOffset,)@ -> afile.write(buffer,bufferOffset,nrBytes,)@ -> afile.close()@ } } CATCH(IOException) {}
results[https://github.com/dim-s/jvm-php/blob/0f16e96ff5d55ae4a5386709b7fdecae13380a5a/jphp-core/src/php/runtime/ext/core/stream/FileStream.java][write][2] = -> len=args[1].toInteger()@ -> bytes=args[0].getBinaryBytes()@ -> TRY { -> accessFile.write(bytes,0,(len==0)?bytes.length:len,)@ -> return LongMemory.valueOf((len==0)?bytes.length:len,)@ } CATCH(IOException) { -> exception(env,e.getMessage(),)@ }
results[https://github.com/tingletech/xtf-strap/blob/d92b21e3edff41605dadcddb8c0981c7458835f5/WEB-INF/src/org/cdlib/xtf/util/SubFileWriter.java][checkLength][1] = -> TRY {  -> IF { -> file.seek(writtenPos+segOffset,)@ } -> IF { -> file.write(buf,0,bufTop,)@bufTop+nBytes>BUF_SIZE } } CATCH(IOException) {}
results[https://github.com/mbien/jake2/blob/ebc94f975f45c2847eea390abf77ff768ce50e83/src/jake2/client/Console.java][execute][1] = -> f=Lib.fopen(name,"rw",)@ -> IF { -> return @f==null } -> LOOP { -> System.arraycopy(con.text,line,buffer,0,con.linewidth,)@!(f==null) -> TRY { -> f.write(buffer,0,x+1,)@!(f==null) } } -> Lib.fclose(f,)@!(f==null)
results[https://github.com/f1ori/yacy/blob/3b40b982564c86c4d3728d3415a970deb2c0d1a8/source/net/yacy/kelondro/io/Records.java][flushBuffer][1] = -> IF { -> return @raf==null } -> TRY { -> raf.seek(raf.length(),)@!(raf==null) -> raf.write(this.buffer,0,this.recordsize*this.buffercount,)@!(raf==null) } CATCH(IOException) { -> Log.logException(e,)@!(raf==null) }
results[https://github.com/daxxmax/packages_apps_Mms/blob/91609f61a7ab2883f16b22979ed5158ed1415f31/src/com/android/mms/util/BlobCache.java][insertInternal][30] = -> TRY {  -> sum=checkSum(data,)@ -> writeLong(header,BH_KEY,key,)@ -> writeInt(header,BH_CHECKSUM,sum,)@ -> writeInt(header,BH_OFFSET,mActiveBytes,)@ -> writeInt(header,BH_LENGTH,length,)@ -> mActiveDataFile.write(header,)@ -> mActiveDataFile.write(data,0,length,)@ } CATCH(IOException) {}
results[https://github.com/halset/openmap/blob/4efaed7f8453251c3fd00c7a5ced4f08defe1864/src/main/java/com/bbn/openmap/layer/shape/ShapeFile.java][setShapeType][1] = -> TRY {  -> IF { -> filePtr=raf.getFilePointer()@fileShapeType==SHAPE_TYPE_NULL -> writeLEInt(header,32,fileShapeType,)@fileShapeType==SHAPE_TYPE_NULL -> raf.seek(0,)@fileShapeType==SHAPE_TYPE_NULL -> raf.write(header,0,100,)@fileShapeType==SHAPE_TYPE_NULL -> raf.seek(filePtr,)@fileShapeType==SHAPE_TYPE_NULL } } CATCH(IOException,IllegalArgumentException) {}
results[https://github.com/immutant/immutant/blob/f8a15ed0d528a6a7581898c08f33e24d04fc61f4/modules/web/src/main/java/org/immutant/web/ReusableInputStream.java][data][1] = -> TRY {  -> IF { -> this.data=new RandomAccessFile(this.tmpFile,"rw",)@this.data==null -> LOOP { -> this.data.write(bytes,0,bytesRead,)@(bytesRead=this.source.read(bytes,0,4096,))>0 && this.data==null } -> this.data.seek(0,)@this.data==null } } CATCH(IOException) {}
results[https://github.com/cojen/Tupl/blob/19cf038fada9dde376505fa32d19fbde092e5e7f/src/main/java/org/cojen/tupl/JavaFileIO.java][writeDurably][1] = -> TRY {  -> IF { -> write(pos,buf,offset,length,)@ } ELSE { -> file.seek(pos,)@!(file==null) -> file.write(buf,offset,length,)@!(file==null) } } CATCH(IOException) {}
results[https://github.com/gaffo/jgit/blob/ff09f7e201c285af38fd1293fe5ac08019ae45dc/org.spearce.jgit/src/org/spearce/jgit/fetch/IndexPack.java][sync][4] = -> TRY {  -> packDigest.update(buf,0,bOffset,)@ -> IF { -> packOut.write(buf,0,bOffset,)@packOut!=null } -> IF { -> System.arraycopy(buf,bOffset,buf,0,bAvail,)@bAvail>0 } } CATCH(IOException) {}
results[https://github.com/Unidata/thredds/blob/ceeef0d7d60e447b5f8d03dfb508d1cb494adda3/common/src/java/ucar/unidata/io/RandomAccessFile.java][flush][1] = -> TRY {  -> IF { -> file.seek(bufferStart,)@ -> file.write(buffer,0,dataSize,)@ } -> IF { -> file.setLength(minLength,)@!(readonly)&&minLength!=0&&minLength!=file.length() } } CATCH(IOException) {}
results[https://github.com/tingletech/xtf-strap/blob/d92b21e3edff41605dadcddb8c0981c7458835f5/WEB-INF/src/org/cdlib/xtf/util/SubFileWriter.java][write][1] = -> TRY {  -> checkLength(len,)@ -> IF { -> file.write(b,off,len,)@len>BUF_SIZE } ELSE { -> System.arraycopy(b,off,buf,bufTop,len,)@!(len>BUF_SIZE) } } CATCH(IOException) {}
results[https://github.com/svn2github/H2-Mirror/blob/03d43bc1005046364545e8cd7998c9ad301ec009/h2/src/main/org/h2/store/fs/FilePathDisk.java][write][1] = -> TRY {  -> len=src.remaining()@ -> file.write(src.array(),src.arrayOffset()+src.position(),len,)@ -> src.position(src.position()+len,)@ } CATCH(IOException) {}
results[https://github.com/reppie/xchange/blob/7807f15f1bf440b9dc7081d30011d86f81737509/projects/xchange/StorageServer.java][handlePost][1] = -> TRY {  -> outputStream=new RandomAccessFile(createFile(fileName,blockNr,),"rw",)@ -> LOOP { -> temp=in.read(buffer,offset,currentBlockSize-offset,)@offset<currentBlockSize&&temp!=-1 } -> outputStream.write(buffer,0,offset,)@ -> outputStream.close()@ } CATCH(Exception) {}
results[https://github.com/jonanh/PanChat/blob/ed018316a41bb26f5210a47246ca47742c63aa98/PanChat/src/panchat/share/protocolo/Bloque.java][escribir][1] = -> TRY {  -> os=new RandomAccessFile(pFicheroNombre,"rw",)@ -> IF { -> bytesAEscribir=(int) fichero.getTamanyo()%Bloque_TAMANYO@numBloque+1*Bloque_TAMANYO>fichero.getTamanyo() } -> os.seek(numBloque*Bloque_TAMANYO,)@ -> os.write(data,0,bytesAEscribir,)@ -> os.close()@ } CATCH(IOException) {}
results[https://github.com/apache/thrift/blob/2897d4825c5350e295605155f7a619d71973e3bc/lib/java/src/org/apache/thrift/transport/TSimpleFileTransport.java][write][1] = -> TRY {  -> TRY { -> file.write(buf,off,len,)@ } CATCH(IOException) { -> throw new TTransportException(ioe.getMessage(),)@ } } CATCH(TTransportException) {}
