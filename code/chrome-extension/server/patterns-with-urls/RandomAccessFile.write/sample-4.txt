results[https://github.com/stephenc/java-iso-tools/blob/abd074d949c1c09b7fae5860267fe740fe0d431e/sabre/src/main/java/de/tu_darmstadt/informatik/rbg/bstickler/udflib/structures/ReservedArea.java][write][21] = -> TRY {  -> myRandomAccessFile.write(buffer,)@ } CATCH(IOException) {}
results[https://github.com/dukeboard/kevoree-extra/blob/2f6312dfc5b28f7d8e86d175168a94784238b867/org.kevoree.extra.freePastry/src/main/java/org/mpisws/p2p/filetransfer/FileTransferImpl.java][doWork][1] = -> TRY {  -> file.write(writeMe,)@ } CATCH(Exception) {}
results[https://github.com/russellb/androvoip/blob/eb038207cff07ed44aa8db92d82878d094e68d7a/src/com/mexuar/corraleta/audio/javasound/Audio8kEcho.java][sample][1] = -> IF { -> TRY { -> speakRaf.write(buff,)@speakRaf!=null } }
results[https://github.com/acontes/programming/blob/9baa312c1480b727881195346237cd48f8895749/src/Extensions/org/objectweb/proactive/extensions/vfsprovider/server/RandomAccessStreamAdapter.java][write][2] = -> TRY {  -> randomFile.write(data,)@ } CATCH(IOException,WrongStreamTypeException) {}
results[https://github.com/stephenc/java-iso-tools/blob/f4e0280a4e4d066df6cf20b9941b5028d6810e46/sabre/src/main/java/com/github/stephenc/javaisotools/udflib/structures/EntityID.java][write][33] = -> TRY {  -> myRandomAccessFile.write(getBytes(),)@ } CATCH(IOException) {}
results[https://github.com/rejeep/apes/blob/d5070e935f97ba2ffc0900af45da1241c6acb4a6/src/apes/models/MemoryHandler.java][write][21] = -> TRY {  -> file.seek(0,)@ -> file.write(data,)@ } CATCH(IOException) {}
results[https://github.com/mxro/osgi-maven/blob/f2c72f4dfb972d22a423411b83307f3a12f936a0/thrdAsyncHttpClient17/src/main/java/com/ning/http/client/consumers/FileBodyConsumer.java][consume][4] = -> TRY {  -> file.write(byteBuffer.array(),)@ } CATCH(IOException) {}
results[https://github.com/dancres/blitzjavaspaces/blob/db83678a2f2d4f0d89b3413ded3df7884f28cc01/src/org/prevayler/implementation/DelegatingByteCountStream2.java][flush][2] = -> TRY {  -> myBytes=theBuffer.toByteArray()@ -> theFile.write(myBytes,)@ } CATCH(IOException) {}
results[https://github.com/pquerna/cassandra/blob/9db8da81b7f269e5a8a7f896b751d482847d7082/src/org/apache/cassandra/io/SequenceFile.java][writeDirect][7] = -> TRY {  -> file_.write(bytes,)@ -> return file_.getFilePointer()@ } CATCH(IOException) {}
results[https://github.com/OpenNMS/jrobin/blob/557adcb7da69df1a3a251b03cbba0e7109c23a25/src/main/java/org/jrobin/core/RrdJRobin14FileBackend.java][write][14] = -> TRY {  -> m_file.seek(offset,)@ -> m_file.write(b,)@ } CATCH(IOException) {}
results[https://github.com/tulskiy/musique/blob/9746702cd994d0030a5eaee22cde60dd83253e16/dependencies/jaad/src/main/java/net/sourceforge/jaad/util/wav/WaveFileWriter.java][<init>][10] = -> TRY {  -> out=new RandomAccessFile(output,"rw",)@ -> out.write( new byte[],)@ } CATCH(IOException) {}
results[https://github.com/ruytoor/M1S2/blob/8a876e720ff8239052a19add68f8c0e02a04194f/TI/TP9/IJ/src/ij/plugin/filter/AVI_Writer.java][writeString][12] = -> TRY {  -> bytes=s.getBytes("UTF8",)@ -> raFile.write(bytes,)@ } CATCH(IOException) {}
results[https://github.com/snowfix/android_dalvik/blob/0c9612f9d7ff9fc0a61cc9eeb37acaabb7b28700/libcore/luni/src/test/java/tests/api/java/io/FileTest.java][test_length][14] = -> TRY {  -> raf=new RandomAccessFile(f,"rwd",)@ -> raf.write(0x41,)@ } CATCH(Exception) {}
results[https://github.com/ritzalam/red5/blob/2db56140a6f52f46c8d46ee831f620798415beaa/src/org/red5/io/flv/impl/FLVWriter.java][writeStream][5] = -> TRY { -> dataFile.write(b,)@ } CATCH(IOException) { -> log.error("",e,)@ }
results[https://github.com/Qi4j/qi4j-sdk/blob/67c227d65ad68099fa221c3a3e4c9cd3ea6291ed/entitystore-quick/src/main/java/org/qi4j/entity/quick/IdentityFile.java][fillExtras][1] = -> TRY {  -> pointer=accessFile.getFilePointer()@ -> accessFile.write(extras,)@ } CATCH(IOException) {}
results[https://github.com/NearInfinityBrowser/NearInfinity/blob/dbb122afca331b31787eb56c2ebd8f5c7c16497d/infinity/util/Filewriter.java][writeInt][1] = -> TRY {  -> ranfile.write(Byteconvert.convertBack(b,),)@ } CATCH(IOException) {}
results[https://github.com/NearInfinityBrowser/NearInfinity/blob/ab04e5ee598d156288cfda76c1ae1350bf91ea8a/src/infinity/util/Filewriter.java][writeInt][1] = -> TRY {  -> ranfile.write(DynamicArray.convertInt(b,),)@ } CATCH(IOException) {}
results[https://github.com/sammyyu/Cassandra/blob/489143566d1e258b0568ad000be64733893d2c0c/src/java/org/apache/cassandra/db/CommitLog.java][writeCommitLogHeader][1] = -> TRY {  -> logWriter.writeLong(bytes.length,)@ -> logWriter.write(bytes,)@ } CATCH(IOException) {}
results[https://github.com/olanto/MYCAT/blob/5dc5e6c732963894f519ce37837be54b15cf2a76/prog/coreidx/src/org/olanto/idxvli/util/BytesAndFiles.java][writeBytes][1] = -> TRY { -> r.seek(pos,)@ -> r.write(b,)@ } CATCH(Exception) { -> error("IO error instoreNBytes",e,)@ }
results[https://github.com/axDev-aosp/platform_packages_apps_Gallery2/blob/ff025412e2cacedd8cbb7901140e580f76634ee6/gallerycommon/src/com/android/gallery3d/common/BlobCache.java][clearEntry][12] = -> TRY {  -> Arrays.fill(header,(byte) 0,)@ -> mActiveDataFile.seek(mFileOffset,)@ -> mActiveDataFile.write(header,)@ } CATCH(IOException) {}
results[https://github.com/BaseXdb/basex/blob/5ed4dad39d79071e48e45cf6b31c49f7daec0caa/basex-core/src/test/java/org/basex/io/random/DataAccessTest.java][write][2] = -> TRY {  -> LOOP { -> out.write(b,)@ } } CATCH(IOException) {}
results[https://github.com/bladesilent/Harmony/blob/cfad25367437aa4d561ad52e9ed05453c96469fa/classlib/modules/luni/src/test/api/common/org/apache/harmony/luni/tests/java/io/RandomAccessFileTest.java][test_writeI][8] = -> TRY {  -> raf=new java.io.RandomAccessFile(fileName,"rw",)@ -> raf.write('t',)@ -> raf.close()@ } CATCH(IOException) {}
results[https://github.com/Falaina/JPCSP-Mirror/blob/a96e7756020363dc67fd822bfe26fc714b40f616/src/jpcsp/format/PSF.java][write][2] = -> TRY {  -> byteBuffer=ByteBuffer.wrap(buffer,)@ -> output.write(buffer,)@ -> output.setLength(buffer.length,)@ } CATCH(IOException) {}
results[https://github.com/dianping/cat/blob/6226926375b4acd18dcf4d94594ba3966617caf3/cat-core/src/main/java/com/dianping/cat/storage/dump/MessageBlockWriter.java][writeBlock][2] = -> TRY {  -> data=block.getData()@ -> m_dataFile.writeInt(data.length,)@ -> m_dataFile.write(data,)@ } CATCH(IOException) {}
results[https://github.com/molgenis/systemsgenetics/blob/06fbc453404531ddd4e17f3393a2e470de985981/genetics-lib/src/main/java/umcg/genetica/io/trityper/WGAFileMatrixRawData.java][setGCScore][6] = -> TRY {  -> file.seek(getElement(snp,ind,),)@ -> file.write(value,)@ } CATCH(IOException) {}
results[https://github.com/prsebastian/gwt-issue8215/blob/73862cc8ceb81c29a669d573441e231e4b272842/dev/core/src/com/google/gwt/dev/util/DiskCache.java][writeByteArray][8] = -> TRY { -> file.writeInt(bytes.length,)@ -> file.write(bytes,)@ } CATCH(IOException) { -> throw new RuntimeException("Unable to write to byte cache",e,)@ }
results[https://github.com/kiniry-teaching/UCD/blob/160f3f6879b60b6ec505152b6bbe97481065909d/COMP30050-2008/groups/Music Comparison Software/MusicComparison/src/org/jaudiotagger/audio/asf/AsfFileWriter.java][createNewContentDescription][2] = -> TRY {  -> chunkStart=rafTemp.getFilePointer()@ -> asfContent=description.getBytes()@ -> rafTemp.write(asfContent,)@ } CATCH(IOException) {}
results[https://github.com/sorcersoft/sorcer/blob/dd308089f8ed7c7a54af6d06f1caaf7b4fe261d5/iGrid/modules/sorcer/src/sorcer/util/FileTable.java][writeObject][1] = -> TRY {  -> dataFile.seek(pos,)@ -> dataFile.writeInt(datalen,)@ -> dataFile.write(b,)@ } CATCH(IOException) {}
results[https://github.com/exoplatform/jcr/blob/117b213fd7de4383b99b46c735e1b01846611eee/component/ext/src/main/java/org/exoplatform/services/jcr/ext/replication/storage/RandomChangesFile.java][writeData][1] = -> TRY {  -> fileAccessor.seek(position,)@ -> fileAccessor.write(data,)@ -> digest.update(data,)@ } CATCH(IOException) {}
results[https://github.com/teiid/teiid/blob/21c93a6fd4be2528f95224f99905d74479862d1b/federate-metadata/src/main/java/com/metamatrix/internal/core/index/Block.java][write][4] = -> TRY {  -> raf.seek(blockNum*(long) blockSize,)@ -> raf.write(field.buffer(),)@ } CATCH(IOException) {}
results[https://github.com/lboynton/XMPP-Client/blob/be55f1964e4fcee93503588cd96af4c99ee7f67c/lib/mp3tag/src/org/farng/mp3/id3/FrameBodyUnsupported.java][write][2] = -> TRY {  -> writeHeader(file,this.getSize(),)@ -> file.write(this.value,)@ } CATCH(IOException) {}
results[https://github.com/bloodfire91/cnt4007c/blob/2e362bea81aef1f90b9b31cabae5a9a1cf06bb8f/FileHandler.java][writePiece][4] = -> TRY { -> outputFile.seek(index*pieceSize,)@ -> outputFile.write(piece,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/marytts/marytts/blob/436a2e366317a69ba3733fee0293cd277e5c5338/java/de/dfki/lt/mary/unitselection/voiceimport_reorganized/Datagram.java][write][1] = -> TRY {  -> raf.writeLong(duration,)@ -> raf.writeInt(data.length,)@ -> raf.write(data,)@ } CATCH(IOException) {}
results[https://github.com/jankotek/JDBM3/blob/3d8bbc2b0890a02f18593232034f1bdece349034/src/main/jdbm/StorageDisk.java][write][1] = -> TRY {  -> file=getRaf(offset,)@ -> file.seek(offset%MAX_FILE_SIZE,)@ -> file.write(data,)@ } CATCH(IOException) {}
results[https://github.com/square/tape/blob/51b36303762a0a413e7f0fc90dc65c8f176d11e3/tape/src/main/java/com/squareup/tape/QueueFile.java][writeHeader][5] = -> TRY {  -> writeInts(buffer,fileLength,elementCount,firstPosition,lastPosition,)@ -> raf.seek(0,)@ -> raf.write(buffer,)@ } CATCH(IOException) {}
results[https://github.com/CampagneLaboratory/bdval/blob/2e56da6945d16c9fad8049581a9855a64e1fea08/src/org/bdval/io/compound/CompoundDataOutput.java][writeObject][2] = -> TRY {  -> buf=bos.toByteArray()@ -> dataOutput.writeInt(buf.length,)@ -> dataOutput.write(buf,)@ } CATCH(IOException) {}
results[https://github.com/Qi4j/qi4j-sdk/blob/67c227d65ad68099fa221c3a3e4c9cd3ea6291ed/entitystore-quick/src/main/java/org/qi4j/entity/quick/DataStore.java][writeIdentity][1] = -> TRY {  -> System.arraycopy(idBytes,0,id,0,idBytes.length,)@!(idBytes.length>identityMaxLength) -> dataFile.writeByte(idBytes.length,)@!(idBytes.length>identityMaxLength) -> dataFile.write(id,)@!(idBytes.length>identityMaxLength) } CATCH(IOException) {}
results[https://github.com/dkomanov/fizteh-java-2013/blob/55a4382f457be100c12f2d5fd3e9f13e992b79ca/Users/user/Documents/GitHub/fizteh-java-2013/src/ru/fizteh/fivt/students/krivchansky/filemap/FileMapWritingUtils.java][writeKey][2] = -> TRY {  -> bytes=GlobalUtils.getBytes(key,GlobalUtils.ENCODING,)@ -> dataFile.write(bytes,)@ -> dataFile.writeByte(0,)@ } CATCH(IOException) {}
results[https://github.com/kitkatandroid/JLS36G_base/blob/d9793ebbef58d0e842c8222c1067928d778f22f1/drm/java/android/drm/DrmOutputStream.java][write][4] = -> TRY {  -> IF { -> mFile.write(status.convertedData,)@ } } CATCH(IOException) {}
results[https://github.com/stupidsing/suite/blob/5207a97afb3a1cbac2a78f42652507ddc61eae0d/src/main/java/suite/btree/Allocator.java][saveAllocMap][2] = -> TRY { -> allocMapFile.seek(0,)@ -> allocMapFile.write(allocMap,)@ } CATCH(IOException) { -> throw new RuntimeException(ex,)@ }
results[https://github.com/ConcoMB/POPeye/blob/ff5d5222aa29ac37364395acefc559c56e268e3d/popeye/src/main/java/proxy/Mail.java][add][1] = -> TRY {  -> size+=line.length()@ -> writer.write(line.getBytes(),)@ } CATCH(IOException) {}
results[https://github.com/apache/directory-server/blob/e84dd28e6e218601306231c2051f430d5a5a785f/ldif-partition/src/main/java/org/apache/directory/server/core/partition/ldif/SingleFileLdifPartition.java][appendLdif][1] = -> TRY {  -> ldif=LdifUtils.convertToLdif(entry,)@ -> ldifFile.write(Strings.getBytesUtf8(ldif+"\n",),)@ } CATCH(IOException,LdapException) {}
results[https://github.com/ducki2p/i2p/blob/db9fd01279851642109fedc55d342c8b1d80f384/core/java/src/net/metanotion/io/RAIFile.java][writeUTF][2] = -> TRY {  -> string=str.getBytes("UTF-8",)@ -> delegate.writeInt(string.length,)@ -> delegate.write(string,)@ } CATCH(IOException) {}
results[https://github.com/pbeaman/persistit/blob/10b259d3c0b72a7c5882268df9128b9cdf51d5a4/src/test/java/com/persistit/VolumeTest.java][testCreateOpenVolume][1] = -> TRY {  -> raf=new RandomAccessFile(file,"rw",)@ -> raf.write( new byte[],)@ -> raf.close()@ } CATCH(Exception) {}
results[https://github.com/monnetproject/bliss/blob/39a79f0a513813aadddc45b8aa753d7c5299e32b/sparsemath/src/main/java/eu/monnetproject/math/sparse/eigen/QROnDisk.java][writeRow][1] = -> TRY {  -> bb=ByteBuffer.wrap(buf,)@ -> matrix.seek((long) n*i*8,)@ -> matrix.write(buf,)@ } CATCH(IOException) {}
results[https://github.com/dkomanov/fizteh-java-2013/blob/7a5510e00f5d08019714622e9496ce9aa4080899/src/ru/fizteh/fivt/students/eltyshev/filemap/base/FilemapWriter.java][writeKey][1] = -> TRY {  -> bytes=key.getBytes(AbstractStorage.CHARSET,)@ -> file.write(bytes,)@ -> file.writeByte(0,)@ } CATCH(IOException) {}
results[https://github.com/Norconex/commons-lang/blob/4a05be010948dbfe0ace854d148f39b8b6b75366/norconex-commons-lang/src/main/java/com/norconex/commons/lang/io/CachedInputStream.java][cacheToFile][1] = -> TRY {  -> randomAccessFile=new RandomAccessFile(fileCache,"rw",)@ -> randomAccessFile.write(memOutputStream.toByteArray(),)@ } CATCH(IOException) {}
results[https://github.com/bmcdorman/CBCJVM/blob/a6da130f8fdc0c49c39cc9c8cbdfa3aea7897a3f/cbc/CBCJVM/src/cbccore/display/Framebuffer.java][sync][1] = -> TRY {  -> out.seek(0,)@ -> out.write(getBytes(),)@ } CATCH(IOException) {}
results[https://github.com/Koller-Digital/200Million_framework/blob/ddc582a99cb19a8073309a570310d9f5912e6c63/200Million_Framework/src/de/koller/aframe/io/ARandomAccessFile.java][writeBytes][1] = -> TRY { -> file.seek(pos,)@ -> file.write(b,)@ } CATCH(IOException) { -> throw new OceanException(ex,)@ }
results[https://github.com/giannini/java.learning/blob/2227304c4d4f33100a5d92f9af6a986579c6526e/src/com/java/random/access/StringFormatter.java][writeline][1] = -> TRY { -> raf.write(line.getBytes(),)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/apache/commons-jcs/blob/2b9ea32ab82b4b18d4a03e332bd01d4d15ee5d57/sandbox/yajcache/src/org/apache/jcs/yajcache/file/CacheFileContent.java][write][2] = -> TRY {  -> raf.writeByte(this.contentType,)@ -> raf.writeInt(this.contentLength,)@ -> raf.writeInt(this.contentHashCode,)@ -> raf.write(this.content,)@ } CATCH(IOException) {}
results[https://github.com/Blakez/android_frameworks_base/blob/11714fcbb86c041579b3f2c64bc7e27ed7fc2705/tests/FrameworkPerf/src/com/android/frameworkperf/TestService.java][onRun][8] = -> TRY { -> mRAF.seek(0,)@ -> mRAF.setLength(0,)@ -> mRAF.write(mBuffer,)@ } CATCH(IOException) { -> Log.w(TAG,"Failure writing "+mFile,e,)@ }
results[https://github.com/kiniry-teaching/UCD/blob/160f3f6879b60b6ec505152b6bbe97481065909d/COMP30050-2008/groups/Music Comparison Software/MusicComparison/src/org/jaudiotagger/tag/lyrics3/AbstractLyrics3v2FieldFrameBody.java][write][7] = -> TRY {  -> LOOP { -> buffer=object.writeByteArray()@ -> file.write(buffer,)@ } } CATCH(IOException) {}
results[https://github.com/AsyncHttpClient/async-http-client/blob/bce9f9020edc9bff9a71a4a63cbefc327f621db5/modules/api/src/main/java/com/ning/http/client/extra/ResumableRandomAccessFileListener.java][onBytesReceived][3] = -> TRY {  -> file.seek(file.length(),)@ -> file.write(buffer.array(),)@ } CATCH(IOException) {}
results[https://github.com/Darkrulerz/Netbeans/blob/032a475711c140bef310ce2b64c3f86b56ace682/RoosterProgramma/src/excel/write/biff/FileDataOutput.java][setData][3] = -> TRY {  -> curpos=data.getFilePointer()@ -> data.seek(pos,)@ -> data.write(newdata,)@ -> data.seek(curpos,)@ } CATCH(IOException) {}
results[https://github.com/tulskiy/musique/blob/c5d76c80ff759a3e49ad441c03f98eafcad46e60/musique-core/src/main/java/com/tulskiy/musique/audio/formats/uncompressed/PCMEncoder.java][open][2] = -> TRY { -> output=new RandomAccessFile(outputFile,"rw",)@ -> output.setLength(0,)@ -> output.write( new byte[],)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/metaborg/jsglr/blob/e74594970d4743b5750b928b2e4e74f271ae2137/org.spoofax.jssglr/src/org/spoofax/jssglr/gwt/java/io/FileWriter.java][write][3] = -> TRY {  -> LOOP { -> file.write(s.charAt(i,),)@i<s.length() } } CATCH(IOException) {}
results[https://github.com/zolyfarkas/spf4j/blob/b0d817a928a7406a16eb31b0c415d1aeb5551918/spf4j-core/src/main/java/org/spf4j/concurrent/FileBasedLock.java][writeHolderInfo][1] = -> TRY {  -> file.seek(0,)@ -> data=org.spf4j.base.Runtime.PROCESS_NAME.getBytes(Charsets.UTF_8,)@ -> file.write(data,)@ -> file.setLength(data.length,)@ } CATCH(IOException) {}
results[https://github.com/shentok/mapsforge/blob/bca7d7b5d07ceeab6f0da0b88d8747cb5cc4e3e3/mapsforge-map-writer/src/main/java/org/mapsforge/map/writer/MapFileWriter.java][writeIndex][3] = -> TRY {  -> randomAccessFile.seek(startPositionSubfile,)@ -> randomAccessFile.write(indexBuffer.array(),)@ -> randomAccessFile.seek(subFileSize,)@ } CATCH(IOException) {}
results[https://github.com/dkomanov/fizteh-java-2013/blob/24181fc416b2c251dfd1ffe7b1891f09204b52cb/src/ru/fizteh/fivt/students/vlmazlov/utils/StoreableTableFileWriter.java][storeKey][2] = -> TRY {  -> dataBaseStorage.write(key.getBytes("UTF-8",),)@ -> dataBaseStorage.writeByte('\0',)@ -> dataBaseStorage.writeInt(offSet,)@ } CATCH(IOException) {}
results[https://github.com/kitkatandroid/JLS36G_base/blob/d9793ebbef58d0e842c8222c1067928d778f22f1/drm/java/android/drm/DrmOutputStream.java][finish][4] = -> TRY {  -> IF { -> mFile.seek(status.offset,)@ -> mFile.write(status.convertedData,)@ } } CATCH(IOException) {}
results[https://github.com/asakusafw/asakusafw/blob/c925d9197fd0798df82cf8403db452e8b3baf079/windgate-project/asakusa-windgate-core/src/main/java/com/asakusafw/windgate/file/session/FileSessionProvider.java][createSession][1] = -> TRY {  -> assert file.getFilePointer()==0L@ -> file.write(VALID,)@ -> file.getFD().sync()@ } CATCH(IOException) {}
results[https://github.com/silid/project-x-cvs/blob/5d89f445b50138a6a182a20f0ae76d0ddc0309df/src/net/sourceforge/dvb/projectx/audio/MPAD.java][deleteRIFF][6] = -> TRY {  -> riff=new RandomAccessFile(file,"rw",)@ -> riff.seek(0,)@ -> riff.write( new byte[],)@ -> riff.close()@ } CATCH(IOException) {}
results[https://github.com/Vhati/Slipstream-Mod-Manager/blob/b94440e0a0e0f295a181706129dddd745cb0d85c/src/main/java/net/vhati/ftldat/FTLDat.java][writeLittleUString][1] = -> TRY {  -> strBytes=s.getBytes(asciiEncoder.charset().name(),)@ -> raf.write(strBytes,)@ } CATCH(IOException) {}
results[https://github.com/conceptstailored/NCSU-GBS-Pipeline/blob/d16978268678f9fa8958e60cdd43d64937a912d5/TASSEL_20121011/maizegenetics/src/net/maizegenetics/gbs/tagdist/TagsByTaxaByteFileMap.java][saveCurrentBufferTagDist][2] = -> TRY { -> theRAF.seek(oldpos,)@ -> theRAF.write(bufferedTagDist,)@ } CATCH(IOException) { -> System.out.println("Catch in reading saveCurrentBufferTagDist: "+e,)@ -> e.printStackTrace()@ }
results[https://github.com/NCIP/cadsr-cgmdr/blob/2d7c7a614a2a2589b64061f0cea812a14f40c1ac/src/org/exist/cluster/journal/JournalManager.java][writeDataFile][2] = -> TRY {  -> store=new RandomAccessFile(storage,"rws",)@ -> store.seek(start,)@ -> store.write(eventBytes,)@ -> store.close()@ } CATCH(IOException) {}
results[https://github.com/segfault/apache_cassandra/blob/c8afd769e5baec91f20508d0a37bf1bba93f09ff/test/unit/org/apache/cassandra/io/compress/CompressedRandomAccessReaderTest.java][updateChecksum][4] = -> TRY {  -> file.seek(checksumOffset,)@ -> file.write(checksum,)@ -> file.getFD().sync()@ } CATCH(IOException) {}
results[https://github.com/Spoutcraft/Spoutcraft/blob/eea6452677dfc0822622da5f5f1629f88398a922/src/minecraft/org/spoutcraft/client/io/FileMap.java][wipe][2] = -> TRY {  -> LOOP { -> FATFile.seek(0,)@ -> FATFile.write( new byte[],)@ } } CATCH(IOException) {}
results[https://github.com/quickfixj/mirror/blob/88fba4c3666d66a9859f8eac2c1dd145df02ca3f/src/quickfix/FileStore.java][set][2] = -> TRY {  -> offset=messageFile.getFilePointer()@ -> size=message.length()@ -> messageFile.write(message.getBytes(),)@ } CATCH(IOException) {}
results[https://github.com/apache/activemq/blob/b0c2a40fb979829ceca2ca51858ca67269bd5992/activemq-core/src/main/java/org/apache/activemq/kaha/impl/index/tree/TreeIndex.java][createPage][2] = -> TRY {  -> IF { -> indexFile.seek(length,)@ -> indexFile.write(TreeEntry.NOT_SET,)@ } } CATCH(IOException) {}
results[https://github.com/mammadori/dbpedia/blob/620a509cd2e04dfb8aa896aab719d2f2774e5236/live/src/main/java/org/dbpedia/extraction/live/util/collections/PersistentQueue.java][push][1] = -> TRY {  -> data=baos.toByteArray()@ -> file.seek(endIndex,)@ -> file.writeInt(data.length,)@ -> file.write(data,)@ } CATCH(Exception) {}
results[https://github.com/monnetproject/bliss/blob/39a79f0a513813aadddc45b8aa753d7c5299e32b/sparsemath/src/main/java/eu/monnetproject/math/sparse/eigen/QROnDisk.java][writeSingle][1] = -> TRY {  -> ByteBuffer.wrap(buf,).putDouble(value,)@ -> matrix.seek((long) n*i*8+j*8,)@ -> matrix.write(buf,)@ } CATCH(IOException) {}
results[https://github.com/gpothier/stiq/blob/4dba67a6458ec8bf93fa550b40d463e4d1d7ef80/core/src/testcase/btree/SimplePageManager.java][write][1] = -> TRY { -> itsFile.seek(aId*Config.pageSize(),)@ -> itsFile.write(aData,)@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/huxi/sulky/blob/82d70f4220514bc15f73e36f7802b422a4f3c731/sulky-buffers/src/main/java/de/huxhorn/sulky/buffers/SerializingFileBuffer.java][internalWriteElement][1] = -> TRY {  -> buffer=bos.toByteArray()@ -> randomSerializeFile.seek(offset,)@ -> randomSerializeFile.writeInt(bufferSize,)@ -> randomSerializeFile.write(buffer,)@ } CATCH(IOException) {}
results[https://github.com/ekirkilevics/TestSSQL/blob/cb772505ca654ad7e66f15881c882693c0bbacfb/sql12/fw/src/test/java/net/sourceforge/squirrel_sql/fw/util/FileTest.java][test_length][2] = -> TRY {  -> raf=new RandomAccessFile(new File(f.getAbsolutePath(),),"rwd",)@ -> raf.write(0x41,)@ } CATCH(IOException) {}
results[https://github.com/apurtell/hadoop/blob/16315f7fdea71c1d1e6ab67f146a6740151fdb62/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestClientReportBadBlock.java][corruptBlock][6] = -> TRY {  -> raFile=new RandomAccessFile(f,"rw",)@ -> LOOP { -> bytes[i]=(byte) i@i<BLOCK_SIZE } -> raFile.write(bytes,)@ -> raFile.close()@ } CATCH(FileNotFoundException,IOException) {}
results[https://github.com/giannini/java.learning/blob/2227304c4d4f33100a5d92f9af6a986579c6526e/src/com/java/random/access/TestRandomAccess.java][append][1] = -> TRY { -> raf.seek(raf.length(),)@ -> raf.write(line.getBytes(),)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/sangamon/sneer/blob/56e31abf4f171bdaf8eec7dcc8935209e1426d6d/code/spikes/src/spikes/gandhi/dirsync/FilePart.java][materialize][1] = -> TRY {  -> ram=new RandomAccessFile(localPath+getInfo().getPath(),"rw",)@ -> ram.seek(_offset,)@ -> ram.write(_data,)@ } CATCH(FileNotFoundException,IOException) {}
results[https://github.com/visad/visad/blob/97d50004aadc5f06474809e2759a6d700a7e405b/deps/src/ucar/trunk/netcdf/NetcdfFile.java][writeV1Bytes][2] = -> TRY {  -> raf.writeInt(bytes.length,)@ -> raf.write(bytes,)@ -> LOOP { -> raf.writeByte(0,)@ } } CATCH(IOException) {}
results[https://github.com/svn2github/H2-Mirror/blob/711a312c29dd7313ac7fa78ce331298d8cd6e9aa/h2/src/tools/org/h2/dev/util/Migrate.java][writeFile][3] = -> TRY { -> ra=new RandomAccessFile(file,"rw",)@ -> ra.write(data,)@ -> ra.setLength(data.length,)@ -> ra.close()@ } CATCH(IOException) { -> throw new RuntimeException("Error writing to file "+file,e,)@ }
results[https://github.com/openspim/3rdpartypublic/blob/415cf9cc8a862f21ed52bdb53775e928b8ed382e/sourceext/ij_source/ij/plugin/filter/AVI_Writer.java][writeByteFrame][3] = -> TRY {  -> LOOP { -> LOOP { -> bufferWrite[++index]=(byte) 0@ } } -> raFile.write(bufferWrite,)@ } CATCH(IOException) {}
results[https://github.com/woggle/mesos-old/blob/9e4b96d1e52898adc0fcdd3313909b7883d3ab68/src/third_party/zookeeper-3.3.1/src/java/test/org/apache/zookeeper/server/CRCTest.java][corruptFile][7] = -> TRY {  -> raf=new RandomAccessFile(file,"rw",)@ -> b="mahadev".getBytes()@ -> raf.seek(writeLen,)@ -> raf.write(b,)@ -> raf.close()@ } CATCH(IOException) {}
results[https://github.com/quickfixj/mirror/blob/c78220d0c794e8a6377a09f3f51d186727c5ff35/core/src/main/java/quickfix/FileStore.java][set][1] = -> TRY {  -> offset=messageFileWriter.getFilePointer()@ -> size=message.length()@ -> messageFileWriter.write(message.getBytes(CharsetSupport.getCharset(),),)@ } CATCH(IOException) {}
results[https://github.com/gpothier/stiq/blob/24a65017f89dfda948783fbc89b76063d98494d6/evdb1/src/tod/impl/evdb1/db/file/HardPagedFile.java][write][1] = -> TRY {  -> IF { -> itsFile.seek(aId*itsPageSize,)@ -> itsFile.write(itsByteBuffer.array(),)@ } } CATCH(IOException) {}
results[https://github.com/lboynton/XMPP-Client/blob/be55f1964e4fcee93503588cd96af4c99ee7f67c/lib/mp3tag/src/org/farng/mp3/AbstractMP3FragmentBody.java][write][1] = -> TRY {  -> writeHeader(file,size,)@ -> LOOP { -> buffer=object.writeByteArray()@ -> file.write(buffer,)@ } } CATCH(IOException) {}
results[https://github.com/YongJiang/org.eclipse.birt.common/blob/6c5c41191efa77064d16aaa5cab43dafe33c859c/plugins/org.eclipse.birt.core/src/org/eclipse/birt/core/archive/compound/v3/Ext2FileSystem.java][writeHeader][1] = -> TRY {  -> bytes=new ByteArrayOutputStream(BLOCK_SIZE,)@ -> out=new DataOutputStream(bytes,)@ -> rf.seek(0,)@ -> rf.write(bytes.toByteArray(),)@ } CATCH(IOException) {}
results[https://github.com/cmeiklejohn/flume-ng/blob/7a6e3db005dfc7848eeb62b6e66b91dc00a7f726/flume-ng-channels/flume-file-channel/src/test/java/org/apache/flume/channel/file/TestFileChannelRestart.java][doTestCorruptInflights][1] = -> TRY {  -> writer=new RandomAccessFile(inflight,"rw",)@ -> writer.write(new Random().nextInt(),)@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/Mega-Mario/Whitehole/blob/85bbd2ed28c3ffc86b0d779ab0a505a08bd195b6/src/whitehole/fileio/ExternalFile.java][setContents][1] = -> TRY {  -> oldpos=file.getFilePointer()@ -> file.setLength((long) buf.length,)@ -> file.seek(0,)@ -> file.write(buf,)@ -> file.seek(oldpos,)@ } CATCH(IOException) {}
results[https://github.com/ntietz/virtualdisk/blob/061bcb45ac6ccda6e3ab82c1ea5e28f2998d71fb/src/edu/kent/cs/virtualdisk/datanode/Drive.java][write][1] = -> TRY { -> out=new RandomAccessFile(f,"rw",)@ -> out.seek(physicalOffset*blockSize,)@ -> out.write(block,)@ -> out.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ganboing/COMP4321/blob/91ea254ea30f8d625df0e2b8d53448906fdd08b6/jdbm-1.0/src/main/jdbm/recman/RecordFile.java][synch][1] = -> TRY {  -> data=node.getData()@ -> IF { -> file.seek(offset,)@ -> file.write(data,)@data!=null } } CATCH(IOException) {}
results[https://github.com/vizanto/caffeine-hx/blob/09c2b5b2dac7635b3e334bf22c85f807eab2f631/projects/memedb/src/java/memedb/state/FileSystemState.java][writeIndexEntry][1] = -> TRY {  -> baos=new ByteArrayOutputStream()@ -> dos=new DataOutputStream(baos,)@ -> indexFile.seek(seqNo*SIZEOF_INDEX_ENTRY,)@ -> indexFile.write(baos.toByteArray(),)@ } CATCH(IOException) {}
results[https://github.com/monnetproject/bliss/blob/39a79f0a513813aadddc45b8aa753d7c5299e32b/sparsemath/src/main/java/eu/monnetproject/math/sparse/eigen/QROnDisk.java][writeBlock][1] = -> TRY {  -> LOOP { -> bb=ByteBuffer.wrap(buf,)@ -> matrix.seek((long) n*i+i2*8+j*8,)@i2<values.length -> matrix.write(buf,)@ } } CATCH(IOException) {}
results[https://github.com/jeyboy/MUSIC/blob/7438ca96a703eb3db9ae1cd13ab4d7297a255684/lib/audiotagger/org/jaudiotagger/tag/id3/AbstractID3v2Tag.java][delete][3] = -> TRY {  -> fc=file.getChannel()@ -> IF { -> file.seek(0L,)@ -> file.write(buffer,)@ } } CATCH(IOException) {}
results[https://github.com/nathanielsherry/Libraries/blob/23dec8c99c2ef726995b314550a136ff76d1ab44/Scratch/src/scratch/AbstractScratchList.java][addEntry][1] = -> TRY { -> currentLength=raf.length()@ -> encoded=encodeObject(element,)@ -> raf.seek(writePosition,)@ -> raf.write(encoded,)@ } CATCH(IOException) { -> throw new UnsupportedOperationException("Cannot write to backend file",)@ }
results[https://github.com/vega113/WaveInCloud/blob/7a240021b931b240c33dca0b8443152fb82e0487/src/org/waveprotocol/box/server/persistence/file/FileDeltaCollection.java][writeDelta][1] = -> TRY {  -> headerPointer=file.getFilePointer()@ -> file.write( new byte[],)@ -> endPointer=file.getFilePointer()@ -> file.seek(headerPointer,)@ -> file.seek(endPointer,)@ } CATCH(IOException) {}
results[https://github.com/cloudera/hdfs-nfs-proxy/blob/21e487ac2db43e0cc19e523df1ce794e7c5fe59c/src/main/java/com/cloudera/hadoop/hdfs/nfs/nfs4/FileBackedByteArray.java][create][1] = -> TRY {  -> offset=randomAccessFile.length()@ -> randomAccessFile.writeInt(length,)@ -> randomAccessFile.write(buffer,)@ -> return new FileBackedByteArray(file,Bytes.hashBytes(buffer,start,length,),offset,length,)@ } CATCH(IOException) {}
results[https://github.com/binwiederhier/syncany/blob/46a6ae1ba2c3cf3b5cdcb81f445a77eda5455131/tests/org/syncany/tests/util/TestFileUtil.java][changeRandomPartOfBinaryFile][1] = -> TRY {  -> randomEngine.nextBytes(changeBytes,)@!(file.isDirectory()) && !(file!=null&&!(file.exists())) -> randomAccessFile=new RandomAccessFile(file,"rw",)@!(file.isDirectory()) && !(file!=null&&!(file.exists())) -> randomAccessFile.seek(changeBytesStartPos,)@!(file.isDirectory()) && !(file!=null&&!(file.exists())) -> randomAccessFile.write(changeBytes,)@!(file.isDirectory()) && !(file!=null&&!(file.exists())) -> randomAccessFile.close()@!(file.isDirectory()) && !(file!=null&&!(file.exists())) } CATCH(IOException) {}
results[https://github.com/quarnster/yamm/blob/57a09cb721b0206c17cf2d0cd723ed9d42a451ae/org/gjt/fredde/yamm/mail/Index.java][write][1] = -> TRY {  -> raf.seek(0,)@ -> raf.write(fileIdentification,)@ -> write16(raf,messageNum,)@ -> write16(raf,unreadNum,)@ -> write16(raf,newNum,)@ } CATCH(IOException) {}
results[https://github.com/Schmoller/PlayerSpy/blob/d0d201b5481bdadfe0a8a92829b27b9f52fb3a97/src/au/com/mineauz/PlayerSpy/Utilities/Journal.java][write][1] = -> TRY {  -> file.write(idBytes,)@ -> file.writeInt(sectionCount,)@ -> file.writeInt(randomVal,)@ -> file.writeLong(originalFileSize,)@ -> file.writeUTF(masterJournal,)@ } CATCH(IOException) {}
results[https://github.com/Alvw/dreamrec/blob/39afb7ac64fe7e356241c9a96811456ff30b4853/src/com/crostec/ads/edf/BdfWriter.java][stopRecording][1] = -> TRY { -> outStream.seek(0,)@ -> outStream.write(createEdfHeader(),)@ -> outStream.close()@ } CATCH(IOException) { -> log.error(e,)@ }
