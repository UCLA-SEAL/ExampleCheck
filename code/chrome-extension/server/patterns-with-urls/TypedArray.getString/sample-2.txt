results[https://github.com/TeamHellfire/android_packages_apps_Trebuchet/blob/fc8ea2ddf7badf18f1415865927c62a8e5be37e5/src/com/cyanogenmod/trebuchet/LauncherProvider.java][addLauncherAction][2] = -> actionText=a.getString(R.styleable.Favorite_action,)@ -> action=LauncherAction.Action.valueOf(actionText,)@ -> values.put(LauncherSettings.Favorites.LAUNCHER_ACTION,actionText,)@ -> IF { -> return -1@dbInsertAndCheck(db,TABLE_FAVORITES,null,values,)<0 }
results[https://github.com/citppuc/recolectapp-holo-everywhere/blob/4981bbc75ef641522a83aa1ef2ced3f02421744e/addons/preferences/src/org/holoeverywhere/preference/TimePreference.java][onGetDefaultValue][3] = -> value=a.getString(index,)@ -> IF { -> value=String.valueOf(getDefaultTime(),)@value==null||value.length()==0 }
results[https://github.com/GrioSF/HoloEverywhere/blob/0e4a40dae70850e37eaacad8e10df8adc4cb438a/addons/preferences/src/org/holoeverywhere/preference/DatePreference.java][onGetDefaultValue][3] = -> value=a.getString(index,)@ -> IF { -> value=String.valueOf(getDefaultDate(),)@value==null||value.length()==0 }
results[https://github.com/citppuc/recolectapp-holo-everywhere/blob/1ceb18b54ee5ba20c4eabfbf1aa9f98ec5865b09/addons/extpreferences/src/org/holoeverywhere/preference/TimePreference.java][onGetDefaultValue][6] = -> value=a.getString(index,)@ -> IF { -> value=String.valueOf(getCurrentTime(),)@value==null||value.length()==0 }
results[https://github.com/scruffyfox/X-Library/blob/ce9e45959d2aa111dfc204f93df4b5041cdb9f1e/src/x/ui/XUIButtonList.java][<init>][1] = -> a=context.obtainStyledAttributes(attrs,R.styleable.XUIButtonList,)@ -> onClickStr=a.getString(R.styleable.XUIButtonList_onButtonClick,)@ -> IF { -> Debug.out(onClickStr,)@onClickStr!=null&&onClickStr.length()>0 }
results[https://github.com/gnuton/Playground/blob/c2cad08b75b12c73bb34132ac1316db4c31f48c5/Android/Droidxperiment/src/org/gnuton/droidxperiment/gif/GifMovieView.java][init][1] = -> a=getContext().obtainStyledAttributes(attrs,R.styleable.GifMovieView,defStyle,0,)@ -> gifFile=a.getString(R.styleable.GifMovieView_GifFile,)@ -> IF { -> setGif(gifFile,)@gifFile!=null }
results[https://github.com/isenseDev/iSENSE-Hardware/blob/0ad35369d34741ce2682cc36787cc399776ddab4/Android/PinComm/src/edu/uml/cs/pincomm/DatapointRow.java][<init>][2] = -> array=context.obtainStyledAttributes(attrs,R.styleable.datarow,0,0,)@ -> labelText=array.getString(R.styleable.datarow_toplabel,)@ -> IF { -> topLabel.setText(labelText,)@labelText!=null } -> array.recycle()@
results[https://github.com/abarisain/dmix/blob/713453444d1d96738de29424ef416d6719ddc9bb/MPDroid/src/com/namelessdev/mpdroid/views/FixedRatioRelativeLayout.java][readAttrs][2] = -> a=context.obtainStyledAttributes(attrs,R.styleable.FixedRatioRelativeLayout,)@ -> s=a.getString(R.styleable.FixedRatioRelativeLayout_fixedSide,)@ -> IF { -> fixString=s.toString()@s!=null } -> a.recycle()@
results[https://github.com/Biljet/Biljet-Android/blob/91cc851bd8f81aa8982a12d558837fd2ce045906/ActionBar/src/com/markupartist/android/widget/ActionBar.java][<init>][4] = -> a=context.obtainStyledAttributes(attrs,R.styleable.ActionBar,)@ -> title=a.getString(R.styleable.ActionBar_title,)@ -> IF { -> setTitle(title,)@title!=null } -> a.recycle()@
results[https://github.com/Brueggus/linafm/blob/cd0a0fe484e92305d215863be0407096bd73b0a9/src/com/ctc/android/widget/ImageMap.java][loadAttributes][1] = -> a=getContext().obtainStyledAttributes(attrs,R.styleable.ImageMap,)@ -> map=a.getString(R.styleable.ImageMap_map,)@ -> IF { -> loadMap(map,)@map!=null }
results[https://github.com/MoKee/android_packages_apps_Apollo/blob/1886a002bca6784f57db5fe918425065ac6894e4/src/com/andrew/apollo/widgets/theme/ThemeableTextView.java][<init>][2] = -> typedArray=context.obtainStyledAttributes(attrs,R.styleable.ThemeableTextView,0,0,)@ -> resourceName=typedArray.getString(R.styleable.ThemeableTextView_themeResource,)@ -> IF { -> setTextColor(resources.getColor(resourceName,),)@!(TextUtils.isEmpty(resourceName,)) } -> typedArray.recycle()@
results[https://github.com/slidese/SGU/blob/816dfe3e40d821261563046b954560fefbc87ffc/src/se/slide/sgu/TypefacedButton.java][<init>][2] = -> styledAttrs=context.obtainStyledAttributes(attrs,R.styleable.TypefacedTextView,)@ -> fontName=styledAttrs.getString(R.styleable.TypefacedTextView_typeface,)@ -> styledAttrs.recycle()@ -> IF { -> typeface=Typeface.createFromAsset(context.getAssets(),fontName,)@fontName!=null }
results[https://github.com/geeksville/Gaggle/blob/23b2475d6bc070fbc418c2c8a190356f1b725dc4/src/com/geeksville/info/InfoDock.java][<init>][1] = -> arr=context.obtainStyledAttributes(attrs,R.styleable.InfoDock,)@ -> fieldName=arr.getString(R.styleable.InfoDock_info_field,)@ -> layoutId=arr.getResourceId(R.styleable.InfoDock_layout_id,R.layout.info_dock_wide,)@ -> arr.recycle()@ -> IF { -> setInfoField(fieldName,)@fieldName!=null }
results[https://github.com/citppuc/recolectapp-holo-everywhere/blob/c4b9ff54abf76feee2a6591dd04369649482934d/demo/src/com/WazaBe/HoloDemo/widget/OtherButton.java][init][3] = -> a=getContext().obtainStyledAttributes(attrs,R.styleable.OtherButton,)@ -> textR=a.getString(R.styleable.OtherButton_android_text,)@ -> iconR=a.getDrawable(R.styleable.OtherButton_android_icon,)@ -> a.recycle()@ -> IF { -> text.setText(textR,)@textR!=null }
results[https://github.com/citppuc/recolectapp-holo-everywhere/blob/ada7ed860910feb4d6661c2e8c707dad45e9fa9d/demo/src/com/WazaBe/HoloDemo/widget/WidgetContainer.java][<init>][6] = -> a=context.obtainStyledAttributes(attrs,R.styleable.WidgetContainer,)@ -> layout=a.getResourceId(R.styleable.WidgetContainer_android_layout,-1,)@ -> titleLayout=a.getResourceId(R.styleable.WidgetContainer_titleLayout,R.layout.widget_container_title,)@ -> title=a.getString(R.styleable.WidgetContainer_android_text,)@ -> a.recycle()@ -> IF { -> setTitle(title,)@title!=null&&title.length()>0 }
results[https://github.com/av930/development/blob/06ecb5d833eb3921e52ddc29f9de673f63579168/samples/XmlAdapters/src/com/example/android/xmladapters/Adapters.java][parseSelectTag][5] = -> a=mResources.obtainAttributes(mAttrs,R.styleable.CursorAdapter_SelectItem,)@ -> fromName=a.getString(R.styleable.CursorAdapter_SelectItem_column,)@ -> IF { -> throw new IllegalArgumentException("A select item in "+mResources.getResourceEntryName(mId,)+" does not have a 'column' attribute",)@fromName==null } -> a.recycle()@!(fromName==null) -> mFrom.add(fromName,)@!(fromName==null)
results[https://github.com/beerbong/com_beerbong_zipinst/blob/128f318b3c2321c5a08767ba3f0e94218625b806/src/com/beerbong/zipinst/ui/widget/ButtonItem.java][<init>][1] = -> a=context.obtainStyledAttributes(attrs,R.styleable.ButtonItem,)@ -> s=a.getString(R.styleable.ButtonItem_title,)@ -> IF { -> title=s.toString()@s!=null } -> d=a.getDrawable(R.styleable.ButtonItem_icon,)@ -> mDownColor=a.getColor(R.styleable.ButtonItem_downColor,android.R.color.holo_blue_light,)@ -> a.recycle()@
results[https://github.com/CruGlobal/MissionHub-Android/blob/15af3a543149458d73355c42deac286824c23d21/src/com/missionhub/ui/widget/FragmentLoadingView.java][inflateView][1] = -> IF { -> a=context.obtainStyledAttributes(attrs,R.styleable.widget_loading_fragment,)@attrs!=null -> loadingText=a.getString(R.styleable.widget_loading_fragment_loading_text,)@ -> layout=a.getResourceId(R.styleable.widget_loading_fragment_layout,R.layout.widget_fragment_loading,)@ } -> IF { -> mLoadingText.setText(loadingText,)@!(U.isNullEmpty(loadingText,))&&mLoadingText!=null }
results[https://github.com/KaosDroid/android_packages_apps_KaosDroidOTA/blob/202dd32bdcd9a48bd7bb1639a951feb427b323cd/src/com/paranoid/paranoidota/widget/Item.java][<init>][1] = -> a=context.obtainStyledAttributes(attrs,R.styleable.Item,)@ -> s=a.getString(R.styleable.Item_itemTitle,)@ -> IF { -> title=s.toString()@s!=null } -> d=a.getDrawable(R.styleable.Item_itemIcon,)@ -> mDownColor=a.getColor(R.styleable.Item_itemDownColor,android.R.color.holo_blue_dark,)@ -> mDownTextColor=a.getColor(R.styleable.Item_itemDownTextColor,android.R.color.white,)@ -> a.recycle()@
results[https://github.com/pocorall/scaloid-apidemos/blob/03fb4ade21eb4add523bf1c53e1f38528bc10f61/src/com/example/android/apis/view/LabelView.java][<init>][32] = -> a=context.obtainStyledAttributes(attrs,R.styleable.LabelView,)@ -> s=a.getString(R.styleable.LabelView_text,)@ -> IF { -> setText(s.toString(),)@s!=null } -> setTextColor(a.getColor(R.styleable.LabelView_textColor,0xFF000000,),)@ -> textSize=a.getDimensionPixelOffset(R.styleable.LabelView_textSize,0,)@ -> a.recycle()@
results[https://github.com/guardianproject/JustPayPhone/blob/385b6d4876ef5e63eaf7968634d76e6d9db3500a/app/src/info/guardianproject/justpayphone/app/views/CustomFontTextView.java][init][3] = -> IF { -> a=getContext().obtainStyledAttributes(attrs, new int[],)@attrs!=null -> fontName=a.getString(0,)@ -> IF { -> font=FontManager.getFontByName(getContext(),fontName,)@fontName!=null&&!(isInEditMode()) } -> a.recycle()@ }
results[https://github.com/tom-and-jerry/eyeCam/blob/603854afacd2be494507240c89176bb3cfa6a481/src/ch/hsr/eyecam/preferences/PreferencesRadioButton.java][<init>][1] = -> typedArray=context.obtainStyledAttributes(attrs,R.styleable.Preferences,)@ -> mDescription=typedArray.getString(R.styleable.Preferences_description,)@ -> text=new SpannableString(title+"\n"+mDescription,)@ -> IF { -> text.setSpan(new RelativeSizeSpan(0.7f,),length,length+mDescription.length()+1,0,)@mDescription!=null } -> typedArray=context.obtainStyledAttributes(attrs,R.styleable.PreferencesRadioButton,)@ -> mValue=typedArray.getInt(R.styleable.PreferencesRadioButton_intValue,0,)@
results[https://github.com/kfazz/android_packages_inputmethods_LatinIME/blob/57007ed582fbe89b2f2ac24e06a15a4fb5a948df/java/src/com/android/inputmethod/keyboard/internal/KeyStyles.java][getKeyStyle][14] = -> TRY {  -> IF { -> return mEmptyKeyStyle@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) } -> styleName=keyAttr.getString(R.styleable.Keyboard_Key_keyStyle,)@!(!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,))) -> IF { -> throw new XmlParseUtils.ParseException("Unknown key style: "+styleName,parser,)@!(!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,))) && !(mStyles.containsKey(styleName,)) } -> return mStyles.get(styleName,)@!(!(mStyles.containsKey(styleName,))) && !(!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,))) } CATCH(XmlParseUtils.ParseException) {}
results[https://github.com/dodyg/AndroidRivers/blob/c1239b839ee537e345259fb73aeca4c9825ff0ab/HoloEverywhere-master/addons/preferences/src/org/holoeverywhere/preference/DialogPreference.java][<init>][27] = -> a=context.obtainStyledAttributes(attrs,R.styleable.DialogPreference,defStyle,R.style.Holo_PreferenceDialog,)@ -> mDialogTitle=a.getString(R.styleable.DialogPreference_dialogTitle,)@ -> IF { -> mDialogTitle=getTitle()@mDialogTitle==null } -> mDialogMessage=a.getString(R.styleable.DialogPreference_dialogMessage,)@ -> mDialogIcon=a.getDrawable(R.styleable.DialogPreference_dialogIcon,)@ -> mPositiveButtonText=a.getString(R.styleable.DialogPreference_positiveButtonText,)@ -> mNegativeButtonText=a.getString(R.styleable.DialogPreference_negativeButtonText,)@ -> mDialogLayoutResId=a.getResourceId(R.styleable.DialogPreference_dialogLayout,mDialogLayoutResId,)@ -> a.recycle()@
results[https://github.com/ModADroid/android_packages_apps_Launcher2/blob/55c337bda1d866a036a4c2b05f6c40efb26eabbc/src/com/android/launcher2/LauncherProvider.java][addUriShortcut][27] = -> iconResId=a.getResourceId(R.styleable.Favorite_icon,0,)@ -> titleResId=a.getResourceId(R.styleable.Favorite_title,0,)@ -> TRY { -> uri=a.getString(R.styleable.Favorite_uri,)@ -> intent=Intent.parseUri(uri,0,)@ } CATCH(URISyntaxException) { -> Log.w(TAG,"Shortcut has malformed uri: "+uri,)@ } -> IF { -> return false@iconResId==0||titleResId==0 }
results[https://github.com/TeamHorizon/packages_apps_ROMSettings/blob/2e19c8250df2eb1efb9e6302e4449fdf097d7a07/src/com/aokp/romcontrol/settings/UrlSetting.java][<init>][2] = -> IF { -> TRY { -> typedArray=context.obtainStyledAttributes(attrs,R.styleable.UrlSetting,)@attrs!=null -> mUrl=typedArray.getString(R.styleable.UrlSetting_url,)@ } FINALLY { -> IF { -> typedArray.recycle()@typedArray!=null } } }
results[https://github.com/dschuermann/document-viewer/blob/4d9ae342faf05c6302416cb1b4b1f9dfb44383d6/document-viewer/src/main/java/org/emdev/ui/widget/TextViewMultilineEllipse.java][<init>][5] = -> a=context.obtainStyledAttributes(attrs,R.styleable.org_emdev_ui_widget_TextViewMultilineEllipse,)@ -> s=a.getString(R.styleable.org_emdev_ui_widget_TextViewMultilineEllipse_text,)@ -> IF { -> setText(s.toString(),)@s!=null } -> setTextColor(a.getColorStateList(R.styleable.org_emdev_ui_widget_TextViewMultilineEllipse_textColor,),)@ -> textSize=a.getDimensionPixelOffset(R.styleable.org_emdev_ui_widget_TextViewMultilineEllipse_textSize,0,)@ -> mMaxLines=a.getInt(R.styleable.org_emdev_ui_widget_TextViewMultilineEllipse_maxLines,-1,)@ -> a.recycle()@
results[https://github.com/mntnorv/wrdl-holo/blob/a3044cbb597666e76944ea051cf162ec7b87cf5f/src/com/mntnorv/wrdl_holo/views/TileView.java][<init>][1] = -> a=context.obtainStyledAttributes(attrs,R.styleable.TileView,)@ -> s=a.getString(R.styleable.TileView_android_text,)@ -> IF { -> setText(s.toString(),)@s!=null } -> setTextColor(a.getColor(R.styleable.TileView_android_textColor,0xFF000000,),)@ -> tileSize=a.getDimensionPixelSize(R.styleable.TileView_tileSize,0,)@ -> textSize=a.getDimensionPixelSize(R.styleable.TileView_android_textSize,0,)@ -> a.recycle()@
results[https://github.com/eliotstocker/fLockscreen/blob/5c3eb5301a832474507a33c2bc10c5db9a720b2e/src/com/piratemedia/lockscreen/RotateView.java][<init>][1] = -> a=context.obtainStyledAttributes(attrs,R.styleable.RotateView,)@ -> s=a.getString(R.styleable.RotateView_text,)@ -> IF { -> setText(s.toString(),)@s!=null } -> setTextColor(a.getColor(R.styleable.RotateView_textColor,0xFF000000,),)@ -> textSize=a.getDimensionPixelOffset(R.styleable.RotateView_textSize,0,)@ -> rotateVal=a.getInt(R.styleable.RotateView_rotate,90,)@ -> a.recycle()@
results[https://github.com/steffanc/Tahoe/blob/57cdae29761d980b0ae3fb628e107ecd09a0430e/src/com/lake/tahoe/views/CustomTextView.java][applyAttributes][1] = -> N=a.getIndexCount()@ -> LOOP { -> attr=a.getIndex(i,)@i<N -> TRY { -> font=Typefaces.get(context,a.getString(attr,),)@ -> IF { -> v.setTypeface(font,)@font!=null } } }
results[https://github.com/ll-KS-ll/Schedule/blob/c428ea513139e5ccf784eaf1c84480ff121ba6d1/Schema/src/com/schema/bro/nova/NovaOnItemSelectedListener.java][onItemSelected][1] = -> classIDs=adapter.getResources().obtainTypedArray(R.array.class_ids,)@ -> IF { -> classURL=classIDs.getString(pos,)@classIDs.length()>pos } -> classIDs.recycle()@ -> IF { -> fragment.changeClass(classURL,pos,)@fragment.isResumed() } ELSE { -> fragment.notifyDownload(classURL,pos,)@!(fragment.isResumed()) }
results[https://github.com/ScootrNova/ClassyGames/blob/f347428d904fa804b21b44716d7e1338e398ca59/projects/android/facebook/src/com/facebook/widget/PickerFragment.java][onInflate][48] = -> a=activity.obtainStyledAttributes(attrs,R.styleable.com_facebook_picker_fragment,)@ -> setShowPictures(a.getBoolean(R.styleable.com_facebook_picker_fragment_show_pictures,showPictures,),)@ -> extraFieldsString=a.getString(R.styleable.com_facebook_picker_fragment_extra_fields,)@ -> IF { -> strings=extraFieldsString.split(",",)@extraFieldsString!=null } -> showTitleBar=a.getBoolean(R.styleable.com_facebook_picker_fragment_show_title_bar,showTitleBar,)@ -> titleText=a.getString(R.styleable.com_facebook_picker_fragment_title_text,)@ -> doneButtonText=a.getString(R.styleable.com_facebook_picker_fragment_done_button_text,)@ -> titleBarBackground=a.getDrawable(R.styleable.com_facebook_picker_fragment_title_bar_background,)@ -> doneButtonBackground=a.getDrawable(R.styleable.com_facebook_picker_fragment_done_button_background,)@ -> a.recycle()@
results[https://github.com/Guillermoo/unutopia-android/blob/2f57f6b909aaece0123f61bc0b80ad763e300a31/erralberto/library/src/com/actionbarsherlock/internal/widget/IcsSpinner.java][<init>][154] = -> a=context.obtainStyledAttributes(attrs,R.styleable.SherlockSpinner,defStyle,0,)@ -> mDropDownWidth=a.getLayoutDimension(R.styleable.SherlockSpinner_android_dropDownWidth,ViewGroup.LayoutParams.WRAP_CONTENT,)@ -> popup.setBackgroundDrawable(a.getDrawable(R.styleable.SherlockSpinner_android_popupBackground,),)@ -> verticalOffset=a.getDimensionPixelOffset(R.styleable.SherlockSpinner_android_dropDownVerticalOffset,0,)@ -> horizontalOffset=a.getDimensionPixelOffset(R.styleable.SherlockSpinner_android_dropDownHorizontalOffset,0,)@ -> mGravity=a.getInt(R.styleable.SherlockSpinner_android_gravity,Gravity.CENTER,)@ -> mPopup.setPromptText(a.getString(R.styleable.SherlockSpinner_android_prompt,),)@ -> a.recycle()@ -> IF { -> mPopup.setAdapter(mTempAdapter,)@mTempAdapter!=null }
results[https://github.com/Blechd0se/android_packages_apps_AeroControl/blob/e0867e77dd90d5f419438fce1424d1d33baffe16/AeroControl/library/showcase/java/com/github/amlcurran/showcaseview/ShowcaseView.java][updateStyle][1] = -> backgroundColor=styled.getColor(R.styleable.ShowcaseView_sv_backgroundColor,Color.argb(128,80,80,80,),)@ -> showcaseColor=styled.getColor(R.styleable.ShowcaseView_sv_showcaseColor,HOLO_BLUE,)@ -> buttonText=styled.getString(R.styleable.ShowcaseView_sv_buttonText,)@ -> IF { -> buttonText=getResources().getString(android.R.string.ok,)@TextUtils.isEmpty(buttonText,) } -> tintButton=styled.getBoolean(R.styleable.ShowcaseView_sv_tintButtonColor,true,)@ -> titleTextAppearance=styled.getResourceId(R.styleable.ShowcaseView_sv_titleTextAppearance,R.style.TextAppearance_ShowcaseView_Title,)@ -> detailTextAppearance=styled.getResourceId(R.styleable.ShowcaseView_sv_detailTextAppearance,R.style.TextAppearance_ShowcaseView_Detail,)@ -> styled.recycle()@ -> mEndButton.setText(buttonText,)@
results[https://github.com/yftx/fruit.launcher/blob/44e8e1ead8952cefea032e2bb24a54da2f223a17/src/com/fruit/launcher/LauncherProvider.java][addUriShortcut][1] = -> iconResId=a.getResourceId(attrMap.get(Configurator.ICON,),0,)@ -> titleResId=a.getResourceId(attrMap.get(Configurator.TITLE,),0,)@ -> TRY { -> uri=a.getString(R.styleable.Favorite_uri,)@ -> intent=Intent.parseUri(uri,0,)@ } CATCH(URISyntaxException) { -> Log.w(TAG,"Shortcut has malformed uri: "+uri,)@ } -> IF { -> return false@iconResId==0||titleResId==0 }
results[https://github.com/mntnorv/wrdl-holo/blob/788152b5753e9bf29734dab9a8624ed64bb4e626/src/com/mntnorv/wrdl_holo/TileView.java][<init>][1] = -> a=context.obtainStyledAttributes(attrs,R.styleable.TileView,)@ -> s=a.getString(R.styleable.TileView_android_text,)@ -> IF { -> setText(s.toString(),)@s!=null } -> setTextColor(a.getColor(R.styleable.TileView_android_textColor,0xFF000000,),)@ -> setColor(a.getColor(R.styleable.TileView_android_background,0x00000000,),)@ -> tileSize=a.getDimensionPixelSize(R.styleable.TileView_size,0,)@ -> textSize=a.getDimensionPixelSize(R.styleable.TileView_android_textSize,0,)@ -> a.recycle()@
results[https://github.com/Blechd0se/android_packages_apps_AeroControl/blob/67938cfd6ee6d978a2469825ed6a0bea91a70323/AeroControl/library/WilliamChart/src/com/db/chart/view/ChartView.java][<init>][1] = -> axisColor=attrs.getColor(R.styleable.ChartAttrs_chart_axisColor,DEFAULT_COLOR,)@ -> axisThickness=attrs.getDimension(R.styleable.ChartAttrs_chart_axisThickness,getResources().getDimension(R.dimen.axis_thickness,),)@ -> labelColor=attrs.getColor(R.styleable.ChartAttrs_chart_labelColor,DEFAULT_COLOR,)@ -> fontSize=attrs.getDimension(R.styleable.ChartAttrs_chart_fontSize,getResources().getDimension(R.dimen.font_size,),)@ -> typefaceName=attrs.getString(R.styleable.ChartAttrs_chart_typeface,)@ -> IF { -> typeface=Typeface.createFromAsset(getResources().getAssets(),typefaceName,)@typefaceName!=null }
results[https://github.com/faux123/android_frameworks_base/blob/2f5966eee0107041ef7984d93ca43b2f0aaa7057/core/java/android/accounts/AccountAuthenticatorCache.java][parseServiceAttributes][2] = -> sa=res.obtainAttributes(attrs,com.android.internal.R.styleable.AccountAuthenticator,)@ -> TRY { -> accountType=sa.getString(com.android.internal.R.styleable.AccountAuthenticator_accountType,)@ -> labelId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_label,0,)@ -> iconId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_icon,0,)@ -> smallIconId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_smallIcon,0,)@ -> prefId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_accountPreferences,0,)@ -> IF { -> return null@TextUtils.isEmpty(accountType,) } -> return new AuthenticatorDescription(accountType,packageName,labelId,iconId,smallIconId,prefId,customTokens,)@!(TextUtils.isEmpty(accountType,)) } FINALLY { -> sa.recycle()@!(TextUtils.isEmpty(accountType,)) }
results[https://github.com/guardianproject/securereader/blob/e9c643b2dcab18a36ecb8ede1db14de98d9b5475/app/src/info/guardianproject/yakreader/widgets/CustomFontTextViewHelper.java][<init>][3] = -> IF { -> a=mView.getContext().obtainStyledAttributes(attrs,R.styleable.CustomFontTextView,)@attrs!=null -> fontName=a.getString(R.styleable.CustomFontTextView_font,)@ -> IF { -> mFont=FontManager.getFontByName(mView.getContext(),fontName,)@fontName!=null&&!(mView.isInEditMode()) } -> a.recycle()@ -> a=mView.getContext().obtainStyledAttributes(attrs, new int[],)@attrs!=null -> mUseAllCaps=a.getBoolean(0,false,)@ -> a.recycle()@ }
results[https://github.com/PolishBloodProject/android_packages_apps_Settings/blob/f9bac00620691f281df42d390517da2e37df8749/src/com/android/settings/DreamBackend.java][getSettingsComponentName][32] = -> TRY { -> IF { -> return null@parser==null } -> IF { -> return null@!("dream".equals(nodeName,)) && !(parser==null) } -> sa=res.obtainAttributes(attrs,com.android.internal.R.styleable.Dream,)@!(!("dream".equals(nodeName,))) && !(parser==null) -> cn=sa.getString(com.android.internal.R.styleable.Dream_settingsActivity,)@!(!("dream".equals(nodeName,))) && !(parser==null) -> sa.recycle()@!(!("dream".equals(nodeName,))) && !(parser==null) } FINALLY { -> IF { -> parser.close()@parser!=null } } -> return (cn==null)?null:ComponentName.unflattenFromString(cn,)@
results[https://github.com/g3tsum/packages_apps_Camera/blob/2042ba7d7131970fe19781832a573074b1e4c338/src/com/android/camera/ListPreference.java][<init>][42] = -> a=context.obtainStyledAttributes(attrs,R.styleable.ListPreference,0,0,)@ -> mKey=Util.checkNotNull(a.getString(R.styleable.ListPreference_key,),)@ -> tv=a.peekValue(attrDefaultValue,)@ -> IF { -> mDefaultValues=a.getTextArray(attrDefaultValue,)@ } ELSE { -> mDefaultValues[0]=a.getString(attrDefaultValue,)@ } -> setEntries(a.getTextArray(R.styleable.ListPreference_entries,),)@ -> setEntryValues(a.getTextArray(R.styleable.ListPreference_entryValues,),)@ -> a.recycle()@
results[https://github.com/NEXUS-EVO/frameworks_base/blob/6849ad8fbb03c21d6aa61e1bd53fe7b449cd6adb/core/java/android/accounts/AccountAuthenticatorCache.java][parseServiceAttributes][8] = -> sa=res.obtainAttributes(attrs,com.android.internal.R.styleable.AccountAuthenticator,)@ -> TRY { -> accountType=sa.getString(com.android.internal.R.styleable.AccountAuthenticator_accountType,)@ -> labelId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_label,0,)@ -> iconId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_icon,0,)@ -> smallIconId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_smallIcon,0,)@ -> prefId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_accountPreferences,0,)@ -> customTokens=sa.getBoolean(com.android.internal.R.styleable.AccountAuthenticator_customTokens,false,)@ -> IF { -> return null@TextUtils.isEmpty(accountType,) } -> return new AuthenticatorDescription(accountType,packageName,labelId,iconId,smallIconId,prefId,customTokens,)@!(TextUtils.isEmpty(accountType,)) } FINALLY { -> sa.recycle()@!(TextUtils.isEmpty(accountType,)) }
results[https://github.com/TheCollective/android_frameworks_base/blob/956998484ffaedb5ca797585b4a21d5b51778e04/core/java/android/text/style/TextAppearanceSpan.java][<init>][9] = -> a=context.obtainStyledAttributes(appearance,com.android.internal.R.styleable.TextAppearance,)@ -> textColor=a.getColorStateList(com.android.internal.R.styleable.TextAppearance_textColor,)@ -> mTextColorLink=a.getColorStateList(com.android.internal.R.styleable.TextAppearance_textColorLink,)@ -> mTextSize=a.getDimensionPixelSize(com.android.internal.R.styleable.TextAppearance_textSize,-1,)@ -> mStyle=a.getInt(com.android.internal.R.styleable.TextAppearance_textStyle,0,)@ -> family=a.getString(com.android.internal.R.styleable.TextAppearance_fontFamily,)@ } ELSE { -> tf=a.getInt(com.android.internal.R.styleable.TextAppearance_typeface,0,)@ -> a.recycle()@ -> IF { -> a=context.obtainStyledAttributes(com.android.internal.R.style.Theme,com.android.internal.R.styleable.Theme,)@ -> textColor=a.getColorStateList(colorList,)@colorList>=0 -> a.recycle()@ }
results[https://github.com/liwenhaosuper/SysOfIMPS/blob/a144a76ae44869b9127ea6beb0a66b10da09f8c8/IMPSDev/src/com/imps/ui/widget/TitleFlowIndicator.java][<init>][5] = -> a=context.obtainStyledAttributes(attrs,R.styleable.TitleFlowIndicator,)@ -> customTypeface=a.getString(R.styleable.TitleFlowIndicator_customTypeface,)@ -> footerColor=a.getColor(R.styleable.TitleFlowIndicator_footerColor,FOOTER_COLOR,)@ -> footerLineHeight=a.getDimension(R.styleable.TitleFlowIndicator_footerLineHeight,FOOTER_LINE_HEIGHT,)@ -> footerTriangleHeight=a.getDimension(R.styleable.TitleFlowIndicator_footerTriangleHeight,FOOTER_TRIANGLE_HEIGHT,)@ -> selectedColor=a.getColor(R.styleable.TitleFlowIndicator_selectedColor,SELECTED_COLOR,)@ -> selectedBold=a.getBoolean(R.styleable.TitleFlowIndicator_selectedColor,SELECTED_BOLD,)@ -> textColor=a.getColor(R.styleable.TitleFlowIndicator_textColor,TEXT_COLOR,)@ -> textSize=a.getDimension(R.styleable.TitleFlowIndicator_textSize,TEXT_SIZE,)@ -> selectedSize=a.getDimension(R.styleable.TitleFlowIndicator_selectedSize,textSize,)@ -> titlePadding=a.getDimension(R.styleable.TitleFlowIndicator_titlePadding,TITLE_PADDING,)@ -> clipPadding=a.getDimension(R.styleable.TitleFlowIndicator_clipPadding,CLIP_PADDING,)@ -> IF { -> typeface=Typeface.createFromAsset(context.getAssets(),customTypeface,)@customTypeface!=null }
results[https://github.com/AndrewChanChina/ppc1/blob/5879c4cc039cd6e743993739a046545efe42a13f/src/com/smit/EasyLauncher/LauncherProvider.java][addOwnWidget][1] = -> viewid=a.getString(R.styleable.Favorite_viewid,)@ -> IF { -> return false@viewid==null } ELSE { -> TRY { -> values.put(Favorites.VIEWID,viewid,)@!(viewid==null) -> screen=a.getInt(R.styleable.Favorite_screen,0,)@!(viewid==null) -> spanX=a.getInt(R.styleable.Favorite_spanX,0,)@!(viewid==null) -> spanY=a.getInt(R.styleable.Favorite_spanY,0,)@!(viewid==null) -> cellx=a.getInt(R.styleable.Favorite_x,0,)@!(viewid==null) -> celly=a.getInt(R.styleable.Favorite_y,0,)@!(viewid==null) } CATCH(RuntimeException) { -> Log.e(TAG,"Problem allocating appWidgetId",ex,)@!(viewid==null) } }
results[https://github.com/TheCollective/android_frameworks_base/blob/a57c4705d1ef5dc0a27d8cfde6df7b21f993bddd/core/java/android/widget/TextView.java][setTextAppearance][1] = -> appearance=context.obtainStyledAttributes(resid,com.android.internal.R.styleable.TextAppearance,)@ -> color=appearance.getColor(com.android.internal.R.styleable.TextAppearance_textColorHighlight,0,)@ -> colors=appearance.getColorStateList(com.android.internal.R.styleable.TextAppearance_textColor,)@ -> ts=appearance.getDimensionPixelSize(com.android.internal.R.styleable.TextAppearance_textSize,0,)@ -> colors=appearance.getColorStateList(com.android.internal.R.styleable.TextAppearance_textColorHint,)@ -> colors=appearance.getColorStateList(com.android.internal.R.styleable.TextAppearance_textColorLink,)@ -> familyName=appearance.getString(com.android.internal.R.styleable.TextAppearance_fontFamily,)@ -> typefaceIndex=appearance.getInt(com.android.internal.R.styleable.TextAppearance_typeface,-1,)@ -> styleIndex=appearance.getInt(com.android.internal.R.styleable.TextAppearance_textStyle,-1,)@ -> setTypefaceFromAttrs(familyName,typefaceIndex,styleIndex,)@ -> shadowcolor=appearance.getInt(com.android.internal.R.styleable.TextAppearance_shadowColor,0,)@ -> IF { -> dx=appearance.getFloat(com.android.internal.R.styleable.TextAppearance_shadowDx,0,)@ -> dy=appearance.getFloat(com.android.internal.R.styleable.TextAppearance_shadowDy,0,)@ -> r=appearance.getFloat(com.android.internal.R.styleable.TextAppearance_shadowRadius,0,)@ } -> appearance.recycle()@
results[https://github.com/InsomniaROM/packages_apps_Gallery2/blob/7bb8532b0ab79717e391cab156c2ca150dbbfa38/src/com/android/camera/ListPreference.java][<init>][7] = -> a=context.obtainStyledAttributes(attrs,R.styleable.ListPreference,0,0,)@ -> mKey=Util.checkNotNull(a.getString(R.styleable.ListPreference_key,),)@ -> tv=a.peekValue(attrDefaultValue,)@ -> IF { -> mDefaultValues=a.getTextArray(attrDefaultValue,)@ } ELSE { -> mDefaultValues[0]=a.getString(attrDefaultValue,)@ } -> setEntries(a.getTextArray(R.styleable.ListPreference_entries,),)@ -> setEntryValues(a.getTextArray(R.styleable.ListPreference_entryValues,),)@ -> setLabels(a.getTextArray(R.styleable.ListPreference_labelList,),)@ -> a.recycle()@
results[https://github.com/codefireXperiment/frameworks_support/blob/40d4abfad529ff5d6a38f60857bf70366403b0ae/v7/appcompat/src/android/support/v7/internal/widget/SpinnerICS.java][<init>][14] = -> a=context.obtainStyledAttributes(attrs,R.styleable.Spinner,defStyle,0,)@ -> IF { -> mode=a.getInt(R.styleable.Spinner_spinnerMode,MODE_DIALOG,)@mode==MODE_THEME } -> mPopup=new DialogPopup()@ -> mDropDownWidth=a.getLayoutDimension(R.styleable.Spinner_android_dropDownWidth,ViewGroup.LayoutParams.WRAP_CONTENT,)@ -> popup.setBackgroundDrawable(a.getDrawable(R.styleable.Spinner_android_popupBackground,),)@ -> verticalOffset=a.getDimensionPixelOffset(R.styleable.Spinner_android_dropDownVerticalOffset,0,)@ -> horizontalOffset=a.getDimensionPixelOffset(R.styleable.Spinner_android_dropDownHorizontalOffset,0,)@ -> mGravity=a.getInt(R.styleable.Spinner_android_gravity,Gravity.CENTER,)@ -> mPopup.setPromptText(a.getString(R.styleable.Spinner_prompt,),)@ -> a.recycle()@ -> IF { -> mPopup.setAdapter(mTempAdapter,)@mTempAdapter!=null }
results[https://github.com/citppuc/recolectapp-holo-everywhere/blob/4981bbc75ef641522a83aa1ef2ced3f02421744e/library/src/org/holoeverywhere/widget/Spinner.java][<init>][17] = -> a=context.obtainStyledAttributes(attrs,R.styleable.Spinner,defStyle,R.style.Holo_Spinner,)@ -> IF { -> mode=a.getInt(R.styleable.Spinner_spinnerMode,Spinner.MODE_DIALOG,)@mode==Spinner.MODE_THEME } -> mPopup=new DialogPopup()@ -> mDropDownWidth=a.getLayoutDimension(R.styleable.Spinner_android_dropDownWidth,ViewGroup.LayoutParams.WRAP_CONTENT,)@ -> popup.setBackgroundDrawable(a.getDrawable(R.styleable.Spinner_android_popupBackground,),)@ -> verticalOffset=a.getDimensionPixelOffset(R.styleable.Spinner_dropDownVerticalOffset,0,)@ -> horizontalOffset=a.getDimensionPixelOffset(R.styleable.Spinner_dropDownHorizontalOffset,0,)@ -> mGravity=a.getInt(R.styleable.Spinner_android_gravity,Gravity.CENTER,)@ -> mPopup.setPromptText(a.getString(R.styleable.Spinner_android_prompt,),)@ -> mDisableChildrenWhenDisabled=a.getBoolean(R.styleable.Spinner_disableChildrenWhenDisabled,false,)@ -> a.recycle()@ -> IF { -> mPopup.setAdapter(mTempAdapter,)@mTempAdapter!=null }
results[https://github.com/shamak/FoodMenuUW/blob/868c30347fdff1e2eec6c743ac784d093672ec2b/UWFoodServices/src/ca/uwaterloo/mainscreencontrols/SpinningMenu.java][SetImages][1] = -> IF { -> IF { -> throw new RuntimeException("Images and names arrays length doesn't match",)@names!=null && array.length()!=names.length() } } -> LOOP { -> drawables[i]=array.getDrawable(i,)@i<array.length() && !(names!=null) -> originalImage=(BitmapDrawable) drawables[i].getBitmap()@i<array.length() && !(names!=null) -> item=new SpinningMenuItem(mContext,)@!(names!=null) -> item.setIndex(i,)@i<array.length() && !(names!=null) -> item.setImageBitmap(originalImage,)@!(names!=null) -> IF { -> item.setText(names.getString(i,),)@i<array.length() && names!=null } -> IF { -> item.setText("Locations and\n        Hours",)@!(names!=null) } }
results[https://github.com/scruffyfox/X-Library/blob/81ac532a72894693e216713c19d574b8a553c14f/src/x/ui/XUIMenuButtonGroup.java][finalConstructor][1] = -> attributes=mContext.obtainStyledAttributes(attrs,R.styleable.XUIMenuButtonGroup,0,mStyle,)@ -> groupName=attributes.getString(R.styleable.XUIMenuButtonGroup_groupName,)@ -> mGroupNameTransform=attributes.getInteger(R.styleable.XUIMenuButtonGroup_groupName_transform,TEXT_TRANSFORM_NORMAL,)@ -> mStrokeColor=attributes.getColor(R.styleable.XUIMenuButtonGroup_strokeColor,0xffcccccc,)@ -> mStrokeSize=(int) attributes.getDimension(R.styleable.XUIMenuButtonGroup_strokeSize,2.0f,)@ -> mLabelStrokeColor=attributes.getColor(R.styleable.XUIMenuButtonGroup_labelStrokeColor,0xff333333,)@ -> mLabelStrokeSize=(int) attributes.getDimension(R.styleable.XUIMenuButtonGroup_labelStrokeSize,3.0f,)@ -> labelSize=(int) attributes.getDimension(R.styleable.XUIMenuButtonGroup_labelSize,0,)@ -> padding=(int) attributes.getDimension(R.styleable.XUIMenuButtonGroup_labelPadding,0,)@ -> paddingLeft=(int) attributes.getDimension(R.styleable.XUIMenuButtonGroup_labelPaddingLeft,0,)@ -> paddingRight=(int) attributes.getDimension(R.styleable.XUIMenuButtonGroup_labelPaddingRight,0,)@ -> paddingBottom=(int) attributes.getDimension(R.styleable.XUIMenuButtonGroup_labelPaddingBottom,0,)@ -> paddingTop=(int) attributes.getDimension(R.styleable.XUIMenuButtonGroup_labelPaddingTop,0,)@ -> (TextView) layoutView.findViewById(R.id.group_label,).setTextColor(attributes.getColor(R.styleable.XUIMenuButtonGroup_labelColor,0xff000000,),)@ -> IF { -> setTitle(groupName,)@ }
results[https://github.com/jnrainerds/jnrain-android/blob/b16d3c018e7eca5c9bfd540b074c00f02ee67fae/src/main/java/org/jnrain/mobile/ui/nav/NavItemView.java][initAttrs][1] = -> a=context.getTheme().obtainStyledAttributes(attrs,R.styleable.NavItemView,0,0,)@ -> TRY { -> textProp=a.getString(R.styleable.NavItemView_android_text,)@ -> IF { -> doSetText(textProp,)@textProp!=null } -> doSetItemIcon((isInEditMode())?R.drawable.ic_nav_settings:a.getResourceId(R.styleable.NavItemView_itemIcon,0,),)@ -> doSetCanBeActive((isInEditMode())?true:a.getBoolean(R.styleable.NavItemView_canBeActive,true,),)@ -> doSetActive((isInEditMode())?true:a.getBoolean(R.styleable.NavItemView_isActive,false,),)@ } FINALLY { -> a.recycle()@ }
results[https://github.com/AlexGilleran/HIITMe/blob/9728edc96ea5305284ff51bf9db8568e62a862bd/HIITMe/src/com/todddavies/components/progressbar/ProgressWheel.java][parseAttributes][1] = -> barWidth=(int) a.getDimension(R.styleable.ProgressWheel_barWidth,barWidth,)@ -> rimWidth=(int) a.getDimension(R.styleable.ProgressWheel_rimWidth,rimWidth,)@ -> spinSpeed=(int) a.getDimension(R.styleable.ProgressWheel_spinSpeed,spinSpeed,)@ -> delayMillis=(int) a.getInteger(R.styleable.ProgressWheel_delayMillis,delayMillis,)@ -> barColor=a.getColor(R.styleable.ProgressWheel_barColor,barColor,)@ -> barLength=(int) a.getDimension(R.styleable.ProgressWheel_barLength,barLength,)@ -> textSizeLine1=(int) a.getDimension(R.styleable.ProgressWheel_textSizeLine1,textSizeLine1,)@ -> textSizeLine2=(int) a.getDimension(R.styleable.ProgressWheel_textSizeLine2,textSizeLine2,)@ -> textColorLine1=(int) a.getColor(R.styleable.ProgressWheel_textColorLine1,textColorLine1,)@ -> textColorLine2=(int) a.getColor(R.styleable.ProgressWheel_textColorLine1,textColorLine2,)@ -> IF { -> setTextLine1(a.getString(R.styleable.ProgressWheel_textColorLine1,),)@a.hasValue(R.styleable.ProgressWheel_textLine1,) } -> IF { -> setTextLine2(a.getString(R.styleable.ProgressWheel_textColorLine2,),)@a.hasValue(R.styleable.ProgressWheel_textLine2,) } -> rimColor=(int) a.getColor(R.styleable.ProgressWheel_rimColor,rimColor,)@ -> circleColor=(int) a.getColor(R.styleable.ProgressWheel_circleColor,circleColor,)@ -> a.recycle()@
results[https://github.com/embest-tech/rowboat-frameworks-base/blob/c39a6e0c51e182338deb8b63d07933b585134929/core/java/android/view/inputmethod/InputMethodInfo.java][<init>][2] = -> TRY {  -> TRY { -> IF { -> throw new XmlPullParserException("No "+InputMethod.SERVICE_META_DATA+" meta-data",)@parser==null } -> IF { -> throw new XmlPullParserException("Meta-data does not start with input-method tag",)@!("input-method".equals(nodeName,)) && !(parser==null) } -> sa=context.getResources().obtainAttributes(attrs,com.android.internal.R.styleable.InputMethod,)@!(!("input-method".equals(nodeName,))) && !(parser==null) -> settingsActivityComponent=sa.getString(com.android.internal.R.styleable.InputMethod_settingsActivity,)@!(!("input-method".equals(nodeName,))) && !(parser==null) -> isDefaultResId=sa.getResourceId(com.android.internal.R.styleable.InputMethod_isDefault,0,)@!(!("input-method".equals(nodeName,))) && !(parser==null) -> sa.recycle()@!(!("input-method".equals(nodeName,))) && !(parser==null) } FINALLY { -> IF { -> parser.close()@parser!=null && !(parser==null) } } } CATCH(XmlPullParserException,IOException) {}
results[https://github.com/daoanhvu/MyProject/blob/ea30fcb819463d5b2e7bf16067b8a60dd61abe9f/FunctionPlotter/src/nautilus/nmath/keyboard/internal/KeyboardBuilder.java][parseKeyStyle][1] = -> TRY {  -> keyStyleAttr=mResources.obtainAttributes(attr,nautilus.functionplotter.R.styleable.Keyboard_KeyStyle,)@ -> TRY { -> IF { -> throw new XmlParseUtils.ParseException("<"+TAG_KEY_STYLE+"/> needs styleName attribute",parser,)@!(keyStyleAttr.hasValue(nautilus.functionplotter.R.styleable.Keyboard_KeyStyle_styleName,)) } -> IF { -> startEndTag("<%s styleName=%s />%s",TAG_KEY_STYLE,keyStyleAttr.getString(nautilus.functionplotter.R.styleable.Keyboard_KeyStyle_styleName,),(skip)?" skipped":"",)@!(!(keyStyleAttr.hasValue(nautilus.functionplotter.R.styleable.Keyboard_KeyStyle_styleName,))) } -> IF { -> mParams.mKeyStyles.parseKeyStyleAttributes(keyStyleAttr,keyAttrs,parser,)@!(!(keyStyleAttr.hasValue(nautilus.functionplotter.R.styleable.Keyboard_KeyStyle_styleName,))) } } FINALLY { -> keyStyleAttr.recycle()@!(!(keyStyleAttr.hasValue(nautilus.functionplotter.R.styleable.Keyboard_KeyStyle_styleName,))) -> keyAttrs.recycle()@!(!(keyStyleAttr.hasValue(nautilus.functionplotter.R.styleable.Keyboard_KeyStyle_styleName,))) } -> XmlParseUtils.checkEndTag(TAG_KEY_STYLE,parser,)@!(!(keyStyleAttr.hasValue(nautilus.functionplotter.R.styleable.Keyboard_KeyStyle_styleName,))) } CATCH(XmlPullParserException,IOException) {}
results[https://github.com/kfazz/android_packages_inputmethods_LatinIME/blob/69b4e411e1666a7a4abed72ab5484878b24cba35/java/src/com/android/inputmethod/keyboard/Keyboard.java][parseKeyStyle][13] = -> TRY {  -> keyStyleAttr=mResources.obtainAttributes(Xml.asAttributeSet(parser,),R.styleable.Keyboard_KeyStyle,)@ -> TRY { -> IF { -> throw new XmlParseUtils.ParseException("<"+TAG_KEY_STYLE+"/> needs styleName attribute",parser,)@!(keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_styleName,)) } -> IF { -> startEndTag("<%s styleName=%s />%s",TAG_KEY_STYLE,keyStyleAttr.getString(R.styleable.Keyboard_KeyStyle_styleName,),(skip)?" skipped":"",)@!(!(keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_styleName,))) } -> IF { -> mParams.mKeyStyles.parseKeyStyleAttributes(keyStyleAttr,keyAttrs,parser,)@!(!(keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_styleName,))) } } FINALLY { -> keyStyleAttr.recycle()@!(!(keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_styleName,))) -> keyAttrs.recycle()@!(!(keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_styleName,))) } -> XmlParseUtils.checkEndTag(TAG_KEY_STYLE,parser,)@!(!(keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_styleName,))) } CATCH(XmlPullParserException,IOException) {}
results[https://github.com/k3b/EzTimeTracker/blob/e384d605842a90c02eaa3c7613de33cbbb9d2fd1/google.DateTimeSlider/DateSlider/src/com/googlecode/android/widgets/DateSlider/ScrollLayout.java][<init>][2] = -> a=context.obtainStyledAttributes(attrs,R.styleable.ScrollLayout,0,0,)@ -> className=a.getNonResourceString(R.styleable.ScrollLayout_labelerClass,)@ -> IF { -> throw new RuntimeException("Must specify labeler class at "+a.getPositionDescription(),)@className==null } -> labelerFormat=a.getString(R.styleable.ScrollLayout_labelerFormat,)@!(className==null) -> IF { -> throw new RuntimeException("Must specify labelerFormat at "+a.getPositionDescription(),)@!(className==null) && labelerFormat==null } -> TRY { -> mLabeler=(Labeler) ctor.newInstance(labelerFormat,)@!(labelerFormat==null) && !(className==null) } CATCH(Exception) { -> throw new RuntimeException("Failed to construct labeler at "+a.getPositionDescription(),e,)@!(labelerFormat==null) && !(className==null) } -> objWidth=a.getDimensionPixelSize(R.styleable.ScrollLayout_childWidth,mLabeler.getPreferredViewWidth(context,),)@!(labelerFormat==null) && !(className==null) -> objHeight=a.getDimensionPixelSize(R.styleable.ScrollLayout_childHeight,mLabeler.getPreferredViewHeight(context,),)@!(labelerFormat==null) && !(className==null) -> a.recycle()@!(labelerFormat==null) && !(className==null)
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/frameworks/base/core/java/android/view/inputmethod/InputMethodInfo.java][<init>][3] = -> TRY {  -> TRY { -> IF { -> throw new XmlPullParserException("No "+InputMethod.SERVICE_META_DATA+" meta-data",)@parser==null } -> IF { -> throw new XmlPullParserException("Meta-data does not start with input-method tag",)@!("input-method".equals(nodeName,)) && !(parser==null) } -> sa=res.obtainAttributes(attrs,com.android.internal.R.styleable.InputMethod,)@!(!("input-method".equals(nodeName,))) && !(parser==null) -> settingsActivityComponent=sa.getString(com.android.internal.R.styleable.InputMethod_settingsActivity,)@!(!("input-method".equals(nodeName,))) && !(parser==null) -> isDefaultResId=sa.getResourceId(com.android.internal.R.styleable.InputMethod_isDefault,0,)@!(!("input-method".equals(nodeName,))) && !(parser==null) -> sa.recycle()@!(!("input-method".equals(nodeName,))) && !(parser==null) } CATCH(NameNotFoundException) { -> throw new XmlPullParserException("Unable to create context for: "+si.packageName,)@ } FINALLY { -> IF { -> parser.close()@parser!=null } } } CATCH(XmlPullParserException,IOException) {}
results[https://github.com/davros-/platform_frameworks_base/blob/4b50cc39b0518a04b16eb0f0b6286859b32373a3/core/java/android/app/WallpaperInfo.java][<init>][13] = -> TRY {  -> TRY { -> IF { -> throw new XmlPullParserException("No "+WallpaperService.SERVICE_META_DATA+" meta-data",)@parser==null } -> IF { -> throw new XmlPullParserException("Meta-data does not start with wallpaper tag",)@!(parser==null) && !("wallpaper".equals(nodeName,)) } -> sa=res.obtainAttributes(attrs,com.android.internal.R.styleable.Wallpaper,)@!(parser==null) && !(!("wallpaper".equals(nodeName,))) -> settingsActivityComponent=sa.getString(com.android.internal.R.styleable.Wallpaper_settingsActivity,)@!(parser==null) && !(!("wallpaper".equals(nodeName,))) -> thumbnailRes=sa.getResourceId(com.android.internal.R.styleable.Wallpaper_thumbnail,-1,)@!(parser==null) && !(!("wallpaper".equals(nodeName,))) -> authorRes=sa.getResourceId(com.android.internal.R.styleable.Wallpaper_author,-1,)@!(parser==null) && !(!("wallpaper".equals(nodeName,))) -> descriptionRes=sa.getResourceId(com.android.internal.R.styleable.Wallpaper_description,-1,)@!(parser==null) && !(!("wallpaper".equals(nodeName,))) -> sa.recycle()@!(parser==null) && !(!("wallpaper".equals(nodeName,))) } CATCH(NameNotFoundException) { -> throw new XmlPullParserException("Unable to create context for: "+si.packageName,)@ } FINALLY { -> IF { -> parser.close()@parser!=null } } } CATCH(XmlPullParserException,IOException) {}
results[https://github.com/NEXUS-EVO/frameworks_base/blob/6849ad8fbb03c21d6aa61e1bd53fe7b449cd6adb/core/java/android/preference/PreferenceActivity.java][loadHeadersFromResource][20] = -> TRY { -> LOOP { -> IF { -> sa=getResources().obtainAttributes(attrs,com.android.internal.R.styleable.PreferenceHeader,)@!(!("preference-headers".equals(nodeName,))) -> header.id=sa.getResourceId(com.android.internal.R.styleable.PreferenceHeader_id,(int) HEADER_ID_UNDEFINED,)@!(!("preference-headers".equals(nodeName,))) -> tv=sa.peekValue(com.android.internal.R.styleable.PreferenceHeader_title,)@!(!("preference-headers".equals(nodeName,))) -> tv=sa.peekValue(com.android.internal.R.styleable.PreferenceHeader_summary,)@!(!("preference-headers".equals(nodeName,))) -> tv=sa.peekValue(com.android.internal.R.styleable.PreferenceHeader_breadCrumbTitle,)@!(!("preference-headers".equals(nodeName,))) -> tv=sa.peekValue(com.android.internal.R.styleable.PreferenceHeader_breadCrumbShortTitle,)@!(!("preference-headers".equals(nodeName,))) -> header.iconRes=sa.getResourceId(com.android.internal.R.styleable.PreferenceHeader_icon,0,)@!(!("preference-headers".equals(nodeName,))) -> header.fragment=sa.getString(com.android.internal.R.styleable.PreferenceHeader_fragment,)@!(!("preference-headers".equals(nodeName,))) -> sa.recycle()@!(!("preference-headers".equals(nodeName,))) } } } CATCH(XmlPullParserException) { -> throw new RuntimeException("Error parsing headers",e,)@ } CATCH(IOException) { -> throw new RuntimeException("Error parsing headers",e,)@ } FINALLY { -> IF { -> parser.close()@parser!=null } }
results[https://github.com/spacecaker/android_frameworks_base_CSM9.1/blob/a4ee5974d66e944f3fa0466ea794deacb3f32975/core/java/android/speech/tts/TtsEngines.java][settingsActivityFromServiceInfo][10] = -> TRY { -> IF { -> return null@parser==null } -> LOOP { -> IF { -> IF { -> return null@type==XmlResourceParser.START_TAG && (type=parser.next())!=XmlResourceParser.END_DOCUMENT && !(parser==null) && !(XML_TAG_NAME.equals(parser.getName(),)) } -> array=res.obtainAttributes(attrs,com.android.internal.R.styleable.TextToSpeechEngine,)@!((type=parser.next())!=XmlResourceParser.END_DOCUMENT) && !(!(XML_TAG_NAME.equals(parser.getName(),))) && !(parser==null) && !(type==XmlResourceParser.START_TAG) -> settings=array.getString(com.android.internal.R.styleable.TextToSpeechEngine_settingsActivity,)@!((type=parser.next())!=XmlResourceParser.END_DOCUMENT) && !(!(XML_TAG_NAME.equals(parser.getName(),))) && !(parser==null) && !(type==XmlResourceParser.START_TAG) -> array.recycle()@!((type=parser.next())!=XmlResourceParser.END_DOCUMENT) && !(!(XML_TAG_NAME.equals(parser.getName(),))) && !(parser==null) && !(type==XmlResourceParser.START_TAG) -> return settings@type==XmlResourceParser.START_TAG && (type=parser.next())!=XmlResourceParser.END_DOCUMENT && !(!(XML_TAG_NAME.equals(parser.getName(),))) && !(parser==null) } } } CATCH(NameNotFoundException) { -> Log.w(TAG,"Could not load resources for : "+si,)@ } CATCH(XmlPullParserException) { -> Log.w(TAG,"Error parsing metadata for "+si+":"+e,)@ } CATCH(IOException) { -> Log.w(TAG,"Error parsing metadata for "+si+":"+e,)@ } FINALLY { -> IF { -> parser.close()@parser!=null } }
results[https://github.com/ukanth/afwall/blob/af957672d6ee4f814977817feb0e391f5b003c62/src/net/saik0/android/unifiedpreference/UnifiedPreferenceHelper.java][loadHeadersFromResource][1] = -> TRY { -> LOOP { -> IF { -> sa=mActivity.getResources().obtainAttributes(attrs,R.styleable.PreferenceHeader,)@!(!("preference-headers".equals(nodeName,))) -> header.id=sa.getResourceId(R.styleable.PreferenceHeader_id,(int) HEADER_ID_UNDEFINED,)@!(!("preference-headers".equals(nodeName,))) -> tv=sa.peekValue(R.styleable.PreferenceHeader_title,)@!(!("preference-headers".equals(nodeName,))) -> tv=sa.peekValue(R.styleable.PreferenceHeader_summary,)@!(!("preference-headers".equals(nodeName,))) -> tv=sa.peekValue(R.styleable.PreferenceHeader_breadCrumbTitle,)@!(!("preference-headers".equals(nodeName,))) -> tv=sa.peekValue(R.styleable.PreferenceHeader_breadCrumbShortTitle,)@!(!("preference-headers".equals(nodeName,))) -> header.iconRes=sa.getResourceId(R.styleable.PreferenceHeader_icon,0,)@!(!("preference-headers".equals(nodeName,))) -> header.fragment=sa.getString(R.styleable.PreferenceHeader_fragment,)@!(!("preference-headers".equals(nodeName,))) -> preference=sa.getResourceId(R.styleable.PreferenceHeader_preferenceRes,0,)@!(!("preference-headers".equals(nodeName,))) -> sa.recycle()@!(!("preference-headers".equals(nodeName,))) } } } CATCH(XmlPullParserException) { -> throw new RuntimeException("Error parsing headers",e,)@ } CATCH(IOException) { -> throw new RuntimeException("Error parsing headers",e,)@ } FINALLY { -> IF { -> parser.close()@parser!=null } }
results[https://github.com/atrix-aosp/packages_apps_Settings/blob/4811287623e6cbd9a3584828087ea414454dbfc5/src/com/android/settings/VoiceInputOutputSettings.java][updateSettingsLink][69] = -> TRY { -> IF { -> throw new XmlPullParserException("No "+RecognitionService.SERVICE_META_DATA+" meta-data for "+si.packageName,)@parser==null } -> IF { -> throw new XmlPullParserException("Meta-data does not start with recognition-service tag",)@!(parser==null) && !("recognition-service".equals(nodeName,)) } -> array=res.obtainAttributes(attrs,com.android.internal.R.styleable.RecognitionService,)@!(parser==null) && !(!("recognition-service".equals(nodeName,))) -> settingsActivity=array.getString(com.android.internal.R.styleable.RecognitionService_settingsActivity,)@!(parser==null) && !(!("recognition-service".equals(nodeName,))) -> array.recycle()@!(parser==null) && !(!("recognition-service".equals(nodeName,))) } CATCH(XmlPullParserException) { -> Log.e(TAG,"error parsing recognition service meta-data",e,)@ } CATCH(IOException) { -> Log.e(TAG,"error parsing recognition service meta-data",e,)@ } CATCH(NameNotFoundException) { -> Log.e(TAG,"error parsing recognition service meta-data",e,)@ } FINALLY { -> IF { -> parser.close()@parser!=null } } } ELSE { -> i.setComponent(new ComponentName(si.packageName,settingsActivity,),)@!(settingsActivity==null)
results[https://github.com/roalex/android_packages_inputmethods_LatinIME/blob/667da35e33f2bba74f62cc485c312a3c4053d978/java/src/com/android/inputmethod/keyboard/Key.java][<init>][6] = -> keyAttr=res.obtainAttributes(Xml.asAttributeSet(parser,),R.styleable.Keyboard_Key,)@ -> IF { -> styleName=keyAttr.getString(R.styleable.Keyboard_Key_keyStyle,)@keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,) -> style=keyStyles.getKeyStyle(styleName,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> IF { -> throw new ParseException("Unknown key style: "+styleName,parser,)@style==null && keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,) } } -> keyXPos=row.getKeyX(keyAttr,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> keyWidth=row.getKeyWidth(keyAttr,keyXPos,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> moreKeys=style.getTextArray(keyAttr,R.styleable.Keyboard_Key_moreKeys,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mMaxMoreKeysColumn=style.getInt(keyAttr,R.styleable.Keyboard_Key_maxMoreKeysColumn,params.mMaxMiniKeyboardColumn,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mBackgroundType=style.getInt(keyAttr,R.styleable.Keyboard_Key_backgroundType,BACKGROUND_TYPE_NORMAL,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mRepeatable=style.getBoolean(keyAttr,R.styleable.Keyboard_Key_isRepeatable,false,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mEnabled=style.getBoolean(keyAttr,R.styleable.Keyboard_Key_enabled,true,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mVisualInsetsLeft=(int) KeyboardBuilder.getDimensionOrFraction(keyAttr,R.styleable.Keyboard_Key_visualInsetsLeft,params.mBaseWidth,0,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mVisualInsetsRight=(int) KeyboardBuilder.getDimensionOrFraction(keyAttr,R.styleable.Keyboard_Key_visualInsetsRight,params.mBaseWidth,0,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mPreviewIcon=iconsSet.getIcon(style.getInt(keyAttr,R.styleable.Keyboard_Key_keyIconPreview,KeyboardIconsSet.ICON_UNDEFINED,),)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mIcon=iconsSet.getIcon(style.getInt(keyAttr,R.styleable.Keyboard_Key_keyIcon,KeyboardIconsSet.ICON_UNDEFINED,),)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> shiftedIconId=style.getInt(keyAttr,R.styleable.Keyboard_Key_keyIconShifted,KeyboardIconsSet.ICON_UNDEFINED,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mHintLabel=style.getText(keyAttr,R.styleable.Keyboard_Key_keyHintLabel,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mLabel=style.getText(keyAttr,R.styleable.Keyboard_Key_keyLabel,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mLabelOption=style.getFlag(keyAttr,R.styleable.Keyboard_Key_keyLabelOption,0,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mOutputText=style.getText(keyAttr,R.styleable.Keyboard_Key_keyOutputText,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> code=style.getInt(keyAttr,R.styleable.Keyboard_Key_code,Keyboard.CODE_UNSPECIFIED,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> keyAttr.recycle()@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,))
results[https://github.com/aospX/platform_packages_inputmethods_LatinIME/blob/64bd892ee1c918b58c97ec45f49c6a9f2e9321bc/java/src/com/android/inputmethod/keyboard/internal/Key.java][<init>][19] = -> keyAttr=res.obtainAttributes(Xml.asAttributeSet(parser,),R.styleable.Keyboard_Key,)@ -> TRY { -> IF { -> styleName=keyAttr.getString(R.styleable.Keyboard_Key_keyStyle,)@keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,) -> style=keyStyles.getKeyStyle(styleName,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> IF { -> throw new ParseException("Unknown key style: "+styleName,parser,)@style==null && keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,) } } -> keyXPos=KeyboardParser.getDimensionOrFraction(keyAttr,R.styleable.Keyboard_Key_keyXPos,keyboardWidth,x,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> popupCharacters=style.getTextArray(keyAttr,R.styleable.Keyboard_Key_popupCharacters,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mRepeatable=style.getBoolean(keyAttr,R.styleable.Keyboard_Key_isRepeatable,false,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mFunctional=style.getBoolean(keyAttr,R.styleable.Keyboard_Key_isFunctional,false,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mSticky=style.getBoolean(keyAttr,R.styleable.Keyboard_Key_isSticky,false,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mEnabled=style.getBoolean(keyAttr,R.styleable.Keyboard_Key_enabled,true,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mEdgeFlags=style.getFlag(keyAttr,R.styleable.Keyboard_Key_keyEdgeFlags,0,)|row.mRowEdgeFlags@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mVisualInsetsLeft=KeyboardParser.getDimensionOrFraction(keyAttr,R.styleable.Keyboard_Key_visualInsetsLeft,mKeyboard.getDisplayHeight(),0,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mVisualInsetsRight=KeyboardParser.getDimensionOrFraction(keyAttr,R.styleable.Keyboard_Key_visualInsetsRight,mKeyboard.getDisplayHeight(),0,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mPreviewIcon=iconsSet.getIcon(style.getInt(keyAttr,R.styleable.Keyboard_Key_keyIconPreview,KeyboardIconsSet.ICON_UNDEFINED,),)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mIcon=iconsSet.getIcon(style.getInt(keyAttr,R.styleable.Keyboard_Key_keyIcon,KeyboardIconsSet.ICON_UNDEFINED,),)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mHintLetter=style.getText(keyAttr,R.styleable.Keyboard_Key_keyHintLetter,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mLabel=style.getText(keyAttr,R.styleable.Keyboard_Key_keyLabel,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mLabelOption=style.getFlag(keyAttr,R.styleable.Keyboard_Key_keyLabelOption,0,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> mOutputText=style.getText(keyAttr,R.styleable.Keyboard_Key_keyOutputText,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> code=style.getInt(keyAttr,R.styleable.Keyboard_Key_code,Keyboard.CODE_UNSPECIFIED,)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) -> shiftedIcon=iconsSet.getIcon(style.getInt(keyAttr,R.styleable.Keyboard_Key_keyIconShifted,KeyboardIconsSet.ICON_UNDEFINED,),)@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) } FINALLY { -> keyAttr.recycle()@!(keyAttr.hasValue(R.styleable.Keyboard_Key_keyStyle,)) }
results[https://github.com/kitkatandroid/JLS36G_base/blob/d9793ebbef58d0e842c8222c1067928d778f22f1/services/java/com/android/server/MountService.java][readStorageListLocked][7] = -> TRY { -> LOOP { -> IF { -> a=resources.obtainAttributes(attrs,com.android.internal.R.styleable.Storage,)@ -> path=a.getString(com.android.internal.R.styleable.Storage_mountPoint,)@ -> descriptionId=a.getResourceId(com.android.internal.R.styleable.Storage_storageDescription,-1,)@ -> description=a.getText(com.android.internal.R.styleable.Storage_storageDescription,)@ -> primary=a.getBoolean(com.android.internal.R.styleable.Storage_primary,false,)@ -> removable=a.getBoolean(com.android.internal.R.styleable.Storage_removable,false,)@ -> emulated=a.getBoolean(com.android.internal.R.styleable.Storage_emulated,false,)@ -> mtpReserve=a.getInt(com.android.internal.R.styleable.Storage_mtpReserve,0,)@ -> allowMassStorage=a.getBoolean(com.android.internal.R.styleable.Storage_allowMassStorage,false,)@ -> maxFileSize=a.getInt(com.android.internal.R.styleable.Storage_maxFileSize,0,)*1024L*1024L@ -> Slog.d(TAG,"got storage path: "+path+" description: "+description+" primary: "+primary+" removable: "+removable+" emulated: "+emulated+" mtpReserve: "+mtpReserve+" allowMassStorage: "+allowMassStorage+" maxFileSize: "+maxFileSize,)@ } ELSE { } ELSE { -> volume=new StorageVolume(new File(path,),descriptionId,primary,removable,emulated,mtpReserve,allowMassStorage,maxFileSize,null,)@!(path==null||description==null) && !(emulated) -> a.recycle()@ } } } CATCH(XmlPullParserException) { -> throw new RuntimeException(e,)@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ } FINALLY { -> index=(isExternalStorageEmulated())?1:0@ -> LOOP { -> IF { -> volume.setStorageId(++index,)@!(volume.isEmulated()) } } -> parser.close()@ }
results[https://github.com/arjunroy/cinder_base/blob/55ba02a669268a87d0abb9d0cca10be9f0e5cce1/core/java/android/widget/TextView.java][<init>][3] = -> a=context.obtainStyledAttributes(attrs,com.android.internal.R.styleable.TextView,defStyle,0,)@ -> ap=a.getResourceId(com.android.internal.R.styleable.TextView_textAppearance,-1,)@ -> IF { -> LOOP { -> attr=appearance.getIndex(i,)@appearance!=null && i<n -> textColorHighlight=appearance.getColor(attr,textColorHighlight,)@appearance!=null -> textColor=appearance.getColorStateList(attr,)@appearance!=null -> textColorHint=appearance.getColorStateList(attr,)@appearance!=null -> textColorLink=appearance.getColorStateList(attr,)@appearance!=null -> textSize=appearance.getDimensionPixelSize(attr,textSize,)@appearance!=null -> typefaceIndex=appearance.getInt(attr,-1,)@appearance!=null -> styleIndex=appearance.getInt(attr,-1,)@appearance!=null } } -> n=a.getIndexCount()@ -> LOOP { -> attr=a.getIndex(i,)@i<n -> editable=a.getBoolean(attr,editable,)@ -> inputMethod=a.getText(attr,)@ -> numeric=a.getInt(attr,numeric,)@ -> digits=a.getText(attr,)@ -> phone=a.getBoolean(attr,phone,)@ -> autotext=a.getBoolean(attr,autotext,)@ -> autocap=a.getInt(attr,autocap,)@ -> buffertype=a.getInt(attr,buffertype,)@ -> selectallonfocus=a.getBoolean(attr,selectallonfocus,)@ -> mAutoLinkMask=a.getInt(attr,0,)@ -> mLinksClickable=a.getBoolean(attr,true,)@ -> drawableLeft=a.getDrawable(attr,)@ -> drawableTop=a.getDrawable(attr,)@ -> drawableRight=a.getDrawable(attr,)@ -> drawableBottom=a.getDrawable(attr,)@ -> drawablePadding=a.getDimensionPixelSize(attr,drawablePadding,)@ -> setMaxLines(a.getInt(attr,-1,),)@ -> setMaxHeight(a.getDimensionPixelSize(attr,-1,),)@ -> setLines(a.getInt(attr,-1,),)@ -> setHeight(a.getDimensionPixelSize(attr,-1,),)@ -> setMinLines(a.getInt(attr,-1,),)@ -> setMinHeight(a.getDimensionPixelSize(attr,-1,),)@ -> setMaxEms(a.getInt(attr,-1,),)@ -> setMaxWidth(a.getDimensionPixelSize(attr,-1,),)@ -> setEms(a.getInt(attr,-1,),)@ -> setWidth(a.getDimensionPixelSize(attr,-1,),)@ -> setMinEms(a.getInt(attr,-1,),)@ -> setMinWidth(a.getDimensionPixelSize(attr,-1,),)@ -> setGravity(a.getInt(attr,-1,),)@ -> hint=a.getText(attr,)@ -> text=a.getText(attr,)@ -> singleLine=a.getBoolean(attr,singleLine,)@ -> ellipsize=a.getInt(attr,ellipsize,)@ -> setMarqueeRepeatLimit(a.getInt(attr,mMarqueeRepeatLimit,),)@ -> maxlength=a.getInt(attr,-1,)@ -> setTextScaleX(a.getFloat(attr,1.0f,),)@ -> mFreezesText=a.getBoolean(attr,false,)@ -> shadowcolor=a.getInt(attr,0,)@ -> dx=a.getFloat(attr,0,)@ -> dy=a.getFloat(attr,0,)@ -> r=a.getFloat(attr,0,)@ -> setEnabled(a.getBoolean(attr,isEnabled(),),)@ -> textColorHighlight=a.getColor(attr,textColorHighlight,)@ -> textColor=a.getColorStateList(attr,)@ -> textColorHint=a.getColorStateList(attr,)@ -> textColorLink=a.getColorStateList(attr,)@ -> textSize=a.getDimensionPixelSize(attr,textSize,)@ -> typefaceIndex=a.getInt(attr,typefaceIndex,)@ -> styleIndex=a.getInt(attr,styleIndex,)@ -> password=a.getBoolean(attr,password,)@ -> mSpacingAdd=a.getDimensionPixelSize(attr,(int) mSpacingAdd,)@ -> mSpacingMult=a.getFloat(attr,mSpacingMult,)@ -> inputType=a.getInt(attr,mInputType,)@ -> mInputContentType.imeOptions=a.getInt(attr,mInputContentType.imeOptions,)@ -> mInputContentType.imeActionLabel=a.getText(attr,)@ -> mInputContentType.imeActionId=a.getInt(attr,mInputContentType.imeActionId,)@ -> setPrivateImeOptions(a.getString(attr,),)@ -> TRY { -> setInputExtras(a.getResourceId(attr,0,),)@ } CATCH(XmlPullParserException) { -> Log.w("TextView","Failure reading input extras",e,)@ } CATCH(IOException) { -> Log.w("TextView","Failure reading input extras",e,)@ } } -> a.recycle()@ -> IF { -> CATCH(ClassNotFoundException) { -> throw new RuntimeException(ex,)@inputMethod!=null } -> CATCH(InstantiationException) { -> throw new RuntimeException(ex,)@inputMethod!=null } CATCH(IllegalAccessException) { -> throw new RuntimeException(ex,)@inputMethod!=null } } -> a=context.obtainStyledAttributes(attrs,com.android.internal.R.styleable.View,defStyle,0,)@!(inputMethod!=null) -> n=a.getIndexCount()@!(inputMethod!=null) -> LOOP { -> attr=a.getIndex(i,)@!(inputMethod!=null) && i<n -> focusable=a.getBoolean(attr,focusable,)@!(inputMethod!=null) -> clickable=a.getBoolean(attr,clickable,)@!(inputMethod!=null) -> longClickable=a.getBoolean(attr,longClickable,)@!(inputMethod!=null) } -> a.recycle()@!(inputMethod!=null)
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/frameworks/base/graphics/java/android/graphics/drawable/ScaleDrawable.java][getPercent][12] = -> s=a.getString(name,)@ -> IF { -> IF { -> f=s.substring(0,s.length()-1,)@s!=null && s.endsWith("%",) -> return Float.parseFloat(f,)/100.0f@s!=null && s.endsWith("%",) } }
results[https://github.com/COMU/homescreen/blob/6de4dd7fde939de59935fa3a40164641fc42168f/damla/homescreen/src/org/comu/homescreen/LauncherProvider.java][addAppWidget][2] = -> packageName=a.getString(R.styleable.Favorite_packageName,)@ -> className=a.getString(R.styleable.Favorite_className,)@ -> IF { -> return false@packageName==null||className==null } -> cn=new ComponentName(packageName,className,)@!(packageName==null||className==null) -> IF { -> spanX=a.getInt(R.styleable.Favorite_spanX,0,)@!(packageName==null||className==null) -> spanY=a.getInt(R.styleable.Favorite_spanY,0,)@!(packageName==null||className==null) }
results[https://github.com/jmkl/test/blob/5311e1ad44f9a87acc444478b9d0e677ec513123/Watch Aids/src/org/hermit/watchaids/FlagWidget.java][<init>][1] = -> a=context.obtainStyledAttributes(attrs,R.styleable.FlagWidget,)@ -> name=a.getString(R.styleable.FlagWidget_name,)@ -> IF { -> throw new IllegalArgumentException("FlagWidget requires a \"name\" parameter",)@name==null } -> flag=Flag.valueOf(name.toString(),)@!(name==null) -> IF { -> throw new IllegalArgumentException("FlagWidget parameter \""+name+"\" is not a valid flag name",)@flag==null && !(name==null) }
results[https://github.com/AnySoftKeyboard/AnySoftKeyboard/blob/b1edd0489781c5995ffc03c2175878e3c09ebee2/src/net/evendanan/pushingpixels/AboutAppPreference.java][getStringOrReference][3] = -> value=array.getString(index,)@ -> IF { -> valueResId=array.getResourceId(index,0,)@value==null -> IF { -> return null@value==null && valueResId==0 } ELSE { -> return getContext().getString(valueResId,)@value==null && !(valueResId==0) } }
results[https://github.com/isenseDev/iSENSE-Hardware/blob/0ad35369d34741ce2682cc36787cc399776ddab4/Android/PinComm/src/edu/uml/cs/pincomm/DatapointSubrow.java][<init>][1] = -> array=context.obtainStyledAttributes(attrs,R.styleable.datasubrow,0,0,)@ -> labelText=array.getString(R.styleable.datasubrow_label,)@ -> IF { -> label.setText(labelText,)@labelText!=null } -> dataText=array.getString(R.styleable.datasubrow_data,)@ -> IF { -> data.setText(dataText,)@dataText!=null } -> array.recycle()@
results[https://github.com/boombuler/ADWLauncher2/blob/c4faadad6b54ed3bd24208b254771f7fdee17267/src/org/adw/launcher2/LauncherProvider.java][addAppShortcut][2] = -> packageName=a.getString(R.styleable.Favorite_packageName,)@ -> className=a.getString(R.styleable.Favorite_className,)@ -> TRY { -> cn=new ComponentName(packageName,className,)@ } CATCH(PackageManager.NameNotFoundException) { -> Log.e(TAG,"failed to add a shortcut!",)@ -> nnfe.printStackTrace()@ } -> IF { -> return false@cn==null||info==null }
results[https://github.com/aospX/platform_packages_inputmethods_LatinIME/blob/a56796300768532e93d87e2f41341edbfae488a8/java/src/com/android/inputmethod/latin/KeyStyles.java][parseKeyStyleAttributes][19] = -> styleName=a.getString(R.styleable.BaseKeyboard_KeyStyle_styleName,)@ -> IF { -> throw new ParseException("duplicate key style declared: "+styleName,parser,)@mStyles.containsKey(styleName,) } -> IF { -> parentStyle=a.getString(R.styleable.BaseKeyboard_KeyStyle_parentStyle,)@a.hasValue(R.styleable.BaseKeyboard_KeyStyle_parentStyle,) && !(mStyles.containsKey(styleName,)) -> parent=mStyles.get(parentStyle,)@!(a.hasValue(R.styleable.BaseKeyboard_KeyStyle_parentStyle,)) && !(mStyles.containsKey(styleName,)) -> IF { -> throw new ParseException("Unknown parentStyle "+parent,parser,)@a.hasValue(R.styleable.BaseKeyboard_KeyStyle_parentStyle,) && parent==null && !(mStyles.containsKey(styleName,)) } } -> mStyles.put(styleName,style,)@!(a.hasValue(R.styleable.BaseKeyboard_KeyStyle_parentStyle,)) && !(mStyles.containsKey(styleName,))
results[https://github.com/TeamHorizon/packages_apps_ROMSettings/blob/83e7cf2e4aa9655af3a0f1bee8ce79212b89c30c/src/com/aokp/romcontrol/settings/CheckboxSetting.java][<init>][2] = -> IF { -> TRY { -> typedArray=context.obtainStyledAttributes(attrs,R.styleable.CheckboxSetting,)@attrs!=null -> aDescriptionOn=typedArray.getString(R.styleable.CheckboxSetting_descriptionOn,)@ -> aDescriptionOff=typedArray.getString(R.styleable.CheckboxSetting_descriptionOff,)@ } FINALLY { -> IF { -> typedArray.recycle()@typedArray!=null } } }
results[https://github.com/parmv6/android_packages_apps_Launcher2/blob/37f93295e12b1727108a8d923cd64de2e87d6a69/src/com/android/launcher2/LauncherProvider.java][addUriShortcut][75] = -> iconResId=a.getResourceId(R.styleable.Favorite_icon,0,)@ -> titleResId=a.getResourceId(R.styleable.Favorite_title,0,)@ -> TRY { -> uri=a.getString(R.styleable.Favorite_uri,)@ -> intent=Intent.parseUri(uri,0,)@ } CATCH(URISyntaxException) { -> Log.w(TAG,"Shortcut has malformed uri: "+uri,)@ } -> IF { -> return -1@iconResId==0||titleResId==0 } -> IF { -> return -1@dbInsertAndCheck(this,db,TABLE_FAVORITES,null,values,)<0 && !(iconResId==0||titleResId==0) }
results[https://github.com/ReVolt-ROM/packages_apps_ROMControl/blob/2b7a4b2950d0e702bdde63dde6d5376e74088eac/src/com/aokp/romcontrol/widgets/DeveloperPreference.java][<init>][3] = -> TRY { -> typedArray=context.obtainStyledAttributes(attrs,R.styleable.DeveloperPreference,)@ -> nameDev=typedArray.getString(R.styleable.DeveloperPreference_nameDev,)@ -> twitterName=typedArray.getString(R.styleable.DeveloperPreference_twitterHandle,)@ -> donateLink=typedArray.getString(R.styleable.DeveloperPreference_donateLink,)@ -> githubLink=typedArray.getString(R.styleable.DeveloperPreference_githubLink,)@ -> devEmail=typedArray.getString(R.styleable.DeveloperPreference_emailDev,)@ } FINALLY { -> IF { -> typedArray.recycle()@typedArray!=null } }
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/frameworks/base/core/java/android/content/SyncAdaptersCache.java][parseServiceAttributes][10] = -> sa=res.obtainAttributes(attrs,com.android.internal.R.styleable.SyncAdapter,)@ -> TRY { -> authority=sa.getString(com.android.internal.R.styleable.SyncAdapter_contentAuthority,)@ -> accountType=sa.getString(com.android.internal.R.styleable.SyncAdapter_accountType,)@ -> IF { -> return null@authority==null||accountType==null } -> userVisible=sa.getBoolean(com.android.internal.R.styleable.SyncAdapter_userVisible,true,)@!(authority==null||accountType==null) -> supportsUploading=sa.getBoolean(com.android.internal.R.styleable.SyncAdapter_supportsUploading,true,)@!(authority==null||accountType==null) -> return new SyncAdapterType(authority,accountType,userVisible,supportsUploading,)@!(authority==null||accountType==null) } FINALLY { -> sa.recycle()@!(authority==null||accountType==null) }
results[https://github.com/TheCollective/android_packages_apps_Settings/blob/08123a1dff10d865ec25900e304c0831e1196ef0/src/com/android/settings/location/SettingsInjector.java][parseAttributes][1] = -> sa=res.obtainAttributes(attrs,android.R.styleable.SettingInjectorService,)@ -> TRY { -> title=sa.getString(android.R.styleable.SettingInjectorService_title,)@ -> iconId=sa.getResourceId(android.R.styleable.SettingInjectorService_icon,0,)@ -> settingsActivity=sa.getString(android.R.styleable.SettingInjectorService_settingsActivity,)@ -> IF { -> Log.d(TAG,"parsed title: "+title+", iconId: "+iconId+", settingsActivity: "+settingsActivity,)@Log.isLoggable(TAG,Log.DEBUG,) } -> return InjectedSetting.newInstance(packageName,className,title,iconId,settingsActivity,)@ } FINALLY { -> sa.recycle()@ }
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/frameworks/base/core/java/android/app/SearchableInfo.java][<init>][11] = -> a=activityContext.obtainStyledAttributes(attr,com.android.internal.R.styleable.SearchableActionKey,)@ -> mKeyCode=a.getInt(com.android.internal.R.styleable.SearchableActionKey_keycode,0,)@ -> mQueryActionMsg=a.getString(com.android.internal.R.styleable.SearchableActionKey_queryActionMsg,)@ -> mSuggestActionMsg=a.getString(com.android.internal.R.styleable.SearchableActionKey_suggestActionMsg,)@ -> mSuggestActionMsgColumn=a.getString(com.android.internal.R.styleable.SearchableActionKey_suggestActionMsgColumn,)@ -> a.recycle()@ -> IF { -> throw new IllegalArgumentException("No keycode.",)@mKeyCode==0 } ELSE { -> IF { -> throw new IllegalArgumentException("No message information.",)@!(mKeyCode==0) && mQueryActionMsg==null&&mSuggestActionMsg==null&&mSuggestActionMsgColumn==null } }
results[https://github.com/jmorille/android/blob/c117b28e9996953393bc36b19a071c07e359ce61/cityLibProject/cityLib/src/main/java/eu/ttbox/velib/ui/help/wrapper/StationDispoHelpView.java][<init>][6] = -> a=context.obtainStyledAttributes(attrs,R.styleable.StationDispoView,)@ -> parkingString=a.getString(R.styleable.StationDispoView_station_parking,)@ -> IF { -> parkcinkgCount=Integer.parseInt(parkingString.toString(),)@parkingString!=null&&parkingString.length()>0 } -> cycleString=a.getString(R.styleable.StationDispoView_station_cycles,)@ -> IF { -> cycleCount=Integer.parseInt(cycleString.toString(),)@cycleString!=null&&cycleString.length()>0 } -> drawCycle=a.getBoolean(R.styleable.StationDispoView_draw_cycles,true,)@ -> drawParking=a.getBoolean(R.styleable.StationDispoView_draw_parking,true,)@ -> a.recycle()@
results[https://github.com/isenseDev/iSENSE-Hardware/blob/1c94a7b6b901e6429df2b64b2a000259b79bac47/Android/PinComm/src/edu/uml/cs/pincomm/ExperimentRow.java][<init>][1] = -> array=context.obtainStyledAttributes(attrs,R.styleable.exprow,0,0,)@ -> titleText=array.getString(R.styleable.exprow_name,)@ -> IF { -> title.setText(titleText,)@titleText!=null } -> teaseText=array.getString(R.styleable.exprow_desc,)@ -> IF { -> tease.setText(teaseText,)@teaseText!=null } -> modText=array.getString(R.styleable.exprow_lastmod,)@ -> IF { -> mod.setText(modText,)@modText!=null } -> array.recycle()@
results[https://github.com/rcilia/LauncherOfficiel/blob/9d52b9711880753f3e34b9e8613a4e7804b2e33b/src/com/android/my_launcher/LauncherProvider.java][addAppShortcut][75] = -> packageName=a.getString(R.styleable.Favorite_packageName,)@ -> className=a.getString(R.styleable.Favorite_className,)@ -> TRY { -> TRY { -> cn=new ComponentName(packageName,className,)@ } CATCH(PackageManager.NameNotFoundException) { -> packages=packageManager.currentToCanonicalPackageNames( new String[],)@ -> cn=new ComponentName(packages[0],className,)@ -> info=packageManager.getActivityInfo(cn,0,)@ } -> IF { -> return -1@dbInsertAndCheck(this,db,TABLE_FAVORITES,null,values,)<0 } -> Log.w(TAG,"Unable to add favorite: "+packageName+"/"+className,e,)@ }
results[https://github.com/RootzBoat/android_packages_apps_Launcher2-old/blob/a213be67fe4bda7538f584cdc8951c1ef8e60e31/src/com/android/launcher2/LauncherProvider.java][addAppWidget][37] = -> packageName=a.getString(R.styleable.Favorite_packageName,)@ -> className=a.getString(R.styleable.Favorite_className,)@ -> IF { -> return false@packageName==null||className==null } -> cn=new ComponentName(packageName,className,)@!(packageName==null||className==null) -> CATCH(Exception) { -> cn=new ComponentName(packages[0],className,)@!(packageName==null||className==null) -> TRY { -> packageManager.getReceiverInfo(cn,0,)@!(packageName==null||className==null) } } -> IF { -> spanX=a.getInt(R.styleable.Favorite_spanX,0,)@!(packageName==null||className==null) -> spanY=a.getInt(R.styleable.Favorite_spanY,0,)@!(packageName==null||className==null) }
results[https://github.com/Root-Box/packages_apps_Settings/blob/900587fa2021812060597c039fe24e2a737a7b68/src/com/android/settings/widgets/DeveloperPreference.java][<init>][1] = -> TRY { -> typedArray=context.obtainStyledAttributes(attrs,R.styleable.DeveloperPreference,)@ -> nameDev=typedArray.getString(R.styleable.DeveloperPreference_nameDev,)@ -> twitterName=typedArray.getString(R.styleable.DeveloperPreference_twitterHandle,)@ -> donateLink=typedArray.getString(R.styleable.DeveloperPreference_donateLink,)@ -> githubLink=typedArray.getString(R.styleable.DeveloperPreference_githubLink,)@ -> devEmail=typedArray.getString(R.styleable.DeveloperPreference_emailDev,)@ -> googleLink=typedArray.getString(R.styleable.DeveloperPreference_googleLink,)@ -> facebookLink=typedArray.getString(R.styleable.DeveloperPreference_facebookLink,)@ } FINALLY { -> IF { -> typedArray.recycle()@typedArray!=null } }
results[https://github.com/jclehner/rxdroid/blob/cbf01b196ab788fe1cd20f11a0cb82354ca3b66c/src/at/caspase/rxdroid/preferences/TimePeriodPreference.java][handleAttributes][1] = -> a=context.obtainStyledAttributes(attrs,R.styleable.TimePeriodPreference,)@ -> LOOP { -> str=a.getString(timeIds[i],)@i!=timeIds.length -> IF { -> TRY { -> mConstraintTimes[i]=DumbTime.fromString(str,)@i!=timeIds.length && str!=null } CATCH(IllegalArgumentException) { -> IF { -> throw new IllegalArgumentException("Preference references itself in min/maxTime",)@str.equals(getKey(),) && i!=timeIds.length && str!=null } } } } -> mAllowEndWrap=a.getBoolean(R.styleable.TimePeriodPreference_allowEndWrap,false,)@!(i!=timeIds.length)
results[https://github.com/davros-/frameworks_base/blob/da9165e10f476bc46f990e1d63a0f63dcbadbc26/tests/FrameworkPerf/src/com/android/frameworkperf/SimpleInflater.java][readItem][8] = -> a=mContext.obtainStyledAttributes(attrs,com.android.internal.R.styleable.MenuItem,)@ -> itemId=a.getResourceId(R.styleable.MenuItem_android_id,0,)@ -> category=a.getInt(R.styleable.MenuItem_android_menuCategory,0,)@ -> order=a.getInt(R.styleable.MenuItem_android_orderInCategory,0,)@ -> itemTitle=a.getText(R.styleable.MenuItem_android_title,)@ -> itemTitleCondensed=a.getText(R.styleable.MenuItem_android_titleCondensed,)@ -> itemIconResId=a.getResourceId(R.styleable.MenuItem_android_icon,0,)@ -> itemAlphabeticShortcut=a.getString(R.styleable.MenuItem_android_alphabeticShortcut,)@ -> itemNumericShortcut=a.getString(R.styleable.MenuItem_android_numericShortcut,)@ -> IF { -> itemCheckable=(a.getBoolean(R.styleable.MenuItem_android_checkable,false,))?1:0@a.hasValue(R.styleable.MenuItem_android_checkable,) } -> itemChecked=a.getBoolean(R.styleable.MenuItem_android_checked,false,)@ -> itemVisible=a.getBoolean(R.styleable.MenuItem_android_visible,false,)@ -> itemEnabled=a.getBoolean(R.styleable.MenuItem_android_enabled,false,)@ -> a.recycle()@
results[https://github.com/aospX/platform_packages_inputmethods_LatinIME/blob/667da35e33f2bba74f62cc485c312a3c4053d978/java/src/com/android/inputmethod/keyboard/internal/KeyStyles.java][parseKeyStyleAttributes][6] = -> styleName=keyStyleAttr.getString(R.styleable.Keyboard_KeyStyle_styleName,)@ -> IF { -> Log.d(TAG,String.format("<%s styleName=%s />",KeyboardBuilder.TAG_KEY_STYLE,styleName,),)@ } -> IF { -> throw new ParseException("duplicate key style declared: "+styleName,parser,)@mStyles.containsKey(styleName,) } -> IF { -> parentStyle=keyStyleAttr.getString(R.styleable.Keyboard_KeyStyle_parentStyle,)@keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_parentStyle,) && !(mStyles.containsKey(styleName,)) -> parent=mStyles.get(parentStyle,)@!(keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_parentStyle,)) && !(mStyles.containsKey(styleName,)) -> IF { -> throw new ParseException("Unknown parentStyle "+parentStyle,parser,)@keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_parentStyle,) && parent==null && !(mStyles.containsKey(styleName,)) } } -> mStyles.put(styleName,style,)@!(keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_parentStyle,)) && !(mStyles.containsKey(styleName,))
results[https://github.com/kitkatandroid/JLS36G_base/blob/d9793ebbef58d0e842c8222c1067928d778f22f1/core/java/android/content/SyncAdaptersCache.java][parseServiceAttributes][15] = -> sa=res.obtainAttributes(attrs,com.android.internal.R.styleable.SyncAdapter,)@ -> TRY { -> authority=sa.getString(com.android.internal.R.styleable.SyncAdapter_contentAuthority,)@ -> accountType=sa.getString(com.android.internal.R.styleable.SyncAdapter_accountType,)@ -> IF { -> return null@authority==null||accountType==null } -> userVisible=sa.getBoolean(com.android.internal.R.styleable.SyncAdapter_userVisible,true,)@!(authority==null||accountType==null) -> supportsUploading=sa.getBoolean(com.android.internal.R.styleable.SyncAdapter_supportsUploading,true,)@!(authority==null||accountType==null) -> isAlwaysSyncable=sa.getBoolean(com.android.internal.R.styleable.SyncAdapter_isAlwaysSyncable,false,)@!(authority==null||accountType==null) -> allowParallelSyncs=sa.getBoolean(com.android.internal.R.styleable.SyncAdapter_allowParallelSyncs,false,)@!(authority==null||accountType==null) -> settingsActivity=sa.getString(com.android.internal.R.styleable.SyncAdapter_settingsActivity,)@!(authority==null||accountType==null) -> return new SyncAdapterType(authority,accountType,userVisible,supportsUploading,isAlwaysSyncable,allowParallelSyncs,settingsActivity,)@!(authority==null||accountType==null) } FINALLY { -> sa.recycle()@!(authority==null||accountType==null) }
results[https://github.com/azzy/Foodle/blob/815795cc4026fc31a32dfd14a5b0b195e9b27953/java/algs/Digraph.java][parseKeyStyleAttributes][1] = -> styleName=keyStyleAttr.getString(R.styleable.Keyboard_KeyStyle_styleName,)@ -> IF { -> Log.d(TAG,String.format("<%s styleName=%s />",KeyboardParser.TAG_KEY_STYLE,styleName,),)@ } -> IF { -> throw new ParseException("duplicate key style declared: "+styleName,parser,)@mStyles.containsKey(styleName,) } -> IF { -> parentStyle=keyStyleAttr.getString(R.styleable.Keyboard_KeyStyle_parentStyle,)@keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_parentStyle,) && !(mStyles.containsKey(styleName,)) -> parent=mStyles.get(parentStyle,)@!(keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_parentStyle,)) && !(mStyles.containsKey(styleName,)) -> IF { -> throw new ParseException("Unknown parentStyle "+parent,parser,)@keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_parentStyle,) && parent==null && !(mStyles.containsKey(styleName,)) } } -> mStyles.put(styleName,style,)@!(keyStyleAttr.hasValue(R.styleable.Keyboard_KeyStyle_parentStyle,)) && !(mStyles.containsKey(styleName,))
results[https://github.com/jclehner/rxdroid/blob/bea8a10eb81ef53be1711d3fe6cbf2731e17e62b/src/main/java/at/jclehner/rxdroid/preferences/TimePeriodPreference.java][handleAttributes][2] = -> a=context.obtainStyledAttributes(attrs,R.styleable.TimePeriodPreference,)@ -> LOOP { -> str=a.getString(timeIds[i],)@i!=timeIds.length -> IF { -> TRY { -> mConstraintTimes[i]=DumbTime.fromString(str,)@i!=timeIds.length && str!=null } CATCH(IllegalArgumentException) { -> IF { -> throw new IllegalArgumentException("Preference references itself in min/maxTime",)@str.equals(getKey(),) && i!=timeIds.length && str!=null } } } } -> mAllowEndWrap=a.getBoolean(R.styleable.TimePeriodPreference_allowEndWrap,false,)@!(i!=timeIds.length) -> a.recycle()@!(i!=timeIds.length)
results[https://github.com/Steve4448/LiveTextBackground/blob/a61aed13ac333300f40659eca5784ecbaf70eb99/src/steve4448/livetextbackground/preference/MinMaxPreference.java][<init>][1] = -> extraAttrs=getContext().obtainStyledAttributes(attrs,R.styleable.MinMaxPreference,0,0,)@ -> IF { -> keyMin=extraAttrs.getString(R.styleable.MinMaxPreference_minKey,)@extraAttrs.hasValue(R.styleable.MinMaxPreference_minKey,) } -> IF { -> keyMax=extraAttrs.getString(R.styleable.MinMaxPreference_maxKey,)@extraAttrs.hasValue(R.styleable.MinMaxPreference_maxKey,) } -> IF { -> unitSuffix=extraAttrs.getString(R.styleable.MinMaxPreference_unitSuffix,)@extraAttrs.hasValue(R.styleable.MinMaxPreference_unitSuffix,) } -> min=extraAttrs.getInteger(R.styleable.MinMaxPreference_minDefault,absMin,)@ -> max=extraAttrs.getInteger(R.styleable.MinMaxPreference_maxDefault,absMax,)@ -> absMin=extraAttrs.getInteger(R.styleable.MinMaxPreference_min,absMin,)@ -> absMax=extraAttrs.getInteger(R.styleable.MinMaxPreference_max,absMax,)@ -> extraAttrs.recycle()@
results[https://github.com/CyanogenMod/android_packages_apps_Trebuchet/blob/f7621a4f9ec7216ea8ad135ac136edabf7cebb3d/src/com/cyanogenmod/trebuchet/LauncherProvider.java][addLiveFolder][1] = -> packageName=a.getString(R.styleable.Favorite_packageName,)@ -> className=a.getString(R.styleable.Favorite_className,)@ -> TRY { -> TRY { -> cn=new ComponentName(packageName,className,)@ } CATCH(PackageManager.NameNotFoundException) { -> packages=packageManager.currentToCanonicalPackageNames( new String[],)@ -> cn=new ComponentName(packages[0],className,)@ -> packageManager.getReceiverInfo(cn,0,)@ } -> titleResId=a.getResourceId(R.styleable.Favorite_title,-1,)@ -> IF { -> return -1@dbInsertAndCheck(db,TABLE_FAVORITES,null,values,)<0 } -> Log.w(TAG,"Unable to add favorite: "+packageName+"/"+className,e,)@ }
results[https://github.com/ChainsDD/android_packages_apps_Launcher2/blob/e8697d95fa5f9ba97a1e2bd15f4960d4e59d2213/src/com/android/launcher2/LauncherProvider.java][addAppWidget][6] = -> packageName=a.getString(R.styleable.Favorite_packageName,)@ -> className=a.getString(R.styleable.Favorite_className,)@ -> IF { -> return false@packageName==null||className==null } -> cn=new ComponentName(packageName,className,)@!(packageName==null||className==null) -> TRY { -> values.put(Favorites.ITEM_TYPE,Favorites.ITEM_TYPE_APPWIDGET,)@!(packageName==null||className==null) -> values.put(Favorites.SPANX,a.getString(R.styleable.Favorite_spanX,),)@!(packageName==null||className==null) -> values.put(Favorites.SPANY,a.getString(R.styleable.Favorite_spanY,),)@!(packageName==null||className==null) -> values.put(Favorites.APPWIDGET_ID,appWidgetId,)@!(packageName==null||className==null) -> db.insert(TABLE_FAVORITES,null,values,)@!(packageName==null||className==null) } CATCH(RuntimeException) { -> Log.e(TAG,"Problem allocating appWidgetId",ex,)@!(packageName==null||className==null) }
results[https://github.com/ridem/fr.lemet/blob/c557c13d6b72bb8dfc9fbe71ae03e026be12cec4/LeMet/src/fr/lemet/application/widget/TypefaceTextView.java][<init>][2] = -> a=context.getTheme().obtainStyledAttributes(attrs,R.styleable.TypefaceTextView,0,0,)@ -> TRY { -> typefaceName=a.getString(R.styleable.TypefaceTextView_typeface,)@ -> IF { -> typeface=sTypefaceCache.get(typefaceName,)@!(isInEditMode())&&!(TextUtils.isEmpty(typefaceName,)) -> IF { -> typeface=Typeface.createFromAsset(context.getAssets(),String.format("fonts/Lato-%s.ttf",typefaceName,),)@typeface==null && !(isInEditMode())&&!(TextUtils.isEmpty(typefaceName,)) -> sTypefaceCache.put(typefaceName,typeface,)@typeface==null && !(isInEditMode())&&!(TextUtils.isEmpty(typefaceName,)) } } } FINALLY { -> a.recycle()@ }
results[https://github.com/yftx/fruit.launcher/blob/44e8e1ead8952cefea032e2bb24a54da2f223a17/src/com/fruit/launcher/LauncherProvider.java][addAppWidget][1] = -> packageName=a.getString(attrMap.get(Configurator.PACKAGENAME,),)@ -> className=a.getString(attrMap.get(Configurator.CLASSNAME,),)@ -> IF { -> return false@packageName==null||className==null } -> cn=new ComponentName(packageName,className,)@!(packageName==null||className==null) -> CATCH(Exception) { -> cn=new ComponentName(packages[0],className,)@!(packageName==null||className==null) -> TRY { -> packageManager.getReceiverInfo(cn,0,)@!(packageName==null||className==null) } } -> IF { -> spanX=a.getInt(R.styleable.Favorite_spanX,0,)@!(packageName==null||className==null) -> spanY=a.getInt(R.styleable.Favorite_spanY,0,)@!(packageName==null||className==null) }
results[https://github.com/TheCollective/android_frameworks_base/blob/13abfb2a4b9c7823672ed5a2053588c8da6ec3d7/core/java/android/widget/TableLayout.java][<init>][11] = -> a=context.obtainStyledAttributes(attrs,R.styleable.TableLayout,)@ -> stretchedColumns=a.getString(R.styleable.TableLayout_stretchColumns,)@ -> IF { } ELSE { -> mStretchableColumns=parseColumns(stretchedColumns,)@!(stretchedColumns.charAt(0,)=='*') && stretchedColumns!=null } -> shrinkedColumns=a.getString(R.styleable.TableLayout_shrinkColumns,)@ -> IF { } ELSE { -> mShrinkableColumns=parseColumns(shrinkedColumns,)@shrinkedColumns!=null && !(shrinkedColumns.charAt(0,)=='*') } -> collapsedColumns=a.getString(R.styleable.TableLayout_collapseColumns,)@ -> IF { -> mCollapsedColumns=parseColumns(collapsedColumns,)@collapsedColumns!=null } -> a.recycle()@
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/frameworks/base/core/java/android/view/MenuInflater.java][readItem][5] = -> a=mContext.obtainStyledAttributes(attrs,com.android.internal.R.styleable.MenuItem,)@ -> itemId=a.getResourceId(com.android.internal.R.styleable.MenuItem_id,defaultItemId,)@ -> category=a.getInt(com.android.internal.R.styleable.MenuItem_menuCategory,groupCategory,)@ -> order=a.getInt(com.android.internal.R.styleable.MenuItem_orderInCategory,groupOrder,)@ -> itemTitle=a.getString(com.android.internal.R.styleable.MenuItem_title,)@ -> itemTitleCondensed=a.getString(com.android.internal.R.styleable.MenuItem_titleCondensed,)@ -> itemIconResId=a.getResourceId(com.android.internal.R.styleable.MenuItem_icon,0,)@ -> itemAlphabeticShortcut=getShortcut(a.getString(com.android.internal.R.styleable.MenuItem_alphabeticShortcut,),)@ -> itemNumericShortcut=getShortcut(a.getString(com.android.internal.R.styleable.MenuItem_numericShortcut,),)@ -> IF { -> itemCheckable=(a.getBoolean(com.android.internal.R.styleable.MenuItem_checkable,false,))?1:0@a.hasValue(com.android.internal.R.styleable.MenuItem_checkable,) } -> itemChecked=a.getBoolean(com.android.internal.R.styleable.MenuItem_checked,defaultItemChecked,)@ -> itemVisible=a.getBoolean(com.android.internal.R.styleable.MenuItem_visible,groupVisible,)@ -> itemEnabled=a.getBoolean(com.android.internal.R.styleable.MenuItem_enabled,groupEnabled,)@ -> a.recycle()@
results[https://github.com/citppuc/recolectapp-holo-everywhere/blob/4981bbc75ef641522a83aa1ef2ced3f02421744e/library/src/org/holoeverywhere/widget/CalendarView.java][<init>][5] = -> attributesArray=context.obtainStyledAttributes(attrs,R.styleable.CalendarView,defStyle,R.style.Holo_CalendarView,)@ -> mShowWeekNumber=attributesArray.getBoolean(R.styleable.CalendarView_showWeekNumber,CalendarView.DEFAULT_SHOW_WEEK_NUMBER,)@ -> mFirstDayOfWeek=attributesArray.getInt(R.styleable.CalendarView_firstDayOfWeek,1,)@ -> minDate=attributesArray.getString(R.styleable.CalendarView_minDate,)@ -> maxDate=attributesArray.getString(R.styleable.CalendarView_maxDate,)@ -> IF { -> throw new IllegalArgumentException("Max date cannot be before min date.",)@mMaxDate.before(mMinDate,) } -> mShownWeekCount=attributesArray.getInt(R.styleable.CalendarView_shownWeekCount,CalendarView.DEFAULT_SHOWN_WEEK_COUNT,)@!(mMaxDate.before(mMinDate,)) -> mSelectedWeekBackgroundColor=attributesArray.getColor(R.styleable.CalendarView_selectedWeekBackgroundColor,0,)@!(mMaxDate.before(mMinDate,)) -> mFocusedMonthDateColor=attributesArray.getColor(R.styleable.CalendarView_focusedMonthDateColor,0,)@!(mMaxDate.before(mMinDate,)) -> mUnfocusedMonthDateColor=attributesArray.getColor(R.styleable.CalendarView_unfocusedMonthDateColor,0,)@!(mMaxDate.before(mMinDate,)) -> mWeekSeparatorLineColor=attributesArray.getColor(R.styleable.CalendarView_weekSeparatorLineColor,0,)@!(mMaxDate.before(mMinDate,)) -> mWeekNumberColor=attributesArray.getColor(R.styleable.CalendarView_weekNumberColor,0,)@!(mMaxDate.before(mMinDate,)) -> mSelectedDateVerticalBar=attributesArray.getDrawable(R.styleable.CalendarView_selectedDateVerticalBar,)@!(mMaxDate.before(mMinDate,)) -> attributesArray.getResourceId(R.styleable.CalendarView_dateTextAppearance,android.R.style.TextAppearance_Small,)@!(mMaxDate.before(mMinDate,)) -> weekDayTextAppearanceResId=attributesArray.getResourceId(R.styleable.CalendarView_weekDayTextAppearance,CalendarView.DEFAULT_WEEK_DAY_TEXT_APPEARANCE_RES_ID,)@!(mMaxDate.before(mMinDate,)) -> attributesArray.recycle()@!(mMaxDate.before(mMinDate,))
results[https://github.com/AOKP/packages_apps_ROMControl/blob/12292a267ee0b238f9efb7b037d9c32f3a106b10/src/com/aokp/romcontrol/widgets/DeveloperPreference.java][<init>][1] = -> TRY { -> typedArray=context.obtainStyledAttributes(attrs,R.styleable.DeveloperPreference,)@ -> nameDev=typedArray.getString(R.styleable.DeveloperPreference_nameDev,)@ -> twitterName=typedArray.getString(R.styleable.DeveloperPreference_twitterHandle,)@ -> donateLink=typedArray.getString(R.styleable.DeveloperPreference_donateLink,)@ -> githubLink=typedArray.getString(R.styleable.DeveloperPreference_githubLink,)@ -> devEmail=typedArray.getString(R.styleable.DeveloperPreference_emailDev,)@ } FINALLY { -> IF { -> typedArray.recycle()@typedArray!=null } } -> IF { -> UrlImageViewHelper.setUrlDrawable(this.photoView,getGravatarUrl(devEmail,),R.drawable.ic_null,UrlImageViewHelper.CACHE_DURATION_ONE_WEEK,)@ } -> devName.setText(nameDev,)@
