results[https://github.com/TantalumMobile/Tantalum/blob/d55d7841791538ec684852de764b5ac4d9c9150e/Tantalum4Android/src/com/futurice/tantalum4/PlatformUtils.java][<init>][91] = -> TRY {  -> con=(HttpURLConnection) new URL(url,).openConnection()@ } CATCH(IOException) {}
results[https://github.com/srnsw/xena/blob/61253c8c76b8bd39e7e52eef5cd6b756fb8d0929/ext/src/jpedal_lgpl-3.83b38/src/org/jpedal/examples/simpleviewer/Commands.java][selectURL][2] = -> IF { -> TRY { -> testExists=new URL(selectedFile,)@selectedFile!=null -> conn=testExists.openConnection()@ } }
results[https://github.com/SecurisationSiteGVI/securisation-site-gvi/blob/f5c2c253e5266b745b8afcf94002edc28bae7231/src/physique/io/CameraDriverSonyImpl.java][piloterCameraHaut][19] = -> TRY {  -> u=new URL("http://"+ip+"/command/ptzf.cgi?Move=up,8",)@ -> connection=(URLConnection) u.openConnection()@ } CATCH(Exception) {}
results[https://github.com/BaseXdb/basex/blob/0a772b41e7fbaa4681e1c3dfa3c83edbef3bb228/src/main/java/org/basex/query/util/HTTPClient.java][openConnection][2] = -> TRY {  -> url=new URL(dest,)@ -> return (HttpURLConnection) url.openConnection()@ } CATCH(QueryException,IOException) {}
results[https://github.com/praccu/PHENND-app/blob/643487b99e558a4c56aa1fd083412a38701c9676/src/org/phennd/updates/DataManager.java][pullData][4] = -> TRY { -> url=new URL(target,)@ -> connection=url.openConnection()@ -> httpConnection=(HttpURLConnection) connection@ -> IF { -> return rss@responseCode==HttpURLConnection.HTTP_OK } }
results[https://github.com/rhayes-cida/gw_data_portal/blob/2963bcfa3dc61895a9bce7f55ab41decc66f498f/src/main/java/gov/usgs/DataRelayServlet.java][relay][1] = -> TRY {  -> url=new URL(cacheServer,)@ -> conn=url.openConnection()@ -> hconn=(HttpURLConnection) conn@ } CATCH(ServletException,IOException) {}
results[https://github.com/carrot2/carrot2/blob/cb1ab32b11ab0f1b09a15366653a2bb22c35f941/carrot2/components/inputs/treeSnippetMiner/src/com/paulodev/carrot/treeSnippetMiner/treeAnalyser/tokenFeature/IsURLCalc.java][innerCalcValue][1] = -> LOOP { -> TRY { -> temp=new URL(toCheck,)@ -> res=(HttpURLConnection) temp.openConnection()@ } }
results[https://github.com/PeteManchester/MediaPlayer/blob/673042fafb4b282f7da9b469546b906951d8e16d/com.upnp.mediaplayer/src/org/rpi/radio/parsers/PLSParser.java][getConnection][6] = -> TRY {  -> mUrl=new URL(url,).openConnection()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/umitproject/openmonitor-android-agent/blob/020baa6efb37ef90425aff5803b4e5a4507f4843/ICM-Mobile/src/org/umit/icm/mobile/connectivity/WebsiteOpen.java][openURLConnection][1] = -> TRY {  -> url=new URL(str,)@ -> return url.openConnection()@ } CATCH(IOException,HttpException) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/java/net/URLConnection/UNCTest.java][main][3] = -> TRY {  -> url=new URL(args[0],)@ -> conn=url.openConnection()@ -> conn.setRequestProperty("User-Agent","Java",)@ } CATCH(Exception) {}
results[https://github.com/sonatype/maven-reference-en/blob/ca21ce893236eefd8dde5e7b659962f92af42b2d/examples/ch-custom/simple-weather/src/main/java/org/sonatype/mavenbook/weather/YahooRetriever.java][retrieve][117] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/grisu48/segeo/blob/60d6e99983410226280afea9b60f01f8a4119ad0/org.feldspaten.segeo.android/src/segeo/api/Connection.java][logout][2] = -> TRY {  -> url=new URL(uri,)@ -> connection=url.openConnection()@ -> statusCode=getResponseCode(connection,)@ } CATCH(IOException) {}
results[https://github.com/mff-uk/DPUs/blob/681526e7ba5121aa781efe2a0ff249d8d06c0bdd/buyer-profiles/src/main/java/cz/cuni/mff/css_parser/utils/Cache.java][getURLContent][1] = -> TRY {  -> oURL=new URL(p_sURL,)@ -> oURL.openConnection()@ -> sResponse=IOUtils.toString(oURL,"UTF-8",)@ } CATCH(IOException) {}
results[https://github.com/codefireXperiment/libcore/blob/adf25974a44503066df61cc0be515395fd7253b6/luni/src/test/java/org/apache/harmony/luni/tests/java/net/URLConnectionTest.java][openGifURLConnection][160] = -> TRY {  -> fUrl1=new URL("file:/"+tmpDir.getPath()+"/Harmony.GIF",)@ -> con1=fUrl1.openConnection()@ } CATCH(IOException) {}
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/libcore/luni/src/test/java/org/apache/harmony/luni/tests/java/net/URLConnectionTest.java][openJarURLConnection][53] = -> TRY {  -> fUrl1=new URL("jar:file:"+tmpDir.getPath()+"/hyts_att.jar!/",)@ -> con1=(JarURLConnection) fUrl1.openConnection()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/zywonderful2/mydeal/blob/5a4dc52e3d97c1c01755301ede192e247eca8ccc/src/org/archive/net/s3/Handler.java][main][52] = -> TRY {  -> u=new URL(args[0],)@ -> connect=u.openConnection()@ -> is=connect.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/penSecIT/commons-vfs/blob/50421355d646c1b1019928095d0afc9fd8cf20bf/tags/pre_filenameparsing/src/java/org/apache/commons/vfs/impl/URLStreamHandlerProxy.java][openConnection][18] = -> TRY {  -> proxyURL=new URL(url.toExternalForm(),)@ -> return proxyURL.openConnection()@ } CATCH(IOException) {}
results[https://github.com/picketlink/picketlink/blob/32a47000a26e02da2931ea519c24e0b56a13c36e/modules/social/src/main/java/org/picketlink/social/standalone/fb/FacebookProcessor.java][sendAccessTokenRequest][6] = -> TRY { -> url=new URL(location,)@ -> connection=url.openConnection()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/DomoTop/DomoTop/blob/a68bd34899db71c695ee09236ab912a73a60620f/Product/Controller/test/org/openremote/controller/rest/ListPanelIDsTest.java][testBrokenPanelXMLStructureNotWellFormatted2][5] = -> TRY {  -> panelList=new URL(RESTTests.containerURL+RESTAPI_PANELS_URI,)@ -> connection=(HttpURLConnection) panelList.openConnection()@ -> RESTTests.assertHttpResponse(connection,Constants.HTTP_RESPONSE_INVALID_PANEL_XML,RESTTests.ASSERT_BODY_CONTENT,Constants.MIME_APPLICATION_XML,Constants.CHARACTER_ENCODING_UTF8,)@ } CATCH(Exception) {}
results[https://github.com/BelieveROM/android_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/net/URLStreamHandlerFactoryTest.java][testCreateURLStreamHandler][39] = -> TRY {  -> url=new URL("http://android.com/",)@ -> connection=url.openConnection()@ -> assertTrue(connection instanceof Handler.HandlerURLConnection,)@ } CATCH(Exception) {}
results[https://github.com/Aulie/Freerider/blob/9d1f7e0ff3655b7f07c5156243396c7e7877a0d3/Freerider/src/no/ntnu/idi/socialhitchhiking/map/RouteProvider.java][getConnectionInputStream][7] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/OpenEtna/android_dalvik/blob/f6c387128427e121477c1b32ad35cdcaa5101ba3/libcore/luni/src/test/java/org/apache/harmony/luni/tests/java/net/ContentHandlerTest.java][test_getContentLURLConnection][8] = -> TRY {  -> conn=new URL("http://www.apache.org",).openConnection()@ -> content=handler.getContent(conn,)@ } CATCH(IOException) {}
results[https://github.com/niloc132/mauve-gwt/blob/200cef61c0606333348ce5c43ed2b8417e675025/gnu/testlet/java/net/URLConnection/URLConnectionTest.java][test_DefaultRequestProperty][1] = -> TRY { -> url=new URL("http://sources.redhat.com/mauve/testarea/index.html",)@ -> conn=url.openConnection()@ } CATCH(Exception) { -> harness.fail("Error in test_DefaultRequestProperty  - 1 "+" should not have raised exception here ",)@ }
results[https://github.com/idega/com.idega.manager/blob/24772f3b2f644955eb8699d3fd477978e2f1a8db/src/java/com/idega/manager/business/RepositoryBrowser.java][getMetadataFromUrl][2] = -> TRY {  -> uRepositoryUrl=new URL(artifactUrl,)@ -> conn=uRepositoryUrl.openConnection()@ -> content=conn.getContent()@ } CATCH(IOException,XmlPullParserException) {}
results[https://github.com/sodas2002/m-gov/blob/98124f1b9850c23ffda884ea7d201332c5f5acb3/M-GOV_gae/src/net/ReadUrl.java][process][1] = -> TRY {  -> url=new URL(strUrl,)@ -> connection=url.openConnection()@ -> return process(connection,encode,)@ } CATCH(UnsupportedEncodingException,IOException) {}
results[https://github.com/kingargyle/exist-1.4.x/blob/09d678fd8a58728dd51005c63b942f1ab6541ebc/test/src/org/exist/validation/TestTools.java][insertDocumentToURL][2] = -> TRY {  -> url=new URL(target,)@ -> connection=url.openConnection()@ -> os=connection.getOutputStream()@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/3e3e391a959df5a1d0406a67c6b39efd11897d97/test/java/net/ResponseCache/B6181108.java][<init>][10] = -> TRY {  -> url=new URL(urlWithSpace,)@ -> urlc=url.openConnection()@ -> i=(HttpURLConnection) urlc.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/wolfgangimig/byps/blob/90e1d63f5b332d9e26a76c853ac2e61f37359c08/java/bypshttp/src/byps/http/client/jcnn/JcnnRequest.java][createConnection][1] = -> TRY {  -> c=(HttpURLConnection) new URL(destUrl,).openConnection()@ -> conn.set(c,)@ } CATCH(IOException) {}
results[https://github.com/CalumJEadie/part-ii-individual-project-dev/blob/73d90eb7ff3c2b185c5312a88e1fb4a06fc193d3/research/JogAmp - Rendering video to surface/annotated/MovieCube.java][<init>][4] = -> TRY {  -> <init>(new URL("http://download.blender.org/peach/bigbuckbunny_movies/BigBuckBunny_320x180.mp4",).openConnection(),-2.3f,0f,0f,)@ } CATCH(IOException) {}
results[https://github.com/moravianlibrary/MEditor/blob/ecb9976064f10ef7e9cf08e253e71a6d956e9faa/MEditor/src/cz/fi/muni/xkremser/editor/fedora/utils/RESTHelper.java][openConnection][1] = -> TRY {  -> url=new URL(urlString,)@ -> uc=url.openConnection()@ -> uc.setRequestProperty("Authorization","Basic "+encoded,)@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/dreedyman/Rio/blob/361c0ffdb510533f77e9d0fae3b201cd98aebcba/rio-test/src/test/java/org/rioproject/test/url/artifact/HandlerTest.java][testURL][2] = -> TRY {  -> u=new URL("artifact:org.apache.maven.surefire/surefire-junit4/2.6",)@ -> connect=u.openConnection()@ -> Assert.assertNotNull(connect,)@ } CATCH(IOException) {}
results[https://github.com/apache/sling/blob/998c7565f0f3f230b84322ddeac6b8230075a6ce/launchpad/base/src/main/java/org/apache/sling/launchpad/base/shared/Loader.java][closeLauncherJarFile][1] = -> TRY { -> launcherJarRoot=new URL("jar:"+launcherJarUri+"!/",)@ -> conn=launcherJarRoot.openConnection()@ -> IF { -> jarFile=(JarURLConnection) conn.getJarFile()@conn instanceof JarURLConnection } }
results[https://github.com/teiid/teiid/blob/1e24ba9c9eb45716b3096b9b4e997b8a87e5b223/federate-connectors/connector-xml/src/main/java/com/metamatrix/connector/xml/http/HTTPRequestor.java][validateURL][11] = -> TRY {  -> url=new URL(uri,)@ -> conn=url.openConnection()@ -> conn.connect()@ } CATCH(IOException) {}
results[https://github.com/sorcersoft/sorcer/blob/27ba7a1c5438c6bce824e7f31428db6d6a0d7832/tests/int-tests/src/test/java/junit/sorcer/util/bdb/objects/SorcerDatabaseTest.java][sdbURL][8] = -> TRY {  -> sbdUrl=new URL("sbd://myIterface/name#dataContext=2345",)@ -> obj=sbdUrl.openConnection().getContent()@ } CATCH(Exception) {}
results[https://github.com/mrozekma/NoiseBot/blob/debb9f1f8c15104df773b53e92bf36e261e43b46/src/main/Utilities.java][getJSON][1] = -> TRY {  -> return getJSON(new URL(url,).openConnection(),)@ } CATCH(IOException,JSONException) {}
results[https://github.com/wazari972/WebAlbums-3/blob/bb3c0ef72380d9f9e7c74a0c29760d816a94b77f/WebAlbums3-Bootstrap/src/net/wazari/bootstrap/Gui.java][doTrigger][1] = -> TRY { -> url=new URL("http://localhost:"+GF.cfg.port+"/WebAlbums3-FS/Launch?"+(mount)?"":"umount=true"+"path="+mountPoint,)@ -> conn=url.openConnection()@ } CATCH(IOException) { -> log.error("Mount FS error: {}",ex,)@ }
results[https://github.com/p000ison/SimpleClans2/blob/4fb4efe75cccac94cca32a84cf5fe20da488fce3/src/main/java/com/p000ison/dev/simpleclans2/util/GeneralHelper.java][checkConnection][3] = -> TRY { -> Url=new URL(url,)@ -> urlConn=(HttpURLConnection) Url.openConnection()@ -> urlConn.connect()@ -> IF { -> return false@urlConn.getResponseCode()!=HttpURLConnection.HTTP_OK } }
results[https://github.com/aptana/studio2/blob/0905925e7efa7e473e7c2b3d69a618e19056ed31/plugins/com.aptana.ide.core/src/com/aptana/ide/core/model/user/UsernameAvailable.java][isUsernameAvailable][1] = -> TRY { -> available=new URL(USERNAMES+username,)@ -> connection=available.openConnection()@ -> IF { -> httpConn=(HttpURLConnection) connection@connection instanceof HttpURLConnection -> return !(Boolean.parseBoolean(value,))@connection instanceof HttpURLConnection } }
results[https://github.com/uditrugman/openjdk8-jdk/blob/05e3dd0aa660864619dab1a22f621ce009b82480/test/java/net/URL/HandlerLoop.java][main][3] = -> TRY {  -> url=new URL("file:///bogus/index.html",)@ -> System.out.println("url = "+url,)@ -> url.openConnection()@ } CATCH(Exception) {}
results[https://github.com/cuckoo03/repository/blob/6697b49e8b3c1ddf5e6c964757eb65789a3e8a8f/java_networking/src/com/Exam10_4DaumSearch.java][main][9] = -> TRY { -> url=new URL(u,)@ -> conn=url.openConnection()@ -> httpUrlConn=(HttpURLConnection) conn@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ColoradoSchoolOfMines/kinect_exhibit/blob/86e1e19c581736c61b47a220a525a304242eccfc/src/test/java/edu/mines/csci598/recycler/splashscreen/weather/WeatherXMLParserTest.java][shouldNotFindData][4] = -> TRY {  -> weatherUrl=new URL("http://free.worldweatheronline.com/feed/weather.ashx?key="+BAD_API_KEY+"&q="+LOCAL_ZIP+"&num_of_days=1&format=xml",)@ -> weatherConnection=weatherUrl.openConnection()@ -> weatherStream=weatherConnection.getInputStream()@ } CATCH(IOException,SAXException,ParserConfigurationException) {}
results[https://github.com/rafiss/transparent/blob/3a379caf67bccd659321f8ac044f634cc5d93502/backend/transparent/core/Console.java][run][1] = -> TRY { -> connection=new URL("http://localhost:16317/search",).openConnection()@ -> http=(HttpURLConnection) connection@ } CATCH(IOException) { -> Console.commandError("testserver","",e,)@ }
results[https://github.com/SmartBear/soapui/blob/774f4389e08bff0669f6d752a9e11c9bec9c1e57/soapui/src/main/java/com/eviware/soapui/support/jnlp/WebstartUtil.java][getJar][3] = -> TRY {  -> url=new URL("jar:"+jarUrl+"!/",)@ -> jarConnection=(JarURLConnection) url.openConnection()@ -> jar=jarConnection.getJarFile()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/fcrepo/fcrepo-historical/blob/96c4797cf94e9b580e77eca3a3c6d5a1dd86612f/fedorarepo-server/src/main/java/fedora/server/utilities/CleanupContextListener.java][contextInitialized][6] = -> TRY { -> IF { -> url=new URL("http://localhost/",)@ -> urlConn=url.openConnection()@ -> urlConn.setDefaultUseCaches(false,)@ } }
results[https://github.com/eclipse/egit-github/blob/76a5242f8971f7649ab44422b5dd11aa9cad3a3a/org.eclipse.egit.github.core/src/org/eclipse/egit/github/core/client/GitHubClient.java][createConnection][1] = -> TRY {  -> url=new URL(createUri(uri,),)@ -> return (HttpURLConnection) url.openConnection()@ } CATCH(IOException) {}
results[https://github.com/GrizzlyNIO/grizzly-mirror/blob/45b2f10214af65b715a602e4535acbbe41b306cf/modules/websockets/src/test/java/org/glassfish/grizzly/websockets/WebSocketsTest.java][testGetOnWebSocketApplication][1] = -> TRY {  -> url=new URL("http://localhost:"+PORT+"/echo",)@ -> urlConnection=url.openConnection()@ -> is=urlConnection.getInputStream()@ } CATCH(IOException,InstantiationException,InterruptedException) {}
results[https://github.com/anycook/anycook-core/blob/f0dfccece095c2eafd1e500e52dabac55b577599/src/main/java/de/anycook/social/facebook/WallPoster.java][<init>][4] = -> TRY {  -> url=new URL("https://api.facebook.com/"+facebookID+"/feed",)@ -> connection=url.openConnection()@ -> connection.setDoOutput(true,)@ } CATCH(IOException) {}
results[https://github.com/mhl/libbio-formats-java/blob/edc2f937a2806852515fed5c8044e29dfd41f87a/loci/plugins/config/InstallWizard.java][checkLatest][4] = -> TRY {  -> url=new URL(urlPath,)@ -> conn=url.openConnection()@ -> latest=conn.getLastModified()@ } CATCH(IOException) {}
results[https://github.com/signed/sandboxes/blob/8f3bb8bf35822e10cd004bbd8a8fa191710a738e/sandbox-javafx/src/test/java/javafx/QuickTest.java][file][3] = -> TRY {  -> url=new URL("file:///tmp/",)@ -> connection=url.openConnection()@ -> connection.connect()@ } CATCH(Exception) {}
results[https://github.com/pedropaulovc/UFSC/blob/5db56ccc9ee2bb2e26a5ff8eb0d44bd857ee6117/LeitorFeedsPublicado/src/leitorFeeds/ObtenedorDeFeed.java][obterFeed][7] = -> TRY {  -> url=new URL(this.url,)@ -> return url.openConnection().getInputStream()@ } CATCH(IOException,MalformedURLException) {}
results[https://github.com/bladesilent/Harmony/blob/ebd49a241bf2858d7ea505d2ffa86eaba64b64c0/classlib/modules/luni/src/test/api/common/org/apache/harmony/luni/tests/java/net/JarURLConnectionTest.java][test_getMainAttributes][2] = -> TRY {  -> u=new URL("jar:"+BASE+"!/swt.dll",)@ -> juc=(JarURLConnection) u.openConnection()@ -> a=juc.getMainAttributes()@ } CATCH(Exception) {}
results[https://github.com/always-on/always/blob/1d28cb7cbac3bbfe535ee13b596ba65cbd23136f/plugins/weather-plugin/weather/java/edu/wpi/always/weather/wunderground/WundergroundHelper.java][<init>][1] = -> TRY {  -> url=new URL(urlString,)@ -> connection=url.openConnection()@ -> is=connection.getInputStream()@ } CATCH(IOException,ParserConfigurationException,SAXException) {}
results[https://github.com/Echo-tcx/Jitsi/blob/0dfbcdbbed9cc45546ecc1644270c0c169a97b69/src/net/java/sip/communicator/impl/protocol/msn/ReferenceURLStreamHandlerService.java][openConnection][2] = -> TRY {  -> jarSpec=referenceSpec.replaceFirst("reference:","jar:",)@ -> return new URL(jarSpec,).openConnection()@ } CATCH(IOException) {}
results[https://github.com/vmattos/parsac/blob/cefbe472617b719176d00468f922a704df17c9c1/src/br/com/caelum/parsac/main/ws/ClienteWS.java][consomeWebService][1] = -> TRY {  -> url=new URL(webService,)@ -> connection=(HttpURLConnection) url.openConnection()@ -> builder=getBuilder(connection,)@ } CATCH(IOException) {}
results[https://github.com/gakshay/edakia_android/blob/2d5fce6ed1a0126924550819c75f4ad02877a75e/src/com/gakshay/android/util/NetworkOperations.java][authorizeHttpConnection][1] = -> TRY { -> url=new URL(urlStr,)@ -> urlConn=url.openConnection()@ -> IF { -> throw new IOException("URL is not an Http URL",)@!(urlConn instanceof HttpURLConnection) } -> httpConn=(HttpURLConnection) urlConn@!(!(urlConn instanceof HttpURLConnection)) }
results[https://github.com/dimitarp/basex-all/blob/43406446418fa0817a16ba8bab3fe2548774aa35/src/main/java/org/basex/query/util/http/HTTPClient.java][openConnection][2] = -> TRY {  -> url=new URL(dest,)@ -> protocol=url.getProtocol()@ -> return (HttpURLConnection) url.openConnection()@ } CATCH(QueryException,IOException) {}
results[https://github.com/opensagres/xdocreport/blob/8239f32205c11141e7c93d628a9bacfac213967b/tools/fr.opensagres.xdocreport.openoffice.tools/src/fr/opensagres/xdocreport/controller/Controller.java][validateAndUpdateURL][2] = -> TRY {  -> url=new URL(strURL,)@ -> conn=url.openConnection()@ -> conn.connect()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/motech/ananya-reference-data/blob/4af52ec04be0348bec68a80b63ac974815a643bb/ananya-reference-data-web/src/main/java/org/motechproject/ananya/referencedata/web/diagnostic/HttpConnectionDiagnostic.java][getConnection][1] = -> TRY {  -> url=new URL(properties.getProperty("ananya.bbc.url",),)@ -> connection=(HttpURLConnection) url.openConnection()@ } CATCH(IOException) {}
results[https://github.com/lequana2/smart-meal/blob/1251da527b3992c5c6046229534248bde79a8fa5/smartmeal/src/org/jruleengine/RuleExecutionSetProviderImpl.java][createRuleExecutionSet][1] = -> TRY {  -> urlc=new URL(uri,).openConnection()@ -> is=urlc.getInputStream()@ } CATCH(RuleExecutionSetCreateException,IOException,RemoteException) {}
results[https://github.com/bbcf/bbcfutils/blob/6a996a053664f08b2cda14b6c75424cdc55624c6/JAVA/access/src/ch/epfl/bbcf/access/InternetConnection.java][openConnection][2] = -> TRY {  -> url=new URL(adress,)@ -> urlConnection=(HttpURLConnection) url.openConnection()@ -> urlConnection.setRequestMethod(method,)@ } CATCH(IOException) {}
results[https://github.com/GrizzlyNIO/grizzly-mirror/blob/45b2f10214af65b715a602e4535acbbe41b306cf/modules/websockets/src/test/java/org/glassfish/grizzly/websockets/WebSocketsTest.java][testGetOnServlet][1] = -> TRY {  -> url=new URL("http://localhost:"+PORT+"/echo",)@ -> urlConnection=url.openConnection()@ -> content=(InputStream) urlConnection.getContent()@ } CATCH(IOException,InstantiationException,InterruptedException) {}
results[https://github.com/Graylog2/graylog2-server/blob/e4b83fb0a6fb6dc27ce7fee6e9a79738774fdc13/src/main/java/org/graylog2/plugins/PluginInstaller.java][downloadAndCopyJar][2] = -> TRY {  -> jar=new URL(url,)@ -> jar.openConnection()@ -> reader=jar.openStream()@ } CATCH(Exception) {}
results[https://github.com/selesse/WineDB/blob/c45e246eca91cc0c2a9b0297cd5452fbb631991f/src/main/java/com/selesse/android/winedb/async/AsyncImageLoader.java][openHttpConnection][1] = -> TRY { -> url=new URL(streamUrl,)@ -> conn=url.openConnection()@ -> httpConn=(HttpURLConnection) conn@ } CATCH(IOException) { -> Log.e(TAG,"Error fetching image "+streamUrl,e,)@ }
results[https://github.com/radekolesiak/gwtapp/blob/0c68c610d811321eefe7fb17bc6e0a4a7397fc4e/extension/user/srv/src/main/java/org/gwtapp/extension/user/server/service/ReCaptchaServiceImpl.java][getURL][1] = -> TRY { -> url=new URL(RECAPTCHA_URL+"?"+s,)@ -> connection=(HttpURLConnection) url.openConnection()@ } CATCH(Exception) { -> log.error("",e,)@ }
results[https://github.com/ancoron/osgi-tests/blob/ec633ba3e919f4c396a427a34c783e8e0b64179b/test-support/glassfish/src/main/java/org/ancoron/osgi/test/glassfish/GlassfishHelper.java][download][1] = -> TRY {  -> intUrl=new URL(url,)@ -> intUrl.openConnection()@ -> reader=intUrl.openStream()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/BruSD/NewsRssFeed/blob/7301166ad014d1e37aaaf7df453eb37039895b30/src/com/newsrss/Feed/DataStorage.java][fetchDrawable][1] = -> TRY { -> imageURL=new URL(imageURLString,)@!(drawableMap.containsKey(imageURLString,)) -> connection=(HttpURLConnection) imageURL.openConnection()@!(drawableMap.containsKey(imageURLString,)) -> IF { -> inputStream=connection.getInputStream()@connection.getResponseCode()==HttpURLConnection.HTTP_OK && !(drawableMap.containsKey(imageURLString,)) } }
results[https://github.com/djcoin/svn2git_gvsig_mini/blob/420ddb63fa2db8643813ed460550704a7e03ef39/branches/src/es/prodevelop/gvsig/mini/tasks/map/GetCellLocationFunc.java][requestCellLocation][3] = -> TRY { -> url=new URL(urlString,)@ -> conn=url.openConnection()@ -> conn.setConnectTimeout(10000,)@ -> httpConn=(HttpURLConnection) conn@ -> IF { -> return  new double[]@code==0 } }
results[https://github.com/powercoders/PCBot/blob/8c1cd72209adc1762d2b6c1ff91dc678a75aa7e1/src/org/rsbot/bot/injector/Injector.java][getJar][2] = -> LOOP { -> TRY { -> url=new URL(s,)@ -> return (JarURLConnection) url.openConnection().getJarFile()@ } }
results[https://github.com/stigkj/one-jar/blob/0e6c12dac78a231fb4c86b639a5ebd5a04f9d8c7/example/com/simontuffs/onejar/example/main/Test.java][testContentType][1] = -> TRY {  -> url=new URL(uri,)@ -> connection=url.openConnection()@ -> contenttype=connection.getContentType()@ } CATCH(Exception) {}
results[https://github.com/liucong/jms4cxf2/blob/d56cb4fb7e9ae649d1f9b79c3d0d96a2b123f52f/systests/jaxws/src/test/java/org/apache/cxf/systest/provider/datasource/DataSourceProviderTest.java][createConnection][1] = -> TRY {  -> url=new URL("http://localhost:9000/test/foo",)@ -> conn=(HttpURLConnection) url.openConnection()@ -> conn.setDoOutput(true,)@ } CATCH(Exception) {}
results[https://github.com/harism/android_facebook_client/blob/598c435c11acca4418c0e48e8b1d62aca122f684/src/fi/harism/facebook/net/FBClient.java][requestFQL][1] = -> TRY {  -> url=new URL("https://api.facebook.com/method/fql.query?access_token="+token+"&query="+query,)@ -> connection=(HttpURLConnection) url.openConnection()@ -> is=connection.getInputStream()@ } CATCH(IOException,JSONException,MalformedURLException,XmlPullParserException) {}
results[https://github.com/stlanger/Docear/blob/d4a6b269d2b350638a85bb28e0dddd8f72a76563/Jabref_Beta_2_7_Docear/src/java/net/sf/jabref/imports/JSTORFetcher.java][openTicket][2] = -> TRY {  -> url=new URL(URL_TICKET,)@ -> conn=url.openConnection()@ -> return getCookie(COOKIE_TICKET,conn,)@ } CATCH(IOException) {}
results[https://github.com/ansell/bioportal/blob/f785095f27dab833d1c2aa213387b5f662fd1da7/src/java/org/ncbo/stanford/util/loader/LoaderUtils.java][getContentLength][1] = -> TRY {  -> url=new URL(url_location,)@ -> uc=url.openConnection()@ -> contentLength=uc.getContentLength()@ } CATCH(Exception) {}
results[https://github.com/fywb251/bsl_impc_android/blob/0befac4975509a2a4851c92b36a553b36765732a/cube-android/src/com/foreveross/chameleon/util/HttpUtil.java][openHttpURLConnection][1] = -> TRY {  -> url=new URL(httpUrl,)@ -> conn=url.openConnection()@ -> conn.setConnectTimeout(HTTP_CONNECTION_TIMEOUT,)@ -> return (HttpURLConnection) conn@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/X1337X/Archers/blob/2f90c3f8521dc40bb9625ee0993a6f85158b2637/dev src/TechGuard/x1337x/Archers/Updater/Updater.java][update][1] = -> TRY {  -> u=new URL(location,)@ -> u.openConnection()@ -> s=u.openStream()@ } CATCH(IOException) {}
results[https://github.com/Grupa/GClasificator/blob/917fec1ff77b0768654f7b81028386c182754d3a/Code/play-2.0.2/gp/app/controllers/Admin.java][isAccountExist][1] = -> TRY { -> con=(HttpURLConnection) new URL(idGpm,).openConnection()@ -> con.setRequestMethod("HEAD",)@ -> IF { -> return false@con.getResponseCode()==HttpURLConnection.HTTP_NOT_FOUND } }
results[https://github.com/pitosalas/blogbridge/blob/471d4c10e5ba5b4900c001ec85806f2e81687c10/src/com/salas/bb/utils/uif/html/CustomHtmlUrlStreamHandler.java][openConnection][1] = -> TRY {  -> return new URL(u.toString(),).openConnection()@ } CATCH(IOException) {}
results[https://github.com/pruiz/signserver/blob/106204e919f729393a7b3105aeebea775ef11c16/signserver/modules/SignServer-Test-System/test/org/signserver/web/WebTestCase.java][openConnection][1] = -> TRY {  -> url=new URL(buff.toString(),)@ -> return (HttpURLConnection) url.openConnection()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/comsince/myappweixin/blob/e08fe6b37251da50a3e6db4a2db0a366c6c3ba90/musicPlayer/src/com/comsince/knowledge/utils/HttpDownloader.java][getOutputStreamFromUrl][1] = -> TRY {  -> url=new URL(urlStr,)@ -> urlConn=(HttpURLConnection) url.openConnection()@ -> outputStream=urlConn.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/alanhorizon/Java-Slick/blob/74cb6912899daa8c4f64c179181e0bb8febcc36b/thingle/src/org/newdawn/slick/thingle/internal/ThinletSkin.java][init][1] = -> TRY { -> IF { -> url=new URL(jarFileName,)@jarFileName.startsWith("http://",) -> uc=url.openConnection()@ -> is=uc.getInputStream()@ } }
results[https://github.com/mff-uk/DPUs/blob/55fe5951563ab5f0b487c1632849686dd75baf04/ruian/src/main/java/cz/cuni/mff/xrg/scraper/css_parser/utils/Cache.java][getURLContentAsByteArray][1] = -> TRY {  -> oURL=new URL(p_sURL,)@ -> oURL.openConnection()@ -> sResponse=IOUtils.toByteArray(oURL,)@ } CATCH(IOException) {}
results[https://github.com/bbcf/gdv/blob/023e02e963569790433774854add829f07019e84/src/main/java/ch/epfl/bbcf/gdv/access/InternetConnection.java][testConnection][1] = -> TRY { -> url=new URL(adress,)@ -> urlConnection=url.openConnection()@ } CATCH(IOException) { -> Application.error(e,)@ }
results[https://github.com/aptana/radrails/blob/b0785f6fc1780cc870617bd4eb96c8eeaa5c2117/plugins/org.radrails.rails.core/src/org/radrails/rails/core/railsplugins/RailsPluginsManager.java][getConnection][1] = -> TRY {  -> url=new URL(SERVICE_URL,)@ -> conn=(HttpURLConnection) url.openConnection()@ -> conn.setRequestMethod("GET",)@ } CATCH(MalformedURLException,IOException,ProtocolException) {}
results[https://github.com/ansell/bioportal/blob/f785095f27dab833d1c2aa213387b5f662fd1da7/src/java/org/ncbo/stanford/util/loader/LoaderUtils.java][getLastModifiedDate][1] = -> TRY {  -> url=new URL(url_location,)@ -> uc=url.openConnection()@ -> lastModified=uc.getLastModified()@ } CATCH(Exception) {}
results[https://github.com/rjyo/twitter-2-weibo/blob/6db9519f9788e0bf3375058b5279090d8c3a471a/core/src/main/java/h2weibo/utils/filters/TcoStatusFilter.java][getRedirectUrl][1] = -> TRY {  -> url=new URL(urlStr,)@ -> conn=url.openConnection()@ -> location=conn.getHeaderField("Location",)@ } CATCH(IOException) {}
results[https://github.com/wyona/yanel/blob/e8c11ff0ef7d626a5f811efec2d403c57e971a1a/src/realms/welcome-admin/yanel/resources/update-webapp/src/java/org/wyona/yanel/impl/resources/updateFinder/utils/WarFetcher.java][downloadUpdateWar][1] = -> TRY {  -> updateWarUrl=new URL("jar:"+updateLink+"!/",)@ -> URLcon=(JarURLConnection) updateWarUrl.openConnection()@ -> jar=URLcon.getJarFile()@ } CATCH(Exception) {}
results[https://github.com/vista-novo/fhir/blob/ff1186dfa3c425904efd20d968ff323ccea37064/build/tools/java/org.hl7.fhir.instance/src/org/hl7/fhir/instance/client/FHIRSimpleClient.java][makeClient][1] = -> TRY {  -> client=(HttpURLConnection) new URL(baseUrl+tail,).openConnection()@ -> client.addRequestProperty("accept","text/xml",)@ } CATCH(Exception) {}
results[https://github.com/brachior/platform_libcore/blob/0b26c7b2263a591b135e230231a331e3c0f123b8/luni/src/test/java/tests/api/java/net/JarURLConnectionTest.java][test_getInputStream_DeleteJarFileUsingURLConnection][2] = -> TRY {  -> url=new URL("jar:file:"+jarFileName+"!/"+entry,)@ -> conn=url.openConnection()@ -> conn.setUseCaches(false,)@ -> is=conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/apache/oltu/blob/391c6ef2c16b694804b8e141fb38f02de119c96b/oauth-2.0/integration-tests/src/test/java/org/apache/oltu/oauth2/integration/ResourceTest.java][testResourceAccessHeaderNoToken][3] = -> TRY {  -> url=new URL(Common.RESOURCE_SERVER+Common.PROTECTED_RESOURCE_HEADER,)@ -> c=url.openConnection()@ -> IF { -> httpURLConnection=(HttpURLConnection) c@c instanceof HttpURLConnection } } CATCH(Exception) {}
results[https://github.com/tobiastry/Photoapp/blob/8ef2895ac4d1198ffa3b664ca4a03fbc6460a9c6/src/main/java/repository/ExpandUrl.java][expand][1] = -> TRY {  -> url=new URL(pictureUrl,)@ -> urlConnection=(HttpURLConnection) url.openConnection()@ -> urlConnection.setInstanceFollowRedirects(false,)@ -> location=urlConnection.getHeaderField("location",)@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/billstclair/loomclient/blob/72ac2aa32d454de56cd7751cb439bfd61a6f0a95/java/cc/loom/LoomClient.java][fetchURLString][1] = -> TRY { -> url=new URL(address,)@ -> connection=url.openConnection()@ -> in=new InputStreamReader(connection.getInputStream(),)@ } CATCH(Exception) { -> return "()"@ }
results[https://github.com/fake666/namnam/blob/8b6921757ded24929e67e3a12fee8a11c5e9e4e9/java/namnamparser/src/de/metalab/namnam/parser/util/XPathUtil.java][getHtmlUrlNode][1] = -> TRY {  -> url=new URL(sUrl,)@ -> con=url.openConnection()@ -> src=new InputSource(con.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/europeana/contrib/blob/59a70348216f755f834f7a5a9abe6351e85ed87f/repox/trunk/src/main/java/pt/utl/ist/repox/web/action/dataProvider/CreateEditDataProviderActionBean.java][exists][1] = -> TRY {  -> con=(HttpURLConnection) new URL(URLName,).openConnection()@ -> con.setRequestMethod("HEAD",)@ -> return con.getResponseCode()==HttpURLConnection.HTTP_OK@ } CATCH(IOException) {}
results[https://github.com/zendtech/zendserver-sdk-java/blob/3b20cad3003d1e7a14d29e6b2208bb4b2b3a6e44/zendserver-sdk-java/org.zend.sdk/sdklib/org/zend/sdklib/internal/repository/http/HttpRepository.java][getArtifactStream][1] = -> TRY {  -> url=new URL(this.baseURL.toString()+"/"+path,)@ -> conn=url.openConnection()@ -> return conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/peq/WurstScript/blob/59c581ba0f038bd9667161eb3990ec43d3171b3f/WurstUpdater32/src/control/NetControl.java][downloadFile][1] = -> TRY {  -> url=new URL(link,)@ -> conn=url.openConnection()@ -> is=conn.getInputStream()@ -> max=conn.getContentLength()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/jorgenio/zksample2/blob/001a4e453f9dc62a3be3fa263b52678b8a1ecb5e/spring-hibernate-backend/src/main/java/de/forsthaus/backend/service/impl/IpToCountryServiceImpl.java][importIP2CountryCSV][1] = -> TRY { -> url=new URL(this.updateUrl,)@ -> conn=url.openConnection()@ -> istream=conn.getInputStream()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/woggle/mesos-old/blob/6168de123773c2cd97d1194603283ea168994289/frameworks/hadoop-0.20.2/src/hdfs/org/apache/hadoop/hdfs/tools/DFSck.java][run][1] = -> TRY {  -> path=new URL(url.toString(),)@ -> connection=path.openConnection()@ -> stream=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/sixman9/java_net-wadl-git-svn/blob/c1ecd2dd0b0b41683ab5d8019f2886e8cd3aa900/trunk/wadl-core/src/main/java/org/jvnet/ws/wadl/util/JAXBDispatcher.java][doGET][1] = -> TRY {  -> u=new URL(url,)@ -> c=u.openConnection()@ -> IF { -> h=(HttpURLConnection) c@c instanceof HttpURLConnection } } CATCH(MalformedURLException,IOException,JAXBException) {}
results[https://github.com/hypereddie10/GGS/blob/6b851aa5f12cd44a75163fcc0a172e3e7d971771/src/com/ep/ggs/system/updater/UpdateManager.java][checkUpdateServer][1] = -> TRY { -> url=new URL(object.getInfoURL(),)@ -> con=(HttpURLConnection) url.openConnection()@ -> con.connect()@ -> IF { -> return false@con.getResponseCode()!=HttpURLConnection.HTTP_OK } }
results[https://github.com/apache/jena/blob/bbb56facc33b008b5baff0636a27ac0fb92c089f/jena-fuseki/src/test/java/org/apache/jena/fuseki/TestQuery.java][request_id_header_01][1] = -> TRY {  -> u=new URL(serviceQuery+"?query="+qs,)@ -> conn=(HttpURLConnection) u.openConnection()@ -> Assert.assertTrue(conn.getHeaderField("Fuseki-Request-ID",)!=null,)@ } CATCH(IOException) {}
