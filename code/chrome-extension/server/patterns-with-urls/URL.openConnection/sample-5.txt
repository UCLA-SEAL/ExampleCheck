results[https://github.com/ATRM/publicMain/blob/a8c8d2705f638959a1fb31bad603fac85f990247/publicMAIN/misc/nimrod/com/nilo/plaf/nimrod/NimRODTheme.java][<init>][21] = -> TRY { -> con=url.openConnection()@ -> res=con.getInputStream()@ }
results[https://github.com/travp624/packages_apps_BlackICEControl/blob/75c5d4d89ba332bdc8ed9086566a740358b30ff6/src/com/roman/romcontrol/fragments/MasturModsSettings.java][run][22] = -> TRY { -> updateURL=new URL("http://th3oryrom.us.to/mastur/mmsettings/versioncode.txt",)@ -> conn=updateURL.openConnection()@ -> is=conn.getInputStream()@ }
results[https://github.com/emolinablas/CoretelProject/blob/b81248ddd6204e55360561eb854ec7606bd69723/Coretel/src/com/researchmobile/coretel/supervision/ws/ConnectWS.java][CrearUsuarioChat][2] = -> TRY { -> urlCon=new URL("http","23.21.82.207",9010,"/ServiciosUsuario/"+url,)@ -> urlConnection=(HttpURLConnection) urlCon.openConnection()@ -> inputStream=urlConnection.getInputStream()@ }
results[https://github.com/UWCS/choob/blob/fa8a3ff84f3dbb101077f1c773ff5e0239a76cd8/contrib/Fish.java][commandWUBRS][1] = -> yahoo=new URL("http://www.wubrs.org.uk/quote.php",)@ -> yc=yahoo.openConnection()@ -> in=new BufferedReader(new InputStreamReader(yc.getInputStream(),),)@
results[https://github.com/mgarin/weblaf/blob/d147a8098969bdadf953beca07ca116dcfbaed8d/src/com/alee/utils/FileUtils.java][readToString][1] = -> TRY { -> return readToString(url.openConnection().getInputStream(),)@ }
results[https://github.com/PieceMaker/OpenJUMP/blob/651fdd13c2abcf94967ca7f79e39f414f7656151/src/org/geotools/shapefile/Shapefile.java][<init>][3] = -> TRY { -> uc=baseURL.openConnection()@ -> myInputStream=new BufferedInputStream(uc.getInputStream(),16*1024,)@ }
results[https://github.com/bladesilent/Harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/awt/src/main/java/common/org/apache/harmony/awt/gl/image/URLDecodingImageSource.java][getInputStream][2] = -> TRY { -> uc=url.openConnection()@ -> return new BufferedInputStream(uc.getInputStream(),)@ }
results[https://github.com/chototsu/MikuMikuStudio/blob/9bd848aa884de742980627a1e1ad455fb6c0344a/engine/src/desktop/com/jme3/asset/plugins/ClasspathLocator.java][openStream][1] = -> TRY { -> conn=url.openConnection()@ -> conn.setUseCaches(false,)@ -> return conn.getInputStream()@ }
results[https://github.com/laarid/platform_libcore/blob/8f7341440cf447efc91739bdc4ad24ce4957e83b/benchmarks/src/benchmarks/regression/URLConnectionBenchmark.java][get][58] = -> TRY {  -> connection=(HttpURLConnection) url.openConnection()@ -> in=connection.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/AllPlayers/allplayers-android/blob/63c762fc79fefe9802c3fcf11dc629447a946ee5/AllPlayers-Android/tests/src/SampleTest1.java][main][4] = -> TRY { -> url=new URL("https://www.allplayers.com/?q=api/v1/rest/groups.json",)@ -> connection=url.openConnection()@ -> connection.setDoInput(true,)@ -> inStream=connection.getInputStream()@ }
results[https://github.com/ezterry/TTRSS_android_ezterry/blob/cbae8a4dc299bc130b4d3837e8e60f23d1051760/src/org/fox/ttrss/util/ImageCacheService.java][getStream][4] = -> TRY { -> url=new URL(urlString,)@ -> urlConnection=url.openConnection()@ -> urlConnection.setConnectTimeout(250,)@ -> return urlConnection.getInputStream()@ }
results[https://github.com/mhl/libbio-formats-java/blob/2bc1d2319a778fbed9656d0c1b80366ab7a31a0f/components/bio-formats/src/loci/formats/Location.java][list][4] = -> IF { -> TRY { -> c=url.openConnection()@ -> is=c.getInputStream()@ } }
results[https://github.com/DDoS/Quarantine/blob/4bd8d6c917deb392a466f791a90a7fb457d11c07/src/me/DDoS/Quarantine/Quarantine.java][downloadFile][2] = -> TRY { -> url=new URL(urlString,)@ -> connection=url.openConnection()@ -> inputStream=new DataInputStream(connection.getInputStream(),)@ }
results[https://github.com/vn971/multipoints/blob/4b77614ab00981822ce08f28e77d1d2086afb060/src/ru/narod/vn91/pointsop/server/ServerZagram2.java][getLinkContent][3] = -> TRY { -> url=new URL(link,)@ -> urlConn=url.openConnection()@ -> inStream=new InputStreamReader(urlConn.getInputStream(),"UTF-8",)@ }
results[https://github.com/heinrisch/Contact-Picture-Sync/blob/2e34c6d1f4af83947a189c12875c2750add61d78/src/heinrisch/contact/picture/sync/Tools.java][downloadBitmap][3] = -> TRY { -> connection=new URL(url,).openConnection()@ -> connection.connect()@ -> is=connection.getInputStream()@ }
results[https://github.com/axDev-JDK/jdk/blob/3e3e391a959df5a1d0406a67c6b39efd11897d97/test/java/net/URLConnection/SetIfModifiedSince.java][main][2] = -> TRY { -> url=new URL("http://localhost:"+port+"/index.html",)@ -> urlc=url.openConnection()@ -> urlc.setIfModifiedSince(10000000,)@ -> is=urlc.getInputStream()@ }
results[https://github.com/samtingleff/valkyrie/blob/5be9e015eb36e5bbd4b9674dd0dbcac2270175b8/src/com/othersonline/kv/distributed/impl/UrlNodeStore.java][refreshActiveNodes][3] = -> TRY {  -> conn=url.openConnection()@ -> in=conn.getInputStream()@ } CATCH(IOException,ConfigurationException) {}
results[https://github.com/iiordanov/bVNC/blob/8c3dd246f880d592eda1c9661bd046919e660fa4/eclipse_projects/Opaque/src/com/undatech/opaque/RemoteCanvasActivity.java][run][1] = -> TRY { -> url=new URL(data.toString(),)@ -> ucon=url.openConnection()@ -> is=ucon.getInputStream()@ }
results[https://github.com/jcmiranda/FreeTimeFinder/blob/88e11832cacf9c5b1a31e3e18218002365471a17/src/cal_master/Communicator.java][webConnected][1] = -> TRY { -> conn=url.openConnection()@ -> conn.setConnectTimeout(3000,)@ -> conn.setReadTimeout(3000,)@ -> in=conn.getInputStream()@ }
results[https://github.com/icblenke/xmlvm.svn/blob/d39adf81a2c8d6cdb94f630a343c8b70ca8b5426/trunk/xmlvm/src/xmlvm2objc/compat-lib/java/org/xmlvm/iphone/NSURLConnection.java][sendSynchronousRequest][1] = -> url=req.getURL()@ -> TRY { -> conn=url.openConnection()@ -> data=new NSData(conn.getInputStream(),)@ }
results[https://github.com/okey666/BBC-News-Reader/blob/4ef5795a45bb8653e0630cba0e9d86d2698129cb/src/com/digitallizard/bbcnewsreader/resource/web/ImageDownloader.java][getImage][5] = -> TRY {  -> connection=url.openConnection()@ -> stream=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/JabRef/jabref/blob/ae5dd9b15d1e15bc0d27d30e013144afa30e8e73/src/java/net/sf/jabref/ImportFormatReader.java][fetchMedline][2] = -> TRY { -> url=new URL(baseUrl,)@ -> data=(HttpURLConnection) url.openConnection()@ -> parser.parse(data.getInputStream(),handler,)@ }
results[https://github.com/mthuurne/unrealspeccyp/blob/f1a49ef74c3e8640ca723bf47f86453cd8fc1edd/build/android/src/app/usp/fs/FileSelectorSource.java][LoadText][1] = -> TRY { -> connection=new URL(_url,).openConnection()@ -> is=connection.getInputStream()@ -> len=connection.getContentLength()@ }
results[https://github.com/eclipse/mylyn.commons/blob/f5639893b2db5388637149dc83fc9b46797c683f/org.eclipse.mylyn.commons.sdk.util/src/org/eclipse/mylyn/commons/sdk/util/TestConfiguration.java][getConfigurations][2] = -> TRY { -> connection=new URL(url,).openConnection()@ -> in=new InputStreamReader(connection.getInputStream(),)@ }
results[https://github.com/iRail/BeTrains-for-Android/blob/c00f43c5c86177fdd807efabf742dc5724e11487/BeTrains/src/tof/cv/mpp/adapter/TweetItemAdapter.java][getBitmap][14] = -> TRY { -> url=new URL(bitmapUrl,)@ -> return BitmapFactory.decodeStream(url.openConnection().getInputStream(),)@ }
results[https://github.com/statalign/statalign/blob/5c47b6f02018f8341ccb9f481032a857ee3a11aa/src/statalign/ui/MainFrame.java][checkPage][1] = -> TRY { -> conn=new URL(StatAlign.webPageURL,).openConnection()@ -> conn.setReadTimeout(CONNECT_TIMEOUT,)@ -> stream=conn.getInputStream()@ }
results[https://github.com/nschlimm/playground/blob/493833a817b6915df5cf5187064176ca4877f9bb/projectLibrary/src/bb/net/UrlUtil.java][analyseFileUrl][2] = -> TRY { -> conn=url.openConnection()@ -> conn.connect()@ -> conn.getInputStream()@ } CATCH(Throwable) { -> return "-Analysis outcome: INTERRUPTED -- the following Throwable was thrown during analysis "+"(will need to manually analyse):"+"\n"+ThrowableUtil.toString(t,)@ }
results[https://github.com/andrewphorn/ClassiCube-Client/blob/494686f06299dc7dc88a2399e2ced26ad21b036d/src/main/java/de/jarnbjo/ogg/UncachedUrlStream.java][<init>][1] = -> TRY {  -> this.source=source.openConnection()@ -> this.sourceStream=this.source.getInputStream()@ } CATCH(OggFormatException,IOException) {}
results[https://github.com/eclipse/e4.ui/blob/14559bf6e10da6f9128168410296a2b59c3cb74f/bundles/org.eclipse.e4.ui.gadgets/src/org/eclipse/e4/ui/internal/gadgets/opensocial/OpenSocialView.java][run][1] = -> TRY { -> favicon=new URL("http://"+host+"/favicon.ico",)@ -> is=favicon.openConnection().getInputStream()@ -> icon=new Image(display,is,)@ }
results[https://github.com/jonasberglund/skrubb_DAT255/blob/bd96ad0e0b5c298f9dccd424dcdc780eb75dc1af/H-sektionen/src/se/chalmers/h_sektionen/utils/LoadData.java][loadLunchFromRSS][1] = -> TRY { -> url=new URL(urlString,)@ -> conn=(HttpURLConnection) url.openConnection()@ -> parser.setInput(conn.getInputStream(),null,)@ }
results[https://github.com/jbosstools/jbosstools-base/blob/17e353bb454bb32d72783fe5350fd42f71808811/common/plugins/org.jboss.tools.common.model/src/org/jboss/tools/common/model/loaders/impl/URLRootLoader.java][getInputStream][1] = -> TRY { -> return new URL(getPath(object,),).openConnection().getInputStream()@ }
results[https://github.com/MCUpdater/MCUpdater/blob/2eec7681f2e3c3d605b66d7dc6da403b6b40629e/MCU-API/src/org/mcupdater/mojang/AssetManager.java][getAssets][1] = -> TRY { -> indexUrl=new URL("https://s3.amazonaws.com/Minecraft.Download/indexes/"+indexName+".json",)@ -> indexStream=indexUrl.openConnection().getInputStream()@ -> json=IOUtils.toString(indexStream,)@ }
results[https://github.com/mscheper/onebusaway-ms-application-modules/blob/c0c2e77b4aa82872f4f1cfaae88537b661957695/onebusaway-transit-data-federation/src/main/java/org/onebusaway/transit_data_federation/impl/ArrivalAndDepartureAlarmServiceImpl.java][run][1] = -> TRY { -> url=new URL(rawUrl,)@ -> connection=url.openConnection()@ -> in=connection.getInputStream()@ } CATCH(Throwable) { -> _log.warn("error firing alarm",ex,)@ }
results[https://github.com/NCIP/cagrid-core/blob/269a51e5ee3173d26de3379ecd383e70d49ee003/caGrid/projects/installer/src/org/cagrid/installer/tasks/DownloadFileTask.java][run][1] = -> TRY { -> conn=this.url.openConnection()@ -> conn.connect()@ -> this.totalBytes=conn.getContentLength()@ -> this.in=conn.getInputStream()@ }
results[https://github.com/parworks/PARWorks-Android-Java/blob/84f620b3a93856130bd3be4a1423205c6ea17923/src/com/parworks/androidlibrary/utils/BitmapUtils.java][getImageStream][9] = -> TRY { -> input=stringUrl.openConnection().getInputStream()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/sonatype/maven-reference-en/blob/ca21ce893236eefd8dde5e7b659962f92af42b2d/examples/ch-custom/simple-weather/src/main/java/org/sonatype/mavenbook/weather/YahooRetriever.java][retrieve][56] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/giorgiosironi/Chansonnier/blob/ade7981d787b55d62cd4e0a449f9c1fe55d4000e/chansonnier/it.polimi.chansonnier.agent/code/src/it/polimi/chansonnier/agent/URLUtils.java][retrieve][5] = -> TRY {  -> conn=(HttpURLConnection) url.openConnection()@ -> conn.setRequestMethod("GET",)@ -> is=conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/apurtell/hadoop/blob/a4910f27a144a48e57434bf33c320b0d9d4ea2b0/src/test/hdfs/org/apache/hadoop/hdfs/DFSTestUtil.java][urlGet][37] = -> TRY {  -> conn=url.openConnection()@ -> IOUtils.copyBytes(conn.getInputStream(),out,4096,true,)@ } CATCH(IOException) {}
results[https://github.com/zywonderful2/mydeal/blob/5a4dc52e3d97c1c01755301ede192e247eca8ccc/src/org/archive/net/s3/Handler.java][main][21] = -> TRY {  -> u=new URL(args[0],)@ -> connect=u.openConnection()@ -> is=connect.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/umbrahan/Buzzle/blob/a849b1aa1024a3590fe62bdbac1a7a25775f4c51/android.com.appgame7.lovepuddings/src/com/crazyamber/core/Utils.java][dowloadTextFile][1] = -> TRY { -> u=new URL(url,)@ -> conn=(HttpURLConnection) u.openConnection()@ -> conn.setConnectTimeout(300,)@ -> conn.connect()@ -> is=conn.getInputStream()@ }
results[https://github.com/uDig/udig-platform/blob/fae0b31d673f218d5474c6cbdbc78749e8703d41/plugins/net.refractions.udig.catalog.wmt/src/net/refractions/udig/catalog/internal/wmt/wmtsource/ww/LayerSet.java][getRootElementFromUrl][3] = -> TRY {  -> connection=url.openConnection()@ -> dom=builder.build(connection.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/visage-lang/netbeans-plugin/blob/5d0d8dff3f73da832dcd1f4d2ef1e19179e20edc/visage.weather2/resources/WeatherFX/src/weatherfx/service/YahooWeatherService.java][getInputStreamFromURL][3] = -> TRY {  -> con=url.openConnection()@ -> con.connect()@ -> return con.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/wvengen/jGridstart/blob/2203f8882bf1b5c27e5cab1c3b5841ebbacd2e6e/jgridstart-main/src/main/java/nl/nikhef/jgridstart/gui/util/TemplateWizard.java][retrieveDocument][2] = -> TRY {  -> conn=url.openConnection()@ -> conn.setDefaultUseCaches(true,)@ -> in=conn.getInputStream()@ } CATCH(SAXException,IOException,ParserConfigurationException) {}
results[https://github.com/frenchc/jetm/blob/cf146bf59c5ee423d47efcd646e59f8e7554d5f5/modules/jetm-rrd/src/main/java/etm.contrib/rrd/rrd4j/Rrd4jUtil.java][createGraph][2] = -> TRY { -> connection=templateUrl.openConnection()@ -> in=connection.getInputStream()@ } CATCH(IOException) { -> throw new EtmException(e,)@ }
results[https://github.com/Aulie/Freerider/blob/9d1f7e0ff3655b7f07c5156243396c7e7877a0d3/Freerider/src/no/ntnu/idi/socialhitchhiking/map/RouteProvider.java][getConnectionInputStream][3] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/martinrevert/aRGENTeaM/blob/39d7d00edd8f3060476efe991f4b430b2f69b273/src/ar/com/martinrevert/argenteam/GCMIntentService.java][getRemoteImage][1] = -> TRY { -> imagelink=new URL(aURL,)@ -> conn=imagelink.openConnection()@ -> conn.connect()@ -> bis=new BufferedInputStream(conn.getInputStream(),)@ }
results[https://github.com/tisoft/microemu/blob/0da6ea41a432a3f6cd6d81572849d60444d68b3f/microemulator/src/src/com/sixlegs/image/png/PngImage.java][<init>][1] = -> TRY {  -> is=url.openConnection().getInputStream()@ -> in_raw=new BufferedInputStream(is,BUFFER_SIZE,)@ } CATCH(IOException) {}
results[https://github.com/jgf/wala-mirror/blob/8ff8dab56a89d5d460a98d80c2747e90e175d583/com.ibm.wala.core/src/com/ibm/wala/classLoader/AbstractURLModule.java][getInputStream][1] = -> TRY { -> return url.openConnection().getInputStream()@ } CATCH(IOException) { -> Assertions.UNREACHABLE()@ }
results[https://github.com/vaadin/gwt/blob/a5b133ee7ca31b32bd60a474ae259a0f95bef5d3/dev/core/src/com/google/gwt/dev/javac/CompilationUnitArchive.java][createFromURL][4] = -> TRY {  -> return createFromStream(location.openConnection().getInputStream(),)@ } CATCH(IOException,ClassNotFoundException) {}
results[https://github.com/icblenke/xmlvm.svn/blob/cce6187b80e13b2d12675875b545fe6d7409cc5e/changes/apuder/jsni/src/xmlvm2objc/compat-lib/java/org/xmlvm/iphone/NSURLConnection.java][sendSynchronousRequest][3] = -> url=req.getURL()@ -> TRY { -> conn=url.openConnection()@ -> rd=new BufferedReader(new InputStreamReader(conn.getInputStream(),),)@ }
results[https://github.com/egonw/pathvisio/blob/af58ae201d0b4b419dfad2e243bbe74aa274c50d/src/wikipathways/org/wikipathways/applet/gui/GenMappExporter.java][doExport][3] = -> TRY {  -> con=pwUrl.openConnection()@ -> pathway.readFromXml(con.getInputStream(),true,)@ } CATCH(Exception) {}
results[https://github.com/disco-bot/disco-bot/blob/7f9ace4843a6d72c3f24e41c170a86f05b5f7047/src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java][eachLine][2] = -> TRY {  -> return eachLine(url.openConnection().getInputStream(),firstLine,closure,)@ } CATCH(IOException) {}
results[https://github.com/tsurdilo/elissa/blob/c0b0bd3733657e8dcf2246d833d6361d2747b7d5/test/jsunit/java/source_server/net/jsunit/RemoteMachineServerHitter.java][submitRequestTo][5] = -> TRY {  -> connection=url.openConnection()@ -> return StreamUtility.readAllFromStream(connection.getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/cytoscape/cytoscape2/blob/7e1904045eba4d731eaff0ccc9f5aadf0a075e72/src/cytoscape/data/ontology/readers/unitTests/DBCrossReferenceReaderTest.java][connectToURL][5] = -> TRY {  -> uc=url.openConnection()@ -> uc.setReadTimeout(5000,)@ -> is=uc.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/pingpongboss/Table-Tennis-Ratings/blob/4acb320eb0b35bf766f3636520357e467af1ee44/src/wei/mark/tabletennis/util/AppEngineParser.java][ping][1] = -> TRY { -> url=new URL(uri,)@ -> connection=(HttpURLConnection) url.openConnection()@ -> rd=new BufferedReader(new InputStreamReader(connection.getInputStream(),"iso-8859-1",),)@ }
results[https://github.com/ucb-bar/riscv-gcc/blob/c57740cef52139a7e763a4c17cd17ceebd233d09/gcc-4.6.1/libjava/classpath/javax/swing/JEditorPane.java][getStream][4] = -> TRY {  -> conn=page.openConnection()@ -> type=conn.getContentType()@ -> stream=conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/dkulp/eclipse-swordfish/blob/d64459a1ef793211be7633847fdd0bfe513c3f08/tools/org.eclipse.swordfish.tooling.ui/src/org/eclipse/swordfish/tooling/ui/wizards/RegistryAccess.java][getWSDLUrls][1] = -> TRY {  -> urlConnection=registryUrl.openConnection()@ -> urlConnection.addRequestProperty("accept","application/xml",)@ -> is=urlConnection.getInputStream()@ } CATCH(IOException,SAXException) {}
results[https://github.com/National-Univerity-Of-Singapore-IVLE/iCreate2012-Team-CM/blob/0b95b6bbd0091631522bd99ea0bfd7e90291a69f/src/com/nuscomputing/ivle/SettingsActivityLegacy.java][doInBackground][6] = -> TRY { -> url=new URL("http://ivle.nuscomputing.com/versionCode",)@ -> conn=(HttpURLConnection) url.openConnection()@ -> reader=new BufferedReader(new InputStreamReader(conn.getInputStream(),),)@ }
results[https://github.com/slcs/org.glite.slcs.client/blob/306cd1ec697dbe98495fa7bf1221dd9455474a84/src/au/id/jericho/lib/html/EncodedSource.java][construct][3] = -> TRY {  -> urlConnection=url.openConnection()@ -> httpURLConnection=(urlConnection instanceof HttpURLConnection)?(HttpURLConnection) urlConnection:null@ -> inputStream=urlConnection.getInputStream()@ -> contentType=urlConnection.getContentType()@ } CATCH(IOException) {}
results[https://github.com/egonw/pathvisio/blob/8b30db4bd4252fa1030e0e97d9c88ec067546c1a/modules/org.pathvisio.core/src/org/pathvisio/core/util/FileUtils.java][downloadFile][3] = -> TRY {  -> conn=url.openConnection()@ -> conn.setUseCaches(false,)@ -> in=conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/egonw/pathvisio/blob/34be97922072a0d2cb7381f3a442c02246fde966/src/core/visualization/plugins/ExpressionImagePlugin.java][getInputStream][3] = -> TRY { -> con=url.openConnection()@ -> return con.getInputStream()@ } CATCH(IOException) { -> GmmlVision.log.error("Unable to open connection to image",e,)@ }
results[https://github.com/hixi-hyi/IDUMO/blob/52cb7485dffded79df3c5f82f49f5c193043abe8/core/src/jp/idumo/common/component/ReversedGeocording.java][init][4] = -> TRY { -> accessURL=new URL(requestURL,)@ -> con=accessURL.openConnection()@ -> doc=new SAXBuilder().build(con.getInputStream(),)@ }
results[https://github.com/hjalmare/discobot/blob/f75da2b00746ec38650aefd3174624c62d424e43/src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java][getBytes][1] = -> TRY {  -> return getBytes(url.openConnection().getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/NCIP/cagrid-core/blob/269a51e5ee3173d26de3379ecd383e70d49ee003/caGrid/projects/installer/src/org/cagrid/installer/util/DownloadPropertiesThread.java][run][2] = -> TRY { -> from=new URL(this.fromUrl,)@ -> conn=from.openConnection()@ -> conn.connect()@ -> totalBytes=conn.getContentLength()@ -> in=conn.getInputStream()@ }
results[https://github.com/davereyntjens/slang-ide/blob/514ce3df056eaa5f369ff520ad186bfae7095d4c/slang/src-java/reyntjens/slangui/callserver/HttpRequest.java][getDirectoryContent][3] = -> TRY { -> url=new URL(protocol,domain,port,dirPath,)@ -> yc=url.openConnection()@ -> in=new BufferedReader(new InputStreamReader(yc.getInputStream(),),)@ }
results[https://github.com/M1cha/jode/blob/90a8f823f300b0753c8d342069ac9f399b00f967/jode/src/net/sf/jode/bytecode/ClassPath.java][exists][1] = -> TRY { -> url=new URL(base,filename,)@ -> conn=url.openConnection()@ -> conn.connect()@ -> conn.getInputStream().close()@ }
results[https://github.com/ddopson/xmlvm/blob/eac59dab54c5db81469d2c32377aa1cb99a7f787/src/xmlvm2objc/compat-lib/java/org/xmlvm/iphone/NSURLConnection.java][sendSynchronousRequest][2] = -> url=req.URL().xmlvmGetURL()@ -> TRY { -> conn=url.openConnection()@ -> data=new NSData(conn.getInputStream(),)@ }
results[https://github.com/srnsw/xena/blob/7c046e3505244e9cfb1685f2f6cf407454981ceb/src/org/ccil/cowan/tagsoup/Parser.java][getInputStream][1] = -> TRY {  -> url=new URL(basis,systemid,)@ -> c=url.openConnection()@ -> return c.getInputStream()@ } CATCH(IOException,SAXException) {}
results[https://github.com/freezy/android-xbmcremote/blob/0b6b28330820801832e83d7e1c2b4a2d8d0b4f4c/src/org/xbmc/android/backend/httpapi/NowPlayingPollerThread.java][download][1] = -> TRY { -> url=new URL(pathToDownload,)@ -> uc=url.openConnection()@ -> rd=new BufferedReader(new InputStreamReader(uc.getInputStream(),),8192,)@ }
results[https://github.com/timvisee/SafeCreeper/blob/7ac8da870e94e8b9a8491090f00a4f54ed6639b8/src/com/timvisee/safecreeper_/util/SCUpdateChecker.java][getLastVersion][3] = -> TRY { -> url=new URL("http://www.timvisee.com/projects/bukkit/safe-creeper/lastversion.php",)@ -> con=url.openConnection()@ -> con.setConnectTimeout(2000,)@ -> con.setReadTimeout(2000,)@ -> ins=con.getInputStream()@ }
results[https://github.com/arjunroy/cinder_base/blob/9066cfe9886ac131c34d59ed0e2d287b0e3c0087/tests/CoreTests/android/core/URLTest.java][request][1] = -> TRY {  -> connection=url.openConnection()@ -> connection.connect()@ -> input=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/ColoradoSchoolOfMines/kinect_exhibit/blob/86e1e19c581736c61b47a220a525a304242eccfc/src/test/java/edu/mines/csci598/recycler/splashscreen/weather/WeatherXMLParserTest.java][shouldNotFindData][2] = -> TRY {  -> weatherUrl=new URL("http://free.worldweatheronline.com/feed/weather.ashx?key="+BAD_API_KEY+"&q="+LOCAL_ZIP+"&num_of_days=1&format=xml",)@ -> weatherConnection=weatherUrl.openConnection()@ -> weatherStream=weatherConnection.getInputStream()@ } CATCH(IOException,SAXException,ParserConfigurationException) {}
results[https://github.com/tijuca/icedove/blob/4920dca05eb3b6daa968edb29fd558ff8d2a423a/directory/sdks/java-sdk/ldapfilter/netscape/ldap/util/LDAPFilterDescriptor.java][<init>][2] = -> TRY {  -> urlc=url.openConnection()@ -> inputStream=new DataInputStream(urlc.getInputStream(),)@ } CATCH(IOException,BadFilterException) {}
results[https://github.com/tuvd08/other/blob/1c7823e19be948e86263446032c0a4d125aa4c16/java-tools/io-project/src/main/java/org/thaonguyen/social/LinkShare.java][getMimeTypeOfURL][2] = -> TRY { -> url=new URL(urlString,)@ -> urlConnection=url.openConnection()@ -> mimeType=urlConnection.getContentType()@ -> mimeType=URLConnection.guessContentTypeFromStream(urlConnection.getInputStream(),)@!(mimeType!=null) }
results[https://github.com/52North/OX-Framework/blob/bff9c16cf556c4c224ec140ae7047fa3c7e0c5fd/52n-oxf-core/src/main/java/org/n52/oxf/util/IOHelper.java][supplyProperty][3] = -> TRY {  -> in=url.openConnection().getInputStream()@ -> prop.load(in,)@ } CATCH(IOException) {}
results[https://github.com/rocapal/cursoAndroidURJC/blob/551119ad863d5bc711a1b8d64ba8818b0b3fe9eb/2ndEdition/laura.nunezgonzalez/Wifiandogepeto/src/es/android/wifiandogepeto/MainActivity.java][getBitmapFromURL][2] = -> TRY { -> url=new URL(urlBitmap,)@ -> connection=(HttpURLConnection) url.openConnection()@ -> connection.setDoInput(true,)@ -> connection.connect()@ -> input=connection.getInputStream()@ }
results[https://github.com/hjalmare/discobot/blob/f75da2b00746ec38650aefd3174624c62d424e43/src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java][newInputStream][2] = -> TRY {  -> return new BufferedInputStream(url.openConnection().getInputStream(),)@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/brendanofallon/Pipeline/blob/587754633e1cb3d01161a8a8afd348ef2b4c5789/src/ncbi/PubMedFetcher.java][retriveDocument][2] = -> TRY {  -> yc=url.openConnection()@ -> doc=builder.parse(yc.getInputStream(),)@ } CATCH(IOException,ParserConfigurationException,SAXException) {}
results[https://github.com/madiator/HadoopUSC/blob/df982bc7dd648f4d76d63905ed9ac90ca53a7c9e/src/hdfs/org/apache/hadoop/hdfs/DFSUtil.java][getHTMLContent][1] = -> TRY {  -> path=uri.toURL()@ -> connection=path.openConnection()@ -> stream=connection.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/GrizzlyNIO/grizzly-mirror/blob/45b2f10214af65b715a602e4535acbbe41b306cf/modules/websockets/src/test/java/org/glassfish/grizzly/websockets/WebSocketsTest.java][testGetOnWebSocketApplication][1] = -> TRY {  -> url=new URL("http://localhost:"+PORT+"/echo",)@ -> urlConnection=url.openConnection()@ -> is=urlConnection.getInputStream()@ } CATCH(IOException,InstantiationException,InterruptedException) {}
results[https://github.com/aalmiray/Json-lib/blob/c785e4d630387c1e89b83bb6cc3c26420affe420/src/main/java/net/sf/json/groovy/JsonSlurper.java][parse][1] = -> TRY {  -> return parse(url.openConnection().getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/spring-projects/spring-xd/blob/e37c4c9e525a86a956fc73fd2b9354a957842a56/spring-xd-integration-test/src/main/java/org/springframework/xd/integration/util/StreamUtils.java][httpGet][1] = -> TRY {  -> conn=(HttpURLConnection) url.openConnection()@ -> response=conn.getInputStream()@ -> conn.disconnect()@ } CATCH(IOException) {}
results[https://github.com/kmi/iserve/blob/5a48b66bf0516ba227a98b3af4d956a97ea64887/iserve-commons-io/src/main/java/uk/ac/open/kmi/iserve/commons/io/IOUtil.java][urlToReader][1] = -> TRY {  -> con=url.openConnection()@ -> return new InputStreamReader(con.getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/chewiebug/GCViewer/blob/38a6fc3cf56e904c221028336373cd10dd35790e/src/main/java/com/tagtraum/perf/gcviewer/imp/DataReaderFacade.java][readModel][1] = -> TRY {  -> conn=url.openConnection()@ -> in=(conn instanceof HttpURLConnection)?HttpUrlConnectionHelper.openInputStream((HttpURLConnection) conn,HttpUrlConnectionHelper.GZIP,):conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/Echo-tcx/Jitsi/blob/4580da7d321f06258ba4c7f5bf73e2212c956be6/src/net/java/sip/communicator/plugin/nimbuzzavatars/NimbuzzAvatarsActivator.java][getAvatar][1] = -> IF { -> return null@address==null||!(address.endsWith(SERVICE_NAME,)) } -> TRY { -> sourceURL=new URL(AVATAR_DOWNLOAD_LINK+address,)@!(address==null||!(address.endsWith(SERVICE_NAME,))) -> conn=sourceURL.openConnection()@!(address==null||!(address.endsWith(SERVICE_NAME,))) -> in=conn.getInputStream()@!(address==null||!(address.endsWith(SERVICE_NAME,))) }
results[https://github.com/pedropaulovc/UFSC/blob/5db56ccc9ee2bb2e26a5ff8eb0d44bd857ee6117/LeitorFeedsPublicado/src/leitorFeeds/ObtenedorDeFeed.java][obterFeed][3] = -> TRY {  -> url=new URL(this.url,)@ -> return url.openConnection().getInputStream()@ } CATCH(IOException,MalformedURLException) {}
results[https://github.com/escidoc/escidoc-core/blob/3de0ed1dd286670c514fe0e0f65381db826d404d/integration-tests/src/test/java/de/escidoc/core/test/EscidocRestSoapTestsBase.java][getTemplateAsString][1] = -> TRY {  -> con=(HttpURLConnection) path.openConnection()@ -> con.setRequestMethod("GET",)@ -> is=con.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/always-on/always/blob/1d28cb7cbac3bbfe535ee13b596ba65cbd23136f/plugins/weather-plugin/weather/java/edu/wpi/always/weather/wunderground/WundergroundHelper.java][<init>][1] = -> TRY {  -> url=new URL(urlString,)@ -> connection=url.openConnection()@ -> is=connection.getInputStream()@ } CATCH(IOException,ParserConfigurationException,SAXException) {}
results[https://github.com/servalproject/batphone/blob/e5fe1ab3349d10a656de25eed4983016f5b04bf2/src/org/servalproject/system/ChipsetDetection.java][getUrl][1] = -> TRY {  -> Log.v("BatPhone","Fetching "+url,)@ -> conn=url.openConnection()@ -> in=conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/srnsw/xena/blob/8e19788ceb5f18d32d53017a5fc60bc2b3024de9/plugins/audio/ext/src/mpegaudiospi1.9.4/src/javazoom/spi/mpeg/sampled/file/MpegAudioFileReader.java][getAudioFileFormat][1] = -> TRY {  -> conn=url.openConnection()@ -> conn.setRequestProperty("Icy-Metadata","1",)@ -> inputStream=conn.getInputStream()@ } CATCH(UnsupportedAudioFileException,IOException) {}
results[https://github.com/Paxle/Paxle/blob/f3b4d2913a5a4f3b288215a091cba8c9eb425743/bundles/CharsetDetector/src/org/paxle/charset/impl/CharsetDetector.java][readMimeTypeSet][1] = -> TRY { -> connection=url.openConnection()@ -> connectionIn=connection.getInputStream()@ } CATCH(Exception) { -> this.logger.warn("Unable to read inspectable mimeTypes from "+url,e,)@ }
results[https://github.com/Mobicents/mediaserver/blob/58b65b61f232ff6e300f344b08fd91e9b8a86c6d/resources/mediaplayer/src/main/java/org/mobicents/media/server/impl/resource/mediaplayer/audio/tts/TtsTrackImpl.java][<init>][1] = -> TRY {  -> connection=url.openConnection()@ -> this.voice.speak(connection.getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/arquillian/arquillian-container-tomcat/blob/cbf92803bfd0ce715b800bf93898d70d1d1b6335/tomcat-embedded-8/src/test/java/org/jboss/arquillian/container/tomcat/embedded_8/TomcatEmbeddedClientTestCase.java][getHttpResponse][2] = -> TRY {  -> in=servletUrl.openConnection().getInputStream()@ -> len=in.read(buffer,)@ } CATCH(IOException) {}
results[https://github.com/OpenMods/OpenBlocks/blob/db63f26049fd4797ae3178acf975efb85e2158f4/src/openblocks/client/radio/CodecMp3.java][initialize][1] = -> TRY { -> conn=url.openConnection()@ -> conn.connect()@ -> bitstream=new Bitstream(conn.getInputStream(),)@ } CATCH(Throwable) { -> Log.warn(t,"Failed to initalize codec for url '%s'",url,)@ }
results[https://github.com/lequana2/smart-meal/blob/1251da527b3992c5c6046229534248bde79a8fa5/smartmeal/src/org/jruleengine/RuleExecutionSetProviderImpl.java][createRuleExecutionSet][1] = -> TRY {  -> urlc=new URL(uri,).openConnection()@ -> is=urlc.getInputStream()@ } CATCH(RuleExecutionSetCreateException,IOException,RemoteException) {}
results[https://github.com/blangel/ply/blob/2ac753acc09a9a848329ce59da75a206ba656887/java-scripts/ply-repo-manager/src/main/java/net/ocheyedan/ply/script/RepoManager.java][get][1] = -> TRY { -> url=URI.create(urlPath,).toURL()@ -> urlConnection=url.openConnection()@ -> urlConnection.setRequestProperty("Authorization",basicAuth,)@ -> stream=urlConnection.getInputStream()@ }
results[https://github.com/iFixit/iFixitAndroid/blob/afbd911de986fc1093eca97ff34087f730189a9c/App/src/com/dozuki/ifixit/ui/guide_view/GuideStepViewFragment.java][doInBackground][1] = -> TRY { -> url=new URL(embed[0].getURL(),)@ -> urlConnection=url.openConnection()@ -> in=new BufferedInputStream(urlConnection.getInputStream(),)@ }
results[https://github.com/xebialabs/overthere/blob/fb635b6c69b407555e113e2b07078124c2db35dd/src/main/java/com/xebialabs/winrm/connector/JdkHttpConnector.java][sendMessage][1] = -> TRY { -> urlConnection=targetURL.openConnection()@ -> con=(HttpURLConnection) urlConnection@ -> is=urlConnection.getInputStream()@ } CATCH(Exception) { -> throw new WinRMRuntimeIOException("send message on "+targetURL+" error ",requestDocument,responseDocument,e,)@ }
results[https://github.com/alasca/alasca/blob/137166d6d4454f2bb200c9c1aefd1f7775fee350/src/main/java/net/aepik/alasca/Version.java][getCurrentVersion][1] = -> TRY { -> u=new URL(Version.URL_VERSION,)@ -> connection=(HttpURLConnection) u.openConnection()@ -> connection.setRequestMethod("GET",)@ -> connection.connect()@ -> stream=connection.getInputStream()@ }
results[https://github.com/ande3577/MN-Mtb-Trail-Reports/blob/74c35b6d25bf7a5f93941fb4ed75589e5f423d24/org.dsanderson.xctrailreport/src/org/dsanderson/SkinnyskiReportRetriever.java][connect][1] = -> TRY { -> url=new URL("http://skinnyski.com/trails/reports.asp",)@ -> urlConnection=(HttpURLConnection) url.openConnection()@ -> in=new BufferedInputStream(urlConnection.getInputStream(),)@ -> urlConnection.disconnect()@ }
