results[https://github.com/photon-infotech/framework/blob/d472db8ca98db7a165aff8c39169ca33f597d9a7/phresco-framework-web/src/main/java/com/photon/phresco/framework/rest/api/CIService.java][localJenkinsLocalAlive][13] = -> TRY { -> url=new URL(jenkinsUrl,)@ -> connection=url.openConnection()@ -> httpConnection=(HttpURLConnection) connection@ }
results[https://github.com/travp624/packages_apps_BlackICEControl/blob/75c5d4d89ba332bdc8ed9086566a740358b30ff6/src/com/roman/romcontrol/fragments/MasturModsSettings.java][run][22] = -> TRY { -> updateURL=new URL("http://th3oryrom.us.to/mastur/mmsettings/versioncode.txt",)@ -> conn=updateURL.openConnection()@ -> is=conn.getInputStream()@ }
results[https://github.com/UWCS/choob/blob/fa8a3ff84f3dbb101077f1c773ff5e0239a76cd8/contrib/Fish.java][commandWUBRS][1] = -> yahoo=new URL("http://www.wubrs.org.uk/quote.php",)@ -> yc=yahoo.openConnection()@ -> in=new BufferedReader(new InputStreamReader(yc.getInputStream(),),)@
results[https://github.com/gvtools/gvtools-legacy/blob/75bd639b8fd3710956c7961f0aa2c66b271d44e5/libraries/libCorePlugin/src/main/java/com/iver/core/preferences/network/NetworkPage.java][isConnected][3] = -> TRY { -> url=new URL("http://www.google.com",)@ -> url.openConnection()@ -> url.openStream()@ }
results[https://github.com/blitz-research/monkey/blob/6a5b034bf5e9ec7c3a30076afcb86ea0f08f8dd9/modules/brl/native/httprequest.android.java][Open][1] = -> TRY { -> turl=new URL(url,)@ -> _con=(HttpURLConnection) turl.openConnection()@ -> _con.setRequestMethod(req,)@ }
results[https://github.com/rmcc/android_dalvik/blob/6a95adec3a5fa107f2bec11d77a66408f239c5ac/libcore/luni/src/test/java/org/apache/harmony/luni/tests/java/net/HttpURLConnectionTest.java][test_getResponseCode][10] = -> TRY { -> url=new URL(unknownURL,)@ -> conn=(HttpURLConnection) url.openConnection()@ -> conn.getResponseCode()@ }
results[https://github.com/welle/MediaManager/blob/ae0cd9bba436ee054799f2bd554a57c6008358db/Media/javasource/jet/media/managers/webstatus/WebStatusManager.java][run][7] = -> TRY { -> url=new URL(urlStr,)@ -> urlConnection=url.openConnection()@ -> urlConnection.connect()@ }
results[https://github.com/manzhda/FBReaderJLib/blob/e50c165357008b27305b99166867f86fe0233b40/platform/android/src/org/geometerplus/android/fbreader/BookDownloader.java][run][8] = -> TRY { -> url=new URL(uriString,)@ -> connection=url.openConnection()@ -> myFileLength=connection.getContentLength()@ -> httpConnection=(HttpURLConnection) connection@ }
results[https://github.com/leth/ng4j/blob/0f98cc848d493bcb15f0f6ab6d59d71841bcc93f/src/de/fuberlin/wiwiss/ng4j/impl/GraphReaderService.java][getMIMEType][1] = -> TRY { -> realURL=new URL(someURL,)@ -> conn=realURL.openConnection()@ -> return conn.getContentType()@ }
results[https://github.com/sgbell/podsalinan/blob/a9474b8a433983c303575e12a4208f3bab7d0e36/podsalinan/src/com/mimpidev/podsalinan/Downloader.java][isInternetReachable][8] = -> TRY { -> url=new URL("http://www.google.com",)@ -> urlConnect=(HttpURLConnection) url.openConnection()@ -> objData=urlConnect.getContent()@ }
results[https://github.com/acanda/eclipse-cs/blob/369a634a968065ecb577209fc2cf3cfdd051f34b/net.sf.eclipsecs.core/src/net/sf/eclipsecs/core/config/configtypes/ConfigurationType.java][getAdditionPropertiesBundleBytes][1] = -> TRY { -> propertyFileURL=new URL(propsLocation,)@ -> connection=propertyFileURL.openConnection()@ -> return getBytesFromURLConnection(connection,)@ }
results[https://github.com/chriskuehl/backup-tube/blob/b82b62a6f71c7f408987c3ed94d3358cdf86b05e/app-common/src/net/kuehldesign/backuptube/app/common/stored/site/youtube/YouTubeAppHelper.java][hasBeenDeleted][1] = -> TRY { -> url=new URL("http://gdata.youtube.com/feeds/api/videos/"+video.getVideoID(),)@ -> connection=url.openConnection()@ -> httpConnection=(HttpURLConnection) connection@ }
results[https://github.com/TantalumMobile/Tantalum/blob/d55d7841791538ec684852de764b5ac4d9c9150e/Tantalum4Android/src/com/futurice/tantalum4/PlatformUtils.java][<init>][91] = -> TRY {  -> con=(HttpURLConnection) new URL(url,).openConnection()@ } CATCH(IOException) {}
results[https://github.com/felipetorres/statim-server/blob/ef70de92c36d1c6dc52c93f3b41e8ecc3a3951a0/src/main/java/optimizer/DistanceMatrix.java][getMatrixDistance][1] = -> TRY { -> url=new URL("http://maps.googleapis.com/maps/api/distancematrix/json?"+"origins="+coordenadas+"&"+"destinations="+coordenadas+"&"+"language=pt-BR"+"&"+"sensor=false",)@ -> connection=url.openConnection()@ -> connection.setDoOutput(true,)@ -> return parseResponseFrom(connection,)@ }
results[https://github.com/srnsw/xena/blob/61253c8c76b8bd39e7e52eef5cd6b756fb8d0929/ext/src/jpedal_lgpl-3.83b38/src/org/jpedal/examples/simpleviewer/Commands.java][selectURL][2] = -> IF { -> TRY { -> testExists=new URL(selectedFile,)@selectedFile!=null -> conn=testExists.openConnection()@ } }
results[https://github.com/SecurisationSiteGVI/securisation-site-gvi/blob/f5c2c253e5266b745b8afcf94002edc28bae7231/src/physique/io/CameraDriverSonyImpl.java][piloterCameraHaut][19] = -> TRY {  -> u=new URL("http://"+ip+"/command/ptzf.cgi?Move=up,8",)@ -> connection=(URLConnection) u.openConnection()@ } CATCH(Exception) {}
results[https://github.com/AllPlayers/allplayers-android/blob/63c762fc79fefe9802c3fcf11dc629447a946ee5/AllPlayers-Android/tests/src/SampleTest1.java][main][4] = -> TRY { -> url=new URL("https://www.allplayers.com/?q=api/v1/rest/groups.json",)@ -> connection=url.openConnection()@ -> connection.setDoInput(true,)@ -> inStream=connection.getInputStream()@ }
results[https://github.com/jasonrogena/mistro_farmer_android/blob/f02193e1bac86834506903d90f2202539f307da7/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java][isConnectedToServer][6] = -> TRY { -> myUrl=new URL("http://azizi.ilri.cgiar.org",)@ -> connection=myUrl.openConnection()@ -> connection.setConnectTimeout(timeout,)@ -> connection.connect()@ }
results[https://github.com/ezterry/TTRSS_android_ezterry/blob/cbae8a4dc299bc130b4d3837e8e60f23d1051760/src/org/fox/ttrss/util/ImageCacheService.java][getStream][4] = -> TRY { -> url=new URL(urlString,)@ -> urlConnection=url.openConnection()@ -> urlConnection.setConnectTimeout(250,)@ -> return urlConnection.getInputStream()@ }
results[https://github.com/BaseXdb/basex/blob/0a772b41e7fbaa4681e1c3dfa3c83edbef3bb228/src/main/java/org/basex/query/util/HTTPClient.java][openConnection][2] = -> TRY {  -> url=new URL(dest,)@ -> return (HttpURLConnection) url.openConnection()@ } CATCH(QueryException,IOException) {}
results[https://github.com/DDoS/Quarantine/blob/4bd8d6c917deb392a466f791a90a7fb457d11c07/src/me/DDoS/Quarantine/Quarantine.java][downloadFile][2] = -> TRY { -> url=new URL(urlString,)@ -> connection=url.openConnection()@ -> inputStream=new DataInputStream(connection.getInputStream(),)@ }
results[https://github.com/madeye/dbartists/blob/4106bb4865b082448d4641b15ea6808570d0a6c5/src/org/dbartists/PlaybackService.java][run][1] = -> TRY { -> remote=new URL(url,)@ -> urlConnection=remote.openConnection()@ -> urlConnection.connect()@ -> file_size=urlConnection.getContentLength()@ }
results[https://github.com/vn971/multipoints/blob/4b77614ab00981822ce08f28e77d1d2086afb060/src/ru/narod/vn91/pointsop/server/ServerZagram2.java][getLinkContent][3] = -> TRY { -> url=new URL(link,)@ -> urlConn=url.openConnection()@ -> inStream=new InputStreamReader(urlConn.getInputStream(),"UTF-8",)@ }
results[https://github.com/heinrisch/Contact-Picture-Sync/blob/2e34c6d1f4af83947a189c12875c2750add61d78/src/heinrisch/contact/picture/sync/Tools.java][downloadBitmap][3] = -> TRY { -> connection=new URL(url,).openConnection()@ -> connection.connect()@ -> is=connection.getInputStream()@ }
results[https://github.com/AsyncHttpClient/async-http-client/blob/bce9f9020edc9bff9a71a4a63cbefc327f621db5/modules/api/src/test/java/com/ning/http/client/async/AsyncProvidersBasicTest.java][asyncProviderContentLenghtGETTest][2] = -> TRY {  -> url=new URL(getTargetUrl(),)@ -> connection=(HttpURLConnection) url.openConnection()@ -> connection.connect()@ } CATCH(Throwable) {}
results[https://github.com/axDev-JDK/jdk/blob/3e3e391a959df5a1d0406a67c6b39efd11897d97/test/java/net/URLConnection/SetIfModifiedSince.java][main][2] = -> TRY { -> url=new URL("http://localhost:"+port+"/index.html",)@ -> urlc=url.openConnection()@ -> urlc.setIfModifiedSince(10000000,)@ -> is=urlc.getInputStream()@ }
results[https://github.com/haneul/appfence_dalvik/blob/6a95adec3a5fa107f2bec11d77a66408f239c5ac/libcore/luni/src/test/java/org/apache/harmony/luni/tests/java/net/HttpURLConnectionTest.java][test_getResponseMessage][9] = -> TRY { -> url=new URL(unknownURL,)@ -> conn=(HttpURLConnection) url.openConnection()@ -> conn.connect()@ -> conn.getResponseMessage()@ }
results[https://github.com/praccu/PHENND-app/blob/643487b99e558a4c56aa1fd083412a38701c9676/src/org/phennd/updates/DataManager.java][pullData][4] = -> TRY { -> url=new URL(target,)@ -> connection=url.openConnection()@ -> httpConnection=(HttpURLConnection) connection@ -> IF { -> return rss@responseCode==HttpURLConnection.HTTP_OK } }
results[https://github.com/iiordanov/bVNC/blob/8c3dd246f880d592eda1c9661bd046919e660fa4/eclipse_projects/Opaque/src/com/undatech/opaque/RemoteCanvasActivity.java][run][1] = -> TRY { -> url=new URL(data.toString(),)@ -> ucon=url.openConnection()@ -> is=ucon.getInputStream()@ }
results[https://github.com/sapo/sapo-broker/blob/c2487e5eb04c453cea68f130dde10cd0f5d8695f/performance-tests/src/pt/com/broker/performance/distributed/TestManager.java][deleteQueue][1] = -> TRY { -> url=new URL(agentUrl,)@ -> connection=url.openConnection()@ -> httpUrlconn=(HttpURLConnection) connection@ } CATCH(Throwable) { -> log.error(String.format("Failed to connect to agent '%s:%s' to delete queue '%s':.",hostname,port,queueName,),t,)@ }
results[https://github.com/molgenis/molgenis_apps-legacy/blob/48f6486aefaf65a12a83045bd36fb89df91e25aa/modules/matrix/plugins/listplugin/ListPluginAnonymous.java][reload][1] = -> TRY { -> servletURL=new URL("http://localhost:8080/"+MolgenisServlet.getMolgenisVariantID()+"/EventViewerJSONServlet?reset=1",)@ -> servletConn=servletURL.openConnection()@ -> servletConn.getContent()@ }
results[https://github.com/JabRef/jabref/blob/ae5dd9b15d1e15bc0d27d30e013144afa30e8e73/src/java/net/sf/jabref/ImportFormatReader.java][fetchMedline][2] = -> TRY { -> url=new URL(baseUrl,)@ -> data=(HttpURLConnection) url.openConnection()@ -> parser.parse(data.getInputStream(),handler,)@ }
results[https://github.com/jbosstools/jbosstools-base/blob/17e353bb454bb32d72783fe5350fd42f71808811/common/plugins/org.jboss.tools.common.model/src/org/jboss/tools/common/model/loaders/impl/URLRootLoader.java][getOutputStream][1] = -> TRY { -> return new URL(getPath(object,),).openConnection().getOutputStream()@ }
results[https://github.com/mthuurne/unrealspeccyp/blob/f1a49ef74c3e8640ca723bf47f86453cd8fc1edd/build/android/src/app/usp/fs/FileSelectorSource.java][LoadText][1] = -> TRY { -> connection=new URL(_url,).openConnection()@ -> is=connection.getInputStream()@ -> len=connection.getContentLength()@ }
results[https://github.com/rhayes-cida/gw_data_portal/blob/2963bcfa3dc61895a9bce7f55ab41decc66f498f/src/main/java/gov/usgs/DataRelayServlet.java][relay][1] = -> TRY {  -> url=new URL(cacheServer,)@ -> conn=url.openConnection()@ -> hconn=(HttpURLConnection) conn@ } CATCH(ServletException,IOException) {}
results[https://github.com/eclipse/mylyn.commons/blob/f5639893b2db5388637149dc83fc9b46797c683f/org.eclipse.mylyn.commons.sdk.util/src/org/eclipse/mylyn/commons/sdk/util/TestConfiguration.java][getConfigurations][2] = -> TRY { -> connection=new URL(url,).openConnection()@ -> in=new InputStreamReader(connection.getInputStream(),)@ }
results[https://github.com/carrot2/carrot2/blob/cb1ab32b11ab0f1b09a15366653a2bb22c35f941/carrot2/components/inputs/treeSnippetMiner/src/com/paulodev/carrot/treeSnippetMiner/treeAnalyser/tokenFeature/IsURLCalc.java][innerCalcValue][1] = -> LOOP { -> TRY { -> temp=new URL(toCheck,)@ -> res=(HttpURLConnection) temp.openConnection()@ } }
results[https://github.com/iRail/BeTrains-for-Android/blob/c00f43c5c86177fdd807efabf742dc5724e11487/BeTrains/src/tof/cv/mpp/adapter/TweetItemAdapter.java][getBitmap][14] = -> TRY { -> url=new URL(bitmapUrl,)@ -> return BitmapFactory.decodeStream(url.openConnection().getInputStream(),)@ }
results[https://github.com/php-coder/mystamps/blob/ee391122f5fd9152075950cb165334264d38202f/src/test/java/ru/mystamps/web/tests/page/AbstractPage.java][getServerResponseCode][1] = -> TRY { -> url=new URL(getFullUrl(),)@ -> conn=(HttpURLConnection) url.openConnection()@ -> return conn.getResponseCode()@ }
results[https://github.com/PeteManchester/MediaPlayer/blob/673042fafb4b282f7da9b469546b906951d8e16d/com.upnp.mediaplayer/src/org/rpi/radio/parsers/PLSParser.java][getConnection][6] = -> TRY {  -> mUrl=new URL(url,).openConnection()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/statalign/statalign/blob/5c47b6f02018f8341ccb9f481032a857ee3a11aa/src/statalign/ui/MainFrame.java][checkPage][1] = -> TRY { -> conn=new URL(StatAlign.webPageURL,).openConnection()@ -> conn.setReadTimeout(CONNECT_TIMEOUT,)@ -> stream=conn.getInputStream()@ }
results[https://github.com/sapo/sapo-broker/blob/e585b44294cbecdaa590efdff237a4cbed50f7e1/monitorization/src/pt/com/broker/monitorization/actions/DeleteQueue.java][deleteQueue][1] = -> TRY { -> url=new URL(agentUrl,)@ -> connection=url.openConnection()@ -> httpUrlconn=(HttpURLConnection) connection@ } CATCH(Throwable) { -> log.error(String.format("Failed to connect to agent '%s:%s' to delete queue '%s'.",hostname,port,queueName,),t,)@ }
results[https://github.com/eclipse/mwe/blob/286c9d28b63458b142cff95355a943c4d00d7dc8/plugins/org.eclipse.emf.mwe.core/src/org/eclipse/emf/mwe/core/WorkfowComponentHelper.java][isLegalURL][6] = -> IF { -> return false@url==null||url.trim().length()==0 } -> TRY { -> u=new URL(url,)@!(url==null||url.trim().length()==0) -> u.openConnection()@!(url==null||url.trim().length()==0) }
results[https://github.com/constretto/constretto-core/blob/706dbe8af0107016e7996eadc8492f8aa27f55b5/constretto-core/src/main/java/org/constretto/model/UrlResource.java][exists][6] = -> TRY { -> con=(HttpURLConnection) new URL(path,).openConnection()@ -> con.setRequestMethod("HEAD",)@ -> responseCode=con.getResponseCode()@ }
results[https://github.com/eclipse/e4.ui/blob/14559bf6e10da6f9128168410296a2b59c3cb74f/bundles/org.eclipse.e4.ui.gadgets/src/org/eclipse/e4/ui/internal/gadgets/opensocial/OpenSocialView.java][run][1] = -> TRY { -> favicon=new URL("http://"+host+"/favicon.ico",)@ -> is=favicon.openConnection().getInputStream()@ -> icon=new Image(display,is,)@ }
results[https://github.com/jonasberglund/skrubb_DAT255/blob/bd96ad0e0b5c298f9dccd424dcdc780eb75dc1af/H-sektionen/src/se/chalmers/h_sektionen/utils/LoadData.java][loadLunchFromRSS][1] = -> TRY { -> url=new URL(urlString,)@ -> conn=(HttpURLConnection) url.openConnection()@ -> parser.setInput(conn.getInputStream(),null,)@ }
results[https://github.com/SharkHunter/Channel/blob/c57904ced43efb5045b1957ca9d02de35b82edcb/src/com/sharkhunter/channel/ChannelSimple.java][fetch][1] = -> TRY { -> urlobj=new URL(url.replaceAll(" ","%20",),)@ -> conn=urlobj.openConnection()@ -> return ChannelUtil.fetchPage(conn,null,"",null,)@ }
results[https://github.com/umitproject/openmonitor-android-agent/blob/020baa6efb37ef90425aff5803b4e5a4507f4843/ICM-Mobile/src/org/umit/icm/mobile/connectivity/WebsiteOpen.java][openURLConnection][1] = -> TRY {  -> url=new URL(str,)@ -> return url.openConnection()@ } CATCH(IOException,HttpException) {}
results[https://github.com/photon-infotech/service/blob/8ad2b6ccb5f2b7667211b36058864e17405fd2c0/phresco-service-web/src/main/java/com/photon/phresco/service/rest/api/LoginService.java][checkLDAPAvailable][1] = -> TRY { -> url=new URL(repoMgr.getAuthServiceURL(),)@ -> connection=url.openConnection()@ -> connection.connect()@ }
results[https://github.com/jbosstools/jbosstools-base/blob/17e353bb454bb32d72783fe5350fd42f71808811/common/plugins/org.jboss.tools.common.model/src/org/jboss/tools/common/model/loaders/impl/URLRootLoader.java][getInputStream][1] = -> TRY { -> return new URL(getPath(object,),).openConnection().getInputStream()@ }
results[https://github.com/MCUpdater/MCUpdater/blob/2eec7681f2e3c3d605b66d7dc6da403b6b40629e/MCU-API/src/org/mcupdater/mojang/AssetManager.java][getAssets][1] = -> TRY { -> indexUrl=new URL("https://s3.amazonaws.com/Minecraft.Download/indexes/"+indexName+".json",)@ -> indexStream=indexUrl.openConnection().getInputStream()@ -> json=IOUtils.toString(indexStream,)@ }
results[https://github.com/mscheper/onebusaway-ms-application-modules/blob/c0c2e77b4aa82872f4f1cfaae88537b661957695/onebusaway-transit-data-federation/src/main/java/org/onebusaway/transit_data_federation/impl/ArrivalAndDepartureAlarmServiceImpl.java][run][1] = -> TRY { -> url=new URL(rawUrl,)@ -> connection=url.openConnection()@ -> in=connection.getInputStream()@ } CATCH(Throwable) { -> _log.warn("error firing alarm",ex,)@ }
results[https://github.com/uditrugman/openjdk8-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/java/net/URLConnection/UNCTest.java][main][2] = -> TRY {  -> url=new URL(args[0],)@ -> conn=url.openConnection()@ -> conn.setRequestProperty("User-Agent","Java",)@ } CATCH(Exception) {}
results[https://github.com/sonatype/maven-reference-en/blob/ca21ce893236eefd8dde5e7b659962f92af42b2d/examples/ch-custom/simple-weather/src/main/java/org/sonatype/mavenbook/weather/YahooRetriever.java][retrieve][33] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/grisu48/segeo/blob/60d6e99983410226280afea9b60f01f8a4119ad0/org.feldspaten.segeo.android/src/segeo/api/Connection.java][logout][2] = -> TRY {  -> url=new URL(uri,)@ -> connection=url.openConnection()@ -> statusCode=getResponseCode(connection,)@ } CATCH(IOException) {}
results[https://github.com/mff-uk/DPUs/blob/681526e7ba5121aa781efe2a0ff249d8d06c0bdd/buyer-profiles/src/main/java/cz/cuni/mff/css_parser/utils/Cache.java][getURLContent][1] = -> TRY {  -> oURL=new URL(p_sURL,)@ -> oURL.openConnection()@ -> sResponse=IOUtils.toString(oURL,"UTF-8",)@ } CATCH(IOException) {}
results[https://github.com/codefireXperiment/libcore/blob/adf25974a44503066df61cc0be515395fd7253b6/luni/src/test/java/org/apache/harmony/luni/tests/java/net/URLConnectionTest.java][openGifURLConnection][33] = -> TRY {  -> fUrl1=new URL("file:/"+tmpDir.getPath()+"/Harmony.GIF",)@ -> con1=fUrl1.openConnection()@ } CATCH(IOException) {}
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/libcore/luni/src/test/java/org/apache/harmony/luni/tests/java/net/URLConnectionTest.java][openJarURLConnection][9] = -> TRY {  -> fUrl1=new URL("jar:file:"+tmpDir.getPath()+"/hyts_att.jar!/",)@ -> con1=(JarURLConnection) fUrl1.openConnection()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/zywonderful2/mydeal/blob/5a4dc52e3d97c1c01755301ede192e247eca8ccc/src/org/archive/net/s3/Handler.java][main][9] = -> TRY {  -> u=new URL(args[0],)@ -> connect=u.openConnection()@ -> is=connect.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/penSecIT/commons-vfs/blob/50421355d646c1b1019928095d0afc9fd8cf20bf/tags/pre_filenameparsing/src/java/org/apache/commons/vfs/impl/URLStreamHandlerProxy.java][openConnection][6] = -> TRY {  -> proxyURL=new URL(url.toExternalForm(),)@ -> return proxyURL.openConnection()@ } CATCH(IOException) {}
results[https://github.com/picketlink/picketlink/blob/32a47000a26e02da2931ea519c24e0b56a13c36e/modules/social/src/main/java/org/picketlink/social/standalone/fb/FacebookProcessor.java][sendAccessTokenRequest][1] = -> TRY { -> url=new URL(location,)@ -> connection=url.openConnection()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/umbrahan/Buzzle/blob/a849b1aa1024a3590fe62bdbac1a7a25775f4c51/android.com.appgame7.lovepuddings/src/com/crazyamber/core/Utils.java][dowloadTextFile][1] = -> TRY { -> u=new URL(url,)@ -> conn=(HttpURLConnection) u.openConnection()@ -> conn.setConnectTimeout(300,)@ -> conn.connect()@ -> is=conn.getInputStream()@ }
results[https://github.com/DomoTop/DomoTop/blob/a68bd34899db71c695ee09236ab912a73a60620f/Product/Controller/test/org/openremote/controller/rest/ListPanelIDsTest.java][testBrokenPanelXMLStructureNotWellFormatted2][3] = -> TRY {  -> panelList=new URL(RESTTests.containerURL+RESTAPI_PANELS_URI,)@ -> connection=(HttpURLConnection) panelList.openConnection()@ -> RESTTests.assertHttpResponse(connection,Constants.HTTP_RESPONSE_INVALID_PANEL_XML,RESTTests.ASSERT_BODY_CONTENT,Constants.MIME_APPLICATION_XML,Constants.CHARACTER_ENCODING_UTF8,)@ } CATCH(Exception) {}
results[https://github.com/BelieveROM/android_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/net/URLStreamHandlerFactoryTest.java][testCreateURLStreamHandler][11] = -> TRY {  -> url=new URL("http://android.com/",)@ -> connection=url.openConnection()@ -> assertTrue(connection instanceof Handler.HandlerURLConnection,)@ } CATCH(Exception) {}
results[https://github.com/ickik/FormulaMath/blob/b9af30a29177180d90814852329e6bb3111b187b/Updater/src/main/java/fr/ickik/updater/model/UpdateModel.java][isConnectionAvailable][1] = -> TRY { -> xmlUrl=new URL(PropertiesModel.getSingleton().getProperty(FormulaMathProperty.UPDATE_SERVER,),)@ -> urlConnection=xmlUrl.openConnection()@ -> urlConnection.connect()@ }
results[https://github.com/AdamTorkelsson/openmap/blob/1daeb479e48fd5cbe5f084dcab7445a5b89db746/src/com/openmap/grupp1/database/CheckDBUrlTask.java][doInBackground][1] = -> TRY { -> u=new URL(url,)@ -> urlConnection=(HttpURLConnection) u.openConnection()@ -> urlConnection.setConnectTimeout(5000,)@ -> urlConnection.connect()@ -> urlConnection.disconnect()@ }
results[https://github.com/Aulie/Freerider/blob/9d1f7e0ff3655b7f07c5156243396c7e7877a0d3/Freerider/src/no/ntnu/idi/socialhitchhiking/map/RouteProvider.java][getConnectionInputStream][1] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/OpenEtna/android_dalvik/blob/f6c387128427e121477c1b32ad35cdcaa5101ba3/libcore/luni/src/test/java/org/apache/harmony/luni/tests/java/net/ContentHandlerTest.java][test_getContentLURLConnection][3] = -> TRY {  -> conn=new URL("http://www.apache.org",).openConnection()@ -> content=handler.getContent(conn,)@ } CATCH(IOException) {}
results[https://github.com/martinrevert/aRGENTeaM/blob/39d7d00edd8f3060476efe991f4b430b2f69b273/src/ar/com/martinrevert/argenteam/GCMIntentService.java][getRemoteImage][1] = -> TRY { -> imagelink=new URL(aURL,)@ -> conn=imagelink.openConnection()@ -> conn.connect()@ -> bis=new BufferedInputStream(conn.getInputStream(),)@ }
results[https://github.com/niloc132/mauve-gwt/blob/200cef61c0606333348ce5c43ed2b8417e675025/gnu/testlet/java/net/URLConnection/URLConnectionTest.java][test_DefaultRequestProperty][1] = -> TRY { -> url=new URL("http://sources.redhat.com/mauve/testarea/index.html",)@ -> conn=url.openConnection()@ } CATCH(Exception) { -> harness.fail("Error in test_DefaultRequestProperty  - 1 "+" should not have raised exception here ",)@ }
results[https://github.com/idega/com.idega.manager/blob/24772f3b2f644955eb8699d3fd477978e2f1a8db/src/java/com/idega/manager/business/RepositoryBrowser.java][getMetadataFromUrl][1] = -> TRY {  -> uRepositoryUrl=new URL(artifactUrl,)@ -> conn=uRepositoryUrl.openConnection()@ -> content=conn.getContent()@ } CATCH(IOException,XmlPullParserException) {}
results[https://github.com/pingpongboss/Table-Tennis-Ratings/blob/4acb320eb0b35bf766f3636520357e467af1ee44/src/wei/mark/tabletennis/util/AppEngineParser.java][ping][1] = -> TRY { -> url=new URL(uri,)@ -> connection=(HttpURLConnection) url.openConnection()@ -> rd=new BufferedReader(new InputStreamReader(connection.getInputStream(),"iso-8859-1",),)@ }
results[https://github.com/sodas2002/m-gov/blob/98124f1b9850c23ffda884ea7d201332c5f5acb3/M-GOV_gae/src/net/ReadUrl.java][process][1] = -> TRY {  -> url=new URL(strUrl,)@ -> connection=url.openConnection()@ -> return process(connection,encode,)@ } CATCH(UnsupportedEncodingException,IOException) {}
results[https://github.com/kingargyle/exist-1.4.x/blob/09d678fd8a58728dd51005c63b942f1ab6541ebc/test/src/org/exist/validation/TestTools.java][insertDocumentToURL][1] = -> TRY {  -> url=new URL(target,)@ -> connection=url.openConnection()@ -> os=connection.getOutputStream()@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/3e3e391a959df5a1d0406a67c6b39efd11897d97/test/java/net/ResponseCache/B6181108.java][<init>][3] = -> TRY {  -> url=new URL(urlWithSpace,)@ -> urlc=url.openConnection()@ -> i=(HttpURLConnection) urlc.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/National-Univerity-Of-Singapore-IVLE/iCreate2012-Team-CM/blob/0b95b6bbd0091631522bd99ea0bfd7e90291a69f/src/com/nuscomputing/ivle/SettingsActivityLegacy.java][doInBackground][4] = -> TRY { -> url=new URL("http://ivle.nuscomputing.com/versionCode",)@ -> conn=(HttpURLConnection) url.openConnection()@ -> reader=new BufferedReader(new InputStreamReader(conn.getInputStream(),),)@ }
results[https://github.com/wolfgangimig/byps/blob/90e1d63f5b332d9e26a76c853ac2e61f37359c08/java/bypshttp/src/byps/http/client/jcnn/JcnnRequest.java][createConnection][1] = -> TRY {  -> c=(HttpURLConnection) new URL(destUrl,).openConnection()@ -> conn.set(c,)@ } CATCH(IOException) {}
results[https://github.com/CalumJEadie/part-ii-individual-project-dev/blob/73d90eb7ff3c2b185c5312a88e1fb4a06fc193d3/research/JogAmp - Rendering video to surface/annotated/MovieCube.java][<init>][2] = -> TRY {  -> <init>(new URL("http://download.blender.org/peach/bigbuckbunny_movies/BigBuckBunny_320x180.mp4",).openConnection(),-2.3f,0f,0f,)@ } CATCH(IOException) {}
results[https://github.com/hixi-hyi/IDUMO/blob/52cb7485dffded79df3c5f82f49f5c193043abe8/core/src/jp/idumo/common/component/ReversedGeocording.java][init][2] = -> TRY { -> accessURL=new URL(requestURL,)@ -> con=accessURL.openConnection()@ -> doc=new SAXBuilder().build(con.getInputStream(),)@ }
results[https://github.com/moravianlibrary/MEditor/blob/ecb9976064f10ef7e9cf08e253e71a6d956e9faa/MEditor/src/cz/fi/muni/xkremser/editor/fedora/utils/RESTHelper.java][openConnection][1] = -> TRY {  -> url=new URL(urlString,)@ -> uc=url.openConnection()@ -> uc.setRequestProperty("Authorization","Basic "+encoded,)@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/NCIP/cagrid-core/blob/269a51e5ee3173d26de3379ecd383e70d49ee003/caGrid/projects/installer/src/org/cagrid/installer/util/DownloadPropertiesThread.java][run][1] = -> TRY { -> from=new URL(this.fromUrl,)@ -> conn=from.openConnection()@ -> conn.connect()@ -> totalBytes=conn.getContentLength()@ -> in=conn.getInputStream()@ }
results[https://github.com/dreedyman/Rio/blob/361c0ffdb510533f77e9d0fae3b201cd98aebcba/rio-test/src/test/java/org/rioproject/test/url/artifact/HandlerTest.java][testURL][1] = -> TRY {  -> u=new URL("artifact:org.apache.maven.surefire/surefire-junit4/2.6",)@ -> connect=u.openConnection()@ -> Assert.assertNotNull(connect,)@ } CATCH(IOException) {}
results[https://github.com/apache/sling/blob/998c7565f0f3f230b84322ddeac6b8230075a6ce/launchpad/base/src/main/java/org/apache/sling/launchpad/base/shared/Loader.java][closeLauncherJarFile][1] = -> TRY { -> launcherJarRoot=new URL("jar:"+launcherJarUri+"!/",)@ -> conn=launcherJarRoot.openConnection()@ -> IF { -> jarFile=(JarURLConnection) conn.getJarFile()@conn instanceof JarURLConnection } }
results[https://github.com/teiid/teiid/blob/1e24ba9c9eb45716b3096b9b4e997b8a87e5b223/federate-connectors/connector-xml/src/main/java/com/metamatrix/connector/xml/http/HTTPRequestor.java][validateURL][2] = -> TRY {  -> url=new URL(uri,)@ -> conn=url.openConnection()@ -> conn.connect()@ } CATCH(IOException) {}
results[https://github.com/sorcersoft/sorcer/blob/27ba7a1c5438c6bce824e7f31428db6d6a0d7832/tests/int-tests/src/test/java/junit/sorcer/util/bdb/objects/SorcerDatabaseTest.java][sdbURL][1] = -> TRY {  -> sbdUrl=new URL("sbd://myIterface/name#dataContext=2345",)@ -> obj=sbdUrl.openConnection().getContent()@ } CATCH(Exception) {}
results[https://github.com/mrozekma/NoiseBot/blob/debb9f1f8c15104df773b53e92bf36e261e43b46/src/main/Utilities.java][getJSON][1] = -> TRY {  -> return getJSON(new URL(url,).openConnection(),)@ } CATCH(IOException,JSONException) {}
results[https://github.com/wazari972/WebAlbums-3/blob/bb3c0ef72380d9f9e7c74a0c29760d816a94b77f/WebAlbums3-Bootstrap/src/net/wazari/bootstrap/Gui.java][doTrigger][1] = -> TRY { -> url=new URL("http://localhost:"+GF.cfg.port+"/WebAlbums3-FS/Launch?"+(mount)?"":"umount=true"+"path="+mountPoint,)@ -> conn=url.openConnection()@ } CATCH(IOException) { -> log.error("Mount FS error: {}",ex,)@ }
results[https://github.com/p000ison/SimpleClans2/blob/4fb4efe75cccac94cca32a84cf5fe20da488fce3/src/main/java/com/p000ison/dev/simpleclans2/util/GeneralHelper.java][checkConnection][1] = -> TRY { -> Url=new URL(url,)@ -> urlConn=(HttpURLConnection) Url.openConnection()@ -> urlConn.connect()@ -> IF { -> return false@urlConn.getResponseCode()!=HttpURLConnection.HTTP_OK } }
results[https://github.com/aptana/studio2/blob/0905925e7efa7e473e7c2b3d69a618e19056ed31/plugins/com.aptana.ide.core/src/com/aptana/ide/core/model/user/UsernameAvailable.java][isUsernameAvailable][1] = -> TRY { -> available=new URL(USERNAMES+username,)@ -> connection=available.openConnection()@ -> IF { -> httpConn=(HttpURLConnection) connection@connection instanceof HttpURLConnection -> return !(Boolean.parseBoolean(value,))@connection instanceof HttpURLConnection } }
results[https://github.com/uditrugman/openjdk8-jdk/blob/05e3dd0aa660864619dab1a22f621ce009b82480/test/java/net/URL/HandlerLoop.java][main][1] = -> TRY {  -> url=new URL("file:///bogus/index.html",)@ -> System.out.println("url = "+url,)@ -> url.openConnection()@ } CATCH(Exception) {}
results[https://github.com/freezy/android-xbmcremote/blob/0b6b28330820801832e83d7e1c2b4a2d8d0b4f4c/src/org/xbmc/android/backend/httpapi/NowPlayingPollerThread.java][download][1] = -> TRY { -> url=new URL(pathToDownload,)@ -> uc=url.openConnection()@ -> rd=new BufferedReader(new InputStreamReader(uc.getInputStream(),),8192,)@ }
results[https://github.com/timvisee/SafeCreeper/blob/7ac8da870e94e8b9a8491090f00a4f54ed6639b8/src/com/timvisee/safecreeper_/util/SCUpdateChecker.java][getLastVersion][1] = -> TRY { -> url=new URL("http://www.timvisee.com/projects/bukkit/safe-creeper/lastversion.php",)@ -> con=url.openConnection()@ -> con.setConnectTimeout(2000,)@ -> con.setReadTimeout(2000,)@ -> ins=con.getInputStream()@ }
results[https://github.com/cuckoo03/repository/blob/6697b49e8b3c1ddf5e6c964757eb65789a3e8a8f/java_networking/src/com/Exam10_4DaumSearch.java][main][1] = -> TRY { -> url=new URL(u,)@ -> conn=url.openConnection()@ -> httpUrlConn=(HttpURLConnection) conn@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ColoradoSchoolOfMines/kinect_exhibit/blob/86e1e19c581736c61b47a220a525a304242eccfc/src/test/java/edu/mines/csci598/recycler/splashscreen/weather/WeatherXMLParserTest.java][shouldNotFindData][1] = -> TRY {  -> weatherUrl=new URL("http://free.worldweatheronline.com/feed/weather.ashx?key="+BAD_API_KEY+"&q="+LOCAL_ZIP+"&num_of_days=1&format=xml",)@ -> weatherConnection=weatherUrl.openConnection()@ -> weatherStream=weatherConnection.getInputStream()@ } CATCH(IOException,SAXException,ParserConfigurationException) {}
results[https://github.com/rafiss/transparent/blob/3a379caf67bccd659321f8ac044f634cc5d93502/backend/transparent/core/Console.java][run][1] = -> TRY { -> connection=new URL("http://localhost:16317/search",).openConnection()@ -> http=(HttpURLConnection) connection@ } CATCH(IOException) { -> Console.commandError("testserver","",e,)@ }
results[https://github.com/SmartBear/soapui/blob/774f4389e08bff0669f6d752a9e11c9bec9c1e57/soapui/src/main/java/com/eviware/soapui/support/jnlp/WebstartUtil.java][getJar][1] = -> TRY {  -> url=new URL("jar:"+jarUrl+"!/",)@ -> jarConnection=(JarURLConnection) url.openConnection()@ -> jar=jarConnection.getJarFile()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/fcrepo/fcrepo-historical/blob/96c4797cf94e9b580e77eca3a3c6d5a1dd86612f/fedorarepo-server/src/main/java/fedora/server/utilities/CleanupContextListener.java][contextInitialized][1] = -> TRY { -> IF { -> url=new URL("http://localhost/",)@ -> urlConn=url.openConnection()@ -> urlConn.setDefaultUseCaches(false,)@ } }
results[https://github.com/tuvd08/other/blob/1c7823e19be948e86263446032c0a4d125aa4c16/java-tools/io-project/src/main/java/org/thaonguyen/social/LinkShare.java][getMimeTypeOfURL][1] = -> TRY { -> url=new URL(urlString,)@ -> urlConnection=url.openConnection()@ -> mimeType=urlConnection.getContentType()@ -> mimeType=URLConnection.guessContentTypeFromStream(urlConnection.getInputStream(),)@!(mimeType!=null) }
results[https://github.com/eclipse/egit-github/blob/76a5242f8971f7649ab44422b5dd11aa9cad3a3a/org.eclipse.egit.github.core/src/org/eclipse/egit/github/core/client/GitHubClient.java][createConnection][1] = -> TRY {  -> url=new URL(createUri(uri,),)@ -> return (HttpURLConnection) url.openConnection()@ } CATCH(IOException) {}
results[https://github.com/Dedaulus/Cinematty/blob/0f208ebc079d386935707bf1950cd1d090aa67f0/src/com/dedaulus/cinematty/framework/ImageRetriever.java][downloadImage][1] = -> TRY { -> url=new URL(urlStr,)@ -> connection=url.openConnection()@ -> connection.connect()@ -> input=new BufferedInputStream(url.openStream(),)@ }
