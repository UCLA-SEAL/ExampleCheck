results[https://github.com/laarid/platform_libcore/blob/8f7341440cf447efc91739bdc4ad24ce4957e83b/benchmarks/src/benchmarks/regression/URLConnectionBenchmark.java][get][58] = -> TRY {  -> connection=(HttpURLConnection) url.openConnection()@ -> in=connection.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/mhl/libbio-formats-java/blob/2bc1d2319a778fbed9656d0c1b80366ab7a31a0f/components/bio-formats/src/loci/formats/Location.java][list][4] = -> IF { -> TRY { -> c=url.openConnection()@ -> is=c.getInputStream()@ } }
results[https://github.com/samtingleff/valkyrie/blob/5be9e015eb36e5bbd4b9674dd0dbcac2270175b8/src/com/othersonline/kv/distributed/impl/UrlNodeStore.java][refreshActiveNodes][3] = -> TRY {  -> conn=url.openConnection()@ -> in=conn.getInputStream()@ } CATCH(IOException,ConfigurationException) {}
results[https://github.com/okey666/BBC-News-Reader/blob/4ef5795a45bb8653e0630cba0e9d86d2698129cb/src/com/digitallizard/bbcnewsreader/resource/web/ImageDownloader.java][getImage][5] = -> TRY {  -> connection=url.openConnection()@ -> stream=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/andrewphorn/ClassiCube-Client/blob/494686f06299dc7dc88a2399e2ced26ad21b036d/src/main/java/de/jarnbjo/ogg/UncachedUrlStream.java][<init>][1] = -> TRY {  -> this.source=source.openConnection()@ -> this.sourceStream=this.source.getInputStream()@ } CATCH(OggFormatException,IOException) {}
results[https://github.com/parworks/PARWorks-Android-Java/blob/84f620b3a93856130bd3be4a1423205c6ea17923/src/com/parworks/androidlibrary/utils/BitmapUtils.java][getImageStream][16] = -> TRY { -> input=stringUrl.openConnection().getInputStream()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/sonatype/maven-reference-en/blob/ca21ce893236eefd8dde5e7b659962f92af42b2d/examples/ch-custom/simple-weather/src/main/java/org/sonatype/mavenbook/weather/YahooRetriever.java][retrieve][117] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/giorgiosironi/Chansonnier/blob/ade7981d787b55d62cd4e0a449f9c1fe55d4000e/chansonnier/it.polimi.chansonnier.agent/code/src/it/polimi/chansonnier/agent/URLUtils.java][retrieve][6] = -> TRY {  -> conn=(HttpURLConnection) url.openConnection()@ -> conn.setRequestMethod("GET",)@ -> is=conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/apurtell/hadoop/blob/a4910f27a144a48e57434bf33c320b0d9d4ea2b0/src/test/hdfs/org/apache/hadoop/hdfs/DFSTestUtil.java][urlGet][73] = -> TRY {  -> conn=url.openConnection()@ -> IOUtils.copyBytes(conn.getInputStream(),out,4096,true,)@ } CATCH(IOException) {}
results[https://github.com/zywonderful2/mydeal/blob/5a4dc52e3d97c1c01755301ede192e247eca8ccc/src/org/archive/net/s3/Handler.java][main][52] = -> TRY {  -> u=new URL(args[0],)@ -> connect=u.openConnection()@ -> is=connect.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/uDig/udig-platform/blob/fae0b31d673f218d5474c6cbdbc78749e8703d41/plugins/net.refractions.udig.catalog.wmt/src/net/refractions/udig/catalog/internal/wmt/wmtsource/ww/LayerSet.java][getRootElementFromUrl][3] = -> TRY {  -> connection=url.openConnection()@ -> dom=builder.build(connection.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/visage-lang/netbeans-plugin/blob/5d0d8dff3f73da832dcd1f4d2ef1e19179e20edc/visage.weather2/resources/WeatherFX/src/weatherfx/service/YahooWeatherService.java][getInputStreamFromURL][6] = -> TRY {  -> con=url.openConnection()@ -> con.connect()@ -> return con.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/wvengen/jGridstart/blob/2203f8882bf1b5c27e5cab1c3b5841ebbacd2e6e/jgridstart-main/src/main/java/nl/nikhef/jgridstart/gui/util/TemplateWizard.java][retrieveDocument][2] = -> TRY {  -> conn=url.openConnection()@ -> conn.setDefaultUseCaches(true,)@ -> in=conn.getInputStream()@ } CATCH(SAXException,IOException,ParserConfigurationException) {}
results[https://github.com/frenchc/jetm/blob/cf146bf59c5ee423d47efcd646e59f8e7554d5f5/modules/jetm-rrd/src/main/java/etm.contrib/rrd/rrd4j/Rrd4jUtil.java][createGraph][2] = -> TRY { -> connection=templateUrl.openConnection()@ -> in=connection.getInputStream()@ } CATCH(IOException) { -> throw new EtmException(e,)@ }
results[https://github.com/Aulie/Freerider/blob/9d1f7e0ff3655b7f07c5156243396c7e7877a0d3/Freerider/src/no/ntnu/idi/socialhitchhiking/map/RouteProvider.java][getConnectionInputStream][7] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/tisoft/microemu/blob/0da6ea41a432a3f6cd6d81572849d60444d68b3f/microemulator/src/src/com/sixlegs/image/png/PngImage.java][<init>][1] = -> TRY {  -> is=url.openConnection().getInputStream()@ -> in_raw=new BufferedInputStream(is,BUFFER_SIZE,)@ } CATCH(IOException) {}
results[https://github.com/jgf/wala-mirror/blob/8ff8dab56a89d5d460a98d80c2747e90e175d583/com.ibm.wala.core/src/com/ibm/wala/classLoader/AbstractURLModule.java][getInputStream][1] = -> TRY { -> return url.openConnection().getInputStream()@ } CATCH(IOException) { -> Assertions.UNREACHABLE()@ }
results[https://github.com/vaadin/gwt/blob/a5b133ee7ca31b32bd60a474ae259a0f95bef5d3/dev/core/src/com/google/gwt/dev/javac/CompilationUnitArchive.java][createFromURL][7] = -> TRY {  -> return createFromStream(location.openConnection().getInputStream(),)@ } CATCH(IOException,ClassNotFoundException) {}
results[https://github.com/egonw/pathvisio/blob/af58ae201d0b4b419dfad2e243bbe74aa274c50d/src/wikipathways/org/wikipathways/applet/gui/GenMappExporter.java][doExport][3] = -> TRY {  -> con=pwUrl.openConnection()@ -> pathway.readFromXml(con.getInputStream(),true,)@ } CATCH(Exception) {}
results[https://github.com/disco-bot/disco-bot/blob/7f9ace4843a6d72c3f24e41c170a86f05b5f7047/src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java][eachLine][3] = -> TRY {  -> return eachLine(url.openConnection().getInputStream(),firstLine,closure,)@ } CATCH(IOException) {}
results[https://github.com/tsurdilo/elissa/blob/c0b0bd3733657e8dcf2246d833d6361d2747b7d5/test/jsunit/java/source_server/net/jsunit/RemoteMachineServerHitter.java][submitRequestTo][10] = -> TRY {  -> connection=url.openConnection()@ -> return StreamUtility.readAllFromStream(connection.getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/cytoscape/cytoscape2/blob/7e1904045eba4d731eaff0ccc9f5aadf0a075e72/src/cytoscape/data/ontology/readers/unitTests/DBCrossReferenceReaderTest.java][connectToURL][9] = -> TRY {  -> uc=url.openConnection()@ -> uc.setReadTimeout(5000,)@ -> is=uc.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/ucb-bar/riscv-gcc/blob/c57740cef52139a7e763a4c17cd17ceebd233d09/gcc-4.6.1/libjava/classpath/javax/swing/JEditorPane.java][getStream][5] = -> TRY {  -> conn=page.openConnection()@ -> type=conn.getContentType()@ -> stream=conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/dkulp/eclipse-swordfish/blob/d64459a1ef793211be7633847fdd0bfe513c3f08/tools/org.eclipse.swordfish.tooling.ui/src/org/eclipse/swordfish/tooling/ui/wizards/RegistryAccess.java][getWSDLUrls][2] = -> TRY {  -> urlConnection=registryUrl.openConnection()@ -> urlConnection.addRequestProperty("accept","application/xml",)@ -> is=urlConnection.getInputStream()@ } CATCH(IOException,SAXException) {}
results[https://github.com/slcs/org.glite.slcs.client/blob/306cd1ec697dbe98495fa7bf1221dd9455474a84/src/au/id/jericho/lib/html/EncodedSource.java][construct][3] = -> TRY {  -> urlConnection=url.openConnection()@ -> httpURLConnection=(urlConnection instanceof HttpURLConnection)?(HttpURLConnection) urlConnection:null@ -> inputStream=urlConnection.getInputStream()@ -> contentType=urlConnection.getContentType()@ } CATCH(IOException) {}
results[https://github.com/egonw/pathvisio/blob/8b30db4bd4252fa1030e0e97d9c88ec067546c1a/modules/org.pathvisio.core/src/org/pathvisio/core/util/FileUtils.java][downloadFile][11] = -> TRY {  -> conn=url.openConnection()@ -> conn.setUseCaches(false,)@ -> in=conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/egonw/pathvisio/blob/34be97922072a0d2cb7381f3a442c02246fde966/src/core/visualization/plugins/ExpressionImagePlugin.java][getInputStream][6] = -> TRY { -> con=url.openConnection()@ -> return con.getInputStream()@ } CATCH(IOException) { -> GmmlVision.log.error("Unable to open connection to image",e,)@ }
results[https://github.com/hjalmare/discobot/blob/f75da2b00746ec38650aefd3174624c62d424e43/src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java][getBytes][3] = -> TRY {  -> return getBytes(url.openConnection().getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/srnsw/xena/blob/7c046e3505244e9cfb1685f2f6cf407454981ceb/src/org/ccil/cowan/tagsoup/Parser.java][getInputStream][4] = -> TRY {  -> url=new URL(basis,systemid,)@ -> c=url.openConnection()@ -> return c.getInputStream()@ } CATCH(IOException,SAXException) {}
results[https://github.com/arjunroy/cinder_base/blob/9066cfe9886ac131c34d59ed0e2d287b0e3c0087/tests/CoreTests/android/core/URLTest.java][request][6] = -> TRY {  -> connection=url.openConnection()@ -> connection.connect()@ -> input=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/ColoradoSchoolOfMines/kinect_exhibit/blob/86e1e19c581736c61b47a220a525a304242eccfc/src/test/java/edu/mines/csci598/recycler/splashscreen/weather/WeatherXMLParserTest.java][shouldNotFindData][4] = -> TRY {  -> weatherUrl=new URL("http://free.worldweatheronline.com/feed/weather.ashx?key="+BAD_API_KEY+"&q="+LOCAL_ZIP+"&num_of_days=1&format=xml",)@ -> weatherConnection=weatherUrl.openConnection()@ -> weatherStream=weatherConnection.getInputStream()@ } CATCH(IOException,SAXException,ParserConfigurationException) {}
results[https://github.com/tijuca/icedove/blob/4920dca05eb3b6daa968edb29fd558ff8d2a423a/directory/sdks/java-sdk/ldapfilter/netscape/ldap/util/LDAPFilterDescriptor.java][<init>][2] = -> TRY {  -> urlc=url.openConnection()@ -> inputStream=new DataInputStream(urlc.getInputStream(),)@ } CATCH(IOException,BadFilterException) {}
results[https://github.com/52North/OX-Framework/blob/bff9c16cf556c4c224ec140ae7047fa3c7e0c5fd/52n-oxf-core/src/main/java/org/n52/oxf/util/IOHelper.java][supplyProperty][4] = -> TRY {  -> in=url.openConnection().getInputStream()@ -> prop.load(in,)@ } CATCH(IOException) {}
results[https://github.com/hjalmare/discobot/blob/f75da2b00746ec38650aefd3174624c62d424e43/src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java][newInputStream][2] = -> TRY {  -> return new BufferedInputStream(url.openConnection().getInputStream(),)@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/brendanofallon/Pipeline/blob/587754633e1cb3d01161a8a8afd348ef2b4c5789/src/ncbi/PubMedFetcher.java][retriveDocument][4] = -> TRY {  -> yc=url.openConnection()@ -> doc=builder.parse(yc.getInputStream(),)@ } CATCH(IOException,ParserConfigurationException,SAXException) {}
results[https://github.com/madiator/HadoopUSC/blob/df982bc7dd648f4d76d63905ed9ac90ca53a7c9e/src/hdfs/org/apache/hadoop/hdfs/DFSUtil.java][getHTMLContent][1] = -> TRY {  -> path=uri.toURL()@ -> connection=path.openConnection()@ -> stream=connection.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/GrizzlyNIO/grizzly-mirror/blob/45b2f10214af65b715a602e4535acbbe41b306cf/modules/websockets/src/test/java/org/glassfish/grizzly/websockets/WebSocketsTest.java][testGetOnWebSocketApplication][1] = -> TRY {  -> url=new URL("http://localhost:"+PORT+"/echo",)@ -> urlConnection=url.openConnection()@ -> is=urlConnection.getInputStream()@ } CATCH(IOException,InstantiationException,InterruptedException) {}
results[https://github.com/aalmiray/Json-lib/blob/c785e4d630387c1e89b83bb6cc3c26420affe420/src/main/java/net/sf/json/groovy/JsonSlurper.java][parse][1] = -> TRY {  -> return parse(url.openConnection().getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/spring-projects/spring-xd/blob/e37c4c9e525a86a956fc73fd2b9354a957842a56/spring-xd-integration-test/src/main/java/org/springframework/xd/integration/util/StreamUtils.java][httpGet][2] = -> TRY {  -> conn=(HttpURLConnection) url.openConnection()@ -> response=conn.getInputStream()@ -> conn.disconnect()@ } CATCH(IOException) {}
results[https://github.com/kmi/iserve/blob/5a48b66bf0516ba227a98b3af4d956a97ea64887/iserve-commons-io/src/main/java/uk/ac/open/kmi/iserve/commons/io/IOUtil.java][urlToReader][5] = -> TRY {  -> con=url.openConnection()@ -> return new InputStreamReader(con.getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/chewiebug/GCViewer/blob/38a6fc3cf56e904c221028336373cd10dd35790e/src/main/java/com/tagtraum/perf/gcviewer/imp/DataReaderFacade.java][readModel][1] = -> TRY {  -> conn=url.openConnection()@ -> in=(conn instanceof HttpURLConnection)?HttpUrlConnectionHelper.openInputStream((HttpURLConnection) conn,HttpUrlConnectionHelper.GZIP,):conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/pedropaulovc/UFSC/blob/5db56ccc9ee2bb2e26a5ff8eb0d44bd857ee6117/LeitorFeedsPublicado/src/leitorFeeds/ObtenedorDeFeed.java][obterFeed][7] = -> TRY {  -> url=new URL(this.url,)@ -> return url.openConnection().getInputStream()@ } CATCH(IOException,MalformedURLException) {}
results[https://github.com/escidoc/escidoc-core/blob/3de0ed1dd286670c514fe0e0f65381db826d404d/integration-tests/src/test/java/de/escidoc/core/test/EscidocRestSoapTestsBase.java][getTemplateAsString][4] = -> TRY {  -> con=(HttpURLConnection) path.openConnection()@ -> con.setRequestMethod("GET",)@ -> is=con.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/always-on/always/blob/1d28cb7cbac3bbfe535ee13b596ba65cbd23136f/plugins/weather-plugin/weather/java/edu/wpi/always/weather/wunderground/WundergroundHelper.java][<init>][1] = -> TRY {  -> url=new URL(urlString,)@ -> connection=url.openConnection()@ -> is=connection.getInputStream()@ } CATCH(IOException,ParserConfigurationException,SAXException) {}
results[https://github.com/servalproject/batphone/blob/e5fe1ab3349d10a656de25eed4983016f5b04bf2/src/org/servalproject/system/ChipsetDetection.java][getUrl][2] = -> TRY {  -> Log.v("BatPhone","Fetching "+url,)@ -> conn=url.openConnection()@ -> in=conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/srnsw/xena/blob/8e19788ceb5f18d32d53017a5fc60bc2b3024de9/plugins/audio/ext/src/mpegaudiospi1.9.4/src/javazoom/spi/mpeg/sampled/file/MpegAudioFileReader.java][getAudioFileFormat][3] = -> TRY {  -> conn=url.openConnection()@ -> conn.setRequestProperty("Icy-Metadata","1",)@ -> inputStream=conn.getInputStream()@ } CATCH(UnsupportedAudioFileException,IOException) {}
results[https://github.com/Paxle/Paxle/blob/f3b4d2913a5a4f3b288215a091cba8c9eb425743/bundles/CharsetDetector/src/org/paxle/charset/impl/CharsetDetector.java][readMimeTypeSet][1] = -> TRY { -> connection=url.openConnection()@ -> connectionIn=connection.getInputStream()@ } CATCH(Exception) { -> this.logger.warn("Unable to read inspectable mimeTypes from "+url,e,)@ }
results[https://github.com/Mobicents/mediaserver/blob/58b65b61f232ff6e300f344b08fd91e9b8a86c6d/resources/mediaplayer/src/main/java/org/mobicents/media/server/impl/resource/mediaplayer/audio/tts/TtsTrackImpl.java][<init>][1] = -> TRY {  -> connection=url.openConnection()@ -> this.voice.speak(connection.getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/arquillian/arquillian-container-tomcat/blob/cbf92803bfd0ce715b800bf93898d70d1d1b6335/tomcat-embedded-8/src/test/java/org/jboss/arquillian/container/tomcat/embedded_8/TomcatEmbeddedClientTestCase.java][getHttpResponse][2] = -> TRY {  -> in=servletUrl.openConnection().getInputStream()@ -> len=in.read(buffer,)@ } CATCH(IOException) {}
results[https://github.com/lequana2/smart-meal/blob/1251da527b3992c5c6046229534248bde79a8fa5/smartmeal/src/org/jruleengine/RuleExecutionSetProviderImpl.java][createRuleExecutionSet][1] = -> TRY {  -> urlc=new URL(uri,).openConnection()@ -> is=urlc.getInputStream()@ } CATCH(RuleExecutionSetCreateException,IOException,RemoteException) {}
results[https://github.com/xebialabs/overthere/blob/fb635b6c69b407555e113e2b07078124c2db35dd/src/main/java/com/xebialabs/winrm/connector/JdkHttpConnector.java][sendMessage][2] = -> TRY { -> urlConnection=targetURL.openConnection()@ -> con=(HttpURLConnection) urlConnection@ -> is=urlConnection.getInputStream()@ } CATCH(Exception) { -> throw new WinRMRuntimeIOException("send message on "+targetURL+" error ",requestDocument,responseDocument,e,)@ }
results[https://github.com/BruSD/NewsRssFeed/blob/7301166ad014d1e37aaaf7df453eb37039895b30/src/com/newsrss/Feed/DataStorage.java][fetchDrawable][1] = -> TRY { -> imageURL=new URL(imageURLString,)@!(drawableMap.containsKey(imageURLString,)) -> connection=(HttpURLConnection) imageURL.openConnection()@!(drawableMap.containsKey(imageURLString,)) -> IF { -> inputStream=connection.getInputStream()@connection.getResponseCode()==HttpURLConnection.HTTP_OK && !(drawableMap.containsKey(imageURLString,)) } }
results[https://github.com/gilsondev/jsf2-api/blob/124d212e7273567eb42a4ba457241c9b39572cdd/jsf-ri/test/com/sun/faces/application/resource/TestResourceHandlerImpl.java][getBytes][5] = -> TRY {  -> c=url.openConnection()@ -> c.setUseCaches(false,)@ -> in=c.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/eclipse/virgo.kernel/blob/bc3735b67896d37b44c86730adf67bee90070863/org.eclipse.virgo.management.console/src/main/java/org/eclipse/virgo/management/console/internal/Parser.java][doImport][1] = -> TRY {  -> content=this.urlFetcher.getRequestedContentURL(arg,)@ -> resourceConn=content.openConnection()@ -> in=resourceConn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/52North/OX-Framework/blob/6f9d0360c30b5fea0af646197f3b72d4539e887b/52n-oxf-core/oxf-common/src/main/java/org/n52/oxf/util/IOHelper.java][saveFile][3] = -> TRY {  -> in=url.openConnection().getInputStream()@ -> saveFile(out,in,)@ } CATCH(IOException) {}
results[https://github.com/harism/android_facebook_client/blob/598c435c11acca4418c0e48e8b1d62aca122f684/src/fi/harism/facebook/net/FBClient.java][requestFQL][1] = -> TRY {  -> url=new URL("https://api.facebook.com/method/fql.query?access_token="+token+"&query="+query,)@ -> connection=(HttpURLConnection) url.openConnection()@ -> is=connection.getInputStream()@ } CATCH(IOException,JSONException,MalformedURLException,XmlPullParserException) {}
results[https://github.com/p000ison/SimpleClans2/blob/f1d18a1fd70e3ff9188dbff77f5bc0446efcb755/src/main/java/com/p000ison/dev/simpleclans2/updater/Build.java][getDownloadStream][1] = -> TRY {  -> downloadURL=new URL("http",JENKINS_HOST,80,fetchFile,)@ -> return downloadURL.openConnection().getInputStream()@ } CATCH(IOException) {}
results[https://github.com/andrewphorn/ClassiCube-Client/blob/494686f06299dc7dc88a2399e2ced26ad21b036d/src/main/java/de/jarnbjo/ogg/OnDemandUrlStream.java][<init>][1] = -> TRY {  -> this.source=source.openConnection()@ -> this.sourceStream=this.source.getInputStream()@ -> contentLength=this.source.getContentLength()@ } CATCH(OggFormatException,IOException) {}
results[https://github.com/easysoa/EasySOA/blob/086e99df33e2a50ec6c9ce62bc45d971dd72ff19/easysoa-registry/easysoa-registry-core/src/main/java/org/easysoa/listeners/HttpFile.java][download][2] = -> TRY {  -> connection=(HttpURLConnection) this.url.openConnection()@ -> connection.setReadTimeout(DOWNLOAD_TIMEOUT,)@ -> is=connection.getInputStream()@ } CATCH(MalformedURLException,IOException,URISyntaxException) {}
results[https://github.com/square/okhttp/blob/e369755806fc676b06e6f056997ece421ddbd163/benchmarks/src/main/java/com/squareup/okhttp/benchmarks/HttpURLConnectionRequest.java][run][2] = -> TRY { -> urlConnection=(HttpURLConnection) url.openConnection()@ -> in=urlConnection.getInputStream()@ } CATCH(IOException) { -> System.out.println("Failed: "+e,)@ }
results[https://github.com/jhu-digital-manuscripts/rosa/blob/dd2c8c9eb18d5bc33f4b6b74cf644620858399c5/rosa-tool/src/main/java/rosa/tool/ConfGet.java][open][1] = -> TRY {  -> con=url.openConnection()@ -> con.addRequestProperty("Cookie",sessioncookie,)@ -> return con.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/UWCS/choob/blob/65b4b4aeb236a0956801b1df56c640229aba766e/src/uk/co/uwcs/choob/plugins/AnnotatedJavaPluginManager.java][downloadTo][2] = -> TRY {  -> site=url.openConnection()@ -> is=new BufferedInputStream(site.getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/raymondwanyoike/i2m-converge-ecms/blob/1e31310e9ee6f9614cea6e37d770aa5ebbd0eae3/converge-server/modules/converge-core/src/main/java/dk/i2m/converge/core/utils/FileUtils.java][getBytes][1] = -> TRY {  -> connection=url.openConnection()@ -> in=connection.getInputStream()@ -> contentLength=connection.getContentLength()@ } CATCH(IOException) {}
results[https://github.com/apache/openejb/blob/830c39962d11f7e10ca0530ec15a38f989e9180f/sandbox/inactive/openejb-webadmin/src/main/java/org/apache/openejb/webadmin/WebAdminBean.java][getTemplate][1] = -> TRY {  -> url=classLoader.getResource("/htdocs/template.html",)@ -> return url.openConnection().getInputStream()@ } CATCH(IOException) {}
results[https://github.com/alanhorizon/Java-Slick/blob/74cb6912899daa8c4f64c179181e0bb8febcc36b/thingle/src/org/newdawn/slick/thingle/internal/ThinletSkin.java][init][1] = -> TRY { -> IF { -> url=new URL(jarFileName,)@jarFileName.startsWith("http://",) -> uc=url.openConnection()@ -> is=uc.getInputStream()@ } }
results[https://github.com/chipster/chipster/blob/b3815adf03922216ae23b1256fd77966995a494f/src/main/java/fi/csc/microarray/config/Configuration.java][<init>][1] = -> TRY {  -> <init>(configUrl.openConnection().getInputStream(),configModules,)@ } CATCH(IOException,IllegalConfigurationException) {}
results[https://github.com/UWCS/choob/blob/565afda1a056fc39b6190fcaf574faa46a891e24/src/org/uwcs/choob/support/GetContentsCached.java][updateIfNeeded][1] = -> TRY {  -> site=url.openConnection()@!(contents!=null&&now-lastaccess<mintime) -> site.setRequestProperty("User-agent","Choob!",)@!(contents!=null&&now-lastaccess<mintime) -> is=site.getInputStream()@!(contents!=null&&now-lastaccess<mintime) } CATCH(IOException) {}
results[https://github.com/brachior/platform_libcore/blob/0b26c7b2263a591b135e230231a331e3c0f123b8/luni/src/test/java/tests/api/java/net/JarURLConnectionTest.java][test_getInputStream_DeleteJarFileUsingURLConnection][9] = -> TRY {  -> url=new URL("jar:file:"+jarFileName+"!/"+entry,)@ -> conn=url.openConnection()@ -> conn.setUseCaches(false,)@ -> is=conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/dittaeva/vespucci/blob/b856fc28ce18928bd736a55fb13bbd45b0b2da0a/src/de/blau/android/osb/Database.java][execute][1] = -> TRY {  -> conn=new URL("http",HOST,80,API+req+"?"+params,).openConnection()@ -> conn.setRequestProperty("User-Agent",Application.userAgent,)@ -> return conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/billstclair/loomclient/blob/72ac2aa32d454de56cd7751cb439bfd61a6f0a95/java/cc/loom/LoomClient.java][fetchURLString][1] = -> TRY { -> url=new URL(address,)@ -> connection=url.openConnection()@ -> in=new InputStreamReader(connection.getInputStream(),)@ } CATCH(Exception) { -> return "()"@ }
results[https://github.com/fake666/namnam/blob/8b6921757ded24929e67e3a12fee8a11c5e9e4e9/java/namnamparser/src/de/metalab/namnam/parser/util/XPathUtil.java][getHtmlUrlNode][1] = -> TRY {  -> url=new URL(sUrl,)@ -> con=url.openConnection()@ -> src=new InputSource(con.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/mevansjr/FSO/blob/41c4e3e9c2e327987e6d4f9565024b181e70709e/JAVA 2/Week 3/ContentServiceApp/src/com/markevansjr/fragmentapp/WebStuff.java][getURLStringResponse][2] = -> TRY { -> conn=url.openConnection()@ -> bin=new BufferedInputStream(conn.getInputStream(),)@ } CATCH(Exception) { -> Log.e("URL RESPONSE ERROR","getURLStringResponse",)@ }
results[https://github.com/zendtech/zendserver-sdk-java/blob/3b20cad3003d1e7a14d29e6b2208bb4b2b3a6e44/zendserver-sdk-java/org.zend.sdk/sdklib/org/zend/sdklib/internal/repository/http/HttpRepository.java][getArtifactStream][1] = -> TRY {  -> url=new URL(this.baseURL.toString()+"/"+path,)@ -> conn=url.openConnection()@ -> return conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/peq/WurstScript/blob/59c581ba0f038bd9667161eb3990ec43d3171b3f/WurstUpdater32/src/control/NetControl.java][downloadFile][1] = -> TRY {  -> url=new URL(link,)@ -> conn=url.openConnection()@ -> is=conn.getInputStream()@ -> max=conn.getContentLength()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/dgiormov/web.fragment.fix/blob/950f3501b75401ef6db7a0a7b99d9ca2f43247ea/plugins/org.eclipse.jst.j2ee.core/commonArchive/org/eclipse/jst/j2ee/commonarchivecore/internal/helpers/ArchiveURIConverterImpl.java][makeInputStream][1] = -> TRY {  -> url=createURL(converted.toString(),)@!(fileProtocol.equals(converted.scheme(),)||converted.scheme()==null&&inFilepath!=null) -> urlConnection=url.openConnection()@!(fileProtocol.equals(converted.scheme(),)||converted.scheme()==null&&inFilepath!=null) -> return urlConnection.getInputStream()@!(fileProtocol.equals(converted.scheme(),)||converted.scheme()==null&&inFilepath!=null) } CATCH(IOException) {}
results[https://github.com/blau2/MiCalendar/blob/e2385636a461f1aabe6c844ab70051686edd70bb/Android/facebook/src/com/facebook/LoginFragment.java][doInBackground][2] = -> TRY { -> connection=tag.openConnection()@ -> stream=connection.getInputStream()@ } FINALLY { -> Utility.closeQuietly(stream,)@ -> Utility.disconnectQuietly(connection,)@ }
results[https://github.com/sisbell/jxta/blob/7a057a6b6b9d7582abe918656148e5df26ad4cfb/j2se/src/net/jxta/impl/access/AccessList.java][getInputStream][1] = -> TRY {  -> url=uri.toURL()@ -> connection=url.openConnection()@ -> connection.setDoInput(true,)@ -> return connection.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/jorgenio/zksample2/blob/001a4e453f9dc62a3be3fa263b52678b8a1ecb5e/spring-hibernate-backend/src/main/java/de/forsthaus/backend/service/impl/IpToCountryServiceImpl.java][importIP2CountryCSV][1] = -> TRY { -> url=new URL(this.updateUrl,)@ -> conn=url.openConnection()@ -> istream=conn.getInputStream()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/woggle/mesos-old/blob/6168de123773c2cd97d1194603283ea168994289/frameworks/hadoop-0.20.2/src/hdfs/org/apache/hadoop/hdfs/tools/DFSck.java][run][1] = -> TRY {  -> path=new URL(url.toString(),)@ -> connection=path.openConnection()@ -> stream=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/sriksun/ivry-security/blob/b5f67c50f3c623274bbf93f3044767d9f60fa29d/logging/src/main/java/org/apache/ivory/logging/LogMover.java][getURLinputStream][2] = -> TRY {  -> connection=url.openConnection()@ -> connection.setDoOutput(true,)@ -> connection.connect()@ -> return connection.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/anbangr/trusted-mr/blob/b9adf9174f1dc184dc6ae3f68378912a0d87e952/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ClusterJspHelper.java][readOutput][4] = -> TRY {  -> connection=url.openConnection()@ -> in=new BufferedReader(new InputStreamReader(connection.getInputStream(),),)@ } CATCH(IOException) {}
results[https://github.com/igorhvr/bedlam/blob/83b11d00fae0acd1788f6b26fcd5fd16c871e2aa/sisc/sisc-1.16.6/full-src/sisc/src/sisc/modules/io/IO.java][getURLInputStream][1] = -> TRY {  -> conn=u.openConnection()@ -> conn.setDoInput(true,)@ -> conn.setDoOutput(false,)@ -> return conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/itszootime/ps-framework/blob/185a086db3aeab5851f38c61f73acfeeaaac36c2/src/test/java/org/uncertweb/test/HTTPServerTest.java][httpServerWithBinary][1] = -> TRY {  -> url=new URL("http://localhost:8000/xml/polygon.zip",)@ -> conn=url.openConnection()@ -> serverContent=IOUtils.toByteArray(conn.getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/chenopodium/IGV/blob/6b560564a630d2107e2c1eb1c38422605adcfc6c/test/src/org/broad/igv/util/ftp/SeekableFTPStreamTest.java][testRead2][1] = -> TRY {  -> u=new URL(url,)@ -> conn=u.openConnection()@ -> conn.connect()@ -> stream=conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/arquillian/arquillian_deprecated/blob/54d35ff1bbb8fbf4f1131a95720567d351db746b/containers/tomcat-embedded-6/src/test/java/org/jboss/arquillian/container/tomcat/embedded_6/TomcatEmbeddedInContainerTestCase.java][shouldBeAbleToInvokeServletInDeployedWebApp][1] = -> TRY {  -> url=new URL(HELLO_WORLD_URL,)@ -> in=url.openConnection().getInputStream()@ -> len=in.read(buffer,)@ } CATCH(Exception) {}
results[https://github.com/fake666/namnam/blob/18f9635e2474f1ee89a857532bff72b68271deb0/android/org.bytewerk.namnam.android/src/org/bytewerk/namnam/android/importer/NamNamXMLImporter.java][loadFromURL][1] = -> TRY { -> con=theURL.openConnection()@ -> ins=con.getInputStream()@ } CATCH(IOException) { -> throw new RuntimeException(e.getMessage(),e,)@ }
results[https://github.com/sublima/sublima/blob/f75ba2c8ad795a18d88200fc03e806da4a2d9b3d/blocks/sublima-query/src/test/java/com/computas/sublima/query/integrationtest/SparqlResultsTest.java][testSPARQLquery][1] = -> TRY {  -> url=new URL(JOSEKI_URL+JOSEKI_ACTION+URLEncoder.encode(SPARQL_QUERY,"UTF-8",),)@ -> huc=(HttpURLConnection) url.openConnection()@ -> bodyInputStream=huc.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/spullara/maptool/blob/dc36d7b5e5ead8000478481ffb4dc4904ce8a92e/src/net/rptools/maptool/client/ui/io/FTPClientConn.java][openDownloadStream][1] = -> TRY {  -> url=makeURL(dir,targetfile,)@ -> urlc=url.openConnection()@ -> urlc.setDoInput(true,)@ -> is=urlc.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/matthew117/DurhamLife-Android/blob/6b2a9a69f0ac117d89552f85d39ad957fac5cabf/DuchessAndroid/src/uk/ac/dur/duchess/TimeAdapter.java][parseICalFromURL][2] = -> TRY {  -> conn=(HttpURLConnection) new URL(iCalFileURL,).openConnection()@ -> sc=new Scanner(conn.getInputStream(),)@ } CATCH(IOException,MalformedURLException,ParserException) {}
results[https://github.com/oxhead/decoupled-hadoop/blob/5327935d210a7c7f89b56f8a3e30b7ba6e73c519/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/http/TestSSLHttpServer.java][readOut][1] = -> TRY {  -> conn=(HttpsURLConnection) url.openConnection()@ -> conn.setSSLSocketFactory(clientSslFactory.createSSLSocketFactory(),)@ -> in=conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/brosenan/cedalion/blob/58ac5921d0d55c3439b4685a17993dd35f081bed/src/net/nansore/cedalion/eclipse/Activator.java][getImage][1] = -> TRY {  -> prologFileURL=context.getBundle().getEntry("icons/"+imageName+".gif",)@ -> connection=prologFileURL.openConnection()@ -> input=connection.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/ePaul/stackoverflow-examples/blob/ad039c7ca98e686bd6225c28141596d33109ea87/src/de/fencing_game/paul/examples/rome/RomeTest.java][main][1] = -> TRY {  -> is=new URL(url,).openConnection().getInputStream()@ -> source=new InputSource(is,)@ } CATCH(IOException,FeedException) {}
results[https://github.com/TranquilMarmot/spaceout/blob/113fcc4a8169622cda4236cd730f3e415e20a069/src/launcher/RSS2AWT.java][getRSSFeed][2] = -> TRY { -> url=new URL(rssUrl,)@ -> con=url.openConnection()@ -> stream=con.getInputStream()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Chrriis/DJ-Native-Integration/blob/4943adb688a29a8c226a692f5448f0d6c6aeb89a/DJTweak/src/chrriis/dj/data/DataUtil.java][getImageData][1] = -> TRY { -> openConnection=imageURL.openConnection()@ -> openConnection.setDefaultUseCaches(false,)@ -> in=openConnection.getInputStream()@ } CATCH(Exception) { -> throw new IllegalStateException("Could not get the image data!",e,)@ }
results[https://github.com/allminewuwei/BensDeals/blob/1542ae105a8f9699c82304cda3ae1861f66d8339/src/net/bensdeals/network/core/RemoteFeedRequestTask.java][doInBackground][1] = -> TRY { -> url=new URL(path,)@ -> conn=url.openConnection()@ -> inputStream=conn.getInputStream()@ } CATCH(Exception) { -> ALog.e(e,)@ }
results[https://github.com/francisliu/hbase_namespace/blob/b0268da5baf2584c097591ca54c4328504ad577d/hbase-server/src/test/java/org/apache/hadoop/hbase/TestInfoServers.java][getUrlContent][1] = -> TRY {  -> c=u.openConnection()@ -> c.connect()@ -> bis=new BufferedInputStream(c.getInputStream(),)@ } CATCH(IOException) {}
results[https://github.com/liucong/jms4cxf2/blob/d56cb4fb7e9ae649d1f9b79c3d0d96a2b123f52f/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerResourceCreatedOutsideBookTest.java][testGetBook123][1] = -> TRY {  -> url=new URL(endpointAddress,)@ -> connect=url.openConnection()@ -> connect.addRequestProperty("Accept","application/xml",)@ -> in=connect.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/OCHA-DAP/DAP-System/blob/466dee8e8755e722b7865c148b50fd75d52aab08/DAP-System/src/main/java/org/ocha/dap/service/DAPServiceImpl.java][performDownload][1] = -> TRY {  -> IF { -> return false@url==null } -> uCon=url.openConnection()@!(url==null) -> is=uCon.getInputStream()@!(url==null) } CATCH(IOException) {}
results[https://github.com/openplans/OpenTripPlanner/blob/56fbbe39ddb3d753f579003dcf637a9196d74155/opentripplanner-graph-builder/src/main/java/org/opentripplanner/graph_builder/impl/ned/NEDDownloader.java][downloadFile][1] = -> TRY { -> downloadUrl=new URL("http://extract.cr.usgs.gov/axis2/services/DownloadService/getData?downloadID="+token,)@ -> connection=downloadUrl.openConnection()@ -> httpconnection=(HttpURLConnection) connection@ -> istream=connection.getInputStream()@ } CATCH(Exception) { -> throw new RuntimeException("Error getting data from USGS Download Server while downloading",e,)@ }
results[https://github.com/oxhead/decoupled-hadoop/blob/fc9ad197854bc6f5f6ae1207a5274f2a8d1f7a42/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ClusterJspHelper.java][readOutput][1] = -> TRY {  -> connection=url.openConnection()@ -> in=new BufferedReader(new InputStreamReader(connection.getInputStream(),Charsets.UTF_8,),)@ } CATCH(IOException) {}
