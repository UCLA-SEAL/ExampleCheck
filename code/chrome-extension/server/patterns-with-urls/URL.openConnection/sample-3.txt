results[https://github.com/jlaloi/TrayPass/blob/aa6d1558f9da5d992c7b4a9c32df48935ab6fae2/src/main/java/traypass/tools/ToolFTP.java][connect][2] = -> TRY {  -> url=new URL("ftp://"+user+":"+password+"@"+host+":"+port+"/"+targetFile+";type=i",)@ -> m_client=url.openConnection()@ } CATCH(Exception) {}
results[https://github.com/prime-framework/prime-mvc/blob/46abe41a91177ae35df1274301684eb2e097e8c9/src/main/java/org/primeframework/mvc/freemarker/URLTemplateSource.java][<init>][195] = -> TRY {  -> this.conn=url.openConnection()@ } CATCH(IOException) {}
results[https://github.com/kbachl/brix-cms-backup/blob/d69b25d7a63032de2bfa67999b8e523a561607b2/brix-demo-modular/src/main/java/org/brixcms/demo/web/tile/stockquote/StockQuoteRequest.java][setUpHttpConnection][2] = -> TRY {  -> connection=url.openConnection()@ -> httpConn=(HttpURLConnection) connection@ } CATCH(IOException,ProtocolException) {}
results[https://github.com/maqetta/maqetta/blob/90c56aa460677678720963f844e13b15dececb8b/maqetta.core.server.standalone/src/maqetta/core/server/standalone/VLibraryResource.java][openConnection][8] = -> TRY {  -> return this.resourcePointer.openConnection()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/vogella/eclipse-platform/blob/87b0da8e4cc6cdde95c1a6b04d510a697f4bd3fd/update/org.eclipse.update.core/src/org/eclipse/update/internal/core/connection/HttpResponse.java][getStatusCode][5] = -> IF { -> TRY { -> connection=url.openConnection()@ } }
results[https://github.com/bobmcwhirter/drools/blob/d11b7db829367793c412343e758372940a5d51a2/drools-core/src/main/java/org/drools/agent/HttpClientImpl.java][fetchPackage][1] = -> TRY {  -> con=url.openConnection()@ -> httpCon=(HttpURLConnection) con@ } CATCH(IOException,ClassNotFoundException) {}
results[https://github.com/SecurisationSiteGVI/securisation-site-gvi/blob/f5c2c253e5266b745b8afcf94002edc28bae7231/src/physique/io/CameraDriverSonyImpl.java][piloterCameraHaut][19] = -> TRY {  -> u=new URL("http://"+ip+"/command/ptzf.cgi?Move=up,8",)@ -> connection=(URLConnection) u.openConnection()@ } CATCH(Exception) {}
results[https://github.com/OSBI/saiku/blob/22bb2bd8b109e1f74e7fc9e3b3eb90d740707d56/saiku-core/saiku-service/src/main/java/org/saiku/olap/util/SaikuProperties.java][getConnection][2] = -> TRY { -> return url.openConnection()@ } CATCH(IOException) { -> throw new RuntimeException("Error while opening properties file '"+url+"'",e,)@ }
results[https://github.com/jeyboy/MUSIC/blob/e4df3acea8626437de08298c590aa27670567cc1/src/jBittorrentAPI/ClientHttpRequest.java][<init>][42] = -> TRY {  -> <init>(url.openConnection(),)@ } CATCH(IOException) {}
results[https://github.com/vitkin/aptoide-client/blob/d80b027d52042396f74f75171b77d11268ee8f55/src/cm/aptoide/pt/util/NetworkUtils.java][getLastModified][1] = -> TRY {  -> return url.openConnection().getLastModified()@ } CATCH(IOException) {}
results[https://github.com/laarid/platform_libcore/blob/8f7341440cf447efc91739bdc4ad24ce4957e83b/benchmarks/src/benchmarks/regression/URLConnectionBenchmark.java][get][58] = -> TRY {  -> connection=(HttpURLConnection) url.openConnection()@ -> in=connection.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/ebean-orm/avaje-ebeanorm/blob/7aae897def16ec72ab474bbd433ad988c25752cf/src/main/java/com/avaje/ebeaninternal/server/lib/resource/UrlResourceContent.java][<init>][3] = -> TRY { -> con=url.openConnection()@ } CATCH(IOException) { -> throw new RuntimeException(ex,)@ }
results[https://github.com/bsautner/com.nimbits/blob/87f57b96f5ba33681905d02bd82c691d34c32617/nimbits_gcm/src/main/java/com/nimbits/server/gcm/Sender.java][getConnection][91] = -> TRY {  -> conn=(HttpURLConnection) new URL(url,).openConnection()@ } CATCH(IOException) {}
results[https://github.com/Spoutcraft/Spoutcraft/blob/08acd23cea37617e0341cb5c829858f5aa52832d/MCP/src/minecraft/net/minecraft/src/org/apache/commons/io/input/XmlStreamReader.java][<init>][8] = -> TRY {  -> <init>(url.openConnection(),null,)@ } CATCH(IOException) {}
results[https://github.com/daisy-consortium/pipeline-mod-braille/blob/7e73cde0a8f719d60efc96c9698cdcef2e1eaf49/liblouis-calabash/src/main/java/org/daisy/pipeline/liblouis/calabash/TranslateFileProvider.java][unpackIniFile][8] = -> TRY {  -> iniFile.openConnection()@ -> reader=iniFile.openStream()@ } CATCH(Exception) {}
results[https://github.com/mhl/libbio-formats-java/blob/2bc1d2319a778fbed9656d0c1b80366ab7a31a0f/components/bio-formats/src/loci/formats/Location.java][lastModified][4] = -> IF { -> TRY { -> return url.openConnection().getLastModified()@ } }
results[https://github.com/BaseXdb/basex/blob/0a772b41e7fbaa4681e1c3dfa3c83edbef3bb228/src/main/java/org/basex/query/util/HTTPClient.java][openConnection][2] = -> TRY {  -> url=new URL(dest,)@ -> return (HttpURLConnection) url.openConnection()@ } CATCH(QueryException,IOException) {}
results[https://github.com/amnotbot/amnotbot/blob/6f025348fb4749eb778a232b5653218be3f672aa/src/main/java/org/knix/amnotbot/cmd/GoogleSearch.java][startGoogleConnection][5] = -> TRY {  -> googleConn=searchUrl.openConnection()@ -> googleConn.addRequestProperty("Referer","http://packetpan.org",)@ } CATCH(IOException) {}
results[https://github.com/mariok/pinemup/blob/3710f6502fe5d5e412d0db0aab6963ce70d8bc49/src/main/java/net/sourceforge/pinemup/io/server/FTPConnection.java][openURLConnection][1] = -> TRY {  -> urlc=url.openConnection()@ -> urlc.setDoOutput(true,)@ } CATCH(IOException) {}
results[https://github.com/roalex/android_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/main/java/libcore/net/url/JarURLConnectionImpl.java][<init>][60] = -> TRY {  -> jarFileURL=getJarFileURL()@ -> jarFileURLConnection=jarFileURL.openConnection()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/banq/jdonframework/blob/d8ca0cc25c6b201bb8e9eee26c789160ba3b1bb1/src/com/jdon/util/URLUtil.java][run][2] = -> TRY { -> con=url.openConnection()@ } -> IF { -> close(con,)@timedOut&&con!=null }
results[https://github.com/mhl/libbio-formats-java/blob/dbd6fa2b96fad02f742a070d83f49078aa17822d/loci/formats/Location.java][list][4] = -> IF { -> TRY { -> c=url.openConnection()@ -> is=c.getInputStream()@ } }
results[https://github.com/hpxro7/UWSchedule/blob/bba26056233642dff311ea2308c6a21efb38ae9f/uwandroid/src/main/java/com/amgems/uwschedule/util/NetUtils.java][getInputConnection][4] = -> TRY {  -> connection=(HttpURLConnection) targetUrl.openConnection()@ -> connection.setRequestProperty("User-Agent",USER_AGENT_STRING,)@ } CATCH(IOException) {}
results[https://github.com/lenik/jazz/blob/e8f4c617febd4e4754c2f65ea6276f403b8c7644/bas/layer-2/bas-vfs/src/main/java/net/bodz/bas/vfs/URLFile.java][newOutputStream][9] = -> TRY {  -> return url.openConnection().getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/oxhead/decoupled-hadoop/blob/50043d6cfb9087e280777826bef789e89dbb8da6/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/URLUtils.java][openConnection][5] = -> TRY {  -> connection=url.openConnection()@ -> setTimeouts(connection,)@ } CATCH(IOException) {}
results[https://github.com/zxing/zxing/blob/1d086a09afd49264659fa0af06db54ee9d4e5fbf/javase/src/com/google/zxing/StringsResourceTranslator.java][fetch][8] = -> TRY {  -> connection=translateURL.openConnection()@ -> connection.connect()@ } CATCH(IOException) {}
results[https://github.com/visad/visad/blob/67116da7b569279f45b692c51fc5f9ea373fea5e/deps/src/loci/formats/Location.java][length][4] = -> IF { -> TRY { -> return url.openConnection().getContentLength()@ } }
results[https://github.com/deric/clueminer/blob/15b4bd35f5ee76d9c15c68b4bcce0c4b5693ce2a/dataset-io/src/main/java/be/abeel/net/ClientHttpUpload.java][upload][1] = -> TRY {  -> uc=url.openConnection()@ -> request=new ClientHttpRequest(uc,)@ } CATCH(IOException) {}
results[https://github.com/ttron/lab/blob/31d92906d5d61f28af1711da4fa7fff18aa4e947/jersey/core-client/src/test/java/org/glassfish/jersey/client/HttpUrlConnectorTest.java][getConnection][1] = -> TRY {  -> result=(HttpURLConnection) endpointUrl.openConnection()@ -> return wrapNoContentHttps(result,)@ } CATCH(IOException) {}
results[https://github.com/rhayes-cida/gw_data_portal/blob/2963bcfa3dc61895a9bce7f55ab41decc66f498f/src/main/java/gov/usgs/DataRelayServlet.java][relay][1] = -> TRY {  -> url=new URL(cacheServer,)@ -> conn=url.openConnection()@ -> hconn=(HttpURLConnection) conn@ } CATCH(ServletException,IOException) {}
results[https://github.com/carrot2/carrot2/blob/cb1ab32b11ab0f1b09a15366653a2bb22c35f941/carrot2/components/inputs/treeSnippetMiner/src/com/paulodev/carrot/treeSnippetMiner/treeAnalyser/tokenFeature/IsURLCalc.java][innerCalcValue][1] = -> LOOP { -> TRY { -> temp=new URL(toCheck,)@ -> res=(HttpURLConnection) temp.openConnection()@ } }
results[https://github.com/xwiki/xwiki-commons/blob/7ed47fcdde1b15d1ed7867354c4ccb1c64d67811/xwiki-commons-core/xwiki-commons-classloader/src/test/java/org/xwiki/classloader/internal/protocol/attachmentjar/AttachmentURLStreamHandlerTest.java][testAttachmentJarURLWithEncodedChars][1] = -> TRY {  -> url=new URL(null,"attachmentjar://some%20page",(URLStreamHandler) this.handler,)@ -> url.openConnection()@ } CATCH(Exception) {}
results[https://github.com/bitrepository/reference/blob/879c055baf8a979b4aa56677aafb41de25512b2c/bitrepository-core/src/main/java/org/bitrepository/protocol/http/HttpFileExchange.java][getConnection][2] = -> TRY { -> return (HttpURLConnection) url.openConnection()@ } CATCH(IOException) { -> throw new CoordinationLayerException("Could not open the connection to the url '"+url+"'",e,)@ }
results[https://github.com/PeteManchester/MediaPlayer/blob/673042fafb4b282f7da9b469546b906951d8e16d/com.upnp.mediaplayer/src/org/rpi/radio/parsers/PLSParser.java][getConnection][6] = -> TRY {  -> mUrl=new URL(url,).openConnection()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/thomasbecker/jetty-7/blob/f68610a2b900d0f4628e19e2b6c8b9013574c2fb/jetty-osgi/jetty-osgi-boot-warurl/src/main/java/org/eclipse/jetty/osgi/boot/warurl/internal/WarURLConnection.java][<init>][4] = -> TRY {  -> super(url,)@ -> _conn=url.openConnection()@ } CATCH(IOException) {}
results[https://github.com/lenik/jazz/blob/20586161fe1031c23e48de45173d5104fcf4be79/bas/layer-2/bas-vfs/src/main/java/net/bodz/bas/vfs/impl/url/URLFile.java][getLength][1] = -> TRY { -> connection=url.openConnection()@ -> length=connection.getContentLength()@ -> IF { -> return 0L@length==-1 } }
results[https://github.com/MongoLink/mongolink/blob/39f3461bddc021c1cb0a52dcd7459e1eca8d151e/src/main/java/fr/bodysplash/mongolink/domain/mapper/ContextBuilder.java][doFindClassFromJar][4] = -> TRY {  -> jarCon=(JarURLConnection) url.openConnection()@ -> jarFile=jarCon.getJarFile()@ } CATCH(IOException,ClassNotFoundException) {}
results[https://github.com/kedzie/VBoxManager/blob/58291d5788f936db2350073a41f834fc9cbed6d8/ksoap3-src/org/ksoap2/transport/HttpsServiceConnectionSE.java][<init>][2] = -> TRY {  -> connection=(HttpsURLConnection) new URL(HttpsTransportSE.PROTOCOL,host,port,file,).openConnection()@ } CATCH(IOException) {}
results[https://github.com/dreedyman/Rio/blob/28a495eb02ad5145200117c0772fb3094a358a92/rio-api/src/main/java/org/rioproject/deploy/StagedData.java][getDownloadSize][9] = -> TRY {  -> return locationURL.openConnection().getContentLength()@ } CATCH(IOException) {}
results[https://github.com/mariok/pinemup/blob/3ec45d3504bc80f13045a2a6c2da591b74f17ca7/src/main/java/net/sourceforge/pinemup/io/server/WebdavConnection.java][openURLConnection][1] = -> TRY {  -> urlc=(HttpURLConnection) url.openConnection()@ -> urlc.setRequestMethod("PUT",)@ } CATCH(IOException) {}
results[https://github.com/eclipse/riena/blob/91df45e67ec3b71a5991a663915c687b2412fbd7/org.eclipse.riena.communication.core/src/org/eclipse/riena/communication/core/attachment/HttpURLDataSource.java][<init>][1] = -> TRY {  -> myHttpUrlConnection=(HttpURLConnection) url.openConnection()@ -> Assert.isNotNull(myHttpUrlConnection,)@ } CATCH(IOException) {}
results[https://github.com/meltmedia/cadmium/blob/9f1b78edb06a96a1040c8b9bc3400200a73d384f/core/src/main/java/com/meltmedia/cadmium/core/reflections/JBossVfsUrlType.java][<init>][1] = -> TRY {  -> vfConn=(VirtualFileURLConnection) vfsUrl.openConnection()@ -> vFile=vfConn.getContent()@ } CATCH(IOException) {}
results[https://github.com/fornwall/eclipsescript/blob/6e46777802aaec6ee1cdade10cca7fefa61831a1/src/org/eclipsescript/util/JavaUtils.java][readURL][2] = -> TRY {  -> uc=url.openConnection()@ -> return readURLConnection(uc,)@ } CATCH(Exception) {}
results[https://github.com/noelbush/programd/blob/860b25a93e06d6d6c3448dece7993c97702ca99b/src/org/aitools/util/resource/URLTools.java][getLastModified][1] = -> TRY { -> connection=path.openConnection()@ } -> IF { -> return 0@connection==null } -> return connection.getLastModified()@!(connection==null)
results[https://github.com/sangamon/sneer/blob/71005db35208bfe85e5419b2d2a92b277bf703da/bricks/src/sneerapps/gis/ui/impl/LocationGuiImpl.java][grabData][5] = -> TRY {  -> conn=url.openConnection()@ -> in=conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/PLOS/ambra-sandbox/blob/227051958dd97a3c8cf96661a99aa6d17dbec2eb/ambra/webapp/src/main/java/org/ambraproject/web/HttpResourceServer.java][<init>][3] = -> TRY {  -> <init>(url,url.openConnection(),)@ } CATCH(IOException) {}
results[https://github.com/abbyysdk/ocrsdk.com/blob/f7fb832ef9e7126367181efd9080911f501ea1e9/Java/Abbyy.Ocrsdk.client/src/com/abbyy/ocrsdk/Client.java][openGetConnection][2] = -> TRY {  -> connection=(HttpURLConnection) url.openConnection()@ -> setupAuthorization(connection,)@ } CATCH(Exception) {}
results[https://github.com/RvonMassow/xDoc/blob/0254e9ce3972b634f8b02ade04442499430c2938/org.eclipse.xtext.xdoc.tests/xtend-gen/org/eclipse/xtext/xdoc/ParserTest.java][testLink][1] = -> TRY {  -> connection=url.openConnection()@ -> Assert.assertNotNull(connection,)@ } CATCH(Exception) {}
results[https://github.com/romaframework/core/blob/a0944415b6bb98458d78623093d50d38371e48a0/src/org/romaframework/core/io/virtualfile/zip/ZipArchiveFile.java][<init>][4] = -> TRY {  -> jarConnection=(JarURLConnection) url.openConnection()@ -> file=jarConnection.getJarFile()@ } CATCH(IOException) {}
results[https://github.com/freeplane/freeplane/blob/d486a4f453cbc13f0ba9c729d43466e7f9441361/freeplane_plugin_workspace/src/org/freeplane/plugin/workspace/features/ProjectURLHandler.java][openConnection][2] = -> TRY {  -> absolutePath=resolve(project,url,)@ -> return absolutePath.openConnection()@ } CATCH(IOException) {}
results[https://github.com/spring-projects/eclipse-integration-commons/blob/173b75519328ae23f58841387d1f3ea4f5f63344/org.springsource.ide.eclipse.commons.frameworks.core/src/org/springsource/ide/eclipse/commons/frameworks/core/downloadmanager/URLConnectionFactory.java][createConnection][2] = -> TRY {  -> conn=url.openConnection()@ -> conn.setConnectTimeout(CONNECT_TIMEOUT,)@ } CATCH(IOException) {}
results[https://github.com/srnsw/xena/blob/61253c8c76b8bd39e7e52eef5cd6b756fb8d0929/ext/src/jpedal_lgpl-3.83b38/src/org/jpedal/examples/simpleviewer/Commands.java][selectURL][2] = -> IF { -> TRY { -> testExists=new URL(selectedFile,)@selectedFile!=null -> conn=testExists.openConnection()@ } }
results[https://github.com/vogella/vogella/blob/1d0b9abadd1d05780a23c19570be0fc4aa174cc6/de.vogella.web.crawler/src/de/vogella/pagerank/crawler/links/LinkChecker.java][htmlResource][1] = -> TRY { -> contentType=(HttpURLConnection) url.openConnection().getContentType()@ -> IF { -> return true@contentType.startsWith("text/html",) } }
results[https://github.com/panbasten/BA/blob/2c81d15d826a0de327e3445f9ebc0b073dc24fda/mondrian/mondrian-srv/src/main/java/mondrian/olap/MondrianPropertiesBase.java][getConnection][1] = -> TRY { -> return url.openConnection()@ } CATCH(IOException) { -> throw Util.newInternal(e,"Error while opening properties file '"+url+"'",)@ }
results[https://github.com/samtingleff/valkyrie/blob/5be9e015eb36e5bbd4b9674dd0dbcac2270175b8/src/com/othersonline/kv/distributed/impl/UrlNodeStore.java][refreshActiveNodes][3] = -> TRY {  -> conn=url.openConnection()@ -> in=conn.getInputStream()@ } CATCH(IOException,ConfigurationException) {}
results[https://github.com/eclipse/stardust.ui.web/blob/33bf8a2f0b8dbb54042334e0f79ce3a12a217363/portal-common/src/main/java/org/eclipse/stardust/ui/web/plugin/support/resources/CachingResourceLoader.java][openConnection][1] = -> TRY {  -> return new URLConnectionImpl(url,_delegate.openConnection(),this,)@ } CATCH(IOException) {}
results[https://github.com/praccu/PHENND-app/blob/643487b99e558a4c56aa1fd083412a38701c9676/src/org/phennd/updates/DataManager.java][pullData][4] = -> TRY { -> url=new URL(target,)@ -> connection=url.openConnection()@ -> httpConnection=(HttpURLConnection) connection@ -> IF { -> return rss@responseCode==HttpURLConnection.HTTP_OK } }
results[https://github.com/pitosalas/blogbridge/blob/13fce2f52e6d649908a1ac0f4942daf51c03b3b7/src/com/salas/bb/utils/net/ResumingSupport.java][remoteResume][1] = -> TRY {  -> con=url.openConnection()@ -> holder=new URLConnectionHolder(con,null,)@ } CATCH(IOException) {}
results[https://github.com/madiator/HadoopUSC/blob/a02dd094e1b13bf15a6409f0cd287febe1ba0212/src/test/org/apache/hadoop/http/TestHttpServer.java][readOutput][2] = -> TRY {  -> return readConnection(url.openConnection(),)@ } CATCH(IOException) {}
results[https://github.com/CIShell/CIShell/blob/7703f59d53288f81a9cf1b2ef6cf62e72ee1cbb1/core/org.cishell.utilities/src/org/cishell/utilities/network/DownloadHandler.java][getResponse][1] = -> TRY {  -> connection=(HttpURLConnection) url.openConnection()@ -> return getResponse(connection,numberOfRetries,)@ } CATCH(IOException,InvalidUrlException,NetworkConnectionException) {}
results[https://github.com/capedwarf/capedwarf-blue/blob/585c2b2c6f6a4e57a2267d1df5bfd90640cf8f8e/testsuite/src/test/java/org/jboss/test/capedwarf/testsuite/secure/test/SecureTest.java][testSecurePing][2] = -> TRY {  -> uc=new URL(url,"secure",).openConnection()@ -> conn=(HttpURLConnection) uc@ } CATCH(Exception) {}
results[https://github.com/wso2/tools/blob/3f8e8f3efbfcc3d7562cb37d9a5b222eeb0dce76/ide/eclipse/registry/org.wso2.developerstudio.eclipse.greg.base/src/org/wso2/developerstudio/eclipse/greg/base/ui/dialog/CredentialsDialog.java][urlValid][5] = -> TRY { -> status=(HttpURLConnection) url.openConnection().getResponseCode()@ -> IF { -> return true@status>0 } }
results[https://github.com/Y3PP3R/AP2DX/blob/79daa77edb07ccf683c515de21f72cf132947ead/java/AP2DX/lib/jmockit/main/test/mockit/ClassLoadingAndJREMocksTest.java][mockURLAndURLConnectionUsingMockParameterAndMockField][1] = -> TRY {  -> conn=url.openConnection()@ -> assertSame(mockConnection,conn,)@ } CATCH(Exception) {}
results[https://github.com/jbosstools/jbosstools-jbpm/blob/abb4614574695423df31afe62300c700ce4aac53/plugins/org.jbpm.gd.jpdl/src/org/jbpm/gd/jpdl/deployment/ProcessArchiveDeployer.java][openConnection][1] = -> TRY { -> return url.openConnection()@ } CATCH(IOException) { -> showConnectException()@ }
results[https://github.com/lenik/jazz/blob/e8f4c617febd4e4754c2f65ea6276f403b8c7644/bas/layer-2/bas-vfs/src/main/java/net/bodz/bas/vfs/URLFile.java][getLength][2] = -> TRY { -> connection=url.openConnection()@ -> length=connection.getContentLengthLong()@ -> IF { -> return 0L@length==-1 } }
results[https://github.com/getrailo/railo/blob/a563eb0e2e926de81d9eb100e60dcdba60e724c4/railo-java/railo-core/src/railo/runtime/net/smtp/URLDataSource2.java][getContentType][1] = -> TRY { -> connection=url.openConnection()@ } -> IF { -> return DEFAULT_CONTENT_TYPE@connection==null } -> return connection.getContentType()@!(connection==null)
results[https://github.com/genepi/pig-gene/blob/9f53e4a3dfdbfb2cfcbea8ea494e3065f7f12b89/AuswertTestdat/lib/hadoop_src/hdfs/org/apache/hadoop/hdfs/HftpFileSystem.java][openConnection][1] = -> TRY {  -> url=getNamenodeURL(path,query,)@ -> return (HttpURLConnection) url.openConnection()@ } CATCH(IOException) {}
results[https://github.com/ds10git/TV-Browser/blob/e6b78893e36a5904cec837970113f5f8eb1a5b94/primarydatamanager/tvdatastarterkit/src/main/java/primarydatamanager/primarydataservice/util/httpsession/HttpSession.java][<init>][1] = -> TRY {  -> mUrlConnection=(HttpURLConnection) url.openConnection()@ -> cookie=mUrlConnection.getHeaderField("Set-Cookie",)@ } CATCH(IOException) {}
results[https://github.com/andrewphorn/ClassiCube-Client/blob/494686f06299dc7dc88a2399e2ced26ad21b036d/src/main/java/de/jarnbjo/ogg/UncachedUrlStream.java][<init>][1] = -> TRY {  -> this.source=source.openConnection()@ -> this.sourceStream=this.source.getInputStream()@ } CATCH(OggFormatException,IOException) {}
results[https://github.com/ipteipsi/power/blob/4ae473f8ea28c018b6661cdbb8d9f8e89ba9beaa/Cluster/PowerMaster/src/Module/WebHTTP/WebFileDownloader.java][Download][1] = -> TRY {  -> url.openConnection()@ -> dataIN=url.openStream()@ } CATCH(IOException) {}
results[https://github.com/umitproject/openmonitor-android-agent/blob/020baa6efb37ef90425aff5803b4e5a4507f4843/ICM-Mobile/src/org/umit/icm/mobile/connectivity/WebsiteOpen.java][openURLConnection][1] = -> TRY {  -> url=new URL(str,)@ -> return url.openConnection()@ } CATCH(IOException,HttpException) {}
results[https://github.com/eclipse/hudson.core/blob/36e5719c9391e9470866da337653e236e5a3dc05/hudson-core/src/main/java/hudson/model/Slave.java][connect][2] = -> TRY {  -> res=getURL()@ -> return res.openConnection()@ } CATCH(IOException) {}
results[https://github.com/bobmcwhirter/vfs/blob/ac331106f9068af130f7bb3efcac5b2b3cd41a05/src/main/java/org/jboss/virtual/plugins/context/AbstractURLHandler.java][openConnection][1] = -> TRY {  -> conn=url.openConnection()@ -> conn.setUseCaches(false,)@ } CATCH(IOException) {}
results[https://github.com/hobinyoon/faban-src/blob/c687fdead415cc93856cc0dd67817c9da777aed4/driver/src/com/sun/faban/driver/transport/sunhttp/SunHttpTransport.java][getConnection][1] = -> TRY {  -> c=(HttpURLConnection) url.openConnection()@ -> c.setInstanceFollowRedirects(followRedirects,)@ } CATCH(IOException) {}
results[https://github.com/Y3PP3R/AP2DX/blob/79daa77edb07ccf683c515de21f72cf132947ead/java/AP2DX/lib/jmockit/main/test/mockit/ClassLoadingAndJREMocksTest.java][mockURLAndHttpURLConnectionUsingMockParameters][1] = -> TRY {  -> conn=(HttpURLConnection) mockUrl.openConnection()@ -> assertSame(mockHttpConnection,conn,)@ } CATCH(Exception) {}
results[https://github.com/blueantelope/-Antelope.CI/blob/11982ee2993c0ad5d35e7f4537bdbd22417ee91f/com.antelope.ci.bus/com.antelope.ci.bus.framework/src/main/java/org/apache/felix/framework/BundleWiringImpl.java][convertToLocalUrl][1] = -> IF { -> TRY { -> url=(URLHandlersBundleURLConnection) url.openConnection().getLocalURL()@url.getProtocol().equals("bundle",) } }
results[https://github.com/EmilyBjoerk/lsml/blob/34c1bd899c347387bc53ac7933d8a6f32d3a38a5/src/org/lisoft/lsml/parsing/export/SmurfyImportExport.java][connect][1] = -> TRY {  -> connection=(HttpsURLConnection) aUrl.openConnection()@ -> connection.setSSLSocketFactory(sslSocketFactory,)@ } CATCH(IOException) {}
results[https://github.com/parworks/PARWorks-Android-Java/blob/84f620b3a93856130bd3be4a1423205c6ea17923/src/com/parworks/androidlibrary/utils/BitmapUtils.java][getImageStream][2] = -> TRY { -> input=stringUrl.openConnection().getInputStream()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/sonatype/maven-reference-en/blob/ca21ce893236eefd8dde5e7b659962f92af42b2d/examples/ch-custom/simple-weather/src/main/java/org/sonatype/mavenbook/weather/YahooRetriever.java][retrieve][2] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/giorgiosironi/Chansonnier/blob/ade7981d787b55d62cd4e0a449f9c1fe55d4000e/chansonnier/it.polimi.chansonnier.agent/code/src/it/polimi/chansonnier/agent/URLUtils.java][retrieve][1] = -> TRY {  -> conn=(HttpURLConnection) url.openConnection()@ -> conn.setRequestMethod("GET",)@ -> is=conn.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/student2ua/myTaning/blob/3dc7d93d2b23c811d672fd464a4c1f3a7536d1c1/src/com/tor/util/jar/JarRunner.java][getMainClassName][1] = -> TRY {  -> u=new URL("jar","",url+"!/",)@ -> uc=(JarURLConnection) u.openConnection()@ -> attr=uc.getMainAttributes()@ } CATCH(IOException) {}
results[https://github.com/grisu48/segeo/blob/60d6e99983410226280afea9b60f01f8a4119ad0/org.feldspaten.segeo.android/src/segeo/api/Connection.java][logout][1] = -> TRY {  -> url=new URL(uri,)@ -> connection=url.openConnection()@ -> statusCode=getResponseCode(connection,)@ } CATCH(IOException) {}
results[https://github.com/apurtell/hadoop/blob/a4910f27a144a48e57434bf33c320b0d9d4ea2b0/src/test/hdfs/org/apache/hadoop/hdfs/DFSTestUtil.java][urlGet][1] = -> TRY {  -> conn=url.openConnection()@ -> IOUtils.copyBytes(conn.getInputStream(),out,4096,true,)@ } CATCH(IOException) {}
results[https://github.com/codefireXperiment/libcore/blob/adf25974a44503066df61cc0be515395fd7253b6/luni/src/test/java/org/apache/harmony/luni/tests/java/net/URLConnectionTest.java][openGifURLConnection][2] = -> TRY {  -> fUrl1=new URL("file:/"+tmpDir.getPath()+"/Harmony.GIF",)@ -> con1=fUrl1.openConnection()@ } CATCH(IOException) {}
results[https://github.com/Strikeskids/WebFootprinting-Georgetown/blob/c40742135f1b809481fd362765654aac045f510d/src/com/sk/parse/Request.java][openConnection][1] = -> TRY {  -> conn=url.openConnection()@ -> setRequestMethod(conn,)@ -> addRequestHeaders(conn,)@ } CATCH(IOException) {}
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/libcore/luni/src/test/java/org/apache/harmony/luni/tests/java/net/URLConnectionTest.java][openJarURLConnection][3] = -> TRY {  -> fUrl1=new URL("jar:file:"+tmpDir.getPath()+"/hyts_att.jar!/",)@ -> con1=(JarURLConnection) fUrl1.openConnection()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/penSecIT/commons-vfs/blob/50421355d646c1b1019928095d0afc9fd8cf20bf/tags/pre_filenameparsing/src/java/org/apache/commons/vfs/impl/URLStreamHandlerProxy.java][openConnection][1] = -> TRY {  -> proxyURL=new URL(url.toExternalForm(),)@ -> return proxyURL.openConnection()@ } CATCH(IOException) {}
results[https://github.com/boundlessgeo/geoserver-2.0.x/blob/852c51eed5f3177b67e2477d9eb6ae15fdacf501/main/test/org/vfny/geoserver/Threads.java][connect][2] = -> TRY {  -> hc=(HttpURLConnection) url.openConnection()@ -> hc.setRequestMethod("GET",)@ -> hc.connect()@ } CATCH(IOException) {}
results[https://github.com/picketlink/picketlink/blob/32a47000a26e02da2931ea519c24e0b56a13c36e/modules/social/src/main/java/org/picketlink/social/standalone/fb/FacebookProcessor.java][sendAccessTokenRequest][1] = -> TRY { -> url=new URL(location,)@ -> connection=url.openConnection()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/uDig/udig-platform/blob/fae0b31d673f218d5474c6cbdbc78749e8703d41/plugins/net.refractions.udig.catalog.wmt/src/net/refractions/udig/catalog/internal/wmt/wmtsource/ww/LayerSet.java][getRootElementFromUrl][1] = -> TRY {  -> connection=url.openConnection()@ -> dom=builder.build(connection.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/BelieveROM/android_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/net/URLStreamHandlerFactoryTest.java][testCreateURLStreamHandler][3] = -> TRY {  -> url=new URL("http://android.com/",)@ -> connection=url.openConnection()@ -> assertTrue(connection instanceof Handler.HandlerURLConnection,)@ } CATCH(Exception) {}
results[https://github.com/Aulie/Freerider/blob/9d1f7e0ff3655b7f07c5156243396c7e7877a0d3/Freerider/src/no/ntnu/idi/socialhitchhiking/map/RouteProvider.java][getConnectionInputStream][1] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/OpenEtna/android_dalvik/blob/f6c387128427e121477c1b32ad35cdcaa5101ba3/libcore/luni/src/test/java/org/apache/harmony/luni/tests/java/net/ContentHandlerTest.java][test_getContentLURLConnection][1] = -> TRY {  -> conn=new URL("http://www.apache.org",).openConnection()@ -> content=handler.getContent(conn,)@ } CATCH(IOException) {}
results[https://github.com/DomoTop/DomoTop/blob/a68bd34899db71c695ee09236ab912a73a60620f/Product/Controller/test/org/openremote/controller/rest/ListPanelIDsTest.java][testBrokenPanelXMLStructureMissingPanelsTag][1] = -> TRY {  -> panelList=new URL(RESTTests.containerURL+RESTAPI_PANELS_URI,)@ -> connection=(HttpURLConnection) panelList.openConnection()@ -> RESTTests.assertHttpResponse(connection,Constants.HTTP_RESPONSE_INVALID_PANEL_XML,RESTTests.ASSERT_BODY_CONTENT,Constants.MIME_APPLICATION_XML,Constants.CHARACTER_ENCODING_UTF8,)@ } CATCH(Exception) {}
results[https://github.com/societies/SOCIETIES-Platform/blob/6629a6e44a6316d61cfc464a0c10dcecf8d6ffb9/integration-tests/BIT/security-test-suite/policy-negotiate-consumer/src/main/java/org/societies/integration/test/bit/policynegotiate/NominalTestCaseLowerTester.java][getHttpCode][1] = -> TRY {  -> con=(HttpURLConnection) resource.openConnection()@ -> con.setRequestMethod("HEAD",)@ -> return con.getResponseCode()@ } CATCH(IOException) {}
results[https://github.com/niloc132/mauve-gwt/blob/200cef61c0606333348ce5c43ed2b8417e675025/gnu/testlet/java/net/URLConnection/URLConnectionTest.java][test_DefaultRequestProperty][1] = -> TRY { -> url=new URL("http://sources.redhat.com/mauve/testarea/index.html",)@ -> conn=url.openConnection()@ } CATCH(Exception) { -> harness.fail("Error in test_DefaultRequestProperty  - 1 "+" should not have raised exception here ",)@ }
results[https://github.com/jgf/wala-mirror/blob/8ff8dab56a89d5d460a98d80c2747e90e175d583/com.ibm.wala.core/src/com/ibm/wala/classLoader/AbstractURLModule.java][getInputStream][1] = -> TRY { -> return url.openConnection().getInputStream()@ } CATCH(IOException) { -> Assertions.UNREACHABLE()@ }
results[https://github.com/mwladysiak/vtm-honeycomb/blob/5a89dab2d272cc6341abe5a59fcd5a500cfec977/src/org/oscim/layers/tile/bitmap/BitmapTileLayer.java][getURLConnection][1] = -> TRY {  -> urlConnection=url.openConnection()@ -> urlConnection.setConnectTimeout(TIMEOUT_CONNECT,)@ -> urlConnection.setReadTimeout(TIMEOUT_READ,)@ } CATCH(IOException) {}
results[https://github.com/aaronbinns/heritrix3/blob/0497efbb327d5609c87f6f59339fcffa588336c5/commons/src/main/java/org/archive/net/rsync/Handler.java][main][1] = -> TRY {  -> u=new URL(args[0],)@ -> connect=u.openConnection()@ -> is=connect.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/egonw/pathvisio/blob/af58ae201d0b4b419dfad2e243bbe74aa274c50d/src/wikipathways/org/wikipathways/applet/gui/GenMappExporter.java][doExport][1] = -> TRY {  -> con=pwUrl.openConnection()@ -> pathway.readFromXml(con.getInputStream(),true,)@ } CATCH(Exception) {}
