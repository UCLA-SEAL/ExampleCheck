results[https://github.com/rnewson/couchdb-lucene/blob/c580034534b6e86afbc198e00eb0d3b00175d7d2/src/main/java/com/github/rnewson/couchdb/lucene/couchdb/DatabaseInfo.java][getName][116] = -> TRY {  -> return json.getString("db_name",)@ } CATCH(JSONException) {}
results[https://github.com/vizanto/caffeine-hx/blob/da26673910bce0c537f7494d9abefebad9676ea8/memedb/src/java/memedb/document/Document.java][getId][40] = -> TRY { -> return commonData.getString(ID,)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/00stefan00/ITACT_GetConnected/blob/d22116247dfd878c8b469e50634dde60a22b178c/src/com/app/getconnected/factories/details/Detailfactory.java][getMode][1] = -> TRY {  -> return leg.getString(MODE_TAG,).toLowerCase()@ } CATCH(JSONException) {}
results[https://github.com/jagkuma/stamprally/blob/51e8cd10f65700eea24690c4b9254a955dcd1987/src/jag/kumamoto/apps/StampRally/Data/User.java][isUpdate][9] = -> TRY {  -> return obj.getString("updated",).equals("true",)@ } CATCH(JSONException) {}
results[https://github.com/uservoice/uservoice-android-sdk/blob/3e04ae4f4837241fb2dac30233927faad146b42e/UserVoiceSDK/src/com/uservoice/uservoicesdk/model/BaseModel.java][getHtml][5] = -> TRY {  -> return (object.isNull(key,))?null:object.getString(key,)@ } CATCH(JSONException) {}
results[https://github.com/mduduzik/flowframe/blob/ceabb60046e133d8b3efc084b1a59dceb6229f79/editors/oryx/frontend/src/main/java/de/hpi/cpn/elements/CPNArc.java][readJSONlabel][24] = -> TRY {  -> annot=modelElement.getString("label",)@ -> tempJSON.put("label",annot,)@ } CATCH(JSONException) {}
results[https://github.com/IAAS/oryx-editor/blob/e68180600bfc8cf24810464610f74a71143b7e56/editor/server/src/de/hpi/cpn/globbox/CPNVariable.java][readJSONtype][15] = -> TRY {  -> type=modelElement.getString("type",)@ -> tempVarType.setId(type,)@ } CATCH(JSONException) {}
results[https://github.com/momoplan/Android/blob/b85f02d4695dd7e0d427b84ecd6d3a8d7a9dff4f/Ruyicai_168/v3.6/src/com/ruyicai/activity/buy/jc/zq/view/SPfView.java][setDifferValue][56] = -> TRY {  -> itemInfo.setLevel(jsonItem.getString("v1",),)@ } CATCH(JSONException) {}
results[https://github.com/yanchenko/droidparts/blob/7853755077e6de9dda36070adbea4c39dc663e53/droidparts/src/org/droidparts/inner/converter/ShortConverter.java][readFromJSON][3] = -> TRY {  -> return parseFromString(valType,componentType,obj.getString(key,),)@ } CATCH(JSONException) {}
results[https://github.com/maihde/org.eclipse.rap/blob/47141eab1bf1b26c4c6141adfaf556fd32acacf9/tests/org.eclipse.rap.rwt.testfixture/src/org/eclipse/rwt/internal/protocol/Message.java][getOperationAction][6] = -> TRY { -> action=operation.getString("action",)@ } CATCH(JSONException) { -> throw new IllegalStateException("Could not find action for operation "+operation,)@ }
results[https://github.com/JBirdVegas/external_jbirdvegas_mGerrit/blob/d7428b0e5b787379c1628186607414525eb09e30/src/com/aokp/gerrit/objects/JSONCommit.java][getOwnerName][1] = -> TRY { -> return owners.getString(KEY_NAME,)@ } CATCH(JSONException) { -> Log.wtf(TAG,"Failed to find commit owner!",e,)@ }
results[https://github.com/mduduzik/flowframe/blob/ceabb60046e133d8b3efc084b1a59dceb6229f79/editors/oryx/frontend/src/main/java/de/hpi/cpn/attributes/CPNModellingThing.java][getXCoordinateWith][10] = -> TRY {  -> x=(int) Double.parseDouble(modelElement.getString("x",),)@ } CATCH(JSONException) {}
results[https://github.com/Factual/factual-java-driver/blob/ba5181b4a0eafc5ead5db775056ab9410d8ceabb/src/main/java/com/factual/driver/SuggestResponse.java][parseResponse][3] = -> TRY {  -> factualId=jo.getString(Constants.SUGGEST_FACTUAL_ID,)@ -> newEntity=jo.getBoolean(Constants.SUGGEST_NEW_ENTITY,)@ } CATCH(JSONException) {}
results[https://github.com/Weltraumschaf/Lafayette/blob/26878782c697dfe76702d70070d86d8655b04173/server/webapp/src/main/java/org/lafayette/server/resources/UserResource.java][createUser][5] = -> TRY {  -> loginName=jsonEntity.getString("loginName",)@ -> newUser=new User(loginName,"",)@ } CATCH(JSONException) {}
results[https://github.com/svn2github/SpagoBI-V4x/blob/10b76bb78f7d0c14531f6ac29a8100c5fd46bb1a/QbeCore/src/runtime/it/eng/qbe/model/structure/ModelRelationshipDescriptor.java][getType][2] = -> TRY { -> return relationshipJSON.getString("cardinality",)@ } CATCH(JSONException) { -> throw new RuntimeException("Impossible to read property [cardinality] from relationship json object",t,)@ }
results[https://github.com/workhabitinc/dandy/blob/dfd0e6a099b1196d2a9d86fb1588121d2d82b8ba/dandy-api/src/main/java/org/workhabit/drupal/api/site/DrupalLoginException.java][<init>][11] = -> TRY { -> this.message="An error occurred connecting to "+siteUrl+": "+objectResult.getString("#data",)@ } CATCH(JSONException) { -> this.message="Unable to unmarshal JSON Object: "+e.getMessage()@ }
results[https://github.com/samarjit/mywapama/blob/af51e719b6af69e50daf2a6c9ef30b204bb38574/src/main/java/de/hpi/cpn/elements/CPNTransition.java][readJSONtitle][10] = -> TRY {  -> text=modelElement.getString("title",)@ -> setText(text,)@ } CATCH(JSONException) {}
results[https://github.com/maxmind/GeoIP2-java/blob/ede15ee011d095eca9f604eec65351cc9380b53c/src/main/java/com/maxmind/geoip2/SubDivision.java][<init>][9] = -> TRY {  -> super(jcountry,)@ -> isoCode=jcountry.getString("iso_code",)@ } CATCH(JSONException) {}
results[https://github.com/jak786/VASE/blob/f3c159e6037dc73475aa6919d0f9a59b5956ac25/editor/server/src/de/hpi/cpn/attributes/CPNBendpoint.java][readJSONserial][5] = -> TRY {  -> serial=modelElement.getString("serial",)@ -> setSerial(serial,)@ } CATCH(JSONException) {}
results[https://github.com/jmcc0nn3ll/jetty-project/blob/5ed88d7a3f63fa5d6e6c426390f21248dc3878b0/jetty-remote-testsuite/jetty-remote-testsuite-servlet/src/test/java/org/mortbay/jetty/test/validation/client/RemoteAssertResults.java][<init>][8] = -> TRY {  -> this.className=robj.getString("name",)@ -> arr=robj.getJSONArray("results",)@ } CATCH(JSONException) {}
results[https://github.com/cheesecomer/android.muddy/blob/fcbd519e97dd70ee076cf45bd515780f30bd6863/src/com/goodfornothing/android/JSONObjectExtension.java][getString][2] = -> TRY {  -> return (JSONObjectExtension.isValid(jsonObject,name,))?jsonObject.getString(name,):defaultValue@ } CATCH(JSONException) {}
results[https://github.com/JPMoresmau/eclipsefp/blob/b06f49148013b74eafa2425288321d44111f28a9/net.sf.eclipsefp.haskell.browser/src/net/sf/eclipsefp/haskell/browser/items/Function.java][<init>][2] = -> TRY {  -> this.setDoc(o,)@ -> this.signature=o.getString("signature",)@ } CATCH(JSONException) {}
results[https://github.com/momoplan/Android/blob/0732dc9a80aad93caaf91c62a4e9f04bdbf76b05/Ruyicai_General/main/v_main_test/src/com/ruyicai/activity/buy/beijing/BeiJingSingleGameActivity.java][analysisEventInformation][15] = -> TRY {  -> eventStrings=returnJsonObject.getString("leagues",)@ -> events=eventStrings.split(";",)@ } CATCH(JSONException) {}
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/0795bd842276be8db84460d6c9d75d3b59963d79/extensions/freebase/src/com/google/refine/freebase/util/FreebaseDataExtensionJob.java][storeKey][2] = -> TRY {  -> keyval=key.getString("value",)@ -> rows.get(row,)[col]=keyval@ } CATCH(JSONException) {}
results[https://github.com/mstepan/incubator/blob/e27425ef51eb4de8714dafdce1286fb49d8cb681/WellnessPortal/src/main/java/com/fitbit/api/common/model/heart/HeartAverage.java][<init>][10] = -> TRY {  -> this.tracker=jsonObject.getString("tracker",)@ -> this.heartRate=jsonObject.getInt("heartRate",)@ } CATCH(JSONException) {}
results[https://github.com/IAAS/oryx-editor/blob/cc97a5fefcc60a309b6fe59c7da3e6f77d991347/editor/server/src/de/hpi/cpn/globbox/CPNColor.java][readJSONid][10] = -> TRY {  -> id=modelElement.getString("id",)@ -> setIdattri(id,)@ } CATCH(JSONException) {}
results[https://github.com/eclipse/virgo.ide/blob/74419772ef26ff67e71c1a258975acee5b09c53f/org.eclipse.virgo.ide.runtime.core/src/org/eclipse/virgo/ide/runtime/internal/core/ServerConfiguration.java][parse][1] = -> TRY {  -> artefacts.add(object.getString("id",),)@ } CATCH(JSONException) {}
results[https://github.com/haizi-zh/micromanager/blob/4e5dd2ab5cb3ad665ed7c6e7453bb7df1b192fe6/mmstudio/src/org/micromanager/acquisition/TaggedImageStorageMultipageTiff.java][createBaseFilename][6] = -> TRY { -> prefix=summaryMetadata_.getString("Prefix",)@ } CATCH(JSONException) { -> ReportingUtils.logError("Can't find Prefix in summary metadata",)@ }
results[https://github.com/wuan/bo-android/blob/6e8c0bb19dd7146acee49e0e0c42a87e9c8a8560/src/main/java/org/blitzortung/android/data/provider/standard/JsonRpcDataProvider.java][getReferenceTimestamp][4] = -> TRY {  -> return TimeFormat.parseTime(response.getString("t",),)@ } CATCH(JSONException) {}
results[https://github.com/SvenAke/AboveGameServer/blob/9f053c124931d34a101fec914630e0449335ab14/abovec2dm.server/com/aboveware/abovec2dm/server/PlayerServer.java][<init>][1] = -> TRY {  -> super(gamePersistenceManagerServer,jsonObject.getString(JsonProtocol.PID,),)@ } CATCH(JSONException) {}
results[https://github.com/yanchenko/droidparts/blob/ac98d99cf63f62a7fc26fa9b78c661bf16e88a41/droidparts/src/org/droidparts/type/handler/ByteHandler.java][readFromJSON][3] = -> TRY {  -> return parseFromString(valType,arrCollItemType,obj.getString(key,),)@ } CATCH(JSONException) {}
results[https://github.com/jak786/VASE/blob/313a434e78e0c07de154c84031ac96142e265a05/editor/server/src/de/hpi/cpn/globbox/CPNColor.java][readJSONname][5] = -> TRY {  -> name=modelElement.getString("name",)@ -> setIdtag(name,)@ } CATCH(JSONException) {}
results[https://github.com/vitkin/aptoide-client/blob/ba417aa1fe734a7acbd14f9b9a61499ba3795692/src/cm/aptoide/pt/webservices/WebserviceGetApkInfo.java][getDescription][6] = -> TRY {  -> malwareResponse=response.getJSONObject("meta",)@ -> return malwareResponse.getString("description",)@ } CATCH(JSONException) {}
results[https://github.com/leoncool/healthbook/blob/e6f73f5b9a5dcf4f553e8f91245705e85c95cf4b/src/com/fitbit/api/common/model/activities/ActivityDistance.java][<init>][2] = -> TRY {  -> activity=json.getString("activity",)@ -> distance=json.getDouble("distance",)@ } CATCH(JSONException) {}
results[https://github.com/yanchenko/droidparts/blob/2ecc2edb39c6e9543929fdce108f6af8fd69cdee/droidparts/src/org/droidparts/inner/converter/ArrayCollectionConverter.java][readFromJSON][3] = -> TRY {  -> return parseFromString(valType,componentType,obj.getString(key,),)@ } CATCH(JSONException) {}
results[https://github.com/behrica/jira-rest-java-client/blob/40cf0d580afa3cd223cde9b674baa89318062c53/atlassian-jira-rest-java-client/src/main/java/com/atlassian/jira/restjavaclient/internal/json/JsonParseUtil.java][getSelfUri][4] = -> TRY {  -> return parseURI(jsonObject.getString("self",),)@ } CATCH(JSONException) {}
results[https://github.com/rnewson/couchdb-lucene/blob/c580034534b6e86afbc198e00eb0d3b00175d7d2/src/main/java/com/github/rnewson/couchdb/lucene/couchdb/View.java][getFunction][1] = -> TRY {  -> return trim(json.getString(INDEX,),)@ } CATCH(JSONException) {}
results[https://github.com/yanchenko/droidparts/blob/b37ab09127a0c3fc4f1dc55cb2db0f2fa2243214/droidparts/src/org/droidparts/inner/handler/JSONObjectHandler.java][readFromJSON][3] = -> TRY {  -> return parseFromString(valType,componentType,obj.getString(key,),)@ } CATCH(JSONException) {}
results[https://github.com/lucidimagination/google-enterprise-connector-manager/blob/0e940fdf25131fc3905fd6138829f7853a325a6c/projects/connector-manager/source/javatests/com/google/enterprise/connector/jcradaptor/SpiTraversalManagerFromJcr.java][extractDocidFromCheckpoint][2] = -> TRY { -> uuid=jo.getString("uuid",)@ } CATCH(JSONException) { -> throw new IllegalArgumentException("could not get uuid from checkPoint string: "+checkPoint,)@ }
results[https://github.com/mikael2/Muldvarp/blob/5427e4df652a39deebfd1e9f64cc1eee74e6eab8/src/no/hials/muldvarp/v2/domain/Alternative.java][<init>][5] = -> TRY {  -> id=json.getInt("id",)@ -> name=json.getString("name",)@ } CATCH(JSONException) {}
results[https://github.com/mixi-inc/triaina/blob/ea93022b3592a62c34620ec64172f3163fcb80e0/android/Commons/src/triaina/commons/utils/JSONObjectUtils.java][getString][2] = -> TRY { -> return json.getString(key,)@ } CATCH(JSONException) { -> throw new JSONRuntimeException(exp,)@ }
results[https://github.com/yanchenko/droidparts/blob/ac98d99cf63f62a7fc26fa9b78c661bf16e88a41/droidparts/src/org/droidparts/type/handler/CharacterHandler.java][readFromJSON][3] = -> TRY {  -> return parseFromString(valType,arrCollItemType,obj.getString(key,),)@ } CATCH(JSONException) {}
results[https://github.com/behrica/jira-rest-java-client/blob/71f9ca2dc12a7d9ba342295fe0538f26b7c9fa23/atlassian-jira-rest-java-client/src/main/java/com/atlassian/jira/rest/restjavaclient/internal/json/JsonParseUtil.java][parseDateTime][4] = -> TRY {  -> return parseDateTime(jsonObject.getString(attributeName,),)@ } CATCH(JSONException) {}
results[https://github.com/RHIT/Mobile/blob/19f1e0813e29fec4151b06ab8b632df9c447f91b/android/src/RHITMobile/src/edu/rosehulman/android/directory/model/TermCode.java][deserialize][2] = -> TRY {  -> res=new TermCode(root.getString("Id",),)@ } CATCH(JSONException) {}
results[https://github.com/k22mak/RUSocial/blob/6e8916cff6e329f8f6f96f3f2d8bf60693ea4f18/src/ca/ryerson/scs/rus/util/ValidityCheck.java][statusReturn][1] = -> TRY {  -> route=ja.getJSONObject(0,)@ -> statusJSON=route.getString("Status",)@ } CATCH(JSONException) {}
results[https://github.com/yanchenko/droidparts/blob/b37ab09127a0c3fc4f1dc55cb2db0f2fa2243214/droidparts/src/org/droidparts/inner/handler/EnumHandler.java][readFromJSON][3] = -> TRY {  -> return parseFromString(valType,componentType,obj.getString(key,),)@ } CATCH(JSONException) {}
results[https://github.com/tijuca/icedove/blob/3af730cd4d20abf8b988d77b4a9b36e42d4c622e/mozilla/mobile/android/base/FormAssistPopup.java][handleValidationMessage][1] = -> TRY {  -> validationMessage=message.getString("validationMessage",)@ -> rect=message.getJSONObject("rect",)@ } CATCH(JSONException) {}
results[https://github.com/mduduzik/flowframe/blob/ceabb60046e133d8b3efc084b1a59dceb6229f79/editors/oryx/frontend/src/main/java/de/hpi/cpn/elements/CPNArc.java][readJSONorientation][5] = -> TRY {  -> orientation=modelElement.getString("orientation",)@ -> setOrientation(orientation,)@ } CATCH(JSONException) {}
results[https://github.com/yanchenko/droidparts/blob/04ca0594c34663f5eaf94ad40e7ba33dc6e3c2fb/droidparts/src/org/droidparts/inner/converter/UUIDConverter.java][readFromJSON][3] = -> TRY {  -> return parseFromString(valType,componentType,obj.getString(key,),)@ } CATCH(JSONException) {}
results[https://github.com/palava/palava-bridge/blob/61558be4c46a7270c7ffe6ca3d3b09470cb244e1/src/main/java/de/cosmocode/palava/legacy/UpdateResult.java][lookupString][2] = -> TRY { -> return json.getString(field,)@ } CATCH(JSONException) { -> addError(ERR_NULL,field,)@ }
results[https://github.com/krli/InfosierrAPP/blob/d43c65b48609521dd43c7c2ff6546dbeb5fd6977/InfosierrAPP/libs/google_play_services/samples/auth/src/com/google/android/gms/auth/sample/helloauth/AbstractGetNameTask.java][getFirstName][3] = -> TRY {  -> profile=new JSONObject(jsonResponse,)@ -> return profile.getString(NAME_KEY,)@ } CATCH(JSONException) {}
results[https://github.com/yanchenko/droidparts/blob/b37ab09127a0c3fc4f1dc55cb2db0f2fa2243214/droidparts/src/org/droidparts/inner/handler/UriHandler.java][readFromJSON][3] = -> TRY {  -> return parseFromString(valType,componentType,obj.getString(key,),)@ } CATCH(JSONException) {}
results[https://github.com/societies/SOCIETIES-SCE-Services/blob/ea2ed1f6a96e253e297dd64fd5db643a0268f193/3rdPartyServices/StudentServices/CollaborativeMeeting/src/si/setcce/collaborativemeeting/json/Meeting.java][extractMeetingSubject][2] = -> TRY {  -> subject=json.getString("subject",)@ -> Log.d(TAG,"JSON: meeting subject = "+subject,)@ } CATCH(JSONException) {}
results[https://github.com/rnewson/couchdb-lucene/blob/c580034534b6e86afbc198e00eb0d3b00175d7d2/src/main/java/com/github/rnewson/couchdb/lucene/couchdb/DatabaseInfo.java][getUpdateSequence][1] = -> TRY {  -> return UpdateSequence.parseUpdateSequence(json.getString("update_seq",),)@ } CATCH(JSONException) {}
results[https://github.com/Projektgrupp3/projekt.java/blob/7837231fbc33e2b304e4bedcad882c030919689c/projekt.java/src/Alarm.java][setAccidentType][3] = -> TRY {  -> json.put("accidentType",accidentType,)@ -> accidentType=json.getString("accidentType",)@ } CATCH(JSONException) {}
results[https://github.com/OpenIotOrg/openiot/blob/ab006c734941776297172389f1bc1d67fd7f17ea/ui/ui.requestCommons/src/main/java/org/openiot/ui/request/commons/nodes/base/DefaultGraphNodeConnection.java][importJSON][1] = -> TRY {  -> setUID(spec.getString("uid",),)@ } CATCH(JSONException) {}
results[https://github.com/malinovskiy-alex/ifp-shopping/blob/1383dab61c618745f47a2d80043ce9b7291982e8/shoppingprocess/src/main/java/com/connecture/shopping/process/service/data/converter/ProductDataConverter.java][getBenefitValueTypeGroup][1] = -> TRY {  -> name=benefitValueTypeGroupJSON.getString("name",)@ -> benefitValueTypeGroup.setName(name,)@ } CATCH(JSONException) {}
results[https://github.com/splunk/splunk-shuttl/blob/65a4b4e3e6df49b4c891bcc1b557bb97232e7457/src/java/com/splunk/shuttl/archiver/clustering/RemoteShuttl.java][getServerNameFromJsonResponse][1] = -> TRY { -> return jsonObject.getString("server_name",)@ } CATCH(JSONException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/chuanjiabao1981/benbentaxi_passenger/blob/af2176b04dbe620eb73f002b60ea22cddea96c5f/src/com/benbentaxi/passenger/demo/LocationOverlayDemo.java][doGetRequest][2] = -> TRY {  -> k=(JSONObject) jsParser.nextValue()@ -> mStatus=k.getString("state",)@ } CATCH(JSONException) {}
results[https://github.com/yanchenko/droidparts/blob/ac98d99cf63f62a7fc26fa9b78c661bf16e88a41/droidparts/src/org/droidparts/type/handler/JSONArrayHandler.java][readFromJSON][3] = -> TRY {  -> return parseFromString(valType,arrCollItemType,obj.getString(key,),)@ } CATCH(JSONException) {}
results[https://github.com/jmorille/android/blob/c7fbc8b503623bfe1957c73a8b3130b8efd04280/cityLibProject/cityLib/src/eu/ttbox/velib/service/ws/direction/parser/GoogleDirectionParser.java][parseJsonPolyline][3] = -> TRY {  -> points=jsonRoot.getString(POINTS,)@ -> return decodingPoints(points,)@ } CATCH(JSONException) {}
results[https://github.com/OSLL/geo2tag/blob/ec56e9c8303d19302d3e4d0ee15e484f8233cede/src/jgeo/src/ru/spb/osll/json/JsonBase.java][getString][1] = -> TRY { -> result=jsonObject.getString(key,)@ } CATCH(JSONException) { -> Log.out.println(LOG,e,)@ }
results[https://github.com/smartSocialNetwork/project/blob/69d592463ecf00ce0d0548f1f00b057167ea0e92/projetFinal/src/srcFaceCrypt/network/ProcessusSockSSL.java][getUserName][1] = -> TRY {  -> obj=cli.requestID()@ -> userName=obj.getString("login",)@ } CATCH(JSONException) {}
results[https://github.com/OpenStack-Capstone/burrow-java/blob/44ce8d0a7f2dac3623378eb08bdefc03746ef6ed/src/main/java/org/openstack/burrow/backend/http/AccountResponse.java][<init>][1] = -> TRY {  -> super(accountJson.getString("id",),)@ } CATCH(JSONException) {}
results[https://github.com/picketlink/picketlink/blob/a7c58d6b915517294db784ce88d80f897d931caa/modules/oauth/src/main/java/org/picketlink/json/sig/JSONWebSignatureHeader.java][create][1] = -> TRY {  -> return new JSONWebSignatureHeader(json.getString(ALG,),)@ } CATCH(JSONException) {}
results[https://github.com/qcadoo/mes/blob/4a4d08794e2db9fd876bd50dff36a7105700a11d/mes-core/mes-core-data/src/main/java/com/qcadoo/mes/core/data/definition/view/elements/TextInput.java][castComponentValue][1] = -> TRY {  -> return new ViewEntity<String>(viewObject.getString("value",),)@ } CATCH(JSONException) {}
results[https://github.com/MoriTanosuke/glacieruploader/blob/4f6d3f872ea4deec3ac686ba98ebdf77da7a4489/src/main/java/de/kopis/glacier/printers/VaultInventoryPrinter.java][printArchiveSize][1] = -> TRY {  -> size=archive.getString("Size",)@ -> humanReadableSize=HumanReadableSize.parse(size,)@ -> return size+" ("+humanReadableSize+")"@ } CATCH(JSONException) {}
results[https://github.com/stephenc/redmine-java-api/blob/6a02b3d408de1a9548c235add5b971e21205025c/src/main/java/com/taskadapter/redmineapi/internal/json/JsonInput.java][getStringOrNull][1] = -> TRY {  -> IF { -> return null@!(obj.has(field,))||obj.isNull(field,) } -> return obj.getString(field,)@!(!(obj.has(field,))||obj.isNull(field,)) } CATCH(JSONException) {}
results[https://github.com/clintmanning/new-empty/blob/cf1e57b40cb34df45ff8b94f5cd74ff1038b1b79/webapps/cycle/cycle/src/main/java/org/camunda/bpm/cycle/connector/signavio/SignavioJson.java][extractDirectoryId][6] = -> TRY { -> directoryId=jsonObj.getString(JSON_HREF_PROP,)@ -> directoryId=directoryId.replace(SignavioClient.SLASH_CHAR+SignavioClient.DIRECTORY_URL_SUFFIX,"",)@ } CATCH(JSONException) { -> throw new RuntimeException("Unable to extract directory id.",e,)@ }
results[https://github.com/SINTEF-9012/oryx-neffics/blob/839376f1d957b9e74e17fdf17e82956cc6e24f88/editor/server/src/de/hpi/cpn/globbox/CPNVariable.java][readJSONname][1] = -> TRY {  -> name=modelElement.getString("name",)@ -> setIdtag(name,)@ -> layout=getLayoutText(modelElement,)@ } CATCH(JSONException) {}
results[https://github.com/tooflya/project-birds/blob/938c358882c69e94e90b46261400c66c3a86d898/proj.android/src/com/soomla/store/domain/virtualGoods/SingleUsePackVG.java][<init>][1] = -> TRY {  -> super(jsonObject,)@ -> mGoodItemId=jsonObject.getString(JSONConsts.VGP_GOOD_ITEMID,)@ -> mGoodAmount=jsonObject.getInt(JSONConsts.VGP_GOOD_AMOUNT,)@ } CATCH(JSONException) {}
results[https://github.com/SINTEF-9012/oryx-neffics/blob/2e80937778f4796ff00efbb91e3cf78d75d82413/editor/server/src/de/hpi/cpn/elements/CPNTransition.java][readJSONguard][1] = -> TRY {  -> guard=modelElement.getString("guard",)@ -> tempJSON.put("guard",correctGuard(guard,),)@ } CATCH(JSONException) {}
results[https://github.com/momoplan/Android/blob/b85f02d4695dd7e0d427b84ecd6d3a8d7a9dff4f/Ruyicai_168/v3.7.2/src/com/ruyicai/activity/buy/jc/lq/view/SfcView.java][setDifferValue][12] = -> TRY {  -> LOOP { -> itemInfo.vStrs[n]=jsonItem.getString("v"+BasketSFC.bqcType[n],)@n<12 } } CATCH(JSONException) {}
results[https://github.com/mfazekas/safaridriver/blob/eaba110ebff09920093e331686f1f6589cd775f4/remote/common/test/java/org/openqa/selenium/remote/BeanToJsonConverterTest.java][testShouldBeAbleToConvertASessionId][5] = -> TRY {  -> converted=new JSONObject(json,)@ -> assertEquals("some id",converted.getString("value",),)@ } CATCH(JSONException) {}
results[https://github.com/CS2212-2012-G2/SurvivorPoolClient/blob/0cfb2058103ea77667de4714c82e42684b2ebada/src/data/bonus/UserAnswer.java][fromJSONObject][1] = -> TRY {  -> answer=o.getString(KEY_ANSWER,)@ -> week=o.getInt(KEY_WEEK,)@ -> num=o.getInt(KEY_NUM,)@ } CATCH(JSONException) {}
results[https://github.com/RHIT/Mobile/blob/68659e2dcbed8b1e86b805dec2a802a300d70996/android/src/RHITMobile/src/edu/rosehulman/android/directory/model/LocationName.java][deserialize][1] = -> TRY {  -> id=root.getLong("Id",)@ -> name=root.getString("Name",)@ -> return new LocationName(id,name,)@ } CATCH(JSONException) {}
results[https://github.com/samarjit/mywapama/blob/af51e719b6af69e50daf2a6c9ef30b204bb38574/src/main/java/de/hpi/cpn/elements/CPNPage.java][readJSONtitle][1] = -> TRY {  -> title=modelElement.getString("title",)@ -> getPageattr().setName(title,)@ } CATCH(JSONException) {}
results[https://github.com/SINTEF-9012/oryx-neffics/blob/2e80937778f4796ff00efbb91e3cf78d75d82413/editor/server/src/de/hpi/cpn/attributes/CPNProperty.java][readJSONcolordefinition][4] = -> TRY {  -> colorsettype=modelElement.getString("colordefinition",)@ -> getText().setText(colorsettype,)@ } CATCH(JSONException) {}
results[https://github.com/nagazuka/GoedkoopTanken/blob/76f53980dd7a02cf318505303744b920168f286c/src/com/nagazuka/mobile/android/goedkooptanken/service/impl/ZukaService.java][getJSONString][2] = -> TRY {  -> IF { -> result=json.getString(key,)@json.has(key,) } } CATCH(JSONException) {}
results[https://github.com/forcedotcom/SalesforceMobileSDK-Android/blob/914ffb1c9116e0b795919e86981a54bef8b3b7fb/hybrid/SmartStore/src/com/salesforce/androidsdk/smartstore/phonegap/SmartStorePlugin.java][removeSoup][2] = -> TRY {  -> arg0=args.getJSONObject(0,)@ -> soupName=arg0.getString(SOUP_NAME,)@ -> smartStore.dropSoup(soupName,)@ } CATCH(JSONException) {}
results[https://github.com/FellowTraveler/otapij/blob/119e263d4c567c73f58ac2d7028ac26b72106c30/src/main/java/com/wrapper/core/helper/bitcoin/BitcoinClient.java][sendToAddress][4] = -> TRY { -> response=this.session.sendAndReceive(request,)@ -> return response.getString("result",)@ } CATCH(JSONException) { -> throw new BitcoinClientException("Exception when sending bitcoins",e,)@ }
results[https://github.com/Omertron/api-rottentomatoes/blob/63037b6502c3efa205bee965067f94581d300b15/trunk/API-RottenTomatoes/src/main/java/com/moviejukebox/rottentomatoes/tools/RTParser.java][readString][1] = -> TRY { -> response=jObject.getString(item,)@ } CATCH(JSONException) { -> logger.fine("RTParse: Error reading "+item+" from movie",)@ -> error.printStackTrace()@ }
results[https://github.com/samarjit/mywapama/blob/af51e719b6af69e50daf2a6c9ef30b204bb38574/src/main/java/de/hpi/cpn/globbox/CPNGlobbox.java][readJSONproperties][3] = -> TRY {  -> properties=new JSONObject(modelElement.getString("properties",),)@ -> this.parse(properties,)@ } CATCH(JSONException) {}
results[https://github.com/mmoutenot/SandFox/blob/bf2a8389a920b29af3bf3cff307651df175e5671/mobile/android/base/AwesomeBarTabs.java][getItem][2] = -> TRY { -> engine=mSearchEngines.getJSONObject(position-resultCount,)@!(position<resultCount) -> engineName=engine.getString("name",)@!(position<resultCount) } CATCH(JSONException) { -> Log.e(LOGTAG,"error getting json arguments",)@!(position<resultCount) }
results[https://github.com/jacksonicson/rain/blob/e989cde07285782a31a5d8bc71f2b063b651774d/test/radlab/rain/workload/http/HttpBenchmark.java][configure][1] = -> TRY {  -> amount=params.getInt("amount",)@ -> targetConfig=params.getJSONObject("targetConfig",)@ -> baseUrl=params.getString("baseUrl",)@ } CATCH(JSONException) {}
results[https://github.com/momoplan/Android/blob/0732dc9a80aad93caaf91c62a4e9f04bdbf76b05/Ruyicai_General/main/v_main_test/src/com/ruyicai/controller/Controller.java][getAlipaySign][5] = -> TRY { -> obj=new JSONObject(result,)@ -> return obj.getString("value",)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/joachimhs/Montric/blob/9b7fa1859f77401e36a4e65e1566dd3d0a19dd49/EurekaJ.Manager/src/main/java/org/eurekaj/manager/servlets/ChartChannelHandler.java][isAlertChart][1] = -> TRY {  -> return jsonRequest.has("path",)&&jsonRequest.getString("path",).startsWith("_alert_:",)@ } CATCH(JSONException) {}
results[https://github.com/yanchenko/droidparts/blob/d8350669b853078328220430fba83b1b96c8246a/sample/modern/src/org/droidparts/gram/persist/ImageSerializer.java][deserialize][1] = -> TRY {  -> img=super.deserialize(obj,)@ -> img.filter=new Filter(obj.getString("filter",),)@ } CATCH(JSONException) {}
results[https://github.com/svn2github/rave/blob/ca482067ea217ac3d4f80e120e82488637eeae83/rave-providers/rave-opensocial-provider/rave-opensocial-client/src/main/java/org/apache/rave/provider/opensocial/service/impl/OpenSocialWidgetMetadataResolver.java][parseProperty][1] = -> TRY { -> return prefsObject.getString(name,)@ } CATCH(JSONException) { -> logger.error("Error while reading: "+e.getLocalizedMessage(),e,)@ }
results[https://github.com/dschuermann/document-viewer/blob/ecc6190bbbf1f40dc1cbaf85c5f68da5e4387449/src/org/ebookdroid/common/keysbinding/KeyBindingsManager.java][fromJSON][1] = -> TRY {  -> code=json.getInt("code",)@ -> name=json.getString("name",)@ -> id=ActionEx.getActionId(name,)@ } CATCH(JSONException) {}
results[https://github.com/zhoulzhou/IPCPlayer/blob/168190aa4805ef3710f904fe79b03c233b95b5da/src/com/example/ipcplayer/json/CreateJson.java][getPersonName][1] = -> TRY { -> name=mPerson.getString("name",)@ } CATCH(JSONException) { -> LogUtil.d(TAG+" getPersonName exception :",)@ -> e.printStackTrace()@ }
results[https://github.com/behrica/jira-rest-java-client/blob/8c4cfbcda69f846f159e364d49cec3d1aa963a3c/atlassian-jira-rest-java-client/src/main/java/com/atlassian/jira/restjavaclient/json/BasicProjectJsonParser.java][parseValue][1] = -> TRY {  -> selfUri=JsonParseUtil.getSelfUri(json,)@ -> key=json.getString("key",)@ -> return new BasicProject(selfUri,key,)@ } CATCH(JSONException) {}
results[https://github.com/behrica/jira-rest-java-client/blob/23db6db685018309b32c4740f7c9d4178ee3f4ac/atlassian-jira-rest-java-client/src/main/java/com/atlassian/jira/rest/client/internal/json/IssueJsonParser.java][parseExpandos][1] = -> TRY {  -> expando=json.getString("expand",)@ -> return Splitter.on(',',).split(expando,)@ } CATCH(JSONException) {}
results[https://github.com/clintmanning/new-empty/blob/b4d9a332a2a0d02b11d7447bdb8225aac487c8e0/cycle/cycle/src/main/java/com/camunda/fox/cycle/connector/signavio/SignavioJson.java][extractParentNameFromInfo][2] = -> TRY { -> jsonObj=new JSONObject(info,)@ -> return jsonObj.getString(JSON_PARENT_NAME_PROP,)@ } CATCH(JSONException) { -> throw new RuntimeException("Unable to extract parent name.",e,)@ }
results[https://github.com/dschuermann/document-viewer/blob/90984f0ad92c4dec441f13795acb9d4abe36d753/src/org/ebookdroid/common/touch/TouchManager.java][fromJSON][1] = -> TRY {  -> profile=new TouchProfile(json.getString("name",),)@ -> regions=json.getJSONArray("regions",)@ } CATCH(JSONException) {}
results[https://github.com/splunk/splunk-shuttl/blob/65a4b4e3e6df49b4c891bcc1b557bb97232e7457/src/java/com/splunk/shuttl/archiver/clustering/ShuttlPortEndpoint.java][getShuttlPortFromJSONResponse][1] = -> TRY { -> return Integer.parseInt(jsonObject.getString("shuttl_port",),)@ } CATCH(JSONException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/arpit87/SB1/blob/f355f93a71be96112b29b928f25a100eab1b089d/src/my/b1701/SB/HelperClasses/JSONHandler.java][getFBPicURLFromJSON][1] = -> TRY { -> data=picture.getJSONObject("data",)@ -> URL=data.getString("url",)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/dotmuncher/dotmuncher/blob/5b6fbac95f855e1fd201962ab30ba42120000184/android/src/org/streetpacman/core/DMCore.java][new_game][1] = -> TRY {  -> myPhone.game=json.getInt("game",)@ -> myPhone.gameToken=json.getString("gameToken",)@ -> initGame(json,)@ } CATCH(JSONException) {}
results[https://github.com/RHIT/Mobile/blob/dc3cff26affe05f4bb468ea87c9dfdc0f6d4e281/android/src/RHITMobile/src/edu/rosehulman/android/directory/model/TourTag.java][deserialize][1] = -> TRY {  -> res.tagId=root.getLong("Id",)@ -> res.name=root.getString("Name",)@ -> res.isDefault=root.getBoolean("IsDefault",)@ } CATCH(JSONException) {}
results[https://github.com/MarkBennett/dart/blob/871b4f32229ebac99ec3fbb04d0d9d1955e76582/editor/tools/plugins/com.google.dart.tools.debug.core/src/com/google/dart/tools/debug/core/webkit/WebkitNetwork.java][createFrom][1] = -> TRY {  -> response.status=obj.getInt("status",)@ -> response.statusText=obj.getString("statusText",)@ -> response.headers=obj.getJSONObject("headers",)@ } CATCH(JSONException) {}
