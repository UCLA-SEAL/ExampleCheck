results[https://github.com/openfurther/further-open-core/blob/2f18528f59e0af13e260d7ed8e31ead3b0a10508/core/core-util/src/main/java/edu/utah/further/core/util/text/LineCounter.java][getLineCount][1] = -> LOOP { -> scanner.nextLine()@scanner.hasNextLine() }
results[https://github.com/justayak/ALP5/blob/0cd162707d2d2dadd64306fbab3139309bef5e09/src/ueb06/a3/Filter.java][wordsFromScanner][3] = -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> words=line.split(" ",)@ }
results[https://github.com/svenefftinge/org.xtext.antlr.generator/blob/869d581e95c5266b988192ecda173cdc7aa175c7/de.itemis.xtext.antlr/src/de/itemis/xtext/antlr/AntlrLexerSplitter.java][extractMethodsFromSwitch][2] = -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> stringBuilder.append(line,)@ }
results[https://github.com/manimaul/osmdroid/blob/f815c3a2fba00a2c2462c645968703fd5743a88b/OSMMapTilePackager/src/org/osmdroid/mtp/ui/BatchExecutorGUI.java][startBatch][10] = -> scan=new Scanner(txtBatchItemsContent,)@ -> LOOP { -> currentLine=scan.nextLine()@scan.hasNextLine() }
results[https://github.com/patkaehuaea/Bellevue-College/blob/80900a8f17a4c761578bc8b3ecd878eca6a9158a/src/edu/bellevuecollege/cs210/Chapter6/Exercises.java][printDuplicates][1] = -> LOOP { -> lineOfWords=input.nextLine()@input.hasNextLine() -> newInput=new Scanner(lineOfWords,)@ }
results[https://github.com/mrozekma/NoiseBot/blob/16da44adaf22b8c2a71334cda96fa0a74df62af7/src/debugging/Client.java][run][1] = -> LOOP { -> Debugger.me.in(Client.this,in.nextLine(),)@in.hasNextLine() }
results[https://github.com/kthlnkeating/rgivistatools/blob/07ab12baa66c83e3db2e8d07b2b19352f5bad6ca/com.raygroupintl.vista/src/com/raygroupintl/m/struct/MRoutineContent.java][getInstance][3] = -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> result.lines.add(line,)@ }
results[https://github.com/kthlnkeating/rgivistatools/blob/832f7a328b9633b112b2a8c9ac66a12662382425/com.raygroupintl.vista/src/com/raygroupintl/vista/mtoken/Routine.java][getInstance][1] = -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> tokens=f.tokenize(line,0,)@ }
results[https://github.com/sbiyyala/Algorithms/blob/d52ed1d15e7c2e993e2fbb1a982813849d08cdc5/src/SymbolGraph2.java][main][1] = -> in=new Scanner(System.in,)@ -> LOOP { -> source=in.nextLine()@in.hasNextLine() }
results[https://github.com/ottocode/archives/blob/13fb24a3394f46c81e5df9f515903247ebc60c1e/COMP300/lab0/beta/givenassembler/hex_converter.java][translate_lines][1] = -> LOOP { -> coe_line=coe_file.nextLine()@coe_file.hasNextLine() -> hex_line=get_hex_line_string(coe_line,data_width_in_bytes,address,radix,)@ }
results[https://github.com/markovandooren/chameleon/blob/a7bad749bf9a34a66aa8f0c6e94283bdebb6b3e8/src/be/kuleuven/cs/distrinet/chameleon/eclipse/presentation/formatting/ChameleonFormatterStrategy.java][formatWholeDocument][1] = -> scanner=new Scanner(content,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> result+=line.trim()+eol@ }
results[https://github.com/bcapps/ap-computer-science/blob/8b9e6f60993c76e5c4dbe18c774f92c0a5e08552/labs/lab7/FileIO/FileIO.java][readData][1] = -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> chars+=line.toCharArray().length@ -> wordArray=line.split(" ",)@ }
results[https://github.com/martellaj/CS_Projects/blob/4366ee86dda9b8a43c1083e3b0535bec96875f33/CS348/proj1/src/InputParser.java][getInput][2] = -> input=new ArrayList<String>()@ -> LOOP { -> input.add(scan.nextLine(),)@scan.hasNextLine() }
results[https://github.com/charles-ma/Java_em/blob/1058f561fb59d2ca34f6dfc49f1cf36e9d6ce65f/Make/Make.java][display][1] = -> scanner=new Scanner(input,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> System.out.println(line,)@ }
results[https://github.com/vi/jscfi/blob/d434048b7274901cfd7297a9706aa5bb8444cc85/src/org/vi_server/diststatanalyse/Interpreter.java][run][1] = -> s=new Scanner(is,)@ -> LOOP { -> l=s.nextLine()@s.hasNextLine() -> m=linePattern.matcher(l,)@ }
results[https://github.com/jsmadja/ngdb.com/blob/247730048e9850796651dba70101da14ebbdcde6/src/main/java/com/ngdb/services/StaffParser.java][createFrom][1] = -> scanner=new Scanner(content,)@ -> LOOP { -> role=scanner.nextLine()@scanner.hasNextLine() -> insertParticipation(game,scanner,role,)@scanner.hasNextLine() }
results[https://github.com/cs225/CS225FinalProject/blob/d362e147a1d25a51a6b1718d5cf159d9bf6b0e77/src/CS225FinalProject/Validators/Evaluator.java][giveSuggestion][1] = -> fileScan=new Scanner(input,)@ -> LOOP { -> line=fileScan.nextLine()@fileScan.hasNextLine() -> words=line.split("([\\s|\\n])+",)@ }
results[https://github.com/ty707/SCALR/blob/0db3217aef09ab9e3c73824e8c794cc99fa7cac7/parser/StreamGobbler.java][run][1] = -> in=new Scanner(stream,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() } -> in.close()@
results[https://github.com/nasa/World-Wind-Java/blob/93ac47f196692a674eab3c8cc33f824062f7aa59/WorldWind/src/gov/nasa/worldwind/formats/vpf/GeoSymTableReader.java][readRecords][1] = -> LOOP { -> s=scanner.nextLine().trim()@scanner.hasNextLine() -> this.readRecord(s,table,record,)@ }
results[https://github.com/rnewson/couchdb-lucene/blob/5fec823cc557e431e9fee773f09548e488c70d3b/src/main/java/org/apache/couchdb/lucene/Index.java][main][1] = -> scanner=new Scanner(System.in,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> obj=JSONObject.fromObject(line,)@ }
results[https://github.com/dkomanov/fizteh-java-2013/blob/7a5510e00f5d08019714622e9496ce9aa4080899/src/ru/fizteh/fivt/students/visamsonov/shell/Shell.java][interactiveMode][1] = -> sc=new Scanner(System.in,)@ -> LOOP { -> args=sc.nextLine()@sc.hasNextLine() -> perform(args,)@ }
results[https://github.com/caltry/Concurrent-B--Tree/blob/a4fd8708352509c9379850541cbb16f609eba6a1/TestBTree.java][testInteractive][1] = -> stdin=new Scanner(System.in,)@ -> LOOP { -> line=stdin.nextLine()@stdin.hasNextLine() -> components=line.split("\\s+",)@ }
results[https://github.com/etcgroup/aloe/blob/ac4bdc838cdf6dcb5a52d4e11177ab96becdf5f4/src/etc/aloe/controllers/InteractiveController.java][run][1] = -> scan=new Scanner(System.in,)@ -> LOOP { -> messageStr=scan.nextLine()@scan.hasNextLine() -> message=new Message(++msgIdInc,time,participant,messageStr,)@ }
results[https://github.com/Orego/Orego/blob/bffbf1033130aec443abfd886313ca913b87e355/Orego/src/orego/experiment/PlayerListener.java][run][2] = -> s=new Scanner(fromProgram,)@ -> LOOP { -> game.handleResponse(color,s.nextLine(),s,)@s.hasNextLine() }
results[https://github.com/duguyue100/acm-training/blob/c7687aba61026f062d0120facf5c0f72291fe41b/UVa/uva1124.java][main][1] = -> input=new Scanner(System.in,)@ -> LOOP { -> System.out.println(input.nextLine(),)@input.hasNextLine() }
results[https://github.com/joshua-decoder/joshua/blob/7843f432264f436058f391cea0b290d4945dd6f1/src/joshua/util/sentence/alignment/AlignmentGrids.java][<init>][1] = -> LOOP { -> line=alignmentScanner.nextLine()@alignmentScanner.hasNextLine() -> alignments.add(new AlignmentGrid(line,),)@ }
results[https://github.com/evgeniyarbatov/dev-practice/blob/16a032df023a3a045124a1a5f2bc481a08826f14/java/netVis/graphAnalysis/transformRawData.java][setNodeWights][1] = -> in=new Scanner(mFile,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> rawData=line.split(" ",)@ }
results[https://github.com/dkomanov/fizteh-java-2013/blob/7a5510e00f5d08019714622e9496ce9aa4080899/src/ru/fizteh/fivt/students/vishnevskiy/shell/Shell.java][interactiveMode][1] = -> scanner=new Scanner(System.in,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> executeLine(line,)@ }
results[https://github.com/knowitall/openregex/blob/9238e735f09554143cf2b2d8356fbe98c0eef8f2/src/main/java/edu/washington/cs/knowitall/logic/LogicExpression.java][main][1] = -> scan=new Scanner(System.in,)@ -> LOOP { -> line=scan.nextLine()@scan.hasNextLine() -> expr=LogicExpressionParsers.trivial.parse(line,)@ } -> scan.close()@
results[https://github.com/evgeniyarbatov/dev-practice/blob/16a032df023a3a045124a1a5f2bc481a08826f14/java/netVis/graphAnalysis/transformRawData.java][buildGraphFromFile][3] = -> in=new Scanner(mFile,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> rawData=line.split(" ",)@ } -> in.close()@
results[https://github.com/patkaehuaea/Bellevue-College/blob/80900a8f17a4c761578bc8b3ecd878eca6a9158a/src/edu/bellevuecollege/cs210/Final/Question2.java][textCount][1] = -> LOOP { -> line=input.nextLine()@input.hasNextLine() -> IF { -> lengthLongestLine=line.length()@line.length()>longestLine.length() } }
results[https://github.com/apache/shiro/blob/78f28a63287a803fcf2fc971b9ffa153630e63d2/core/src/main/java/org/apache/shiro/realm/text/TextConfigurationRealm.java][toLines][4] = -> set=new LinkedHashSet<String>()@ -> scanner=new Scanner(s,)@ -> LOOP { -> set.add(scanner.nextLine(),)@scanner.hasNextLine() }
results[https://github.com/davidrobert/trainings/blob/0806cdef6326f4c39d728ce770af91e40efa6596/FJ-91/neo4j-nosql/src/main/java/br/com/caelum/neo4j/importacoes/ImportadorPessoas.java][importa][5] = -> sc=new Scanner(ImportadorPessoas.class.getResourceAsStream("/import/pessoas",),)@ -> LOOP { -> linha=sc.nextLine()@sc.hasNextLine() -> informacoesDePessoa=linha.split(";",)@ }
results[https://github.com/weslgames/MERCury/blob/bc1f30d01836695dbaf3be63e977ea033a9f4a93/MERCury/src_base/com/teama/merc/util/DopplerTileMapReader.java][readDimensions][1] = -> read=new Scanner(in,)@ -> LOOP { -> line=read.nextLine()@read.hasNextLine() -> WIDTH=line.length()/DIGITS_PER_TILE@ } -> read.close()@
results[https://github.com/stg-tud/tigerseyeplugin/blob/3803e1daf7bc97d13cbf1420ae149978760e7f75/TigerseyeCoreTests/transformationtests/de/tud/stg/tigerseye/test/TestUtils.java][assertContainsAllLines][1] = -> expScanner=new Scanner(isContained,)@ -> LOOP { -> assertThat(doesContain,containsString(expScanner.nextLine(),),)@expScanner.hasNextLine() }
results[https://github.com/knowitall/openregex/blob/c6e27867888c552ad48dc26979daa9d2592c507d/src/main/java/edu/washington/cs/knowitall/commonlib/logic/LogicExpression.java][main][1] = -> scan=new Scanner(System.in,)@ -> LOOP { -> line=scan.nextLine()@scan.hasNextLine() -> expr=new LogicExpression<String>(line,new ArgFactory<String>(),)@ }
results[https://github.com/ydirickson/Java-Study/blob/e7dd5899737f7b836c2036448838d1c5755a3684/fj11/src/main/java/br/com/caelum/fj11/desafios/chat/Recebedor.java][run][2] = -> s=new Scanner(this.servidor,)@ -> LOOP { -> System.out.println(s.nextLine(),)@s.hasNextLine() } -> s.close()@
results[https://github.com/Orego/Orego/blob/72f5cf5646657c4786251fb8bdcde1fa6718634c/src/orego/experiment/KillExperiment.java][run][2] = -> fromProgram=new Scanner(p.getInputStream(),)@ -> LOOP { -> System.out.println(fromProgram.nextLine(),)@fromProgram.hasNextLine() }
results[https://github.com/wuyq101/acm_test/blob/fd3167d8270c296f3f4860d64db8cfb3dfcf390e/src/com/poj/dp/Main1141.java][main][1] = -> cin=new Scanner(new BufferedInputStream(System.in,),)@ -> LOOP { -> line=cin.nextLine()@cin.hasNextLine() -> solve(line,)@ }
results[https://github.com/svenefftinge/org.xtext.antlr.generator/blob/869d581e95c5266b988192ecda173cdc7aa175c7/de.itemis.xtext.antlr/src/de/itemis/xtext/antlr/AntlrLexerSplitter.java][copyUntilMethod][1] = -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> stringBuilder.append(line,)@!(scanner.hasNextLine()) -> IF { -> return true@METHOD_SIGNATURE_PATTERN.matcher(line,).find() && scanner.hasNextLine() } }
results[https://github.com/madananshul/ActiveRDMA/blob/a4a7c4e9ac68be944519b709a16ccf11b0699986/src/fsutils/Grep.java][execute][1] = -> sc=new Scanner(new DFSInputStream(inode,dfs,),)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() } -> sc.close()@
results[https://github.com/apache/activemq/blob/d4ee73fe10ac456b55d8bc50e200339fb79f2d0a/activemq-optional/src/main/java/org/apache/activemq/store/amq/AMQJournalTool.java][showHelp][2] = -> scanner=new Scanner(is,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> System.out.println(line,)@ } -> scanner.close()@
results[https://github.com/dtracers/PumpAndJump/blob/f4bff3206086f8f9b011434683e2a7eb954a5e0b/PumpAndJump/src/com/musicgame/PumpAndJump/game/gameStates/AboutGame.java][readStory][1] = -> LevelIn=new Scanner(dir.reader(),)@ -> LOOP { -> g2=LevelIn.nextLine()@LevelIn.hasNextLine() -> System.out.println(g2,)@ }
results[https://github.com/dhale/jtk/blob/a505e968a794559058b51ec6da3ee010d4507fb2/src/edu/mines/jtk/bench/ScannerBug.java][scan][1] = -> s=new Scanner(input,)@ -> LOOP { -> s.findInLine("5",)@s.hasNextLine() -> System.out.println(s.nextLine(),)@s.hasNextLine() }
results[https://github.com/andynicholson/Vidiom/blob/90c632187d8b8a5de9e1f0913e533447fc1e53ad/sources/commons-net-2.0-src/src/main/java/examples/SubnetUtilsExample.java][main][3] = -> scanner=new Scanner(System.in,)@ -> LOOP { -> address=scanner.nextLine()@scanner.hasNextLine() -> System.out.println("The IP address ["+address+"] is "+(info.isInRange(address,))?"":"not "+"within the subnet ["+subnet+"]",)@ }
results[https://github.com/TeamAwesome/forum/blob/3e06028a22d4d994fad771c802ee7a5551f36c73/src/main/java/com/forum/service/UserService.java][getAvailableCountries][1] = -> scanner=new Scanner(countriesInputStream,)@ -> LOOP { -> string=scanner.nextLine()@scanner.hasNextLine() -> country=new Country(string,string,)@ } -> scanner.close()@
results[https://github.com/NYULibraries/citero/blob/eea22e4d9131c6b821999a03f421e7092bb7b539/src/test/java/edu/nyu/library/citation/FormatsTest.java][isValidCSF][2] = -> scan=new Scanner(input,)@ -> LOOP { -> next=scan.nextLine()@scan.hasNextLine() -> IF { -> return false@scan.hasNextLine() && !(next.matches("[.a-zA-Z0-9]+(\\s*:\\s*)[^\\n]+",)) } }
results[https://github.com/svn2github/openam-trunk/blob/c8e5ee84ec45859828a28691f280f22f95c13493/openam-core/src/main/java/com/sun/identity/setup/EmbeddedOpenDS.java][getOpenDJBuildInfo][1] = -> TRY { -> scan=new Scanner(buildInfo,)@ -> LOOP { -> return scan.nextLine()@scan.hasNextLine() } }
results[https://github.com/aljoscha/presslufthammer/blob/dbd5cf27f29a67ee9501df89c40c5242ba9f1fbb/src/main/java/de/tuberlin/dima/presslufthammer/data/hierarchical/json/JSONRecordFileIterator.java][next][1] = -> IF { -> return null@scan==null } -> LOOP { -> line=scan.nextLine()@scan.hasNextLine() && !(scan==null) -> job=(JSONObject) JSONValue.parse(line,)@!(scan==null) && !(scan.hasNextLine()) -> return decoder@scan.hasNextLine() && !(scan==null) }
results[https://github.com/grouplens/lenskit/blob/8264a58aa5737bf8e5b55ca15b7da1e98b6bdf25/lenskit-core/src/main/java/org/grouplens/lenskit/data/SimpleFileDataSource.java][hasNext][4] = -> IF { -> return false@scanner==null } -> LOOP { -> line=scanner.nextLine()@rating==null&&scanner.hasNextLine() && !(scanner==null) -> fields=splitter.split(line,)@!(scanner==null) }
results[https://github.com/btmura/rbb/blob/b805112958f066a56e2e7124c8bfadfbaba861ed/src/com/btmura/android/reddit/net/NetApi.java][logResponse][2] = -> sc=new Scanner(in,)@ -> LOOP { -> Log.d(TAG,sc.nextLine(),)@sc.hasNextLine() } -> sc.close()@
results[https://github.com/jsmadja/ngdb.com/blob/247730048e9850796651dba70101da14ebbdcde6/src/main/java/com/ngdb/services/StaffParser.java][insertParticipation][1] = -> LOOP { -> employeeName=scanner.nextLine()@scanner.hasNextLine() } ELSE { -> participation=new Participation(employeeName,role,game,)@!(scanner.hasNextLine()) && !(employeeName.isEmpty()) }
results[https://github.com/nes1983/cc/blob/4237440e2ab9acb2c27cd0bedf82c727ec95699b/src/ch/unibe/scg/cc/GitWalker.java][parse][2] = -> TRY { -> LOOP { -> line=s.nextLine()@s.hasNextLine() -> m=pattern.matcher(line,)@ } }
results[https://github.com/lbv/pc-code/blob/e0c61321efcb4f997cbe02439f0b4b2398b63727/solved/headshot/Headshot.java][run][1] = -> scn=new Scanner(System.in,)@ -> LOOP { -> ln=scn.nextLine()@scn.hasNextLine() -> System.out.println(solution(ln,),)@ }
results[https://github.com/nybblr/cs3240-compiler/blob/23d82e98886ef37a20bdda4364082cf2e0528499/src/Parser.java][build][1] = -> LOOP { -> line=input.nextLine()@input.hasNextLine() -> lineScan=new Scanner(line,)@ -> token=line.substring(token.length(),)@ }
results[https://github.com/Mobicents/jss7/blob/0f1ad3c8f2e3a76199cbfa35c8ea7a6fc2c84862/management/shell/src/main/java/org/mobicents/protocols/ss7/management/console/Console.java][start][1] = -> LOOP { -> line=scanner.nextLine()@!(stopped)&&scanner.hasNextLine() -> IF { -> this.consoleListener.commandEntered(line,)@this.consoleListener!=null } }
results[https://github.com/knowitall/reverb/blob/39353096ae490436861a89ea37b075722d2c9043/src/main/java/edu/washington/cs/knowitall/normalization/RelationString.java][main][2] = -> scanner=new Scanner(System.in,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> parts=line.split("\t",)@ -> System.out.println("input: "+line,)@ }
results[https://github.com/rubil4x/cmsc425/blob/8ec6146aac33abf3564dbfdac450f46ee7b80d72/CMSC425/src/com/piss/editor/ui/ExtendedEditorInterface.java][readIniFile][1] = -> LOOP { -> token=s.nextLine()@s.hasNextLine() -> IF { -> readIniInstances(s,)@s.hasNextLine() } }
results[https://github.com/nhnopensource/ngrinder/blob/96088df96ee2a0b4e334d977f10f9f1f7122a998/ngrinder-core/src/main/java/org/ngrinder/common/util/PropertiesKeyMapper.java][init][1] = -> scanner=new Scanner(is,)@ -> LOOP { -> line=StringUtils.trimToEmpty(scanner.nextLine(),)@scanner.hasNextLine() -> split=line.split(",",)@ }
results[https://github.com/Kauhsa/javalabra-sokoban/blob/f7ac90dece75463148a73f3234aa56802fd9588a/project/src/main/java/kauhsa/sokoban/resources/LevelLoader.java][getLevels][1] = -> scanner=getLevelResourceScanner(levelsResourceLocation,)@ -> LOOP { -> currentResourceLocation=scanner.nextLine()@scanner.hasNextLine() -> currentResource=ResourceLoader.getResourceAsStream(currentResourceLocation,)@ -> addLevelToList(currentResource,levels,currentResourceLocation,)@ }
results[https://github.com/dkomanov/fizteh-java-2013/blob/7a5510e00f5d08019714622e9496ce9aa4080899/src/ru/fizteh/fivt/students/surakshina/shell/Shell.java][parseString][1] = -> scanner=new Scanner(System.in,)@ -> LOOP { -> cur=scanner.nextLine()@scanner.hasNextLine() -> cur=rewriteInput(cur,)@ -> scanner1=new Scanner(cur,)@ } -> scanner.close()@
results[https://github.com/Arolition/iteration5/blob/ebdff1ee24266cc59f1682ed02a5b27e4a4e1f72/Objectron - Iteration 5/src/model/factory/grid/full/FileInternGridFactory.java][getLines][2] = -> lines=new ArrayList<>()@ -> scanner=new Scanner(inputstream,)@ -> LOOP { -> lines.add(scanner.nextLine(),)@scanner.hasNextLine() } -> scanner.close()@
results[https://github.com/argius/Stew4/blob/85c2b52b3a83b07ca4834c8e33e0fdf12bb0432f/src/net/argius/stew/Command.java][isSelect][1] = -> scanner=new Scanner(sql,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> s=line.replaceAll("/\\*.*?\\*/","",)@!(scanner.hasNextLine()) -> IF { -> return true@scanner.hasNextLine() && !(s.matches("\\s*",))&&s.matches("(?i)\\s*SELECT.*",) } }
results[https://github.com/iFlyCode/Utilities-Pro/blob/b0708fbfaef92527843482756fd0acfe82f679c5/src/com/git/ifly6/UtilitiesPro3/HelpCommands.java][acknowledgements][4] = -> TRY { -> scan=new Scanner(fstream,)@ -> LOOP { -> out(scan.nextLine(),)@scan.hasNextLine() } }
results[https://github.com/svenefftinge/org.xtext.antlr.generator/blob/869d581e95c5266b988192ecda173cdc7aa175c7/de.itemis.xtext.antlr/src/de/itemis/xtext/antlr/AntlrLexerSplitter.java][copyTail][1] = -> LOOP { -> stringBuilder.append(scanner.nextLine(),)@scanner.hasNextLine() -> IF { -> stringBuilder.append("\n",)@ } }
results[https://github.com/monnetproject/bliss/blob/fdb1fe928810dcc7242b9d22098abaf73b732f94/betalm/src/main/java/eu/monnetproject/bliss/betalm/COCAndMean.java][calculate][1] = -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> parts=line.split(" ",)@ -> IF { -> System.err.println(line,)@ } }
results[https://github.com/shkschneider/android_Skeleton/blob/175d9d336c21fab83596c23a83d9292354db3082/libs/library/src/me/shkschneider/skeleton/helper/FileHelper.java][readString][3] = -> IF { -> return null@inputStream==null } -> scanner=new Scanner(inputStream,)@!(inputStream==null) -> LOOP { -> string=string.concat(scanner.nextLine()+"\n",)@!(inputStream==null) && scanner.hasNextLine() }
results[https://github.com/notclive/Multicomp/blob/0dc73a352752485f4ca1c0bbcfdf40a5c39db7de/CommandLineInterface/src/main/java/uk/co/notclive/multicomp/iface/CommandExternalInterface.java][run][3] = -> scanner=new Scanner(System.in,)@ -> LOOP { -> IF { -> line=scanner.nextLine()@scanner.hasNextLine() -> commandRequest=new CommandRequest(line,)@ } }
results[https://github.com/stg-tud/tigerseyeplugin/blob/e56cc55fc37b924318703d5fdd400420b9d11188/de.tud.stg.tigerseye.eclipse.core.tests/plugin/de/tud/stg/tigerseye/eclipse/core/internal/LanguageProviderImplPluginTest.java][testGetDSLDefinitions][3] = -> scanner=new Scanner(shouldContain,)@ -> LOOP { -> classPath=scanner.nextLine()@scanner.hasNextLine() -> IF { -> notContained.add(classPath,)@!(classPaths.contains(classPath,)) } }
results[https://github.com/wichtounet/jtheque-utils/blob/5187339e7e8db7f4a0df5f85679cc085ddb62629/src/main/java/org/jtheque/utils/StringUtils.java][getLines][1] = -> tokens=CollectionUtils.newList(5,)@ -> scanner=new Scanner(message,)@ -> LOOP { -> tokens.add(scanner.nextLine(),)@scanner.hasNextLine() } -> return tokens.toArray( new String[],)@
results[https://github.com/sammthomson/semafor/blob/a67385661dd5d3073bb29cb1d7155375e81d16f3/edu/cmu/cs/lti/ark/fn/parsing/DataPrep.java][readLinesInFile][1] = -> lines=new ArrayList<String>()@ -> sc=FileUtil.openInFile(filename,)@ -> LOOP { -> lines.add(sc.nextLine(),)@sc.hasNextLine() } -> sc.close()@
results[https://github.com/severinh/valable/blob/b202efb01fb2f46622a57f6c167018bd548ab6f0/src/valable/model/ValaSource.java][parse][3] = -> scanner=new Scanner(contents,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> matcher=USING.matcher(line,)@ -> lines.add(line,)@ } -> scanner.close()@
results[https://github.com/OpenRadStack/mirth/blob/ed4f2dbf34f3159f2406a265dad2fc5a929d5783/server/src/com/mirth/connect/server/controllers/DefaultExtensionController.java][parseUninstallScript][2] = -> scanner=new Scanner(script,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> IF { -> sb.append(line+" ",)@StringUtils.isNotBlank(line,) } }
results[https://github.com/iPeer/WMLL/blob/ba97844d4246445fa89517c7e7a0705584325b99/src/WMLLUpdateCheck.java][checkForUpdates][1] = -> TRY { -> scanner=new Scanner(in,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> version=line.split(",",)@ } }
results[https://github.com/fliuzzi/DataParser/blob/2c2a4700d9414e4882c49896f19e662031996836/src/com/where/atlas/feed/YelpRawDataParser.java][populateMapFromTxt][4] = -> txtSet=new HashSet<String>()@ -> LOOP { -> txtSet.add(in.nextLine().trim(),)@in.hasNextLine() } -> in.close()@
results[https://github.com/jmcejuela/jeniatagger/blob/bd60aaa26e3c50fcc59c5e3ca358426657d71cf4/src/main/java/com/jmcejuela/bio/jenia/NamedEntity.java][load_word_info][1] = -> sc=new Scanner(resourceStream(filename,),)@ -> LOOP { -> s=sc.next()@sc.hasNextLine() -> i=sc.nextInt()@sc.hasNextLine() -> sc.nextLine()@sc.hasNextLine() }
results[https://github.com/tdgunes/graydeer/blob/ded9f2b8ec4ad14f9f9cffceec40872f7451d32c/GrayDeer/src/server/Utils.java][readFromFile][1] = -> TRY { -> scanner=new Scanner(file,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() } -> scanner.close()@ }
results[https://github.com/drewissimo33/CS-290/blob/be8b19531eadc96446c8dc5dd13fe2457ab240af/Dungeon/src/GameReader.java][fillRoot][1] = -> LOOP { -> line=in.nextLine().trim()@in.hasNextLine() -> IF { -> child=new GameNode(line.split(" ",)[0].substring(1,),)@line.startsWith("@",) -> fillNode(child,in,)@in.hasNextLine() } }
results[https://github.com/jri/deepamehta/blob/a569192a17ce692e156a4bdcba9da36af9c7540d/deepamehta3-core/src/main/java/de/deepamehta/core/util/JavaUtils.java][readText][5] = -> text=new StringBuilder()@ -> scanner=new Scanner(in,)@ -> LOOP { -> text.append(scanner.nextLine()+"\n",)@scanner.hasNextLine() } -> return text.toString()@
results[https://github.com/minnal/minnal/blob/04c8eba5338ac587cbe79d6696a7f42598a90033/minnal-generator/src/main/java/org/minnal/generator/ExecutableCommand.java][run][1] = -> sc=new Scanner(src,Charsets.UTF_8.name(),)@ -> LOOP { -> dest.println(sc.nextLine(),)@sc.hasNextLine() } -> sc.close()@
results[https://github.com/wuyq101/acm_test/blob/8b4b8782c6bef1353b38ccfb3ca2998a2e49da8b/src/com/poj/tree/Main2418.java][main][1] = -> cin=new Scanner(new BufferedInputStream(System.in,),)@ -> LOOP { -> root=insert(root,cin.nextLine(),)@cin.hasNextLine() } -> print(root,)@
results[https://github.com/Alexislavie/jeudelavie/blob/606476a9a2b21977b43997a064f0a01b9b5afcba/Jeu_de_la_vie/src/game/core/Reader.java][read][2] = -> LOOP { -> actualLine=in.nextLine()@in.hasNextLine() -> IF { -> sT=new StringTokenizer(actualLine.substring(3,)," ",)@actualLine.startsWith("#P",) } }
results[https://github.com/mcdickenson/data-algs-java/blob/6ba858c197e35c0fdb2eaf8e8104e73af890ff9b/Assignments/4/compsci201_DNA/src/DNABenchmark.java][dnaFromScanner][1] = -> LOOP { -> line=s.nextLine().toLowerCase()@s.hasNextLine() -> LOOP { -> ch=line.charAt(k,)@k<line.length() } }
results[https://github.com/darrenkuo/plusone/blob/561ec9e07a1c5c60ae80bee15fca20d470df05d8/src/plusone/clustering/Lda.java][getRealGamma][1] = -> gammas=new Scanner(filecontents,)@ -> LOOP { -> gammaRow=gammas.nextLine()@gammas.hasNextLine() -> topics.add(gammaRow.trim().split(" ",),)@ }
results[https://github.com/dtracers/PumpAndJump/blob/7a62932254b03ffa6cbbd8cd82a16c125b44fb62/PumpAndJump/src/com/musicgame/PumpAndJump/LevelInterpreter.java][loadFromScanner][1] = -> LOOP { -> obstacle=getNextObject(scan.nextLine(),)@scan.hasNextLine() -> IF { -> Level.add(obstacle,)@obstacle!=null } }
results[https://github.com/Camille31/Swip/blob/b8827cc75aacbff5e7657e7dcb55869b1b6b4256/ComplexXML/src/ontology/Ontology.java][run][2] = -> scanner=new Scanner(x.getInputStream(),)@ -> LOOP { -> System.out.println(scanner.nextLine(),)@scanner.hasNextLine() } -> scanner.close()@
results[https://github.com/jweese/thrax/blob/b32490b3b3487b6a3846e5fb50e14e6a3370419e/src/edu/jhu/thrax/util/TestSetFilter.java][main][1] = -> scanner=new Scanner(System.in,"UTF-8",)@ -> LOOP { -> rule=scanner.nextLine()@scanner.hasNextLine() -> IF { -> System.out.println(rule,)@filter.inTestSet(rule,) } }
results[https://github.com/shkschneider/android_Skeleton/blob/090559e9a0a81ea89ed98b8efa52d78cf93d88e6/src/Skeleton.java][readString][2] = -> IF { -> scanner=new Scanner(inputStream,)@inputStream!=null -> LOOP { -> string=string.concat(scanner.nextLine()+"\n",)@scanner.hasNextLine() && !(inputStream!=null) } -> return string@inputStream!=null }
results[https://github.com/redvox/gka/blob/e0082e3a82473ccd0a430cf6d099e3d5befd7e45/src/a1_p01_JS_MJ/GraphParser.java][parseUndircetedGraph][2] = -> LOOP { -> line=splitLine(scanner.nextLine(),)@scanner.hasNextLine() -> graph.addVertex(line[0],)@ -> graph.addVertex(line[1],)@ -> graph.addEdge(line[0],line[1],)@ }
results[https://github.com/erikw/cs142a_labs/blob/94e74786cc4be76b7638c50cfe118e9d9d1cded0/src/test/TestFiles.java][slurpStream][1] = -> scanner=new Scanner(inStream,)@ -> LOOP { -> scanner.nextLine()@scanner.hasNextLine()&&i<skipLines } -> return (scanner.hasNext())?scanner.useDelimiter("\\Z",).next():""@
results[https://github.com/Hazelwire/Hazelwire/blob/860a517941a07dbbd722c4f74024430362c355b3/src/GenerationFramework/src/org/hazelwire/main/CLI.java][run][1] = -> scanner=new Scanner(System.in,)@ -> LOOP { -> IF { -> handleCommand(scanner.nextLine(),)@scanner.hasNextLine() } }
results[https://github.com/artagesw/FROIDZ/blob/0519b5dad58778cf411aa9f11dc8cd28238e1cab/java-src/emulator/cpu/Test.java][testScanner][1] = -> s=new Scanner(System.in,)@ -> LOOP { -> IF { -> System.out.println(s.nextLine(),)@s.hasNextLine() } }
results[https://github.com/Androxyde/Flashtool/blob/3441e264e9e77691810b273a300d021084dddbac/src/org/adb/AdbUtility.java][hasSU][1] = -> TRY { -> sc=new Scanner(command.getStdOut(),)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() } }
results[https://github.com/dhale/jtk/blob/f6e7c19e22073b2f041c1622706bcab4f16540a1/src/main/java/edu/mines/jtk/bench/ScannerBug.java][scan][1] = -> s=new Scanner(input,)@ -> LOOP { -> s.findInLine("5",)@s.hasNextLine() -> System.out.println(s.nextLine(),)@s.hasNextLine() } -> s.close()@
results[https://github.com/joshua-decoder/joshua/blob/a642e0a6a015b74e3e320d98d4c753d1dae4f4b4/src/joshua/util/sentence/Vocabulary.java][getVocabFromSRILM][1] = -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> parts=line.split("\\s+",)@ } ELSE { -> logger.warning("Line is improperly formatted: "+line,)@ }
results[https://github.com/dtracers/PumpAndJump/blob/65ba403e71a4f01d1e1a2ca68e9bdc58e369bc4a/PumpAndJump/src/com/musicgame/PumpAndJump/Util/LevelInterpreter.java][loadFromScanner][1] = -> LOOP { -> obstacle=getNextObject(scan.nextLine(),)@scan.hasNextLine() -> IF { -> level.add(obstacle,)@obstacle!=null } }
results[https://github.com/miorel/prmf/blob/0596f2fb76b2fb797a571380c98c4113f17872b5/trunk/mafiabot/src/com/googlecode/prmf/starter/InputThread.java][run][1] = -> in=new Scanner(inputstream,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> System.out.println("<<<< "+line,)@ -> LOOP { -> l.receiveLine(line,this,)@ } }
results[https://github.com/webbukkit/DynmapCore/blob/e5a4991a54b118bfb5745e4b7c843584e9782b86/src/main/java/org/dynmap/PlayerList.java][load][1] = -> TRY { -> scanner=new Scanner(hiddenPlayersFile,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> hiddenPlayerNames.add(line,)@ } -> scanner.close()@ }
results[https://github.com/SpoutDev/Spout/blob/862cccf49ae42ec64b8e976573371757e153084b/engine/src/main/java/org/spout/engine/filesystem/resource/loader/ShaderLoader.java][readShaderSource][1] = -> scan=new Scanner(stream,)@ -> src=new StringBuilder()@ -> LOOP { -> src.append(scan.nextLine(),).append("\n",)@scan.hasNextLine() } -> return src.toString()@
results[https://github.com/eclipse/ptp/blob/c3d1a1c5bdd8b3640a8c7b0148044b1956b6812e/tools/gig/org.eclipse.ptp.gig/src/org/eclipse/ptp/gig/util/GIGUtilities.java][printToConsole][1] = -> scan=new Scanner(br,)@ -> LOOP { -> line=scan.nextLine()@scan.hasNextLine() -> out.println(line,)@!(scan.hasNextLine()) -> IF { -> throw new OperationCanceledException()@scan.hasNextLine() } }
