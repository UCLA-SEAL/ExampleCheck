results[https://github.com/svn2github/openam-trunk/blob/c8e5ee84ec45859828a28691f280f22f95c13493/openam-core/src/main/java/com/sun/identity/setup/EmbeddedOpenDS.java][getOpenDJBuildInfo][1] = -> TRY { -> scan=new Scanner(buildInfo,)@ -> LOOP { -> return scan.nextLine()@scan.hasNextLine() } }
results[https://github.com/nes1983/cc/blob/4237440e2ab9acb2c27cd0bedf82c727ec95699b/src/ch/unibe/scg/cc/GitWalker.java][parse][2] = -> TRY { -> LOOP { -> line=s.nextLine()@s.hasNextLine() -> m=pattern.matcher(line,)@ } }
results[https://github.com/iFlyCode/Utilities-Pro/blob/b0708fbfaef92527843482756fd0acfe82f679c5/src/com/git/ifly6/UtilitiesPro3/HelpCommands.java][acknowledgements][4] = -> TRY { -> scan=new Scanner(fstream,)@ -> LOOP { -> out(scan.nextLine(),)@scan.hasNextLine() } }
results[https://github.com/iPeer/WMLL/blob/ba97844d4246445fa89517c7e7a0705584325b99/src/WMLLUpdateCheck.java][checkForUpdates][1] = -> TRY { -> scanner=new Scanner(in,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> version=line.split(",",)@ } }
results[https://github.com/tdgunes/graydeer/blob/ded9f2b8ec4ad14f9f9cffceec40872f7451d32c/GrayDeer/src/server/Utils.java][readFromFile][1] = -> TRY { -> scanner=new Scanner(file,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() } -> scanner.close()@ }
results[https://github.com/Androxyde/Flashtool/blob/3441e264e9e77691810b273a300d021084dddbac/src/org/adb/AdbUtility.java][hasSU][1] = -> TRY { -> sc=new Scanner(command.getStdOut(),)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() } }
results[https://github.com/webbukkit/DynmapCore/blob/e5a4991a54b118bfb5745e4b7c843584e9782b86/src/main/java/org/dynmap/PlayerList.java][load][1] = -> TRY { -> scanner=new Scanner(hiddenPlayersFile,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> hiddenPlayerNames.add(line,)@ } -> scanner.close()@ }
results[https://github.com/jonbullock/JBake/blob/680007a8bf7f0a1d8ebb9ca368401d7d88fa62cf/src/test/java/org/jbake/app/GroovyRendererTest.java][renderFeed][13] = -> TRY {  -> scanner=new Scanner(outputFile,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() } } CATCH(Exception) {}
results[https://github.com/felixvelasco/test/blob/40066d7074d8e307c5691aeef3b10fd3d3abbe56/maven/dsl-builder/src/main/java/com/isb/jVoice/dsl/builder/PrepareWSDLSourcesMojo.java][containsLocationsInFile][1] = -> TRY { -> LOOP { -> scanner=new Scanner(file,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() } } }
results[https://github.com/Androxyde/Flashtool/blob/aa9895c9630c14d6cdcb1e3e0371284ee2b076dd/src/org/system/AdbShell.java][start][1] = -> TRY {  -> sc=new Scanner(processInput,)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() } } CATCH(IOException) {}
results[https://github.com/patkaehuaea/Bellevue-College/blob/80900a8f17a4c761578bc8b3ecd878eca6a9158a/src/edu/bellevuecollege/cs210/Chapter6/Exercises.java][stripHtmlTags][1] = -> TRY {  -> LOOP { -> fullLine=input.nextLine()@input.hasNextLine() -> noHTMLfullLine=fullLine.replaceAll("\\<.*?\\>","",)@ } } CATCH(FileNotFoundException) {}
results[https://github.com/Tokanagrammar/tokanagrammar-dev/blob/1206c014d822579e8f64aa57cf9fcfb51505d0fc/src/main/java/cs/umb/edu/source/std/SimpleJavaSourceFile.java][<init>][1] = -> TRY {  -> in=new Scanner(inFile,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() } } CATCH(FileNotFoundException) {}
results[https://github.com/SirakDan/Kiwi1/blob/e845eddb2057fafe24c7604338bcbd8fb5bcbe83/src/interfaz/NewJFrame2.java][LoadSyntaxActionPerformed][2] = -> IF { -> TRY { -> fileReaderScan=new Scanner(readTextFile,)@ -> LOOP { -> temp=fileReaderScan.nextLine()+"\n"@fileReaderScan.hasNextLine() } } }
results[https://github.com/eior93/traffic/blob/6560ea3efa1e1af653aca96dfbaca006a3b0877d/src/edu/brown/cs32/rl46_bmontell/traffic/networking/server/Main.java][main][1] = -> TRY {  -> scanner=new Scanner(System.in,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() } } CATCH(IOException) {}
results[https://github.com/apps4av/avare/blob/e4cc40746e755cf7a9c96e0ff72c8fcec4aa4f5f/src/com/ds/avare/utils/NetworkHelper.java][getNAMMET][1] = -> TRY { -> s=new Scanner(url.openStream(),)@ -> LOOP { -> line=s.nextLine()@s.hasNextLine() } -> s.close()@ }
results[https://github.com/caiusb/gitsvn/blob/018a5adddd6cb4df140050df474628f9842a4234/infra/src/edu/illinois/gitsvn/infra/collectors/diff/editfilter/CommentEditFilter.java][linesStartWithHeader][1] = -> TRY { -> LOOP { -> line=s.nextLine().trim()@s.hasNextLine() -> IF { -> return false@s.hasNextLine() && !(lineHasAtLeastOneHeader(line,headers,)) } } }
results[https://github.com/alexwyler/Words-With-Help/blob/ba555aafe18529e985a3adb897aea197c527d8aa/src/com/alexwyler/wwc/dawg/DawgNode.java][makeDawg][1] = -> TRY {  -> in=new Scanner(dict,)@ -> LOOP { -> words=in.nextLine()@in.hasNextLine() } } CATCH(FileNotFoundException) {}
results[https://github.com/desruisseaux/geotoolkit-pending/blob/030babc1514511df05a7dfec3bd182c19df8bd15/demos/geotk-demo-samples/src/main/java/org/geotoolkit/pending/demo/datamodel/customdatastore/FishReader.java][read][1] = -> TRY {  -> IF { -> line=scanner.nextLine()@scanner.hasNextLine() && !(current!=null) -> parts=line.split("/",)@!(current!=null) } } CATCH(DataStoreRuntimeException) {}
results[https://github.com/dbpedia/dbpedia-links/blob/5622428944951016d57019f1c1ab87a13a3538ce/WikipediaCategoryProcessor/src/main/java/org/dbpedia/kasun/categoryprocessor/DataProcesor.java][inserDataToDB][2] = -> TRY {  -> LOOP { -> line=fileScanner.nextLine()@fileScanner.hasNextLine() -> typle=line.split("\\ ",)@ } } CATCH(IOException) {}
results[https://github.com/ragnarok089/CS544/blob/671284a89c52578207c9757fb8b72cefeac88781/Chat/src/Utilities/InputReader.java][run][1] = -> TRY { -> LOOP { -> IF { -> getSetReady(sc.nextLine(),)@sc.hasNextLine() } } }
results[https://github.com/loveingenioustech/Study/blob/231cdcfdc9954bea9a946e63ba0a46554f554c10/java-demo/src/thread/ThreadPoolDemo.java][search][2] = -> TRY { -> in=new Scanner(new FileInputStream(file,),)@ -> LOOP { -> line=in.nextLine()@!(found)&&in.hasNextLine() } -> in.close()@ }
results[https://github.com/joshua-decoder/joshua/blob/c2256929781dd0cc5bd5f5442400a5f2b4473b2d/src/joshua/decoder/ff/lm/bloomfilter_lm/BloomFilterLanguageModel.java][numLines][1] = -> TRY { -> s=new Scanner(new File(filename,),)@ -> LOOP { -> s.nextLine()@s.hasNextLine() } -> s.close()@ }
results[https://github.com/paul-g/protrade/blob/b782af5564f50bbf7d46126fe2f5a0e4d9867c35/tests-system/org/ic/protrade/model/connection/BetfairConnectionTest.java][setUp][1] = -> TRY { -> scanner=new Scanner(new FileInputStream(filename,),)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> lines=line.split(":=",)@ } }
results[https://github.com/rlowrance/re/blob/f66246dc56725d6bd1dcca8642c3b7a620e2015f/java/src/com/roylowrance/util/test/LineScannerTest.java][testDeedsFileJavaUtilScanner][1] = -> TRY {  -> s=new java.util.Scanner(filePath,)@ -> LOOP { -> s.nextLine()@s.hasNextLine() } } CATCH(FileNotFoundException) {}
results[https://github.com/monnetproject/bliss/blob/3b7b346494ec4e60831a4dea5a1328b7c72170b9/betalm/src/test/java/eu/monnetproject/bliss/betalm/CompileModelTest.java][testMain][1] = -> TRY {  -> in=new Scanner(tmpFile,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> Assert.assertEquals(expLM[++i],line,)@ } } CATCH(Exception) {}
results[https://github.com/studentkittens/webarchive/blob/08e67e49ce50e0666bf4f70453bea62555c45a29/src/java/webarchive/xml/TestXml.java][main][1] = -> TRY {  -> scan=new Scanner(xsdFile,)@ -> LOOP { -> System.out.println(scan.nextLine(),)@scan.hasNextLine() } } CATCH(TransformerConfigurationException,IllegalArgumentException,SAXException,IOException,TransformerException,ParserConfigurationException) {}
results[https://github.com/Androxyde/Flashtool/blob/3441e264e9e77691810b273a300d021084dddbac/src/org/adb/AdbUtility.java][isMounted][1] = -> TRY {  -> sc=new Scanner(command.getStdOut(),)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() } } CATCH(Exception) {}
results[https://github.com/iFlyCode/Utilities-Pro/blob/b1603f596a22e516e5c4187919d7146e9b8d7f59/src/com/me/ifly6/methods/InfoMethods.java][acknowledgements][4] = -> TRY {  -> scan=new Scanner(fstream,)@ -> LOOP { -> ConsoleIf.append(scan.nextLine(),)@scan.hasNextLine() } } CATCH(IOException) {}
results[https://github.com/amplafi/amplafi-flow-client/blob/6a6a6b1c46994bd7bd568c684e2054c043149dca/src/main/java/org/amplafi/dsl/ScriptRunner.java][getImportLines][1] = -> TRY { -> LOOP { -> line=s.nextLine()@s.hasNextLine() -> IF { -> sb.append(line,).append(NL,)@line.startsWith("import",) } } }
results[https://github.com/evgeniyarbatov/dev-practice/blob/16a032df023a3a045124a1a5f2bc481a08826f14/java/netVis/graphAnalysis/saveGraphStats.java][parseContactTimes][3] = -> TRY {  -> in=new Scanner(mFile,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> rawData=line.split(" ",)@ } } CATCH(IOException) {}
results[https://github.com/isopov/fan/blob/964112e50881cd1cb99b3c1d66a99e8dac83976a/fan-core/src/main/java/com/sopovs/moradanen/fan/bootstrap/FootballDataImporter.java][importDataFromFile][5] = -> TRY { -> LOOP { -> s=scanner.nextLine()@scanner.hasNextLine() -> IF { -> h=new FootbalDataGameHeader(s,)@h==null } -> gameString=s.split(",",)@ } }
results[https://github.com/bcapps/ap-computer-science/blob/c8c489516fd97c6846741e79a853d3b63d5dde74/labs/lab7/ch11/fileio/LineNumberer.java][main][1] = -> TRY {  -> in=new Scanner(reader,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> out.println("/* "+lineNumber+" */ "+line,)@ } } CATCH(FileNotFoundException) {}
results[https://github.com/fkmclane/SML/blob/d79fd43a15bd07bca072ee5feb3597a2061c66ed/Compilatron/Compilatron/java/src/Compiler2.java][compileFile][3] = -> TRY {  -> reader=new Scanner(file,)@ -> LOOP { -> line=reader.nextLine()@reader.hasNextLine() -> lineComponents=line.split(" ",)@ } } CATCH(IOException) {}
results[https://github.com/societies/SOCIETIES-Platform/blob/8145b2129eb5cb9fd5cbeeb9d1fcf5b126c95bdf/context-management/UserContextRefinement/src/main/java/org/societies/context/user/refinement/impl/tools/ManagingFilesMethods.java][extractLinesNumber][1] = -> TRY {  -> sc=new Scanner(input,)@ -> LOOP { -> sc.nextLine()@sc.hasNextLine() } -> sc.close()@ } CATCH(FileNotFoundException) {}
results[https://github.com/amartgon/mahout/blob/23241a928804590d6db7d00ce327149eefa333a2/core/src/main/java/org/apache/mahout/classifier/df/data/DataLoader.java][generateDataset][4] = -> TRY {  -> scanner=new Scanner(input,"UTF-8",)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() } -> scanner.close()@ } CATCH(DescriptorException,IOException) {}
results[https://github.com/svenkeidel/Samegame/blob/9b9951e7f46bfc86abbd3d68e6f23aef63f582a0/src/de/tu_darmstadt/gdi1/samegame/highscore/Highscore.java][validate][2] = -> TRY {  -> s=new Scanner(highscoreList,)@ -> LOOP { -> highscoreEntry=s.nextLine()@s.hasNextLine() -> HighscoreEntry.validate(highscoreEntry,i,)@ } } CATCH(WrongLevelFormatException) {}
results[https://github.com/tdunning/mahout/blob/7e546e356eb4c4c13ed73c77534adb1c43498a5a/core/src/main/java/org/apache/mahout/classifier/df/data/DataLoader.java][generateDataset][4] = -> TRY {  -> scanner=new Scanner(input,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() } -> scanner.close()@ } CATCH(DescriptorException,IOException) {}
results[https://github.com/martellaj/CS_Projects/blob/4366ee86dda9b8a43c1083e3b0535bec96875f33/CS348/proj1/src/Dump.java][load][1] = -> data=new ArrayList<String>()@ -> TRY { -> scan=new Scanner(new File(fileName,),)@ -> LOOP { -> data.add(scan.nextLine(),)@scan.hasNextLine() } }
results[https://github.com/molgenis/molgenis_apps-legacy/blob/7375f94fb6fe2d300487c6ac03caba00d6795c84/apps/hemodb/org/molgenis/hemodb/plugins/CalculateMeanR.java][calculateMean][2] = -> TRY {  -> scanner=new Scanner(proberesults,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> probes.add(line,)@ } } CATCH(Exception) {}
results[https://github.com/morepork/pacdefence/blob/290eb42349917ab20b8e0125959ff386efc0eaf2/gui/Title.java][parseLicence][1] = -> TRY { -> licence=new StringBuilder()@ -> LOOP { -> licence.append(scan.nextLine(),)@scan.hasNextLine() -> licence.append("\n",)@ } -> return licence.toString()@ }
results[https://github.com/Vitek000/Test/blob/45769d88971dfde273b18ad96d5e20f1e022ea52/src/beelineworking/quota/QuotaHelper.java][getFromFile][5] = -> TRY {  -> scanner=new Scanner(file,)@ -> LOOP { -> s=scanner.nextLine()@scanner.hasNextLine() -> splitted=s.split(";",)@ } } CATCH(FileNotFoundException) {}
results[https://github.com/alexwyler/Words-With-Help/blob/fc6d7151ad596eab9eb5c57426ca750cfa2d8899/src/com/alexwyler/wwc/Dictionary.java][<init>][1] = -> TRY {  -> in=new Scanner(file,)@ -> LOOP { -> words.add(in.nextLine(),)@in.hasNextLine() } } CATCH(FileNotFoundException) {}
results[https://github.com/jdc2172/ribozyme-chess-engine/blob/8a0441238be3748fd0607dff33b5c97b64624732/src/uci/RibozymeEngine.java][profile][1] = -> TRY { -> LOOP { -> p=FenParser.parse(scanner.nextLine(),)@scanner.hasNextLine() } } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/Tokanagrammar/tokanagrammar-dev/blob/9a936fd50e52229e26c1c3f8917e8d5b5b929575/src/main/java/edu/umb/cs/source/std/AutomaticallyParsedJavaSourceFile.java][<init>][1] = -> TRY {  -> in=new Scanner(inFile,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> lines.add(line,)@ } } CATCH(FileNotFoundException) {}
results[https://github.com/liuexp/fatworm/blob/904f9197df9628522e8bc72ec816fbf034268fd2/src/fatworm/parser/Tester.java][main][1] = -> TRY {  -> in=new Scanner(System.in,)@ -> LOOP { -> parse(in.nextLine(),)@in.hasNextLine() } } CATCH(RecognitionException) {}
results[https://github.com/knowitall/reverb/blob/2a07f0a1a9437ec7a0ae034ed19461886232f926/core/src/main/java/edu/washington/cs/knowitall/nlp/ChunkedSentencePattern.java][main][2] = -> TRY {  -> scan=new Scanner(System.in,)@ -> LOOP { -> line=scan.nextLine()@scan.hasNextLine() -> chunked=chunker.chunkSentence(line,)@ } } CATCH(ChunkerException,IOException) {}
results[https://github.com/enasequence/cramtools/blob/d8da5ab66863d81d2dd9c13a48ecbdbdfd2521c1/src/main/java/net/sf/cram/RefRepo.java][readRepoFile][1] = -> TRY {  -> scanner=new Scanner(file,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> e=parse(line,)@ } } CATCH(FileNotFoundException) {}
results[https://github.com/sreeprasad/TodayILearntTo/blob/ee58ce5cf7473c695b12e78186e9b5f6b93965b8/BayBridges.java][parseFile][2] = -> TRY {  -> sc=new Scanner(f,)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() -> part=line.substring(3,)@ } } CATCH(FileNotFoundException) {}
results[https://github.com/joshua-decoder/joshua/blob/6831f969bd54693be86d24a909fe4e451f4a82dd/test/joshua/zmert/BLEUTest.java][fileTest][1] = -> TRY {  -> refScanner=new Scanner(new File(referenceFile,),)@ -> LOOP { -> refLine=refScanner.nextLine()@refScanner.hasNextLine() } } CATCH(FileNotFoundException) {}
results[https://github.com/ipeirotis/Troia-Server/blob/815adce3df501fd99577a4bd49d4809b44e4540d/troia-integration-tests/src/test/java/integration/helpers/FileReaders.java][loadCostMatrix][2] = -> TRY {  -> scanner=new Scanner(stream,defaultEncoding,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> st=new StringTokenizer(line,"\t",)@ } } CATCH(FileNotFoundException) {}
results[https://github.com/thiagocrowley/Java/blob/0f761d936960d2c6cdcb078021ba3343c2ca4a44/src/br/com/estudo/exercicios/caelum/testeio/TestaEntrada.java][main][2] = -> TRY {  -> entrada=new Scanner(System.in,)@ -> LOOP { -> System.out.println(entrada.nextLine(),)@entrada.hasNextLine() } } CATCH(IOException) {}
results[https://github.com/mpatt3970/Clue/blob/d8de198aaef4083f735d3204a5043648fc0edb40/src/clueGame/ClueGame.java][loadRooms][3] = -> TRY {  -> in=new Scanner(reader,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> parts=line.split(", ",)@ } } CATCH(FileNotFoundException) {}
results[https://github.com/eior93/traffic/blob/c9fc8e2af0b69b32c50b6f24bd55019bd9688654/src/edu/brown/cs32/rl46_bmontell/traffic/server/Main.java][main][1] = -> TRY {  -> scanner=new Scanner(System.in,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() } -> scanner.close()@ } CATCH(IOException) {}
results[https://github.com/knowitall/reverb/blob/2a07f0a1a9437ec7a0ae034ed19461886232f926/core/src/main/java/edu/washington/cs/knowitall/extractor/conf/classifier/LogisticRegression.java][buildFeatureWeightMap][2] = -> TRY {  -> scan=new Scanner(input,)@ -> LOOP { -> line=scan.nextLine()@scan.hasNextLine() -> parts=line.split("(?:    \\s*)|\\t\\s*",)@ } } CATCH(FileNotFoundException) {}
results[https://github.com/jwill/algorithm-practice/blob/d3744a91969e709b37479204677ed642671199a1/UVaOnlineJudge/src/org/onlinejudge/uva/solved/Main445.java][doIt][1] = -> TRY {  -> in=new Scanner(new FileReader("data/445.txt",),)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() } } CATCH(Exception) {}
results[https://github.com/bcdata/bouncingdata/blob/e983f5ac32bd9e3640736eebf1af76244b54d151/src/main/java/com/bouncingdata/plfdemo/util/dataparsing/TextParser.java][parse][1] = -> TRY {  -> scanner=new Scanner(is,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> array=line.split("[\t,;]",)@ } } CATCH(Exception) {}
results[https://github.com/btmura/rbb/blob/66dd74c5e6abc27a76d72d0ae08d4460e61b1d60/src/com/btmura/android/reddit/provider/NetProvider.java][subscribe][1] = -> TRY {  -> sc=new Scanner(in,)@ -> LOOP { -> Log.v(TAG,sc.nextLine(),)@sc.hasNextLine() } } CATCH(IOException) {}
results[https://github.com/Androxyde/Flashtool/blob/3441e264e9e77691810b273a300d021084dddbac/src/org/adb/AdbUtility.java][getFilePerms][1] = -> TRY { -> sc=new Scanner(command.getStdOut(),)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() -> IF { -> return line@line.contains("Uid",) && sc.hasNextLine() } } }
results[https://github.com/monnetproject/translation/blob/f02d204418f9d27700f810167a5627d0b6751112/langmodel/src/main/java/eu/monnetproject/translation/langmodel/AbstractLM.java][expectLine][1] = -> TRY {  -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> IF { -> return line@line.contains(lineRegex,) && scanner.hasNextLine() } } } CATCH(IOException) {}
results[https://github.com/Androxyde/Flashtool/blob/3441e264e9e77691810b273a300d021084dddbac/src/org/adb/AdbUtility.java][getBusyboxVersion][1] = -> TRY { -> sc=new Scanner(command.getStdOut(),)@ -> IF { -> line=sc.nextLine()@sc.hasNextLine() -> IF { -> return line@sc.hasNextLine() && line.contains("BusyBox v1",)&&line.contains("multi-call",) } } }
results[https://github.com/Artanis/CSC220/blob/0f637a80f1863ab80f85dc923d2f1f28e9882ec8/Assignment_03/9.17/main.java][lines][1] = -> TRY {  -> s=new Scanner(f,)@ -> LOOP { -> s.nextLine()@s.hasNextLine() } -> s.close()@ } CATCH(java.io.FileNotFoundException) {}
results[https://github.com/jhuun/OhHa/blob/e63d770dabf6d3a606805237d4f90886c1fc94a9/Shakki/src/shakki/tiedostonkasittely/Tiedostonkasittelija.java][lataaPeli][1] = -> TRY { -> lukija=new Scanner(tiedosto,)@ -> siirrot=new ArrayList<String>()@ -> LOOP { -> siirrot.add(lukija.nextLine(),)@lukija.hasNextLine() } -> ladatunPelinSiirrot=muutaKoordinaateiksi(siirrot,)@ }
results[https://github.com/jabox/jabox/blob/9c7f13c50fe8de8f94d488ad61f678e7f00a4fed/jabox-persistence/src/main/java/org/jabox/utils/WebappManager.java][readData][1] = -> TRY {  -> list=new ArrayList<String>()@ -> scanner=new Scanner(file,)@ -> LOOP { -> list.add(scanner.nextLine(),)@scanner.hasNextLine() } } CATCH(FileNotFoundException) {}
results[https://github.com/SpaceManiac/Glowstone/blob/502c08922d2baef024a840b06d3dc60a29037a52/src/main/java/net/glowstone/util/bans/GlowBanList.java][load][1] = -> TRY { -> LOOP { -> line=scan.nextLine().trim()@scan.hasNextLine() -> split=line.split("\\|",)@ } } CATCH(Exception) { -> lineNumberText=(lineNumber<0)?"":" (line "+lineNumber+")"@ -> GlowServer.logger.log(Level.SEVERE,"Failed to read bans from "+file+lineNumberText,e,)@ }
results[https://github.com/abunyea/robotdowneyjr/blob/74266f3664a98691cb99877612baeb42b73ba938/server/Player.java][readConfig][1] = -> IF { -> TRY { -> myturn=Integer.parseInt(sc.nextLine(),)@sc.hasNextLine() } CATCH(NumberFormatException) { -> System.err.println("Could not parse turn. Exiting...",)@ -> System.exit(1,)@ } }
results[https://github.com/erichare/RevMiner-OpenMenu-Integration/blob/b51f4282b2a67f36d318046b91bb2cdc6feacce4/Server/EachFile.java][readFile][1] = -> TRY {  -> scanner=new Scanner(file,)@ -> LOOP { -> readLine=scanner.nextLine()@scanner.hasNextLine() -> lineScanner=new Scanner(readLine,)@ } -> scanner.close()@ } CATCH(IOException) {}
results[https://github.com/Androxyde/Flashtool/blob/3441e264e9e77691810b273a300d021084dddbac/src/org/adb/AdbUtility.java][getDevices][1] = -> TRY { -> sc=new Scanner(command.getStdOut(),)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() -> IF { -> content=line.split("\t",)@!(line.startsWith("List",)) } } }
results[https://github.com/vdmeer/skb-commons/blob/3ffa122dd76afdf9986071bcd28860c2e1977028/src/main/java/org/skb/commons/com/Json2Com.java][read][2] = -> IF { -> TRY { -> LOOP { -> line=input.nextLine()@input!=null && input.hasNextLine() -> IF { -> content+=line.trim()@!(StringUtils.startsWithAny(line.trim(), new String[],)) } } } }
results[https://github.com/AtalM2/UnivCalendar/blob/1d1996ce7da192fc4d168fbddac3f0554fcf6987/src/calendar/ICSFinder.java][getURL][1] = -> TRY {  -> ret=new ArrayList<>()@ -> scanner=new Scanner(br,)@ -> LOOP { -> ret.add(scanner.nextLine(),)@scanner.hasNextLine() } } CATCH(MalformedURLException,IOException) {}
results[https://github.com/asakusafw/asakusafw/blob/cad94753128bd3168e23c0539cc55c7e5a653dbd/asakusa-yaess-jsch/src/test/java/com/asakusafw/yaess/jsch/SshScriptHandlerTestRoot.java][getOutput][2] = -> TRY {  -> results=new ArrayList<String>()@ -> scanner=new Scanner(output,)@ -> LOOP { -> results.add(scanner.nextLine(),)@scanner.hasNextLine() } } CATCH(IOException) {}
results[https://github.com/apache/mahout/blob/713fbb26589359adc1d90e4bea06bd67a0b4335b/core/src/main/java/org/apache/mahout/classifier/df/data/DataLoader.java][loadData][2] = -> TRY {  -> scanner=new Scanner(input,"UTF-8",)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> instance=converter.convert(line,)@ } -> scanner.close()@ } CATCH(IOException) {}
results[https://github.com/spencerapplegate/SpaceTrader/blob/dd9b7e208f31b032301f04cce7b8447c6193697c/src/presenter/Driver.java][generateNames][1] = -> TRY {  -> s=new Scanner(new File("PlanetNames.txt",),)@ -> LOOP { -> temp=s.nextLine()@s.hasNextLine() -> planetNames.add(temp,)@ } } CATCH(IOException) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/ac3faf88491f55369fb6b83f77fbb75557ed3bf4/make/tools/src/build/tools/charsetmapping/Utils.java][getCopyright][2] = -> TRY {  -> s=new Scanner(f,"ISO-8859-1",)@ -> LOOP { -> ln=s.nextLine()@s.hasNextLine() -> sb.append(ln+"\n",)@ } -> s.close()@ } CATCH(IOException) {}
results[https://github.com/abunyea/robotdowneyjr/blob/718c303eaf9af3a786a6da7366c7ebcc527310a4/server/ClientGUI.java][loadGame][1] = -> TRY { -> sc=new Scanner(f,)@ -> LOOP { -> line=sc.nextLine()@!(corrupt)&&sc.hasNextLine() -> g.add(line,)@ } } CATCH(FileNotFoundException) { -> e.printStackTrace()@ }
results[https://github.com/Androxyde/Flashtool/blob/f9bc435be311fc75cc8987726768265a9066663c/src/org/adb/FastbootUtility.java][getDevices][1] = -> v=new Vector<String>()@ -> TRY { -> sc=new Scanner(command.getStdOut(),)@ -> LOOP { -> v.add(sc.nextLine(),)@sc.hasNextLine() } } -> return v.elements()@
results[https://github.com/btmura/rbb/blob/57006b7fbc21d4254d2e7ad67c77dff00e4a09ea/src/com/btmura/android/reddit/NetProvider.java][insertSubreddit][2] = -> TRY { -> sc=new Scanner(in,)@ -> LOOP { -> Log.v(TAG,sc.nextLine(),)@sc.hasNextLine() } } CATCH(IOException) { -> Log.e(TAG,"insertSubreddit",e,)@ }
results[https://github.com/westeras/vcf-analyzer/blob/1407a3cd60bfc54b9693ec1b20d2fff29dfc097e/src/java/AnnotationParser.java][parseFile][1] = -> TRY {  -> reader=new Scanner(fileIn,)@ -> LOOP { -> columns=parseLine(reader.nextLine(),)@reader.hasNextLine() -> rows.add(columns,)@ } } CATCH(FileNotFoundException,ClassNotFoundException,SQLException) {}
results[https://github.com/grisu48/segeo/blob/fa33bdaac8db5733efac546e4e8e5eb9456d0da9/org.feldspaten.segeo.api/src/segeo/api/examples/PolygonCalculator.java][main][1] = -> scanner=new Scanner(System.in,)@ -> TRY { -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> split=line.split(" ",)@ } } FINALLY { -> scanner.close()@ }
results[https://github.com/biblex2013/biblex/blob/39c7fa6d1aca8629eec8a6a82aa0abc74dc6e5fc/biblex/src/main/java/fi/helsinki/biblex/Importer/Importer.java][importFromFile][1] = -> TRY { -> reader=new Scanner(new File(path,),)@ -> LOOP { -> line=reader.nextLine()@reader.hasNextLine() } } CATCH(Exception) { -> System.err.println("Failed to read the file. Exception "+e+".",)@ }
results[https://github.com/nBdde/l2jserver/blob/57967c7939f82a6eccd3fc6bcef5ada3d4dea214/L2J_Server/java/com/l2jserver/gameserver/datatables/SummonItemsData.java][<init>][1] = -> TRY { -> LOOP { -> line=s.nextLine()@s.hasNextLine() -> lineSplit=line.split(";",)@ -> CATCH(Exception) { -> _log.warning("		"+line,)@ } } -> _log.warning("Summon items data: Can not find '"+Config.DATAPACK_ROOT+"/data/summon_items.csv'",)@ }
results[https://github.com/monnetproject/bliss/blob/db410015486ac619b91b410737fc6ac664cdb8ab/betalm/src/main/java/eu/monnetproject/bliss/betalm/Perplexity.java][calculatePerplexity][1] = -> TRY {  -> tokenizer=new PTBTokenizer()@ -> LOOP { -> tokens=tokenizer.tokenize(scanner.nextLine(),)@scanner.hasNextLine() -> perplexity+=p/tokens.size()@ } } CATCH(FileNotFoundException) {}
results[https://github.com/tuvd08/other/blob/9e4b25973edb18d300f7c11f1ccd13f4c4a19f5b/java-tools/io-project/src/main/java/org/thaonguyen/copy/CopyFile.java][copyTextFileByScanner][2] = -> TRY {  -> freader=new Scanner(fromFile,)@ -> LOOP { -> line=freader.nextLine()@freader.hasNextLine() -> writer.write(line,)@ } -> freader.close()@ } CATCH(IOException) {}
results[https://github.com/cloudera/mahout/blob/7e546e356eb4c4c13ed73c77534adb1c43498a5a/core/src/main/java/org/apache/mahout/classifier/df/data/DataLoader.java][loadData][2] = -> TRY {  -> scanner=new Scanner(input,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> instance=converter.convert(line,)@ } -> scanner.close()@ } CATCH(IOException) {}
results[https://github.com/mwienk-school/Vertalerbouw/blob/2270c301537b9537bd493e1a6e596f7a69fd40b8/VB-Week1/src/vb/week1/wc/WordCountScanner.java][count][1] = -> TRY {  -> in=new Scanner(reader,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> words=new Scanner(line,)@ -> nChars+=line.length()+1@ } } CATCH(IOException) {}
results[https://github.com/wf1768/archive/blob/384146c00979dea887abb3947bbadc0651883560/src/java/com/yapu/system/util/DistorySoffice.java][<init>][1] = -> TRY { -> in=new Scanner(process.getInputStream(),)@ -> LOOP { -> processString=in.nextLine()@in.hasNextLine() } } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/DaivdTurnbull/Kwik-Browsa-Conversion/blob/42bce2a2a2cb40836d7f670fe9499771f0e66a61/Deliverable C/Final Code/src/org/groupf/kwikbrowsa/KwikBrowsaGUI.java][getLocalHTMLDocument][1] = -> TRY {  -> scanner=new Scanner(localPage,)@ -> buffer=new StringBuffer()@ -> LOOP { -> buffer.append(scanner.nextLine(),)@scanner.hasNextLine() } } CATCH(NullPointerException) {}
results[https://github.com/joshua-decoder/joshua/blob/165e92bbe6fba878d211cd0004b7e7e072a92960/src/joshua/util/PackedGrammarServer.java][main][1] = -> TRY {  -> user=new Scanner(System.in,)@ -> LOOP { -> line=user.nextLine().trim()@user.hasNextLine() -> rules=pgs.get(line,)@ } } CATCH(FileNotFoundException,IOException) {}
results[https://github.com/yukuku/androidbible/blob/aa6efd5337e1dfcde4d8987dac40e78f91ebafd8/AlkitabConverterProcesses/src/yuku/alkitabconverter/ro_ortodoxa/Proses1.java][u][3] = -> TRY {  -> sc=new Scanner(new File(INPUT_TEKS_1,),INPUT_TEKS_ENCODING,)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() -> line=line.trim()@ } } CATCH(Exception) {}
results[https://github.com/felixvelasco/test/blob/40066d7074d8e307c5691aeef3b10fd3d3abbe56/plugins/core/com.vectorsf.jvoice.core.reconciliator/src/com/vectorsf/jvoice/core/reconciliator/DeletePomWSDL.java][pomContainsLine][1] = -> TRY {  -> fileScanner=new Scanner(pomFile.getContents(),)@ -> LOOP { -> line=fileScanner.nextLine()@fileScanner.hasNextLine()&&!(bExits) } -> fileScanner.close()@ } CATCH(FileNotFoundException,CoreException) {}
results[https://github.com/watagashi78/JavaTraining/blob/8b2411c4b3905d670f2a270b5b0c30e4c91c1548/JPL/ch22/ex22_12/MyAttrReader.java][readAttrs][1] = -> TRY {  -> in=new Scanner(source,)@ -> LOOP { -> in.findInLine(pat,)@in.hasNextLine() -> match=in.match()@in.hasNextLine() -> in.nextLine()@in.hasNextLine() } } CATCH(IOException) {}
results[https://github.com/Bergmam/DAT255/blob/69609915278f94b3b98c00826dec2ac92f567996/dat255/src/se/chalmers/dat255/risk/model/WorldMap.java][<init>][1] = -> TRY { -> scanner=new Scanner(file,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> array=line.split("-",)@ } } CATCH(FileNotFoundException) { -> e.printStackTrace()@ }
results[https://github.com/jwill/algorithm-practice/blob/bebe2c51bea32034b96ac493c096e7a1712e3f3d/UVaOnlineJudge/src/org/onlinejudge/uva/solved/Main1124.java][doIt][1] = -> TRY {  -> in=new Scanner(new FileReader("data/1124.txt",),)@ -> LOOP { -> System.out.println(in.nextLine(),)@in.hasNextLine() } } CATCH(Exception) {}
results[https://github.com/D2BJ/ScannerGenerator/blob/5b06d317d6d38407e395e39f93b5f3c5b12d8c9f/src/Parser.java][<init>][1] = -> TRY { -> in=new Scanner(inFile,)@ -> LOOP { -> s=in.nextLine()@in.hasNextLine() -> nt=parseLine(s,)@ } } CATCH(FileNotFoundException) { -> e.printStackTrace()@ }
results[https://github.com/niavok/irr310/blob/6fb468c47f9eb83d97f984c4d354225408131594/src/fr/def/iss/vd2/lib_v3d/v3draw/writers/ObjToV3Draw.java][write][1] = -> TRY {  -> scanner=new Scanner(objFile,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> parseLine(line,)@ } -> scanner.close()@ } CATCH(FileNotFoundException,IOException) {}
results[https://github.com/jwill/algorithm-practice/blob/208e2825c3ddc5e718428902722de1255e92c7c3/UVaOnlineJudge/src/org/onlinejudge/uva/solved/Main621.java][doIt][1] = -> TRY {  -> in=new Scanner(new FileReader("data/621.txt",),)@ -> cases=in.nextInt()@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() } } CATCH(Exception) {}
results[https://github.com/adamantoise/wordswithcrosses/blob/d7f4f5934d7d44ad6ef05f9a75b531330074fabc/words-with-crosses/src/com/adamrosenfield/wordswithcrosses/io/JPZIO.java][unzipOrPassthrough][2] = -> TRY {  -> in=new Scanner(is,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> line=line.replaceAll("&nbsp;"," ",)@ -> out.write(line+"\n",)@ } } CATCH(IOException) {}
results[https://github.com/sisirkoppaka/mahout-rbm/blob/7cf20de98eef3893d1772593295bb57f3cc1eb54/examples/src/main/java/org/apache/mahout/df/mapreduce/TestForest.java][testFile][1] = -> TRY {  -> scanner=new Scanner(input,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> instance=converter.convert(0,line,)@ } -> scanner.close()@ } CATCH(IOException) {}
results[https://github.com/levants/lightmare/blob/a988e8888668e1f53f542c8e0edba32a8685f3ef/src/test/java/org/lightmare/EarFileReaderTest.java][urlTests][1] = -> TRY { -> scanner=new Scanner(stream,)@ -> LOOP { -> System.out.println(scanner.nextLine(),)@scanner.hasNextLine() } } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/matthew117/DurhamLife-Android/blob/efdc940b3263d4bddb12238e92eae50a1baaa0c7/HelloAndroid/src/uk/ac/dur/duchess/activity/ProfileSettingsActivity.java][onClick][1] = -> TRY { -> sc=new Scanner(is,)@ -> LOOP { -> Log.d("NEW USER API RESPONSE",sc.nextLine(),)@sc.hasNextLine() } } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/westeras/vcf-analyzer/blob/1e9b7b145e846a9c442eea0c5612366917a97955/src/java/UploadAnnotationCommand.java][parseFile][1] = -> TRY {  -> reader=new Scanner(fileIn,)@ -> LOOP { -> columns=parseLine(reader.nextLine(),)@reader.hasNextLine() -> rows.add(columns,)@ } } CATCH(FileNotFoundException) {}
