results[https://github.com/bslund/jetty-maven-plugin/blob/f46267722c7d26a469fd707614da88b9b59628db/modules/server/jetty-io/src/main/java/org/mortbay/jetty/io/ByteArrayBuffer.java][<init>][185] = -> TRY {  -> _bytes=value.getBytes(encoding,)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/peodratash/mina-ftpserver/blob/a250fec7c0870ae33b8e7f7b8fb4b229a6b76807/core/src/test/java/org/apache/ftpserver/clienttests/I18NTest.java][setUp][45] = -> TRY {  -> testData=TESTDATA.getBytes(ENCODING,)@ } CATCH(Exception) {}
results[https://github.com/apache/manifoldcf/blob/71f0d34ede27929254c61e4577872360f70738c5/products/connectors/lucene/com/metacarta/agents/output/lucene/HttpPoster.java][lengthField][50] = -> TRY {  -> tmp=fieldValue.getBytes("UTF-8",)@ } CATCH(IOException) {}
results[https://github.com/jpcaruana/jsynthlib/blob/bd801253b3a865461069788199e90fce2f660146/src/main/java/org/jsynthlib/drivers/yamaha/dx100/YamahaDX100BankDriver.java][setPatchName][50] = -> TRY { -> namebytes=name.getBytes("US-ASCII",)@ -> LOOP { -> (Patch) p.sysex[patchNameStart+i]=namebytes[i]@i<patchNameSize } }
results[https://github.com/Jasig/java-cas-client/blob/7e5b8426a4f41812e4b8db60bcb71c5d309180d1/cas-client-core/src/test/java/org/jasig/cas/client/validation/Cas20ServiceTicketValidatorTests.java][testGetAttributes][3] = -> TRY {  -> server.content=RESPONSE.getBytes(server.encoding,)@ } CATCH(TicketValidationException,UnsupportedEncodingException) {}
results[https://github.com/Appverse/appverse-mobile/blob/50e132b68b1d84c4d1c317c136f2869cec0d4c1f/appverse-core/src/java/com/gft/unity/core/io/IOHeaders.java][getRawContent][1] = -> IF { -> TRY { -> rawContent=content.getBytes("UTF8",)@content!=null } }
results[https://github.com/momoplan/petandroid1/blob/c4fbe119ee2cd566ee42ebb8fdcdc730ef70b317/src/asmack-source/org/apache/qpid/management/common/sasl/UsernameHashedPasswordCallbackHandler.java][getHash][2] = -> TRY {  -> data=text.getBytes("utf-8",)@ } CATCH(NoSuchAlgorithmException,UnsupportedEncodingException) {}
results[https://github.com/DBC-as/opensearch/blob/eb7b9b4c615253bc8f98befbb7e21a0a22bfc141/src/dk/dbc/opensearch/tools/tests/FedoraHandlerTest.java][Setup][2] = -> TRY {  -> data=testString.getBytes("UTF-8",)@ } CATCH(ServiceException,UnsupportedEncodingException,IOException) {}
results[https://github.com/sk89q/commandhelper/blob/145e58c4b1c5434f1b2e3d5586b4ec8480f21695/src/main/java/com/laytonsmith/persistance/io/ReadWriteFileConnection.java][writeData][2] = -> TRY {  -> this.data=data.getBytes(encoding,)@!(!(file.exists())) } CATCH(ReadOnlyException,IOException,UnsupportedOperationException) {}
results[https://github.com/mindwind/craft-atom/blob/293a0b5dff98d4b13bbe76805c8067b7afcb8279/craft-atom-protocol-textline/src/main/java/org/craft/atom/protocol/textline/TextLineEncoder.java][encode][1] = -> TRY {  -> lineBytes=str.getBytes(charset,)@ } CATCH(ProtocolException) {}
results[https://github.com/monossido/Announcify/blob/ec039256520b417aca2d893c823a8a61eb109a77/Announcify-Messaging/MMS-Announcify/src/com/announcify/plugin/message/mms/util/pdu/EncodedStringValue.java][<init>][3] = -> TRY { -> mData=data.getBytes(CharacterSets.DEFAULT_CHARSET_NAME,)@ } CATCH(UnsupportedEncodingException) { -> Log.e(TAG,"Default encoding must be supported.",e,)@ }
results[https://github.com/apache/derby/blob/28dc366eb6cb39ddb58e4837215686aaa80b18eb/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java][init][1] = -> TRY {  -> att_srvrlslv=prdId+"/"+myPVH.getVersionBuildString(true,)@ -> prdIdBytes_=prdId.getBytes(DEFAULT_ENCODING,)@ } CATCH(Exception) {}
results[https://github.com/exoplatform/jcr/blob/8cb5f954d2d92c4de7fc072f824a5f9b5d668233/component/core/src/main/java/org/exoplatform/services/jcr/util/Text.java][digest][1] = -> TRY {  -> return digest(algorithm,data.getBytes(enc,),)@ } CATCH(NoSuchAlgorithmException,UnsupportedEncodingException) {}
results[https://github.com/deegree/deegree3/blob/37c96a729b7d3a5116fe9796e23120a9210e29ab/deegree-services/deegree-webservices/src/main/java/org/deegree/console/security/SaltedPassword.java][<init>][1] = -> TRY {  -> plainPasswordBinary=plainPassword.getBytes(CHARSET,)@ -> saltedAndHashedPassword=getHashedAndSaltedPassword(plainPasswordBinary,salt,)@ } CATCH(UnsupportedEncodingException,NoSuchAlgorithmException) {}
results[https://github.com/MIPS/packages-apps-Email/blob/5b20f95e570e23b2f7e9dda045eb55674fb3d5d6/src/com/android/exchange/adapter/Serializer.java][writeLiteralString][24] = -> TRY {  -> data=s.getBytes("UTF-8",)@ -> out.write(data,)@ } CATCH(IOException) {}
results[https://github.com/svn2github/protobuf/blob/085e954a036f5c25f851ba18a0cb6045dfe46456/tags/2.4.1/java/src/main/java/com/google/protobuf/CodedOutputStream.java][computeStringSizeNoTag][13] = -> TRY { -> bytes=value.getBytes("UTF-8",)@ } CATCH(UnsupportedEncodingException) { -> throw new RuntimeException("UTF-8 not supported.",e,)@ }
results[https://github.com/AbinashBishoyi/FreeRapid-Plugins/blob/56887d443e6a00f4b36f645f3390c1db9499938b/src/channel5/cz/vity/freerapid/plugins/services/channel5/Channel5FileRunner.java][putAmf3String][1] = -> TRY {  -> b=s.getBytes("UTF-8",)@ -> buf.put(b,)@ } CATCH(Exception) {}
results[https://github.com/spring-projects/spring-android/blob/39414f4252b7fc9fe98621657d97073bce96cefc/test/spring-android-core-test/src/main/java/org/springframework/util/Base64UtilsTests.java][testDecodeString][1] = -> TRY {  -> expected=SOURCE.getBytes(UTF8,)@ -> Assert.assertArrayEquals(expected,actual,)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/greg-pe/platform_packages_providers_DownloadProvider/blob/3814718b9bae86b126b37134355509c90e9dfe55/tests/src/tests/http/MockResponse.java][setChunkedBody][2] = -> TRY {  -> return setChunkedBody(body.getBytes(ASCII,),maxChunkSize,)@ } CATCH(IOException) {}
results[https://github.com/cpieloth/GPGPU-on-Hadoop/blob/ffe8b3c4050acbca1eb5a8f791740e8ea617aad0/k-means/src/hadoop/PointOutputFormat.java][<init>][8] = -> TRY { -> this.keyValueSeparator=keyValueSeparator.getBytes(utf8,)@ } CATCH(UnsupportedEncodingException) { -> throw new IllegalArgumentException("can't find "+utf8+" encoding",)@ }
results[https://github.com/enonic/cms-ce/blob/73d69ae341ecaa11c6a6e25542a9b71b44fc6f77/modules/cms-core/src/test/java/com/enonic/cms/itest/content/imports/ImportServiceImplTest_handleAssignmentOnImport.java][import_create_content_status_draft_with_assignment][4] = -> TRY {  -> command.inputStream=new ByteArrayInputStream(importData.getBytes("UTF-8",),)@ } CATCH(Exception) {}
results[https://github.com/svn2github/plantuml/blob/120a72c2faa611702ec3295e16a29f37da96aa93/tags/plantuml-6035/src/net/sourceforge/plantuml/eggs/SentenceProducer.java][<init>][4] = -> TRY {  -> sen2=sentence2.getBytes("UTF-8",)@ -> crypted=EggUtils.xor(sen2,key,)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/apache/directory-studio/blob/362c872ef87f8bda40358f6be6b365e79f3a5372/studio-ldif-parser/src/main/java/org/apache/directory/studio/ldifparser/LdifUtils.java][utf8encode][7] = -> TRY { -> return s.getBytes("UTF-8",)@ } CATCH(UnsupportedEncodingException) { -> return s.getBytes()@ }
results[https://github.com/corny/jwebsocket/blob/49b3dc7a917d4f06cc261248a7c132d143d4a80e/jWebSocket/shared/J2SE/jWebSocketCommon/org/jwebsocket/kit/RawPacket.java][setString][1] = -> TRY {  -> mData=aString.getBytes(aEncoding:String,)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/vyloy/lnvc/blob/38625c0c7f2c0e5c562bcd3cea11043a281b6a54/lcm/src/com/lorent/util/StringUtil.java][isoStrToGBK][2] = -> TRY {  -> return new String(str.getBytes("ISO-8859-1",),"GBK",)@ } CATCH(Exception) {}
results[https://github.com/enonic/cms-ce/blob/73d69ae341ecaa11c6a6e25542a9b71b44fc6f77/modules/cms-core/src/test/java/com/enonic/cms/itest/content/imports/ImportServiceImplTest_handleAssignmentOnImport.java][import_update_content_status_approved_removes_assignment][7] = -> TRY {  -> command.inputStream=new ByteArrayInputStream(importData.getBytes("UTF-8",),)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/congnt/exogtn/blob/d6e86c80e5944b604cb68f1305e4ec8227a8730c/component/scripting/src/main/java/org/exoplatform/groovyscript/GroovyText.java][<init>][1] = -> TRY { -> this.bytes=s.getBytes("UTF-8",)@ } CATCH(UnsupportedEncodingException) { -> throw new UndeclaredThrowableException(e,)@ }
results[https://github.com/tijuca/icedove/blob/4920dca05eb3b6daa968edb29fd558ff8d2a423a/directory/sdks/java-sdk/ldapjdk/netscape/ldap/LDAPAttribute.java][addValue][1] = -> IF { -> TRY { -> b=attrValue.getBytes("UTF8",)@attrValue!=null -> addValue(b,)@ } }
results[https://github.com/ericstratmann/Fiz/blob/840b79abffb44948eb1b8f772fe6d2e0b9ae8156/test/org/fiz/FileUploadTest.java][openStream][7] = -> TRY {  -> return new ByteArrayInputStream(FIS_CONTENT.getBytes("UTF8",),)@ } CATCH(IOException) {}
results[https://github.com/apache/jsecurity/blob/73ad4d1788c6955ef5d5401e2b077b130d3eb32d/src/org/jsecurity/codec/EncodingSupport.java][toBytes][1] = -> TRY { -> return source.getBytes(encoding,)@ } CATCH(UnsupportedEncodingException) { -> throw new IllegalArgumentException(msg,e,)@ }
results[https://github.com/patrickhartling/protobuf/blob/aedacaf88c7405dacdddaeff8bd8c16995b35207/java/src/test/java/com/google/protobuf/TextFormatTest.java][bytes][2] = -> TRY {  -> return ByteString.copyFrom(str.getBytes("ISO-8859-1",),)@ } CATCH(Exception) {}
results[https://github.com/mcxiaoke/android-volley/blob/2212a3741d770b31b5d5cf8ab5a3736ad1bb90c9/src/com/android/volley/toolbox/DiskBasedCache.java][writeString][3] = -> TRY {  -> b=s.getBytes("UTF-8",)@ -> os.write(b,0,b.length,)@ } CATCH(IOException) {}
results[https://github.com/jetty-project/jetty-plugin-support/blob/d40b9ccca591e052bcaa5d80526a7a7f14d2a00c/jetty-websocket/src/test/java/org/eclipse/jetty/websocket/WebSocketGeneratorD11Test.java][testOneBufferMasked][4] = -> TRY {  -> bytes=string.getBytes(StringUtil.__UTF8,)@ -> _generator.addFrame((byte) 0x8,(byte) 0x04,bytes,0,bytes.length,)@ } CATCH(Exception) {}
results[https://github.com/picketlink2/federation/blob/d9b12f95707f52d2a21d56a22f9993cd836ba076/picketlink-web/src/main/java/org/jboss/identity/federation/web/util/PostBindingUtil.java][base64Encode][1] = -> TRY {  -> return Base64.encodeBytes(stringToEncode.getBytes("UTF-8",),Base64.DONT_BREAK_LINES,)@ } CATCH(IOException) {}
results[https://github.com/maddoggin/platform_frameworks_volley/blob/e48f4430bfd3030350aa5ba827b449c37e2fadc9/src/com/android/volley/toolbox/JsonRequest.java][getBody][2] = -> TRY { -> return (mRequestBody==null)?null:mRequestBody.getBytes(PROTOCOL_CHARSET,)@ } CATCH(UnsupportedEncodingException) { -> VolleyLog.wtf("Unsupported Encoding while trying to get the bytes of %s using %s",mRequestBody,PROTOCOL_CHARSET,)@ }
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/src/share/classes/sun/management/counter/perf/PerfDataType.java][<init>][1] = -> TRY { -> b=c.getBytes("UTF-8",)@ } CATCH(UnsupportedEncodingException) { -> throw new InternalError("Unknown encoding",)@ }
results[https://github.com/cmccabe/hadoop/blob/9906f9949e30d3226bddc31c295d0f9fefe52986/common/src/java/org/apache/hadoop/io/WritableUtils.java][writeCompressedString][3] = -> TRY {  -> return writeCompressedByteArray(out,(s!=null)?s.getBytes("UTF-8",):null,)@ } CATCH(IOException) {}
results[https://github.com/apache/webservices-axiom/blob/56a7bc14370d23c35e1fdf46760cf151572d9664/modules/axiom-compat/src/main/java/org/apache/axiom/mime/impl/javamail/MultipartWriterImpl.java][<init>][7] = -> TRY { -> this.boundary=boundary.getBytes("ascii",)@ } CATCH(UnsupportedEncodingException) { -> throw new RuntimeException(ex,)@ }
results[https://github.com/e-mzungu/rjc/blob/fe0b1f7cde86532f7bcc2f4e2b44a80d1fbad8f5/src/main/java/org/idevlab/rjc/util/SafeEncoder.java][encode][1] = -> TRY { -> return str.getBytes(Protocol.CHARSET,)@ } CATCH(UnsupportedEncodingException) { -> throw new RedisException(e,)@ }
results[https://github.com/nebulostore/nebulostore/blob/f7b00c8221f9a6f4841dd676e498cd60278cf687/src/main/java/org/nebulostore/persistence/FileStore.java][putString][1] = -> TRY {  -> putBytes(key,value.getBytes(Charsets.UTF_8,),)@ } CATCH(StoreException) {}
results[https://github.com/sakai-mirror/sdata/blob/667e0dafb79c6056eb444f7c05572ecefdce6f54/commons-fileupload-1.2-sdata/src/test/org/apache/commons/fileupload/sdata/FileUploadTestCase.java][parseUpload][1] = -> TRY {  -> bytes=content.getBytes("US-ASCII",)@ -> return parseUpload(bytes,CONTENT_TYPE,)@ } CATCH(UnsupportedEncodingException,FileUploadException) {}
results[https://github.com/schmeedy/gmf/blob/af130b3fb6c9e6d14720afee4133e9fa73d2e955/org.eclipse.gmf.runtime/examples/org.eclipse.gmf.examples.runtime.emf.clipboard/src/org/eclipse/gmf/examples/runtime/emf/clipboard/transfer/EmfTransferType.java][toBytes][1] = -> TRY { -> return string.getBytes("UTF-8",)@ } CATCH(UnsupportedEncodingException) { -> throw new Error("UTF-8 encoding not supported by String class",e,)@ }
results[https://github.com/thaddeusdiamond/Social-Hierarchical-Learning/blob/09cff426366eef1e24304edfe03aaec5eb13ca1b/ext/protobuf/java/src/main/java/com/google/protobuf/ByteString.java][copyFrom][2] = -> TRY {  -> return new ByteString(text.getBytes(charsetName,),)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/dcoraboeuf/txconsole/blob/bef5c907628631f55222ae5f43d889824436f38e/txconsole-web/src/main/java/net/txconsole/web/locale/LocalisationController.java][writeJS][1] = -> TRY {  -> bytes=content.getBytes("UTF-8",)@ -> outputStream.write(bytes,)@ } CATCH(UnsupportedEncodingException,IOException) {}
results[https://github.com/divineprog/mobilelua/blob/aafc1b11c5e762fca89f3841c5663669a3041775/projects/LuaLive/Editor/src/mosync/lualiveeditor/Server.java][stringBytes][1] = -> TRY {  -> data=str.getBytes("ISO-8859-1",)@ -> data=Arrays.copyOf(data,data.length+1,)@ } CATCH(IOException) {}
results[https://github.com/joshua-decoder/joshua/blob/5eaa5f8cca364912e3bf43b3e6ccc9749a6eafa6/src/joshua/util/MurmurHash.java][hash32][1] = -> TRY {  -> bytes=text.getBytes(ENCODING,)@ -> return hash32(bytes,bytes.length,)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/joshua-decoder/joshua/blob/5eaa5f8cca364912e3bf43b3e6ccc9749a6eafa6/src/joshua/util/MurmurHash.java][hash64][1] = -> TRY {  -> bytes=text.getBytes(ENCODING,)@ -> return hash64(bytes,bytes.length,)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/spullara/oauth/blob/6e41b1f5f6ba14b3f4f4849e82b34032d57b500f/src/test/java/net/oauth/OAuthClientTest.java][testInvokeMessage][1] = -> TRY {  -> data=new String( new char[],)@ -> utf8=data.getBytes("UTF-8",)@ } CATCH(Exception) {}
results[https://github.com/mikelikespie/protobuf/blob/7dd4ac7b368f789185c956cd9fec4ce79c61f57f/java/src/main/java/com/google/protobuf/CodedOutputStream.java][writeStringNoTag][3] = -> TRY {  -> bytes=value.getBytes("UTF-8",)@ -> writeRawBytes(bytes,)@ } CATCH(IOException) {}
results[https://github.com/doug-w/protobuf/blob/a2e8baee9fc660832ef7bef61f30ddd9fcfa8b6e/java/src/main/java/com/google/protobuf/ByteString.java][copyFrom][2] = -> TRY {  -> return new LiteralByteString(text.getBytes(charsetName,),)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/kyorohiro/KyoroHelloAndroid/blob/f60a94b413603ba879ce51ee6e8882b31f239a6e/KyoroCommon/src/info/kyorohiro/helloworld/display/widget/editview/differ/DifferSaveAction.java][encodeDeleteLine][2] = -> TRY { -> return "TAG"+encode.getBytes("utf8",).length+":"+encode@ } CATCH(UnsupportedEncodingException) { -> e.printStackTrace()@ }
results[https://github.com/axDev-JDK/jdk/blob/27804e25becca83ba5bf4ae3f89cb27c1cd45d61/src/share/classes/sun/net/ftp/impl/FtpClient.java][isASCIISuperset][1] = -> TRY {  -> chkS="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"+"abcdefghijklmnopqrstuvwxyz-_.!~*'();/?:@&=+$,"@ -> b=chkS.getBytes(encoding,)@ -> return java.util.Arrays.equals(b,chkB,)@ } CATCH(Exception) {}
results[https://github.com/picketlink/picketlink/blob/32a47000a26e02da2931ea519c24e0b56a13c36e/modules/federation/src/main/java/org/picketlink/identity/federation/web/util/RedirectBindingUtil.java][deflateBase64URLEncode][1] = -> TRY {  -> return deflateBase64URLEncode(stringToEncode.getBytes("UTF-8",),)@ } CATCH(IOException) {}
results[https://github.com/iLuxo/jgit-clone/blob/9a3ce780fc3132189fa0af30be530b6afc94af8f/org.eclipse.jgit.test/tst/org/eclipse/jgit/util/io/EolCanonicalizingInputStreamTest.java][asBytes][1] = -> TRY { -> return in.getBytes("UTF-8",)@ } CATCH(UnsupportedEncodingException) { -> throw new AssertionError()@ }
results[https://github.com/steveloughran/hadoop-trunk/blob/6e424491898a0887e2070467a7bb3b44887f5aaf/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/security/SecureShuffleUtils.java][hashFromString][1] = -> TRY {  -> return generateHash(enc_str.getBytes(Charsets.UTF_8,),key,)@ } CATCH(IOException) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/com/sun/crypto/provider/Cipher/RC2ArcFour/CipherKAT.java][s][2] = -> TRY { -> return s.getBytes("UTF8",)@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/patzi/foss-andoku/blob/bbba67b94ac00366ca401f5094191a3f5ff47e2c/Andoku/src/com/googlecode/andoku/BackupUtil.java][utf8][2] = -> TRY { -> return keyString.getBytes("utf-8",)@ } CATCH(UnsupportedEncodingException) { -> throw new IllegalStateException(e,)@ }
results[https://github.com/gabe97330/mp4parser-fork/blob/7cf5205f0647c9ed24c83cc41f4be2b7dadbc2a6/isoparser/src/main/java/com/coremedia/iso/boxes/odf/OmaDrmContentIdBox.java][getContentSize][1] = -> TRY { -> return 2+contentId.getBytes("UTF-8",).length@ } CATCH(UnsupportedEncodingException) { -> throw new Error(e,)@ }
results[https://github.com/zootella/pipe/blob/434e9362bdcd909763d0cf2729c36692e9a8586c/source/org/zootella/data/Convert.java][toByteArray][1] = -> TRY { -> a=s.getBytes(encoding,)@ } CATCH(UnsupportedEncodingException) { -> throw new PlatformException(e,)@ }
results[https://github.com/rhusar/HornetQ-oldmigration/blob/d8da6170e4d71449e91ae887b4bbb8afc17d35d3/tests/src/org/jboss/messaging/core/journal/impl/test/unit/SequentialFileFactoryTestBase.java][testOpenClose][1] = -> TRY {  -> bytes1=s1.getBytes("UTF-8",)@ -> bb1=ByteBuffer.wrap(bytes1,)@ } CATCH(Exception) {}
results[https://github.com/jmcc0nn3ll/jetty-project/blob/c0a1227af328c53b5e48d659d0e811283f62350e/modules/server/jetty-server/src/main/java/org/mortbay/io/Portable.java][getBytes][1] = -> TRY { -> return s.getBytes(StringUtil.__ISO_8859_1,)@ } CATCH(Exception) { -> return s.getBytes()@ }
results[https://github.com/thomasbecker/jetty-spdy/blob/fa4668ce5c3e5b68ac08d99cbb60dac97d7f869c/jetty-websocket/src/main/java/org/eclipse/jetty/websocket/WebSocketConnectionD06.java][sendMessage][2] = -> TRY {  -> data=content.getBytes(StringUtil.__UTF8,)@ -> _generator.addFrame((byte) 0x8,WebSocketConnectionD06.OP_TEXT,data,0,data.length,)@ } CATCH(IOException) {}
results[https://github.com/redstar3894/android-gcc/blob/9282a3bf08b3c88046756e5b0814284634a23125/libjava/classpath/java/util/zip/ZipOutputStream.java][setComment][1] = -> TRY { -> commentBytes=comment.getBytes("UTF-8",)@ } CATCH(UnsupportedEncodingException) { -> throw new AssertionError(uee,)@ }
results[https://github.com/inspirer/mibew/blob/e198b825cee3bac337c2041aaf9dc7d978cc6fe3/src/mibewjava/org.mibew.api/src/org/mibew/api/Utils.java][md5][1] = -> TRY {  -> return md5(string.getBytes("utf-8",),)@ } CATCH(NoSuchAlgorithmException,UnsupportedEncodingException) {}
results[https://github.com/lichongxin/hbase-snapshot/blob/bd242458c568fe2b6604805b33411a20d85681dd/src/main/java/org/apache/hadoop/hbase/util/Bytes.java][toBytes][2] = -> TRY { -> return s.getBytes(HConstants.UTF8_ENCODING,)@ } CATCH(UnsupportedEncodingException) { -> LOG.error("UTF-8 not supported?",e,)@ }
results[https://github.com/beppec56/MediaInfoLib-git_svn/blob/8637503bf2255bbcc42ac0542c44e78e19b77136/Project/NetBeans/Example/src/MediaInfoDLL.java][createPointer][1] = -> TRY {  -> array=value.getBytes("UTF-8",)@ -> valuePointer.setMemory(array,)@ } CATCH(Exception) {}
results[https://github.com/toebbel/buschtrommel/blob/a24d5654ce56475bab123d0397c83b8ee963575d/Buschtrommel/test/de/tr0llhoehle/buschtrommel/test/mockups/FileContentMock.java][getStringAsStream][1] = -> TRY {  -> return new java.io.ByteArrayInputStream(str.getBytes(Message.ENCODING,),)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/jeduardo/comunicadeiro/blob/689b40c004c3c447d0f8fdf04df04f4272b65af8/comunicadeiro-core/src/main/java/org/gnu/jfiglet/FIGDriver.java][getBannerFIGure][2] = -> TRY {  -> theStringToFigletizeCharacterCodes=theStringToFigletize.getBytes(LATIN_1_CHARSET,)@ -> addLineToFIGure(returnedFIGure,theStringToFigletizeCharacterCodes,theFIGFontToUse,)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/alibaba/otter/blob/4a9ffbe55fa05fe31d0b32fc716320c9aa0ddba5/shared/common/src/main/java/com/alibaba/otter/shared/common/utils/ByteUtils.java][stringToBytes][1] = -> TRY { -> return string.getBytes("UTF-8",)@ } CATCH(UnsupportedEncodingException) { -> throw new NestableRuntimeException(e,)@ }
results[https://github.com/aldaris/opensso/blob/5aa33c913bc7d84f51bb9e29261e7dc373daba2f/products/shared/source/com/sun/identity/shared/ldap/LDAPAttribute.java][removeValue][1] = -> IF { -> TRY { -> b=attrValue.getBytes("UTF8",)@attrValue!=null -> removeValue(b,)@ } }
results[https://github.com/eliask/SDP2011-Robotniks/blob/ccd6bfea5c2e8dd2dce61ad3b1669fd47fc1e9cf/communication/lejos_nxj/projects/pccomms/lejos/nxt/remote/AsciizCodec.java][encode][1] = -> TRY {  -> ascii=str.getBytes(CHARSET,)@ -> System.arraycopy(ascii,0,asciiz,0,ascii.length,)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/Talend/tesb-rt-se/blob/6ca05966415d2bb1f9390829f4f8ea2494116cd2/locator/src/test/java/org/talend/esb/servicelocator/client/internal/zk/RootNodeImplTest.java][getData][1] = -> TRY {  -> combined=version+","+Boolean.toString(authenticated,)@ -> return combined.getBytes("utf-8",)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/certator/tuxguitar_mod/blob/c0bc2e9734e817873cbaa5787e859b5a5a9444ec/TuxGuitar-gtp/src/org/herac/tuxguitar/io/gtp/GTPOutputStream.java][writeStringByteSizeOfInteger][1] = -> TRY {  -> bytes=string.getBytes(charset,)@ -> this.writeStringByte(string,bytes.length,charset,)@ } CATCH(IOException) {}
results[https://github.com/DBC-as/opensearch/blob/895b3be5ae5c32804f148ba9cf0de7bff4421cb1/src/dk/dbc/opensearch/plugins/tests/HarvestFaktalinkTest.java][testCargoContainer][1] = -> TRY {  -> data=new ByteArrayInputStream(teststring.getBytes("UTF-8",),)@ } CATCH(IllegalArgumentException,NullPointerException,IOException) {}
results[https://github.com/Metaswitch/jsip/blob/eb529c5249ffe7b1e758531daabd31376251ce76/src/test/unit/gov/nist/javax/sip/multipartmime/MultipartMimeParserTest.java][testMultiPartMimeMarshallingAndUnMarshallingWithExtraHeaders][1] = -> TRY {  -> content=contentString2.getBytes("UTF-8",)@ -> request.setContent(content,contentType,)@ } CATCH(Exception) {}
results[https://github.com/jdeverdun/GdcServerManager/blob/f8dd0ed96d052d0b54a6e22abc97655b85c4a184/GdcServerManager/src/es/vocali/util/AESCrypt.java][setPassword][1] = -> TRY {  -> this.password=password.getBytes("UTF-16LE",)@ -> debug("Using password: ",this.password,)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/Overu/breread/blob/107a4fce768bd0e2e097094b760903974ac558d2/com.goodow.web/trunk/org.cloudlet.web.mvp/src/main/java/org/cloudlet/web/mvp/server/ServerUrlCodexImpl.java][encodeQueryString][1] = -> TRY { -> utf8bytes=decodedUrlComponent.getBytes("UTF-8",)@ } CATCH(UnsupportedEncodingException) { -> logger.log(Level.SEVERE,"\""+decodedUrlComponent+"\"不能编码为UTF-8格式",e,)@ }
results[https://github.com/develar/chromedevtools/blob/220a9c2e2e09dbc0cf9548ec07a303e9ba192d5d/wip/wip-backend/src/org/chromium/sdk/internal/websocket/Hybi17WsConnection.java][sendTextualMessage][1] = -> TRY {  -> s=message.toString()@ -> bytes=s.getBytes(UTF_8_CHARSET,)@ } CATCH(IOException) {}
results[https://github.com/eclipse/eclipse.platform.runtime/blob/72f02382a90eea1c1cc6b6671890955357bd8d51/bundles/org.eclipse.core.contenttype/src/org/eclipse/core/runtime/content/XMLContentDescriber.java][readXMLDecl][1] = -> TRY {  -> xmlDeclEndBytes=XML_DECL_END.getBytes(encoding,)@ -> return new String(xmlDecl,0,read,encoding,)@ } CATCH(IOException) {}
results[https://github.com/jjnguy/PublicFun/blob/da42b8dc2b1f2ae5c4c0266e4eb4c4f4363804dd/ubertorrent/src/edu/iastate/cs309/clientserverprotocol/transferThreads/SendTorrentThread.java][sendName][1] = -> TRY {  -> rawString=name.getBytes("UTF8",)@ -> System.arraycopy(rawString,0,msg,4,rawString.length,)@ } CATCH(IOException) {}
results[https://github.com/trendrr/java-oss-lib/blob/ae6e9fdea313e4afa70191a216cd474ba4a839cc/src/com/trendrr/oss/FileHelper.java][saveString][1] = -> TRY {  -> saveBytes(filename,text.getBytes("utf-8",),)@ } CATCH(Exception) {}
results[https://github.com/mheath/adbcj/blob/e04158020b891f4524aaa4390ad1b1ee2ad535c9/mysql/mina/src/main/java/org/adbcj/mysql/CommandRequest.java][getLength][1] = -> TRY {  -> return 1+(payload==null)?0:payload.getBytes(charset.getCharset(),).length@ } CATCH(CharacterCodingException) {}
results[https://github.com/ewcmsfree/ewcms/blob/5287cf02a84be9cbfae8eb4337e85a8472c6174a/src/main/java/com/ewcms/content/particular/model/ParticularContent.java][setDetail][1] = -> TRY { -> detailByte=detail.getBytes("UTF-8",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sangamon/sneer/blob/eb24ed8b93581421856ac0a310cbf44be181a029/bricks/connection/src/sneer/bricks/connection/impl/IndividualConnectionReceiver.java][toByteArray][1] = -> TRY { -> return string.getBytes("UTF8",)@ } CATCH(UnsupportedEncodingException) { -> throw new IllegalStateException()@ }
results[https://github.com/pruiz/signserver/blob/373b746d0266c640fbd934ed4d83f040c0585e50/signserver/modules/SignServer-Lib-iText/src/com/lowagie/text/pdf/BarcodeDatamatrix.java][generate][1] = -> TRY {  -> t=text.getBytes("iso-8859-1",)@ -> return generate(t,0,t.length,)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/gdemiollis/activemtl/blob/e69cf53e0b6152435256c56d815eab0c7c9e60b1/FacebookSDK/src/com/facebook/AppEventsLogger.java][getStringAsByteArray][1] = -> TRY { -> jsonUtf8=jsonString.getBytes("UTF-8",)@ } CATCH(UnsupportedEncodingException) { -> Utility.logd("Encoding exception: ",e,)@ }
results[https://github.com/amusecode/amuse/blob/084c5a718d04120779976780a570c4aa931ef0b9/src/amuse/community/distributed/src/src/nl/esciencecenter/amuse/distributed/dummycode/FakeAmuse.java][<init>][1] = -> TRY {  -> magicBytes=MAGIC_STRING.getBytes(StandardCharsets.UTF_8,)@ -> magicBuffer=ByteBuffer.wrap(magicBytes,)@ } CATCH(IOException) {}
results[https://github.com/iwein/spring-integration/blob/3d27d780849f87ea9f57b1fa14276a744b1e961e/org.springframework.integration.xml/src/test/java/org/springframework/integration/xml/transformer/XsltPayloadTransformerTest.java][getXslResource][1] = -> TRY {  -> return new ByteArrayResource(xsl.getBytes("UTF-8",),)@ } CATCH(Exception) {}
results[https://github.com/apache/commons-codec/blob/a952f092987217322ceb6ab1d559d0612d02a778/src/java/org/apache/commons/codec/binary/StringBytesUtils.java][getSupportedBytes][1] = -> TRY { -> return string.getBytes(charsetName,)@ } CATCH(UnsupportedEncodingException) { -> throw StringBytesUtils.newIllegalStateException(charsetName,e,)@ }
results[https://github.com/dukeboard/kevoree-extra/blob/a8aaf1e11003f50b106a22fa962a91892941e694/org.kevoree.extra.voldemort/src/main/java/voldemort/serialization/json/JsonTypeSerializer.java][writeString][1] = -> TRY {  -> writeBytes(stream,(s==null)?null:s.getBytes("UTF-8",),)@ } CATCH(IOException) {}
results[https://github.com/graphstream/gs-core/blob/a9c2aaca05e4b0325dbd5fb267f5f7fe2b78b9f9/src/org/graphstream/stream/netstream/NetStreamSender.java][<init>][1] = -> TRY {  -> this.streamIdArray=stream.getBytes(Charset.forName("UTF-8",),)@ } CATCH(IOException) {}
results[https://github.com/snowfix/android_dalvik/blob/f6c387128427e121477c1b32ad35cdcaa5101ba3/libcore/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/DeflaterTest.java][test_getBytesWritten][1] = -> TRY {  -> input=inputString.getBytes("UTF-8",)@ -> def.setInput(input,)@ } CATCH(DataFormatException,UnsupportedEncodingException) {}
results[https://github.com/niklasb/pse-broadcast-encryption/blob/57a8ecbe18886cdfcec41020db58e82150655f50/modules/common/src/main/java/cryptocast/util/ByteUtils.java][encodeUtf8][1] = -> TRY { -> return str.getBytes("UTF-8",)@ } CATCH(UnsupportedEncodingException) { -> cannotHappen(e,)@ }
results[https://github.com/europeana/Europeana-Cloud/blob/e9c0d6c97febe2e4f0a14c56a6a5239357b298ee/service/mcs/driver/src/test/java/eu/europeana/cloud/mcs/driver/FileServiceClientTest.java][shouldThrowCannotModifyPersistentRepresentationExceptionForUploadFile][1] = -> TRY {  -> contentBytes=contentString.getBytes("UTF-8",)@ -> contentStream=new ByteArrayInputStream(contentBytes,)@ } CATCH(MCSException,IOException) {}
results[https://github.com/maxcom/lor-jamwiki/blob/cbb4fc0252fc1428af14648a7c10e6f0fb7a83d5/src/java/org/jamwiki/utils/Encryption.java][createKey][1] = -> TRY {  -> bytes=ENCRYPTION_KEY.getBytes("UTF8",)@ -> spec=new DESKeySpec(bytes,)@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/acbdb0ade569a980d025ec2b09f528c0bc1a29cd/src/share/classes/sun/security/krb5/internal/util/KerberosString.java][toDerValue][1] = -> TRY {  -> return new DerValue(DerValue.tag_GeneralString,s.getBytes((MSNAME)?"UTF8":"ASCII",),)@ } CATCH(IOException) {}
results[https://github.com/richfaces/richfaces/blob/76f9f853ca7d79ca3044d326012c61b23c7e2b28/impl/src/main/java/org/ajax4jsf/util/base64/Codec.java][encode][1] = -> TRY {  -> src=str.getBytes("UTF8",)@ -> utf8=encode(src,)@ } CATCH(Exception) {}
results[https://github.com/ConatyConsulting/jaudiotagger/blob/3f10740378805d36a2006383b03f96ace5ab6674/src/org/jaudiotagger/tag/mp4/field/Mp4TagTextField.java][getDataBytes][1] = -> TRY {  -> return content.getBytes(getEncoding(),)@ } CATCH(UnsupportedEncodingException) {}
results[https://github.com/frostwire/frostwire-desktop/blob/90eacf1ef657a5664fd9b5e2e84d819091f9ea3c/lib/jars-src/httpcomponents-core-4.0.1/httpcore/src/test/java/org/apache/http/entity/TestStringEntity.java][testBasics][1] = -> TRY {  -> httpentity=new StringEntity(s,HTTP.ISO_8859_1,)@ -> bytes=s.getBytes(HTTP.ISO_8859_1,)@ } CATCH(Exception) {}
results[https://github.com/Cweili/wray/blob/eaa311bdc90eb027ae428fa473fb219218a49f4b/src/main/java/org/cweili/wray/util/Function.java][urlDecode][1] = -> IF { -> TRY { -> input=new String(input.getBytes("ISO-8859-1",),Constant.CHARSET,)@ } }
