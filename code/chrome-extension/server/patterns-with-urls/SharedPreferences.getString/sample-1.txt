results[https://github.com/Alfresco/alfresco-android-app/blob/913c050d630729e3aabf0caf4dabf7fd7288670d/alfresco-mobile-android/src/org/alfresco/mobile/android/application/security/PassCodeDialogFragment.java][checkValue][6] = -> passCodeValue=sharedPref.getString(KEY_PASSCODE_VALUE,"0000",)@ -> IF { -> return true@passCodeValue.equals(getUserPassCode(false,),) }
results[https://github.com/hopesfish/lxsupply2013/blob/ca5c803d03e369f517bada391cc1e63c513138ef/LibraryProject/src/com/google/zxing/client/android/result/ResultHandler.java][parseCustomSearchURL][43] = -> prefs=PreferenceManager.getDefaultSharedPreferences(activity,)@ -> customProductSearch=prefs.getString(PreferencesActivity.KEY_CUSTOM_PRODUCT_SEARCH,null,)@ -> IF { -> return null@customProductSearch!=null&&customProductSearch.trim().length()==0 }
results[https://github.com/thuit/JAVA_DEMO/blob/116a317b1ba8518f13483702737526d62cbd3f1f/GRID_DEMO/src/cn/edu/tsinghua/training/android/grid/GameActivity.java][loadProgress][1] = -> latest=sharedPreferences.getString("latest",null,)@ -> IF { -> setMatrix(latest,)@latest!=null }
results[https://github.com/FunkyAndroid/platform_development-os_x/blob/76f63551d36b1de63c63f357e5f0646ed8c306bb/apps/CustomLocale/src/com/android/customlocale2/CustomLocaleActivity.java][setupLocaleList][18] = -> customLocales=mPrefs.getString(CUSTOM_LOCALES,"",)@ -> IF { -> Log.d(TAG,"customLocales: "+customLocales,)@ }
results[https://github.com/elbenj/corpmail/blob/f55fb37fda565b613018ce102d6280eeca356000/src/com/elbenj/email/Preferences.java][getAccounts][22] = -> accountUuids=mSharedPreferences.getString(ACCOUNT_UUIDS,null,)@ -> IF { -> return  new Account[]@accountUuids==null||accountUuids.length()==0 } -> uuids=accountUuids.split(",",)@!(accountUuids==null||accountUuids.length()==0)
results[https://github.com/stanley-msa011/AlcoholProjectVer2/blob/79e8c34e77e227790f7154f43e816885b6cc8b07/src/ubicomp/drunk_detection/activities/FragmentTabs.java][onResume][11] = -> sp=PreferenceManager.getDefaultSharedPreferences(this,)@ -> uid=sp.getString("uid","",)@ -> IF { -> return @uid.length()==0 }
results[https://github.com/Jastamo/UF/blob/3e98f7bc892530a7d1749d0c98b4ae5df9f70997/Todo2/Code3/src/com/todo/code3/MainActivity.java][getLocale][6] = -> lang=prefs.getString(App.LANGUAGE,"en",)@ -> IF { -> return new Locale(lang,)@!(lang.equals("",))&&!(c.locale.getLanguage().equals(lang,)) }
results[https://github.com/nityan/android-utils/blob/302bc131fef2d3763f9daf5497496399ce9bcecf/AndroidUtils/src/main/java/com/nityankhanna/androidutils/system/SharedPreferences.java][getByteArrayForKey][6] = -> value=sharedPreferences.getString(key,null,)@ -> IF { -> return null@value==null } -> return value.getBytes()@!(value==null)
results[https://github.com/servalproject/batphone/blob/9c3278b23ac9203dd3cb0585f3b748ca9ab9414b/src/org/servalproject/system/WifiAdhocNetwork.java][getChannel][1] = -> channel=prefs.getString("channelpref",null,)@ -> IF { -> return 11@channel==null } -> return Integer.parseInt(channel,)@!(channel==null)
results[https://github.com/mikegr/android-shuffle/blob/d73d0cac14899e12cfc76a3060c200fd16fe9cf3/src/org/dodgybits/android/shuffle/model/Preferences.java][getTopLevelCounts][15] = -> countString=sPrefs.getString(Preferences.TOP_LEVEL_COUNTS_KEY,null,)@ -> IF { -> counts=countString.split(",",)@countString!=null }
results[https://github.com/um104/C4PPMobileMetrics/blob/aec65ca777ca537a7aba5f16a7901ee7bb42ba04/MobileMetricsDashboard/src/edu/channel4/mm/db/android/activity/EditGraphRequestActivity.java][saveCustomGraphRequest][1] = -> appId=prefs.getString(Keys.ID,null,)@ -> IF { -> tempoDatabase.addCustomGraphRequest(customGraphRequest,appId,)@ }
results[https://github.com/BaiduQA/Cafe/blob/230d979afc1d1fe70c70c29cee232099ad96a103/testservice/src/com/baidu/cafe/remote/SystemLib.java][getServerIP][19] = -> sharedPreferences=mContext.getSharedPreferences(PREFERENCE_NAME,Activity.MODE_PRIVATE,)@ -> str=sharedPreferences.getString("serverip","",)@ -> IF { -> return null@str.equals("",) }
results[https://github.com/johnnyman727/NextUp-Android/blob/118c740e132a38768bccbf15e27971e2cbec99d7/src/com/dotcom/nextup/oauth/AndroidOAuth.java][getSavedAccessToken][1] = -> savedAccessToken=preferences.getString(getAccessTokenPreferenceName(),null,)@ -> IF { -> return null@savedAccessToken==null }
results[https://github.com/sdugit/Gallery2_7025/blob/636df3b09d5562adc2193a19f0720dd1ab3eedd6/src/com/android/gallery3d/app/Gallery.java][checkUpdate][2] = -> packageName=mableUpdate.getString("packageName",null,)@ -> IF { -> Log.v(TAG,packageName+" is exist!",)@isPackageExist(packageName,) }
results[https://github.com/smartcampuslab/android.journeyplanner.lib/blob/cef5c592df1b84fc827e9ed4ae9d888c9376abf5/src/eu/trentorise/smartcampus/jp/helper/PrefsHelper.java][userPrefsViews2Holder][1] = -> addressString=userPrefs.getString(Config.USER_PREFS_FAVORITES,null,)@ -> IF { -> list=eu.trentorise.smartcampus.android.common.Utils.convertJSONToObjects(addressString,Position.class,)@addressString!=null }
results[https://github.com/niekvanderkooy/ucheck-android/blob/938ede7109f07cf509461605d0e4ca341d711fe7/src/info/vanderkooy/ucheck/Preferences.java][classesNeedUpdate][3] = -> lastUpdate=stringToDate(pref.getString("lastClassesUpdate","200001010900",),)@ -> IF { -> return true@minutesDiff(lastUpdate,dateNow,)>60 }
results[https://github.com/Prosjekt2-09arduino/ArduinoStore/blob/45eed67cf476f1ad8f6d87744811c6f47ea4e846/src/no/group09/utils/Devices.java][setActivityTitle][5] = -> appName=sharedPref.getString("connected_device_name","null",)@ -> IF { -> setTitle("Devices - "+appName,)@isConnected()&&!(appName.equals("null",)) }
results[https://github.com/momoplan/petandroid1/blob/71c39cb898627ec73d12a1e6de2abbedfe110f01/src/petcircle/yl/ui/RegisterActivity.java][showInit][8] = -> username=sp.getString(AppFinal.USRENAME_SHARED_KEY,"",)@ -> IF { -> usernameEditText.setText(username,)@!(username.equals("",))&&!(username==null) }
results[https://github.com/Alfresco/alfresco-android-app/blob/913c050d630729e3aabf0caf4dabf7fd7288670d/alfresco-mobile-android/src/org/alfresco/mobile/android/application/security/PassCodeDialogFragment.java][delete][7] = -> passCodeValue=sharedPref.getString(KEY_PASSCODE_VALUE,"0000",)@ -> IF { -> editor=sharedPref.edit()@ }
results[https://github.com/hach-que/ConnectBot/blob/d6ea6edd8d8a9e89302ac22a6b8dbb828590d578/src/org/connectbot/ConsoleActivity.java][onTouch][1] = -> s=prefs.getString("keyboardLayout","org.connectbot.keyboard.StandardKeyboard",)@ -> IF { -> return detect.onTouchEvent(event,)@!(TerminalKeyListener.getKeyboard(s,).permitsTouch()) }
results[https://github.com/jfinkhaeuser/PackRat/blob/98e0e6dd6d1d6602d40629366d3656eb86cd5a4a/src/de/unwesen/packrat/ImageCache.java][getMaxCacheSize][1] = -> parsed=UnitValuePickerPreference.parseValue(mPrefs.getString(PreferencesActivity.IMAGE_CACHE_SIZE,null,),)@ -> IF { -> return 2048*1024@null==parsed }
results[https://github.com/zoldar/groundhog-reader/blob/0ad7c5c69cc556fe93ed29a517b9a1e5f25c6b6e/GroundhogReader/src/com/almarsoft/GroundhogReader/lib/GroundhogApplication.java][isEmpty][3] = -> configOption=prefs.getString(prefname,"",)@ -> toption=configOption.trim()@ -> IF { -> return true@toption==null||toption.length()==0 }
results[https://github.com/odlbo/Bandog-Messenger/blob/4034e28ed3bf799347bc3462c41a66bd15b2e934/src/com/strain/websms/ContactsListener.java][onCreate][1] = -> settings=Prefs.get(this,)@ -> deviceRegistrationID=settings.getString("deviceRegistrationID",null,)@ -> IF { -> return @deviceRegistrationID==null }
results[https://github.com/ouchadam/fang/blob/c8f01ac1e3f33fcfb0148b22ec0c54b482243998/app/src/main/java/com/ouchadam/fang/audio/PlayingItemStateManager.java][getSource][3] = -> source=preferences.getString("source","",)@ -> IF { -> return Uri.parse(source,)@!(source.isEmpty()) }
results[https://github.com/notizklotz/derbund-downloader/blob/4d321661a5fcba63678097b3bb435ab914236af5/src/com/github/notizklotz/derbunddownloader/settings/SettingsFragment.java][updateAutoDownloadTime][1] = -> auto_download_time=sharedPreferences.getString(Settings.KEY_AUTO_DOWNLOAD_TIME,null,)@ -> IF { -> auto_download_time_preference.setSummary(auto_download_time,)@auto_download_time_preference!=null }
results[https://github.com/sng/gb/blob/20f568bab8cdeb04ca0c07df629a50ce3f583f49/trunk/GeoBeagle/src/com/google/code/geobeagle/shakewaker/ShakeWaker.java][register][1] = -> sShakeWakeDuration=sharedPreferences.getString(SHAKE_WAKE,"0",)@ -> nShakeWakeDuration=Integer.parseInt(sShakeWakeDuration,)@ -> IF { -> return @nShakeWakeDuration==0 }
results[https://github.com/RudolfWeeber/eyes-free/blob/37273cdc2cb083a3870508579b71769db244c902/trunk/braille/brailleback/src/com/googlecode/eyesfree/brailleback/TranslatorManager.java][getTranslatorFromPreferences][1] = -> key=(eightDot)?mPrefEightDotBrailleTableKey:mPrefSixDotBrailleTableKey@ -> value=mSharedPreferences.getString(key,mTableValueDefault,)@ -> IF { -> return null@mTableValueDefault.equals(value,) } -> return mTranslatorClient.getTranslator(value,)@!(mTableValueDefault.equals(value,))
results[https://github.com/monossido/Announcify/blob/2b2ef590797389910b62ada4eeebd8f98049e48b/API-Announcify/src/com/announcify/api/background/util/PluginSettings.java][getDefaultMode][1] = -> s=preferences.getString(KEY_READING_ANNOUNCEMENT,DEFAULT_SETTING,)@ -> IF { -> return defaultSettings.getDefaultDefaultMode()@s.equals(DEFAULT_SETTING,) }
results[https://github.com/alphadog/Grapevine/blob/d740f084d3fdc7c829a99b307a1299a6c6f672dc/Grapevine/src/com/alphadog/tribe/services/ReviewsSyncService.java][getUrlForRangeQuery][2] = -> tribeName=sharedPreferences.getString("tribe_name",null,)@ -> IF { -> queryParams.put("tribe",tribeName,)@tribeName!=null }
results[https://github.com/SaQQ/HomeRepo/blob/cf9f61e914c5424c04fe5045db92135a6df27794/SweetsUpgrade/src/com/saqq/sweetsupgrade/objects/SaveState.java][loadBoard][2] = -> boardString=sharedPref.getString("board","0",)@ -> IF { -> return table@boardString=="0" } -> st=new StringTokenizer(boardString,"*",)@!(boardString=="0")
results[https://github.com/mvestola/helsinki-testbed2-android/blob/8e83ef09059162dde57600340d6daca4a81f1b05/src/main/java/fi/testbed2/service/impl/DefaultPreferenceService.java][isShowWhatsNewDialog][2] = -> dialogShownForVersion=sharedPreferences.getString(PreferenceService.PREF_WHATS_NEW_DIALOG_SHOWN_FOR_VERSION,"",)@ -> Logging.debug("What's new dialog is shown for version: "+dialogShownForVersion,)@ -> IF { -> return true@!(dialogShownForVersion.equals(MainApplication.getVersionName(),)) }
results[https://github.com/teotigraphix/CausticSDK/blob/ba260167919ecc825e5a375fae5ea9c9ff9eec68/CausticUI/src/com/teotigraphix/caustic/internal/controller/application/ApplicationPreferences.java][setupLastProjectFile][1] = -> absolutePath=preferences.getString(PREF_LAST_PROJECT_PATH,null,)@ -> IF { -> file=new File(absolutePath,)@absolutePath!=null }
results[https://github.com/arcao/Geocaching4Locus/blob/c1b8a4852368d748075c47abde5799ffd932f3f8/src/com/arcao/geocaching4locus/authentication/helper/PreferenceAuthenticatorHelper.java][getAccount][1] = -> username=pref.getString(PrefConstants.USERNAME,null,)@ -> IF { -> return null@username==null } -> return new Account(username,ACCOUNT_TYPE,)@!(username==null)
results[https://github.com/oyegorov/memorazor/blob/864c1d370921579b423d44e23342e44ecd19bb1f/src/com/ell/MemoRazor/AppSettings.java][getIntSetting][1] = -> stringValue=sharedPreferences.getString(settingName,null,)@ -> IF { -> return defaultValue@stringValue==null } -> return Integer.valueOf(stringValue,)@!(stringValue==null)
results[https://github.com/eMerzh/OpenFixMap/blob/531d8b86992a74fa74bba7929f6cc32fc2ddb603/src/net/bmaron/openfixmap/PlatformManager.java][getActivePlatforms][1] = -> checkers=MultiSelectListPreference.parseStoredValue(sharedPrefs.getString("checkers","KeepRight",),)@ -> IF { -> return activeList@checkers==null }
results[https://github.com/yukkigogo/cyberhoodwatch/blob/ab3ba19cad3737d4c4f8dcc42d5ab857327ec958/src/com/sociam/android/report/ReportAnonymous.java][setUsernameReport][1] = -> username=sp.getString("username","NULL",)@ -> IF { -> currentCrime.setUserID(username,)@!(username.equals("NULL",)) }
results[https://github.com/beerbong/com_beerbong_zipinst/blob/128f318b3c2321c5a08767ba3f0e94218625b806/src/com/beerbong/zipinst/preferences/Preferences.java][getArrayProperty][4] = -> value=mSettings.getString(property,"",)@ -> array=value.split("\n",)@ -> IF { -> return  new String[]@array.length==1&&"".equals(array[0],) }
results[https://github.com/binarybucks/homA/blob/8811d808396509aceb41b112824f06fb5f89ccbb/android/src/st/alr/homA/SettingsActivity.java][onSharedPreferenceChanged][1] = -> stringValue=sharedPreference.getString(key,"",)@ -> IF { -> setServerPreferenceSummary(stringValue,)@ }
results[https://github.com/Kaljurand/Arvutaja/blob/08ee1c3c77f54841b5e666d3148aece8a6389976/app/src/ee/ioc/phon/android/arvutaja/SettingsActivity.java][populateServices][1] = -> selectedService=mPrefs.getString(mKeyService,null,)@ -> IF { -> list=(ListPreference) mSettingsFragment.findPreference(mKeyService,)@ }
results[https://github.com/biafra23/AmDroid/blob/c730f64633ae4687265342fe92d6b5a81e582097/AmDroid/src/main/java/com/jaeckel/amenoid/fragments/AmenListFragment.java][readMeFromPrefs][3] = -> prefsString=prefs.getString(Constants.PREFS_ME,null,)@ -> IF { -> u=gson.fromJson(prefsString,User.class,)@prefsString!=null }
results[https://github.com/servalproject/batphone/blob/e5fe1ab3349d10a656de25eed4983016f5b04bf2/src/org/servalproject/ui/SettingsMeshMSScreenActivity.java][onClick][1] = -> current=mSharedPreferences.getString("meshms_notification_sound",null,)@ -> IF { -> intent.putExtra(RingtoneManager.EXTRA_RINGTONE_EXISTING_URI,current,)@current!=null }
results[https://github.com/novoid/tstest/blob/46ced37091bf139f849f7b5c3de9e5d8643a33a9/android/src/org/me/tagstore/MainPagerActivity.java][createSyncIntent][1] = -> preferences=getSharedPreferences(ConfigurationSettings.TAGSTORE_PREFERENCES_NAME,Context.MODE_PRIVATE,)@ -> sync_type=preferences.getString(ConfigurationSettings.CURRENT_SYNCHRONIZATION_TYPE,ConfigurationSettings.DEFAULT_SYNCHRONIZATION_TYPE,)@ -> IF { -> return new Intent(MainPagerActivity.this,SynchronizeTagStoreActivity.class,)@sync_type.equals(ConfigurationSettings.SYNCHRONIZATION_USB_TYPE,) }
results[https://github.com/napodan/android_development/blob/52d4c30ca52320ec92d1d1ddc8db3f07f69c4f98/samples/ApiDemos/src/com/example/android/apis/app/RedirectMain.java][loadPrefs][41] = -> preferences=getSharedPreferences("RedirectData",0,)@ -> mTextPref=preferences.getString("text",null,)@ -> IF { -> text.setText(mTextPref,)@mTextPref!=null -> return true@mTextPref!=null }
results[https://github.com/jmorille/android/blob/bd2795a8cd62129b4acb8941cc2d197d5dcd2d2a/cityLibProject/cityLib/src/main/java/eu/ttbox/velib/ui/map/VelibProviderHelper.java][computeConditionVelibProvider][2] = -> providerName=sharedPreferences.getString(eu.ttbox.velib.core.AppConstants.PREFS_KEY_PROVIDER_SELECT,eu.ttbox.velib.model.VelibProvider.FR_PARIS.getProviderName(),)@ -> IF { -> velibProvider=eu.ttbox.velib.model.VelibProvider.getVelibProvider(providerName,)@providerName!=null }
results[https://github.com/TeamNyx/packages_apps_Calendar/blob/45d5ed8834fd35a80f2f37ecd7744f0af65ab6cf/src/com/android/calendar/TimezoneAdapter.java][showInitialTimezones][5] = -> prefs=GeneralPreferences.getSharedPreferences(mContext,)@ -> recentsString=prefs.getString(KEY_RECENT_TIMEZONES,null,)@ -> IF { -> recents=recentsString.split(RECENT_TIMEZONES_DELIMITER,)@recentsString!=null }
results[https://github.com/TripNRaVeR/android_packages_apps_Mms/blob/223ffe83940aa68d7136eaa3a92ff8078d38c082/src/com/android/mms/preferences/CustomVibrateListPreference.java][showDialog][4] = -> prefs=PreferenceManager.getDefaultSharedPreferences(mContext,)@ -> setting=prefs.getString(MessagingPreferenceActivity.NOTIFICATION_VIBRATE_PATTERN_CUSTOM,null,)@ -> IF { -> pattern.setText(setting,)@setting!=null }
results[https://github.com/TheCollective/android_packages_apps_Settings/blob/08123a1dff10d865ec25900e304c0831e1196ef0/src/com/android/settings/hardware/DisplayColor.java][restore][1] = -> prefs=PreferenceManager.getDefaultSharedPreferences(context,)@ -> value=prefs.getString("display_color_calibration",null,)@ -> IF { -> DisplayColorCalibration.setColors(value,)@value!=null }
results[https://github.com/breber/cardgames/blob/0c3d5d60b6776513ebdca1196528af9c0832cef8/CardGames/CardGames/src/main/java/com/worthwhilegames/cardgames/shared/connection/ConnectionFactory.java][getConnectionType][2] = -> prefs=ctx.getSharedPreferences(Constants.PREFERENCES,0,)@ -> connectionType=prefs.getString(Constants.PREF_CONNECTION_TYPE,ConnectionType.WiFi.toString(),)@ -> IF { -> return ConnectionType.WiFi@ConnectionType.WiFi.toString().equals(connectionType,) }
results[https://github.com/ChameleonOS/android_frameworks_opt_timezonepicker/blob/0e175c7e6bc681d89438c2cdee0900002aadca7f/src/com/android/timezonepicker/TimeZoneResultAdapter.java][onSetFilter][6] = -> prefs=mContext.getSharedPreferences(SHARED_PREFS_NAME,Context.MODE_PRIVATE,)@ -> recentsString=prefs.getString(KEY_RECENT_TIMEZONES,null,)@ -> IF { -> recents=recentsString.split(RECENT_TIMEZONES_DELIMITER,)@!(TextUtils.isEmpty(recentsString,)) }
results[https://github.com/AndroidDeveloperAlliance/platform_packages_apps_Contacts/blob/eeef50089c36185c84e76ed76475097b7794321a/tests/src/com/android/contacts/tests/quickcontact/QuickContactTestsActivity.java][onCreate][17] = -> sharedPreferences=getSharedPreferences(PREF_NAME,MODE_PRIVATE,)@ -> uriString=sharedPreferences.getString(PREF_SETTING_URI,null,)@ -> IF { -> mContactUri=Uri.parse(uriString,)@uriString!=null }
results[https://github.com/blitz-research/monkey/blob/cb119173b57df75052a3bd05cad913f471ee51d9/targets/android_ouya/modules/native/androidgame.java][LoadState][1] = -> prefs=_activity.getPreferences(0,)@ -> state=prefs.getString(".monkeystate","",)@ -> IF { -> state=prefs.getString("gxtkAppState","",)@state.equals("",) }
results[https://github.com/ukanth/afwall/blob/6a42aa20b2f1c3f48537eea199d317e1fe85199c/src/dev/ukanth/ufirewall/G.java][getAdditionalProfiles][1] = -> previousProfiles=gPrefs.getString(ADDITIONAL_PROFILES,"",)@ -> IF { -> profileList=Arrays.asList(previousProfiles.split(",",),)@!(previousProfiles.equals("",)) }
results[https://github.com/Skylark95/Amazon-App-Notifier/blob/7489bd90c74ad8c134c72e12f61aa766cfd6ee8f/app/src/com/skylark95/amazonfreenotify/util/SettingsUtils.java][getRingtoneDisplayValue][7] = -> prefs=PreferenceManager.getDefaultSharedPreferences(context,)@ -> ringtoneStr=prefs.getString(Preferences.PREF_NOTIFICATION_SOUND,null,)@ -> IF { -> ringtoneUri=Uri.parse(ringtoneStr,)@ringtoneStr!=null }
results[https://github.com/mvestola/helsinki-testbed2-android/blob/b08ff9d65c443257b8fb9568cdee62fc2fcd4bf8/src/main/java/fi/testbed2/service/impl/SharedPreferenceSettingsService.java][getSavedMapBounds][2] = -> frameBoundsPref=sharedPreferences.getString(getMapBoundsPreferenceKey(orientation,),null,)@ -> IF { -> return null@frameBoundsPref==null } -> parts=frameBoundsPref.split(":",)@!(frameBoundsPref==null)
results[https://github.com/xstd/private_phone/blob/334abe63b187884703bc6da47a69194e38dca6fa/android_code/src/com/xstd/privatephone/adapter/NotificationModifyAdapter.java][getView][1] = -> cont=sp.getString(""+position,"",)@ -> IF { -> strs=cont.split(":",)@cont!="" } -> iv_icon.setBackgroundResource(iconIds[position],)@
results[https://github.com/cphelps76/packages_apps_Camera/blob/cb8d839d0422c901a91a5956e7d9ecc228b60ef7/src/com/android/camera/ActivityBase.java][setStoragePath][4] = -> storagePath=prefs.getString(CameraSettings.KEY_STORAGE,Environment.getExternalStorageDirectory().toString(),)@ -> IF { -> return false@storagePath.equals(mStoragePath,) }
results[https://github.com/sipgate/sipgate-for-android/blob/69a85ae91ec465a4a9d7bbba8d3245672f44237b/src/com/sipgate/sipua/ui/Settings.java][getProfileNameString][1] = -> provider=s.getString(PREF_SERVER,DEFAULT_SERVER,)@ -> IF { -> provider=s.getString(PREF_DOMAIN,DEFAULT_DOMAIN,)@!(s.getString(PREF_DOMAIN,"",).equals("",)) } -> return s.getString(PREF_USERNAME,DEFAULT_USERNAME,)+"@"+provider@
results[https://github.com/heskew-riotapps/WordSmash/blob/fbe338118825c2f2de35a224a3077ed2d004cc3f/src/com/riotapps/word/data/PlayerData.java][getPlayer][1] = -> settings=Storage.getSharedPreferences()@ -> _player=settings.getString(Constants.USER_PREFS_PLAYER_JSON,Constants.EMPTY_STRING,)@ -> IF { -> return null@_player==Constants.EMPTY_STRING } -> player=gson.fromJson(_player,type,)@!(_player==Constants.EMPTY_STRING)
results[https://github.com/monossido/Announcify/blob/2b2ef590797389910b62ada4eeebd8f98049e48b/API-Announcify/src/com/announcify/api/background/util/PluginSettings.java][getUnknownMode][1] = -> s=preferences.getString(KEY_READING_UNKNOWN,defaultSettings.getDefaultUnknownMode(),)@ -> IF { -> return defaultSettings.getDefaultUnknownMode()@s.equals(DEFAULT_SETTING,) }
results[https://github.com/tallakt/OpenPilot/blob/8997df243858ef4e13518437b34720c287554f71/androidgcs/src/org/openpilot/androidgcs/telemetry/BluetoothUAVTalk.java][attemptConnection][1] = -> prefs=PreferenceManager.getDefaultSharedPreferences(telemService,)@ -> device_name=prefs.getString("bluetooth_mac","",)@ -> IF { -> Log.d(TAG,"Trying to open UAVTalk with "+device_name,)@ }
results[https://github.com/heyongjian/joy_launcher/blob/8d5b14b3cd54e0b4ed114815a830a501016a9c13/src/com/joy/launcher2/wallpaper/ImageLoader.java][isDateChanged][1] = -> sp=mContext.getSharedPreferences("wallpaper_preferences",0,)@ -> date=sp.getString("date","",)@ -> IF { -> editor=sp.edit()@ }
results[https://github.com/helloworld1/AnyMemo/blob/f4dbd39795e7eee09bb801b2c777dfc9bd7ee4a6/src/com/example/android/apis/graphics/FingerPaint.java][loadBitmap][1] = -> shre=PreferenceManager.getDefaultSharedPreferences(this,)@ -> previouslyEncodedImage=shre.getString("paint_image_data","",)@ -> IF { -> b=Base64.decode(previouslyEncodedImage,Base64.DEFAULT,)@!(previouslyEncodedImage.equalsIgnoreCase("",)) -> return mutableBitmap@!(previouslyEncodedImage.equalsIgnoreCase("",)) }
results[https://github.com/somehume/bluegps4droid/blob/ef3144059141eae9a929b153deda42f24599828c/src/org/broeuschmeul/android/gps/bluetooth/provider/BluetoothGpsActivity.java][updateDevicePreferenceSummary][2] = -> deviceAddress=sharedPref.getString(BluetoothGpsProviderService.PREF_BLUETOOTH_DEVICE,null,)@ -> IF { -> deviceName=bluetoothAdapter.getRemoteDevice(deviceAddress,).getName()@BluetoothAdapter.checkBluetoothAddress(deviceAddress,) }
results[https://github.com/MIT-Mobile/MIT-Mobile-for-Android/blob/560ff7ad2f7ca247b9a291120a229b098b0abfdb/src/edu/mit/mitmobile2/dining/DiningModel.java][getBookmarks][1] = -> prefs=PreferenceManager.getDefaultSharedPreferences(context,)@ -> nameString=prefs.getString(RETAIL_BOOKMARK_KEY,"",)@ -> IF { -> return bookmarkedHalls@nameString.isEmpty() } -> idSet=nameString.split(",",)@!(nameString.isEmpty())
results[https://github.com/openeclair/OEUpdater/blob/bc4090b14214040d1ba574d6c6c1841aa51a0afd/src/openeclairupdaterapp/utils/Preferences.java][getConfiguredRingtone][2] = -> uri=mPrefs.getString(mRes.getString(R.string.PREF_NOTIFICATION_RINGTONE,),null,)@ -> IF { -> return null@uri==null } -> return Uri.parse(uri,)@!(uri==null)
results[https://github.com/cracker0dks/SmartQuad3/blob/f65c8781238d6c53fdc23fd9bea4a17def3d0c94/App/SmartQuadProject/SmartQuad/src/main/src/com/cracker/smartquad/StartActivity.java][onCreate][1] = -> preferences=PreferenceManager.getDefaultSharedPreferences(this,)@ -> oldXml=preferences.getString("oldSettingsJson","",)@ -> IF { -> Settings.loadFromJsonSettings(oldXml,)@oldXml!="" }
results[https://github.com/cojalvo/CampusInProject/blob/a935dc2b3d3666f3c2c54f084616f800750cd9e9/GoogleMapProject/src/il/ac/shenkar/in/bl/NotificationManager.java][builSndSendNotificationToEvent][1] = -> sharedPrefs=PreferenceManager.getDefaultSharedPreferences(appContext,)@ -> reminderTime=sharedPrefs.getString("event_reminder","300000",)@ -> reminderTimeInMiliseconds=Long.parseLong(reminderTime,)@ -> IF { -> return pendingInent@reminderTimeInMiliseconds>0 }
results[https://github.com/anvish/MyDayLog/blob/44a900500d13d37527c8b35dbf48e8013c6f4586/Common/src/org/anvish/common/Settings.java][get][1] = -> watchEventsString=p.getString(key,null,)@ -> IF { -> return def@watchEventsString==null } -> return split(watchEventsString,)@!(watchEventsString==null)
results[https://github.com/vkarpov15/radar-android/blob/343829e002c58fd92ffdbe8f733f509ca29e45df/tonightlife-android/src/com/tabbie/android/radar/core/facebook/FacebookAuthenticator.java][loadStoredState][2] = -> fbAccessToken=preferences.getString("access_token",null,)@ -> expires=preferences.getLong("access_expires",0,)@ -> IF { -> facebook.setAccessToken(fbAccessToken,)@fbAccessToken!=null }
results[https://github.com/patbur-8/BlaAgentProject/blob/0c0cd05a9c4845d52b515f996bbb713d38cf1cd7/BlaAgent/src/main/java/com/ismobile/blaagent/notificationTypes/DeadlineMissedNotification.java][evaluate][1] = -> prefs=PreferenceManager.getDefaultSharedPreferences(context,)@ -> DISTANCE_THRESHOLD=Double.parseDouble(prefs.getString("prefDistanceThreshold","0.5",),)@ -> IF { -> return @previous==null }
results[https://github.com/c-base/c-beam-droid/blob/2513fa7669050278ae2ba3a615b26b8492c0582b/src/org/c_base/c_beam/domain/C_beam.java][assignMission][4] = -> sharedPref=PreferenceManager.getDefaultSharedPreferences(activity,)@ -> user=sharedPref.getString(Settings.USERNAME,"bernd",)@ -> IF { -> callAsync("mission_assign",user,""+id,)@ }
results[https://github.com/lucaspi/AndroidRally/blob/f1742376e588fa4f2756df5c3782e7da53f18fee/AndroidRally/src/se/chalmers/dryleafsoftware/androidrally/IO/IOHandler.java][getGameIDs][1] = -> data=prefs.getString(ID_DATA,null,)@ -> IF { -> return  new int[]@data==null||data.length()==0 } -> idString=data.substring(1,).split(":",)@!(data==null||data.length()==0)
results[https://github.com/KalyanAkella/blipit/blob/c17b6a947e9fa08787ee7ec3ca717a80c205dc5e/android/BlipItMain/src/com/thoughtworks/blipit/activities/ChannelPreference.java][checkItemsFromPreferences][1] = -> sharedPreferences=getSharedPreferences()@ -> preferredChannelStr=sharedPreferences.getString(PREFERRED_CHANNELS_KEY,null,)@ -> IF { -> channels=preferredChannelStr.split(CHANNEL_SPLITTER,)@preferredChannelStr!=null }
results[https://github.com/thasmin/Podax/blob/87f7274e502f2759e760dde9252a7b005316f6ee/src/com/axelby/podax/Storage.java][getExternalStorageDirectory][1] = -> prefs=PreferenceManager.getDefaultSharedPreferences(context,)@ -> storageCard=prefs.getString("storageCard","/storage/sdcard0",)@ -> IF { -> return new File(storageCard,)@new File(storageCard,).exists() }
results[https://github.com/nagarajug/NagaRepos/blob/960b6680f0d59e6c1f23a8612ad44efafcbb1746/src/jp/co/rakuten/android/webview/WebViewActivity.java][getCpcCookie][1] = -> cookiePrefs=this.getSharedPreferences(COOKIE_PREFS,0,)@ -> encodDispCid=cookiePrefs.getString("cookie_dispcid",null,)@ -> IF { -> decodedCookieDisp=decodeCookie(encodDispCid,)@encodDispCid!=null }
results[https://github.com/alexesprit/chatlogs/blob/729c7e786dda21abdffd2410e109e0cc3cd420e9/src/com/github/alexesprit/chatlogs/activity/BookmarksActivity.java][updateTheme][1] = -> prefs=PreferenceManager.getDefaultSharedPreferences(this,)@ -> newTheme=prefs.getString(Preferences.PREF_APP_THEME,Preferences.PREF_APP_THEME_DEFAULT,)@ -> IF { -> ThemeManager.setTheme(this,newTheme,)@ThemeManager.isThemeChanged(themeId,newTheme,) }
results[https://github.com/dedyk/JaponskiPomocnik/blob/ff86266e8a5a30db3dffcc64a538506a32ac4f09/src/pl/idedyk/android/japaneselearnhelper/config/ConfigManager.java][getKanjiTestMode][1] = -> kanjiTestMode=preferences.getString(kanjiTestConfigPrefix+kanjiTestModePostfix,KanjiTestMode.DRAW_KANJI_FROM_MEANING.toString(),)@ -> IF { -> return KanjiTestMode.DRAW_KANJI_IN_WORD@kanjiTestMode.equals("DRAW_KANJI_IN_WORD_GROUP",)==true } -> return KanjiTestMode.valueOf(kanjiTestMode,)@!(kanjiTestMode.equals("DRAW_KANJI_IN_WORD_GROUP",)==true)
results[https://github.com/monossido/Announcify/blob/2b2ef590797389910b62ada4eeebd8f98049e48b/API-Announcify/src/com/announcify/api/background/util/PluginSettings.java][getDiscreetMode][1] = -> s=preferences.getString(KEY_READING_DISCREET,defaultSettings.getDefaultDiscreetMode(),)@ -> IF { -> return defaultSettings.getDefaultDiscreetMode()@s.equals(DEFAULT_SETTING,) }
results[https://github.com/KalyanAkella/blipit/blob/a488023e7b0580a7b0e38e0638fa3d0e3bd50404/android/BlipItMain/src/com/thoughtworks/blipit/preferences/ChannelPreference.java][checkItemsFromPreferences][1] = -> sharedPreferences=getSharedPreferences()@ -> preferredChannelStr=sharedPreferences.getString(CHANNEL_PREF_KEY,null,)@ -> IF { -> prefChannelList=BlipItUtils.toChannels(preferredChannelStr,)@preferredChannelStr!=null }
results[https://github.com/aanoaa/LogViewer/blob/101e990e83d0cd6dcfe25d55efa056336a41525a/apps/android/src/kr/perl/android/logviewer/activity/ViewerActivity.java][mention][1] = -> nickname=mPrefs.getString(getString(R.string.pref_nickname,),"",)@ -> IF { -> return @nickname.equals("",) } -> intent.putExtra(Logs.NICKNAME,nickname,)@!(nickname.equals("",))
results[https://github.com/Teeds/iiNet-Usage/blob/a540851e359191c4038d47fc970d4a6d76a4aeb0/iiNet Usage/src/au/id/teda/volumeusage/helper/AccountHelper.java][usernameExists][1] = -> myUsername=mySettings.getString("iinet_username","",)@ -> IF { -> return true@myUsername.length()>0 } ELSE { -> return false@!(myUsername.length()>0) }
results[https://github.com/nebulon42/beepme/blob/555c3d3e6544cfca644d6b1c1ce9d1ae73849001/src/main/java/com/glanznig/beepme/data/PreferenceHandler.java][getThumbnailSizes][2] = -> prefs=PreferenceManager.getDefaultSharedPreferences(ctx,)@ -> sizesString=prefs.getString(KEY_THUMBNAIL_SIZES,"",)@ -> IF { -> parts=sizesString.split(",",)@sizesString!=null&&!(sizesString.isEmpty()) -> return sizes@sizesString!=null&&!(sizesString.isEmpty()) }
results[https://github.com/Rafe/Footpon/blob/8c14415bb168489fcd0b21c2f70a8b05d32175a5/Footpon/src/j3/footpon/FootponListActivity.java][onCreate][1] = -> share=getSharedPreferences(User.SHARE_USER_INF_TAG,0,)@ -> username=share.getString(User.SHARE_USERNAME,"",)@ -> IF { -> return @username.equals("",) } -> getFootponSource(username,)@!(username.equals("",))
results[https://github.com/Tasssadar/MultiROMMgr/blob/770158faca58d117f9b07bc858fb3b0cc40cbff2/MultiROMMgr/src/main/java/com/tassadar/multirommgr/StatusAsyncTask.java][doInBackground][1] = -> p=MgrApp.getPreferences()@ -> dev=Device.load(p.getString(SettingsActivity.DEV_DEVICE_NAME,Build.DEVICE,),)@ -> IF { -> return res@dev==null }
results[https://github.com/jpapayan/tuberun_android/blob/e8eb96a9f990ff052e8c8edcf1f048b050873381/src/com/papagiannis/tuberun/MainMenu.java][update][1] = -> preferences=context.getSharedPreferences(TubeRun.PREFERENCES,Context.MODE_PRIVATE,)@ -> defaultCard=preferences.getString(OysterActivity.DEFAULT_CARD,"",)@ -> IF { -> balance=cards.get(defaultCard,)@!(defaultCard.equals("",))&&cards.containsKey(defaultCard,) }
results[https://github.com/sunriver/projects/blob/65fbe9c8ae0763af090692cde443604d7ecbdd54/android/CocoReader/src/com/codo/reader/data/DocumentManager.java][getDefaultDocument][1] = -> defaultDocName=mPreference.getString(Consts.PREF_PROPERTY_DOCUMENT_DEFALUT,null,)@ -> doc=getDocumentByName(defaultDocName,)@ -> IF { -> defaultPageIndex=mPreference.getInt(Consts.PREF_PROPERTY_PAGE_DEFALUT,0,)@ }
results[https://github.com/DukedDroid/RetroidNetplay/blob/545cdbad2ab1cf5eebeb28702aa9f27b45c9902b/android/phoenix/src/org/retroarch/browser/ROMActivity.java][onCreate][1] = -> prefs=MainMenuActivity.getPreferences()@ -> startPath=prefs.getString("rgui_browser_directory","",)@ -> IF { -> super.setStartDirectory(startPath,)@!(startPath.isEmpty())&&new File(startPath,).exists() }
results[https://github.com/c-base/c-beam-droid/blob/2513fa7669050278ae2ba3a615b26b8492c0582b/src/org/c_base/c_beam/domain/C_beam.java][logactivity][1] = -> sharedPref=PreferenceManager.getDefaultSharedPreferences(this.activity,)@ -> user=sharedPref.getString(Settings.USERNAME,"bernd",)@ -> IF { -> callAsync("logactivity",user,activity,""+ap,)@ }
results[https://github.com/vipersaudio/viper4android_fx/blob/0c684ba91ff26ba3973c9e65ee489f9af9ae7a7f/android_4.x/src/com/vipercn/viper4android_v2/service/ViPER4AndroidService.java][onStartCommand][2] = -> prefSettings=getSharedPreferences(ViPER4Android.SHARED_PREFERENCES_BASENAME+".settings",0,)@ -> mCompatibleMode=prefSettings.getString("viper4android.settings.compatiblemode","global",)@ -> IF { -> return super.onStartCommand(intent,flags,startId,)@!(mCompatibleMode.equalsIgnoreCase("global",)) }
results[https://github.com/mikma/ipsec-android/blob/0c62629bd6ff20f81d4447e3e8fe58026204bbd9/src/org/za/hem/ipsec_tools/Peer.java][getTemplateFile][1] = -> addr=mShared.getString(PeerPreferences.TEMPLATE_PREFERENCE,null,)@ -> Log.i("ipsec-tools","getRemoteAddr "+addr,)@ -> IF { -> return null@addr==null } -> return new File(addr,)@!(addr==null)
results[https://github.com/NightWhistler/PageTurner/blob/3e35df262864dfab7e99eedbfb2f111240c678a5/src/net/nightwhistler/pageturner/Configuration.java][getLocale][1] = -> languageSetting=settings.getString("custom_lang","default",)@ -> IF { -> return Locale.getDefault()@"default".equalsIgnoreCase(languageSetting,) } -> return new Locale(languageSetting,)@!("default".equalsIgnoreCase(languageSetting,))
results[https://github.com/liato/android-bankdroid/blob/730651d1a2f54c4868187fabf58efe85f05193ef/src/com/liato/bankdroid/PairApplicationsActivity.java][initialSetupApiKey][2] = -> prefs=PreferenceManager.getDefaultSharedPreferences(ctx,)@ -> apiKey=prefs.getString("content_provider_api_key","",)@ -> IF { -> editor=prefs.edit()@ }
results[https://github.com/VanirAOSP/device_samsung_tuna/blob/0d4a537397c41475a9b781d9c3ed42cc69a31fee/GNexusParts/src/com/cyanogenmod/settings/device/GpuOverclock.java][restore][1] = -> sharedPrefs=PreferenceManager.getDefaultSharedPreferences(context,)@ -> curr=sharedPrefs.getString(DevicePreferenceActivity.KEY_GPU_OVERCLOCK,"-1",)@ -> IF { -> Utils.writeValue(FILE,curr,)@!(curr.equals("-1",)) }
results[https://github.com/sizzlelab/side/blob/74ae48b858260fce84259f57945b3137158064a6/Platform/src/eu/mobileguild/ApplicationWithChangingLocale.java][onCreate][1] = -> settings=getSharedPreferences(appPreferenceFile,MODE_PRIVATE,)@ -> lang=settings.getString(localePreferenceName,"",)@ -> IF { -> locale=new Locale(lang,)@!("".equals(lang,))&&!(config.locale.getLanguage().equals(lang,)) }
results[https://github.com/immopoly/android/blob/115c41c332e5aabd9a8ed8cf7ece768eb6d5e34a/src/org/immopoly/android/app/ImmopolyActivity.java][signIn][1] = -> shared=getSharedPreferences("oauth",0,)@ -> accessToken=shared.getString("oauth_token","",)@ -> IF { -> OAuthData.getInstance(this,).accessToken=accessToken@accessToken.length()>0 }
results[https://github.com/ppalicaway/SingtelDining-Android/blob/afdc8e99ded109e55e55fed7f6f305d2683f4e84/src/com/singtel/ilovedeals/screen/SettingsPage.java][settinglayout][1] = -> shared=getSharedPreferences(Constants.DEFAULT_SHARE_DATA,0,)@ -> cardPref=shared.getString("cardPref","",)@ -> IF { -> checkApplicableCards(cardPref,)@!(cardPref.equalsIgnoreCase("",)) }
results[https://github.com/shlusiak/FruPic-App/blob/8eb7905e5d554f23315dd574710081539938ff79/src/de/saschahlusiak/frupic/grid/FruPicGrid.java][onDestroy][1] = -> interval=Integer.parseInt(prefs.getString("autorefresh","0",),)@ -> IF { -> intent.putExtra("interval",interval,)@ }
results[https://github.com/matburt/mobileorg-android/blob/82d6ef3fb05889486fba7705a72eba3edb05371a/MobileOrg/src/main/java/com/matburt/mobileorg/util/PreferenceUtils.java][getSelectedTodos][1] = -> appSettings=PreferenceManager.getDefaultSharedPreferences(context,)@ -> todoString=appSettings.getString("selectedTodos","",).trim()@ -> IF { -> return todos@TextUtils.isEmpty(todoString,) }
results[https://github.com/nagazuka/GoedkoopTanken/blob/74803708eed58e72105167fb9ba12bf4c9168a07/src/com/nagazuka/mobile/android/goedkooptanken/GoedkoopTankenActivity.java][onCreate][1] = -> settings=getSharedPreferences(PREFERENCE_FILENAME,0,)@ -> prefFuelChoice=settings.getString("fuelChoice",null,)@ -> IF { -> position=adapter.getPosition(prefFuelChoice,)@prefFuelChoice!=null }
results[https://github.com/stephenc/opensocial-java-client/blob/dd7621e806b75f1d6ea3baaf76d4d255375fd727/java/android/src/org/opensocial/android/OpenSocialActivity.java][loadRequestToken][1] = -> requestTokenPref=prefs.getString(OpenSocialChooserActivity.REQUEST_TOKEN_PREF,null,)@ -> IF { -> requestTokenSecretPref=prefs.getString(OpenSocialChooserActivity.REQUEST_TOKEN_SECRET_PREF,"",)@!(requestTokenPref!=null) -> return new Token(requestTokenPref,requestTokenSecretPref,)@requestTokenPref!=null }
