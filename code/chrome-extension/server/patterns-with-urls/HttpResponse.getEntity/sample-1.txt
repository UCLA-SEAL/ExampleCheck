results[https://github.com/Netflix/ribbon/blob/17facc3c237a26d7cba2a63f447edf08bc7c8d15/ribbon-httpasyncclient/src/main/java/com/netflix/httpasyncclient/HttpClientResponse.java][getPayload][1] = -> TRY {  -> return response.getEntity()@ } CATCH(ClientException) {}
results[https://github.com/apache/jena/blob/34a5a6054b19fc7c4c46837dbb1e62afdce56511/jena-arq/src/main/java/org/apache/jena/riot/web/HttpOp.java][handle][34] = -> TRY {  -> entity=response.getEntity()@ -> instream=entity.getContent()@ } CATCH(IOException) {}
results[https://github.com/apache/httpcore/blob/77d8c6aa5df5501381657281cc087825db27421c/httpcore-nio/src/main/java/org/apache/http/nio/protocol/BufferingHttpClientHandler.java][responseEntity][3] = -> TRY {  -> return new BufferingNHttpEntity(response.getEntity(),HeapByteBufferAllocator.INSTANCE,)@ } CATCH(IOException) {}
results[https://github.com/pymager/pymager-java/blob/7238975212f7f055d325bd86e6115e6a637f7371/api/src/main/java/com/sirika/pymager/client/impl/HttpDownloadInputStreamSource.java][doWithHttpResponse][11] = -> TRY {  -> return generateInputStream(httpResponse.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/escidoc/escidoc-core/blob/6a07ec24f21c021289e0dbdf9cdc2f0cff05f212/integration-tests/src/test/java/de/escidoc/core/test/common/client/servlet/ClientBase.java][getResponseBodyAsUTF8][2] = -> TRY {  -> return EntityUtil.toString(httpRes.getEntity(),HTTP.UTF_8,)@ } CATCH(UnsupportedEncodingException,IOException) {}
results[https://github.com/fqntxmqee/webframe/blob/9a6d617439c9663d1d4c3c361d4809b05c848ab0/wf-test/src/main/java/org/webframe/test/BaseHttpClientTests.java][getResponseContent][3] = -> TRY {  -> httpEntity=res.getEntity()@ -> return EntityUtils.toString(httpEntity,defaultEncode,)@ } CATCH(Exception) {}
results[https://github.com/forcedotcom/aura/blob/95235a3ca7f9d539d12785457ed02dbd1b9b44ab/aura/src/test/java/org/auraframework/test/IntegrationTestCase.java][getResponseBody][5] = -> TRY {  -> entity=response.getEntity()@ -> return (entity==null)?null:EntityUtils.toString(entity,)@ } CATCH(IOException) {}
results[https://github.com/lookfirst/sardine/blob/5374b0b64148607fe72264c6e91e56ef4f839462/src/com/googlecode/sardine/impl/io/WrappedInputStream.java][close][9] = -> TRY {  -> EntityUtils.consume(response.getEntity(),)@ } CATCH(IOException) {}
results[https://github.com/deegree/deegree3/blob/21ef8242c8ad16b2cb155901415303686fd1fba7/deegree-core/deegree-core-base/src/main/java/org/deegree/protocol/ows/client/OWSResponse.java][<init>][10] = -> TRY {  -> entity=httpResponse.getEntity()@ -> is=entity.getContent()@ } CATCH(IllegalStateException,IOException) {}
results[https://github.com/apache/httpcore/blob/4766aefe40be74e80658455859f21b5cbcde0d39/src/java/org/apache/http/impl/DefaultHttpServerConnection.java][sendResponseEntity][3] = -> TRY {  -> this.entityserializer.serialize(this.datatransmitter,response,response.getEntity(),)@!(response.getEntity()==null) } CATCH(HttpException,IOException) {}
results[https://github.com/hoccer/java-api/blob/ab5b929380dac8264d163dc6c442dfb8e450fb20/tests/com/hoccer/tools/HttpHelper.java][getAsHttpEntity][3] = -> TRY {  -> response=executeHTTPMethod(get,)@ -> return response.getEntity()@ } CATCH(IOException,HttpClientException,HttpServerException) {}
results[https://github.com/sardinella/sardine/blob/13bf16f7fe9ae7688f6aa0f886342af1bdd03656/src/main/java/com/googlecode/sardine/httpclient/WrappedInputStream.java][close][2] = -> TRY {  -> response.getEntity().consumeContent()@ } CATCH(IOException) {}
results[https://github.com/xstd/quick_setting/blob/dbe19ef4d2c6e6191f2f54f4c921218852c38562/src_lib/mcuslib/src/com/plugin/internet/core/impl/HttpClientImpl.java][handleResponse][4] = -> TRY {  -> data=EntityUtils.toByteArray(response.getEntity(),)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/thecapsaicinkid/shoryuken/blob/073b686da8e1614dfb79679cc412e0892737c5ee/AndroidClient/ReminderClient/src/main/java/com/squirrel/sync/JsonArrayBuilder.java][build][3] = -> TRY {  -> entity=response.getEntity()@ -> inputStream=entity.getContent()@ } CATCH(IOException,JSONException) {}
results[https://github.com/paimonsoror/RX8Club.com-Forum-Application/blob/4ef87fa5ca1289e4afeb9b3c808dfbf0a4e6c07a/src/com/normalexception/forum/rx8club/utils/HtmlFormUtils.java][submitAttachment][1] = -> TRY {  -> response=httpclient.execute(httpPost,)@ -> result=response.getEntity()@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/nterry/jclouds/blob/44d4c37a90ebf07ac2925c44af01e3dbdc24f6eb/extensions/httpnio/src/main/java/org/jclouds/http/httpnio/pool/HttpNioFutureCommandExecutionHandler.java][responseEntity][3] = -> TRY {  -> return entityFactory.create(response.getEntity(),)@ } CATCH(IOException) {}
results[https://github.com/deegree/deegree3/blob/4dc5e2db5a32d5fcab358d00e875fc2c697c298e/deegree-core/deegree-core-protocol/deegree-protocol-commons/src/main/java/org/deegree/protocol/ows/http/OwsResponseHandler.java][handleResponse][3] = -> TRY {  -> entity=response.getEntity()@ -> return entity.getContent()@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/BladeRunnerJS/brjs/blob/922efb3a45f16a3e7a9927a58392d63a85410ffb/bladerunner-common-servlets/src/test/java/com/caplin/cutlass/filter/thirdpartyfilter/ThirdPartyResourceFilterTest.java][getResponseBody][3] = -> TRY {  -> return EntityUtils.toString(response.getEntity(),)@ } CATCH(ParseException,IOException) {}
results[https://github.com/Netflix/ribbon/blob/426b60892212190f7f6345ef35b5aec6cb326b3f/ribbon-httpclient/src/test/java/com/netflix/http4/NFHttpClientTest.java][handleResponse][3] = -> TRY {  -> entity=response.getEntity()@ -> contentStr=EntityUtils.toString(entity,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/markkerzner/FreeEed/blob/6850819a46f60b64c4c7125fbf63b57b96af7a30/freeeed/src/main/java/org/freeeed/lotus/NSFParser.java][getResponseMessage][3] = -> TRY {  -> entity=response.getEntity()@ -> responseString=EntityUtils.toString(entity,"UTF-8",)@ } CATCH(ParseException,IOException) {}
results[https://github.com/apache/karaf-cave/blob/f740a19159ab48f69924bc6340abc6d0b52c382e/server/storage/src/main/java/org/apache/karaf/cave/server/storage/CaveRepositoryImpl.java][proxyHttp][2] = -> TRY {  -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/nbeloglazov/GeekAlarm/blob/d9b6b06a13b61eb1b6dcfcc710eeda5bd039c742/android/src/com/geekalarm/android/tasks/TaskManager.java][sendRequest][2] = -> TRY {  -> response=client.execute(request,)@ -> return response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/project-rhex/rhex-test/blob/5730c46c29844d3e692c18f143b40fc6fd5a2ccc/src/org/mitre/hdata/test/tests/BaseUrlGetHtmlAcceptTest.java][validateContent][2] = -> TRY {  -> entity=response.getEntity()@!(code!=200) && code==405 -> contentType=ClientHelper.getContentType(entity,)@!(code!=200) && code==405 } CATCH(TestException,IOException,JDOMException) {}
results[https://github.com/enviroCar/enviroCar-app/blob/7773c8b342d1c5c0f00a1d31322e5dc41d40837e/org.envirocar.app/src/org/envirocar/app/network/HTTPClient.java][executeJsonRequest][1] = -> TRY {  -> response=HTTPClient.execute(getRequest,)@ -> return response.getEntity()@ } CATCH(IOException) {}
results[https://github.com/Qi4j/qi4j-sdk/blob/fd1c67c0eb1c0308baa5ed2763c191bdbdb6cfb7/libraries/http/src/test/java/org/qi4j/library/http/AbstractJettyTest.java][handleResponse][1] = -> TRY {  -> return EntityUtils.toString(hr.getEntity(),"UTF-8",)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/apache/sling/blob/6e8e7a9fb723e789306d994ad60f7df1a8ae5888/testing/tools/src/main/java/org/apache/sling/testing/tools/http/RequestExecutor.java][execute][1] = -> TRY {  -> response=httpClient.execute(request,)@ -> entity=response.getEntity()@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/yanchenko/droidparts/blob/456caeaa262eb0d7df9652d04ad6e080f9c4d456/extra/src/org/droidparts/net/http/wrapper/DefaultHttpClientWrapper.java][getResponseBody][1] = -> TRY {  -> entity=resp.getEntity()@ -> is=getUnpackedInputStream(entity,)@ } CATCH(HTTPException) {}
results[https://github.com/jporsay/HCIAndroidTPE/blob/17807c72b8159dd1a1dae39dc35c9cc1536bdf86/src/com/grupo3/productConsult/utilities/XMLParser.java][createDocument][1] = -> TRY {  -> r_entity=r.getEntity()@ -> xmlString=EntityUtils.toString(r_entity,)@ } CATCH(ParseException,IOException,ParserConfigurationException,SAXException) {}
results[https://github.com/mbdietrich/MUCapstone2013_Team2/blob/ea6858e1d4f7c776ca8ed08621b2ab25aeac6e6c/CapstoneServerTests/test/ServerTests.java][testCreate][2] = -> TRY {  -> resp=client.execute(post,)@ -> responsebody=EntityUtils.toString(resp.getEntity(),)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/biafra23/AmDroid/blob/75c3df1220c8ea7f224381496f2e1cb70719bd45/AmenLib/src/main/java/com.jaeckel/amenoid/api/AmenServiceImpl.java][getAmenByUrl][9] = -> TRY {  -> response=httpclient.execute(httpGet,)@ -> responseEntity=response.getEntity()@ -> responseString=EntityUtils.toString(responseEntity,)@ } CATCH(IOException) {}
results[https://github.com/onecoders/ViewPageIndicator/blob/3d10a304c12935d585765864a8b6c4a6aa3d6bfb/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/download/HttpClientImageDownloader.java][getStreamFromNetwork][4] = -> TRY {  -> response=httpClient.execute(httpRequest,)@ -> entity=response.getEntity()@ -> bufHttpEntity=new BufferedHttpEntity(entity,)@ } CATCH(IOException) {}
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/b6ed5a3df5d7ecf6464f6eaccc9ddf5b8560aee1/src/main/java/com/metaweb/gridworks/util/FreebaseUtils.java][getUserInfo][6] = -> TRY {  -> httpResponse=httpClient.execute(httpRequest,)@ -> return EntityUtils.toString(httpResponse.getEntity(),)@ } CATCH(OAuthMessageSignerException,OAuthExpectationFailedException,OAuthCommunicationException,ClientProtocolException,IOException) {}
results[https://github.com/GrinnellAppDev/SandB-Android/blob/3e915f1991b5d2ee372778476c1374d4ededfc1f/src/edu/grinnell/sandb/img/BodyImageGetter.java][fetch][1] = -> TRY {  -> response=httpClient.execute(request,)@ -> return response.getEntity().getContent()@ } CATCH(IllegalArgumentException,MalformedURLException,IOException) {}
results[https://github.com/arvindbatra-aap/AapMediaMonitoring/blob/e7a2a12508d99bbf56b537962237dd4d14ad0b04/crawler/src/main/java/org/aap/media/utils/URLUtils.java][fetchHTML][1] = -> TRY {  -> response=httpClient.execute(get,)@ -> html=EntityUtils.toString(response.getEntity(),"UTF-8",)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/biafra23/AmDroid/blob/0fb494bd39f0745f824d3c164160e456a87b6405/AmenLib/src/main/java/com.jaeckel/amdroid/api/AmenServiceImpl.java][addStatement][4] = -> TRY {  -> response=httpclient.execute(httpPost,)@ -> responseEntity=response.getEntity()@ -> responseString=makeStringFromEntity(responseEntity,)@ } CATCH(IOException) {}
results[https://github.com/crh/escidoc-core-1.4/blob/a1fa99808bd3486232ac0b5081bc58a43e86a438/integration-tests/src/test/java/de/escidoc/core/test/sb/SearchTestBase.java][search][2] = -> TRY {  -> httpRes=(HttpResponse) result@ -> assertHttpStatusOfMethod("",httpRes,)@ -> return EntityUtils.toString(httpRes.getEntity(),HTTP.UTF_8,)@ } CATCH(Exception) {}
results[https://github.com/Lowerland/nl.dreamkernel.s4.tweaker/blob/4d38f1ddd000f7e798a76d7fc07994d968e4e6cb/src/nl/dreamkernel/s4/tweaker/util/HttpRequest.java][sendPost][1] = -> TRY { -> response=httpClient.execute(httpPost,localContext,)@ -> IF { -> ret=EntityUtils.toString(response.getEntity(),)@response!=null } }
results[https://github.com/hoccer/java-api/blob/aa6221a2cc91261ad6e3872309513d06e9946aa7/test/src/com/hoccer/tools/HttpHelper.java][postString][2] = -> TRY {  -> result=executeHTTPMethod(post,POST_TIMEOUT,)@ -> return extractBodyAsString(result.getEntity(),)@ } CATCH(IOException,HttpClientException,HttpServerException) {}
results[https://github.com/splunk/splunk-shuttl/blob/16717180964bad7f1ea82b4ae1bf6956cc1dfac9/src/java/com/splunk/shuttl/archiver/http/JsonRestEndpointCaller.java][getReponseContent][1] = -> TRY { -> return response.getEntity().getContent()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/roselone/FootWith/blob/82b9f908e8c985980410c69a27bf1ffb2fadead5/web/src/test/java/siteTest.java][getSiteTest][2] = -> TRY {  -> response=client.execute(post,)@ -> entity=response.getEntity()@ -> tmp=EntityUtils.toString(entity,)@ } CATCH(IOException,JSONException) {}
results[https://github.com/mitmel/memory-traces/blob/a42960f3cec2e53a68ab377037c6093dd437fb5d/src/edu/mit/mobile/android/locast/net/NetworkClient.java][getJson][2] = -> TRY {  -> res=get(path,)@ -> checkContentType(res,JSON_MIME_TYPE,false,)@ -> return res.getEntity()@ } CATCH(IOException,JSONException,NetworkProtocolException) {}
results[https://github.com/wordpress-mobile/WordPress-Android-old-gitsvn/blob/c3ca7800c44551e29b1448822622471c4735ca78/src/org/wordpress/android/DrawableManager.java][fetch][5] = -> TRY {  -> response=httpClient.execute(request,)@ -> return response.getEntity().getContent()@ } CATCH(MalformedURLException,IOException) {}
results[https://github.com/just-kile/Zapfmaster2000/blob/5741e8ad9218996f315408dd7aac256f3c342900/util/zapfmaster2000-util-manualtests/src/main/java/de/kile/zapfmaster2000/rest/manualtests/SystemLogin.java][main][1] = -> TRY {  -> response=httpclient.execute(post,)@ -> EntityUtils.consume(response.getEntity(),)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/apache/jena/blob/cb847f13e0279ab3f5398a4fb6661e10ff947b48/jena-arq/src/main/java/org/openjena/riot/web/HttpResponseLib.java][handle][1] = -> TRY {  -> in=response.getEntity().getContent()@ -> rs=ResultSetFactory.load(in,fmt,)@ } CATCH(IOException) {}
results[https://github.com/jdunck/google-refine/blob/24e9b2ccf0e6380f6332532dfd2ebd95c890c4fd/main/java/com/metaweb/gridworks/util/FreebaseUtils.java][mqlwrite][2] = -> TRY {  -> httpResponse=httpClient.execute(httpRequest,)@ -> return EntityUtils.toString(httpResponse.getEntity(),)@ } CATCH(OAuthMessageSignerException,OAuthExpectationFailedException,OAuthCommunicationException,ClientProtocolException,IOException,JSONException) {}
results[https://github.com/DavidOrchard/HockeyBuzz/blob/d9f87492808bd6c3854079cd1d45e577d10b8b57/android/src/com/phonegap/demo/HttpHandler.java][getHttpEntity][7] = -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/cloudsmith/geppetto/blob/ee484def96f6b96df5cd26476b4dd0bc82768212/com.puppetlabs.geppetto.forge.api/src/main/java/com/puppetlabs/geppetto/forge/client/ForgeHttpClient.java][download][5] = -> TRY {  -> response=httpClient.execute(request,)@ -> return response.getEntity().getContent()@ } CATCH(IOException) {}
results[https://github.com/dhara-uom/WPS/blob/04dd5008d3bb97ec1a2ce6a3543b5abefb9a9b52/52n-wps-server/src/main/java/org/n52/wps/server/request/strategy/LazyHttpInputStream.java][httpPost][1] = -> TRY {  -> response=httpclient.execute(httppost,)@ -> resultEntity=response.getEntity()@ -> return resultEntity.getContent()@ } CATCH(IOException) {}
results[https://github.com/darrenjl/pdfrun/blob/f2228948952ca30a82037fd2c618262426910388/external_sources/httpcore-4.1.1/httpcore-nio/src/test/java/org/apache/http/nio/protocol/RequestExecutionHandler.java][responseEntity][3] = -> TRY {  -> return new BufferingNHttpEntity(response.getEntity(),new HeapByteBufferAllocator(),)@ } CATCH(IOException) {}
results[https://github.com/photo/mobile-android/blob/b77804dfcb44950ae7befc627bcfdcf7fe57a625/app/src/me/openphoto/android/app/net/ApiResponse.java][getContentAsString][1] = -> TRY {  -> return convertStreamToString(mResponse.getEntity().getContent(),)@ } CATCH(IllegalStateException,IOException) {}
results[https://github.com/splunk/splunk-shuttl/blob/67181c1c32c7572bda57b2b25a8b38eb5d974e68/test/java/com/splunk/shuttl/rest/ShuttlServerRestTest.java][getLinesFromResponse][1] = -> TRY {  -> return IOUtils.readLines(response.getEntity().getContent(),)@ } CATCH(IOException) {}
results[https://github.com/yuvipanda/WPSignpost/blob/fe6f0b9ffab55989fffabb60762e87c34f677b07/src/de/mastacode/http/Http.java][consumeResponse][1] = -> TRY {  -> response=asResponse()@ -> entity=response.getEntity()@ -> entity.consumeContent()@!(entity==null) } CATCH(IOException) {}
results[https://github.com/ttron/lab/blob/2139f978c863b2de04fa565a8df4d2fdbf2ceb8d/HttpClient-4.3/httpclient-cache/src/test/java/org/apache/http/impl/client/cache/TestBasicHttpCache.java][testOriginalResponseWithNoContentSizeHeaderIsReleased][1] = -> TRY {  -> result=impl.cacheAndReturnResponse(host,request,originResponse,requestSent,responseReceived,)@ -> EntityUtils.consume(result.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/SSilence/scotty/blob/f8bb27614677647d0947f87ea70d110a9486f088/src/scotty/transporter/impl/DefaultGatewayTransporter.java][sendAndReceive][1] = -> TRY {  -> response=httpclient.execute(targetHost,httpPost,)@ -> entity=response.getEntity()@ -> rawResponse=EntityUtils.toString(entity,)@ } CATCH(Exception) {}
results[https://github.com/se-yoshi/myapp/blob/f75c0d41571a875e261573407085b58fdd25a437/projects/myapp-batch-core/src/main/java/jp/myapp/batch/logic/BA01J010S01Impl.java][execute][1] = -> TRY {  -> response=client.execute(new HttpGet(uri,),)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/ttron/lab/blob/2139f978c863b2de04fa565a8df4d2fdbf2ceb8d/HttpClient-4.3/httpclient/src/test/java/org/apache/http/impl/client/integration/TestConnectionAutoRelease.java][testReleaseOnAbort][5] = -> TRY {  -> response=this.httpclient.execute(target,httpget,)@ -> e=response.getEntity()@ -> Assert.assertNotNull(e,)@ } CATCH(Exception) {}
results[https://github.com/zerqent/cloud-storage-vault/blob/523e3dc58c1c2955d847a3abb46470ae7bc5764a/application/CSVlib/src/test/java/no/ntnu/item/csv/speedtest/Speedtest.java][testUploadSpeedNotEncrypted][1] = -> TRY {  -> response=this.com.get(url,)@ -> entity=response.getEntity()@ -> entity.writeTo(os,)@ } CATCH(ServerCommunicationException,InvalidWriteEnablerException,ImmutableFileExistsException,IOException) {}
results[https://github.com/ttron/lab/blob/8e5b87a6d50b46fe212da99a143fd44cdf38e528/HttpClient-4.2/httpclient/src/test/java/org/apache/http/impl/client/TestStatefulConnManagement.java][run][2] = -> TRY { -> LOOP { -> response=this.httpclient.execute(this.target,httpget,this.context,)@ -> EntityUtils.consume(response.getEntity(),)@ } }
results[https://github.com/se2-1213/coyote/blob/33acaa4a4ba56df07ae51590ab2cde7d78cff07f/roadrunner/src/com/project/roadrunner/business/ServerRequest.java][getHttpResponseContent][2] = -> TRY {  -> return convertStreamToString(httpResponse.getEntity().getContent(),)@ } CATCH(IOException) {}
results[https://github.com/undertow-io/undertow/blob/ac1b4c540840277d3cb72cfa66808978de761ccf/testsuite/shared/src/main/java/io/undertow/test/shared/HttpClientUtils.java][readResponse][1] = -> TRY {  -> return readResponse(response.getEntity().getContent(),)@ } CATCH(IOException) {}
results[https://github.com/hoccer/java-api/blob/ab5b929380dac8264d163dc6c442dfb8e450fb20/tests/com/hoccer/tools/HttpHelper.java][fetchUriToFile][1] = -> TRY {  -> response=executeHTTPMethod(get,)@ -> entity=response.getEntity()@ -> entity.writeTo(fstream,)@ } CATCH(IOException,HttpClientException,HttpServerException) {}
results[https://github.com/novoda/RESTProvider/blob/d7f1060fc5929bfdf7280a5d191dc529d8051253/RESTProvider/src/test/java/novoda/rest/cursors/xml/XMLCursorTest.java][initRequestMocks][1] = -> TRY {  -> when(response.getEntity(),).thenReturn(entity,)@ } CATCH(IOException) {}
results[https://github.com/motech/motech-server-pillreminder/blob/65de2f5c1759978fe5b47cb7d6cd0534f7b72560/modules/admin/admin-bundle/src/test/java/org/motechproject/admin/osgi/AdminBundleIT.java][login][2] = -> TRY {  -> response=httpClient.execute(loginPost,)@ -> EntityUtils.consume(response.getEntity(),)@ } CATCH(IOException) {}
results[https://github.com/yanchenko/droidparts/blob/07b79ec679ada38cca0098ae5f5f75efbdc4ee2c/base/src/org/droidparts/net/http/RESTClient.java][consumeResponse][1] = -> TRY { -> resp.getEntity().consumeContent()@ } CATCH(IOException) { -> L.d(e,)@ }
results[https://github.com/roselone/FootWith/blob/99c91cc4f89576f25fb1b96f7abf6c4d60e5a21a/client/src/main/java/edu/thu/cslab/footwith/client/helper/ServerConnector.java][doPost][2] = -> TRY {  -> response=client.execute(post,)@ -> return EntityUtils.toString(response.getEntity(),)@ } CATCH(IOException) {}
results[https://github.com/sahan/ZombieLink/blob/c1fbfb6aed80f4d41a2798c1ce26446558eb586a/src/main/java/com/lonepulse/zombielink/core/response/ObjectResponseParser.java][processResponse][1] = -> TRY {  -> responseBytes=EntityUtils.toByteArray(httpResponse.getEntity(),)@ -> bais=new ByteArrayInputStream(responseBytes,)@ } CATCH(Exception) {}
results[https://github.com/cityindex/CIAPI.Java/blob/384b1eb36eb7ad36f9326ca2e1f9f1247d36508a/src/JsonClient/src/main/java/JsonClient/Java/httpstuff/AbstractHttpRequestItem.java][makeRequest][2] = -> TRY {  -> response=client.execute(method,)@ -> entity=response.getEntity()@ -> result=entity.getContent()@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/nfmangano/CalicoServer/blob/70d98304313ca1c9534061b30573d21e7e123608/calico3server/src/calico/plugins/designminders/DesignMindersPlugin.java][onDMScrap2Card][1] = -> TRY { -> resp=client.execute(post,)@ -> respEnt=resp.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/rnewson/couchdb-lucene/blob/c580034534b6e86afbc198e00eb0d3b00175d7d2/src/main/java/com/github/rnewson/couchdb/lucene/util/ErrorPreservingResponseHandler.java][handleResponse][3] = -> TRY {  -> statusLine=response.getStatusLine()@ -> entity=response.getEntity()@ -> str=(entity==null)?null:EntityUtils.toString(entity,)@ } CATCH(HttpResponseException,IOException) {}
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/cc37c7053fc459e2861add5e2e66edd84806b16d/extensions/freebase/src/com/google/refine/freebase/util/FreebaseUtils.java][mqlread][3] = -> TRY {  -> httpResponse=httpClient.execute(httpRequest,)@ -> return EntityUtils.toString(httpResponse.getEntity(),)@ } CATCH(ClientProtocolException,IOException,JSONException) {}
results[https://github.com/grandcloud/sndacs-java/blob/a45854d6e5dc7f81d3885e7363a7f46bf6f9b275/src/main/java/com/snda/storage/httpclient/RateLimitInterceptor.java][process][1] = -> TRY {  -> entity=response.getEntity()@ -> response.setEntity(new RateLimitEntity(entity,),)@!(entity==null) } CATCH(HttpException,IOException) {}
results[https://github.com/darrenjl/pdfrun/blob/c04751c73790cbc66e668e6e350855dfaf53c3ca/application/src/nl/sogeti/android/gpstracker/breadcrumbs/UploadBreadcrumbsTrackTask.java][createOpenGpsTrackerBundle][1] = -> TRY {  -> response=mHttpClient.execute(method,)@ -> responseEntity=response.getEntity()@ -> stream=responseEntity.getContent()@ } CATCH(OAuthMessageSignerException,OAuthExpectationFailedException,OAuthCommunicationException,IOException) {}
results[https://github.com/dyoo/moby-scheme/blob/f386f1d47e4717c6dbb50ac5872c4bc4f4728705/sandbox/cheney/Sketch/src/org/plt/platform/AndroidPlatform.java][getUrl][1] = -> TRY { -> response=client.execute(method,)@ -> entity=response.getEntity()@ -> IF { -> return ""@entity==null } -> is=entity.getContent()@!(entity==null) }
results[https://github.com/burzyk/worddroid/blob/c648ea4074ddcf11361200b3562c945a33f1264e/src/Android/WordDroid/src/org/worddroid/business/rest/WebServiceClientImpl.java][makeRequest][1] = -> TRY {  -> response=client.execute(request,)@ -> responseStr=EntityUtils.toString(response.getEntity(),)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/cloudsoft/brooklyn-marklogic/blob/897c93216f7cc5b66f0117a1cfaeed3094e3fbe8/brooklyn-marklogic-api/src/main/java/io/cloudsoft/marklogic/client/Responses.java][consumeResponse][1] = -> TRY { -> EntityUtils.consume(response.getEntity(),)@ } CATCH(IOException) { -> throw Throwables.propagate(e,)@ }
results[https://github.com/Awful/Awful.apk/blob/4c14d89dd192311464589543747cd3f5b5dd3731/application/src/com/ferg/awful/network/NetworkUtils.java][getStream][1] = -> TRY {  -> httpResponse=sHttpClient.execute(httpGet,)@ -> return httpResponse.getEntity().getContent()@ } CATCH(Exception) {}
results[https://github.com/rfkrocktk/red5-server/blob/7693ab02937ce89701984c9199a02ca1d665bb82/src/org/red5/server/net/rtmpt/RTMPTClientConnector.java][finalizeConnection][1] = -> TRY {  -> response=httpClient.execute(targetHost,closePost,)@ -> EntityUtils.consume(response.getEntity(),)@ } CATCH(IOException) {}
results[https://github.com/darrenjl/pdfrun/blob/054fda1bf199daedec037402042079c219eb17ed/application/src/nl/sogeti/android/gpstracker/adapter/tasks/UploadBreadcrumbsTrackTask.java][uploadPhoto][1] = -> TRY {  -> response=mHttpClient.execute(request,)@ -> responseEntity=response.getEntity()@ -> stream=responseEntity.getContent()@ } CATCH(IOException,OAuthMessageSignerException,OAuthExpectationFailedException,OAuthCommunicationException) {}
results[https://github.com/nasa/coeci-cms-mpsp/blob/952f47f21829e8bba7c5cbdb80c2c72e85ececae/pesp-jboss/cms-external-sources/services/src/main/java/gov/medicaid/screening/dao/impl/BaseDAO.java][postForm][1] = -> TRY {  -> postResponse=client.execute(httppost,)@ -> verifyAndAuditCall(hostId,postResponse,)@ -> return postResponse.getEntity()@ } CATCH(ClientProtocolException,IOException,ServiceException) {}
results[https://github.com/isenseDev/iSENSE-Hardware/blob/d26b6bf468eca06b7a7d2091314e3c7cb7034c85/Android/RAAC/src/edu/uml/cs/isense/raac/ImageManager.java][fetch][1] = -> TRY {  -> response=httpClient.execute(request,)@ -> return response.getEntity().getContent()@ } CATCH(MalformedURLException,IOException,IllegalStateException) {}
results[https://github.com/cloudspokes/mobile_campus/blob/6610102f64676ac8cb506ae922be039a23bf4b06/aau/android/VFConnector/src/com/salesforce/androidsdk/auth/OAuth2.java][parseResponse][2] = -> TRY {  -> responseAsString=EntityUtils.toString(httpResponse.getEntity(),HTTP.UTF_8,)@ -> parsedResponse=new JSONObject(responseAsString,)@ } CATCH(IOException,JSONException) {}
results[https://github.com/boussouira/android-arabic-reader/blob/0b0c2aa72e9342347d91ceba8a6f6e7fdf5aaec3/src/org/geometerplus/zlibrary/core/util/ZLAdUtil.java][getHttpResponse][1] = -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ -> IF { -> instream=entity.getContent()@entity!=null -> return result@entity!=null } }
results[https://github.com/Jasig/WebproxyPortlet/blob/c35d72c4e36883de1c449a26a88b88d9ae716ae4/src/main/java/edu/wisc/my/webproxy/beans/http/ResponseImpl.java][getResponseBodyAsStream][1] = -> TRY { -> is=response.getEntity().getContent()@ } CATCH(IOException) { -> LOG.error("Caught an IOException when retrieving the response body: ",e,)@ }
results[https://github.com/adamfisk/LittleProxy/blob/af33371061a7c599f79e57d0030af4b64c8a09c0/src/test/java/org/littleshoot/proxy/HttpFilterTest.java][getResponse][1] = -> TRY {  -> hr=http.execute(get,)@ -> responseEntity=hr.getEntity()@ -> EntityUtils.consume(responseEntity,)@ } CATCH(Exception) {}
results[https://github.com/resteasy/Resteasy/blob/779b6568c29ca0ff64633b98cdd479e1f72ba9ab/jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/util/HttpClient4xUtils.java][consumeEntity][1] = -> TRY { -> EntityUtils.consume(response.getEntity(),)@ } CATCH(IOException) { -> log.info("unable to close entity stream",e,)@ }
results[https://github.com/piraso/piraso-client/blob/405854d9c225ee0eb936f62ede2071df4737bc73/base/src/main/java/org/piraso/ui/base/manager/HttpUpdateManager.java][updateFromHttp][1] = -> TRY {  -> responseEntity=response.getEntity()@ -> settings=JacksonUtils.MAPPER.readValue(responseEntity.getContent(),ObjectEntrySettings.class,)@ } CATCH(IOException) {}
results[https://github.com/walien/webmarket/blob/4282d1f162571d1149f0a8429245a24b4cf59d93/webmarket/webmarket-backend/src/test/java/fr/webmarket/backend/test/rest/ItemRESTTest.java][doAuth][1] = -> TRY {  -> response=httpclient.execute(httpPost,)@ -> responseEntity=response.getEntity()@ -> contentResult=responseEntity.getContent()@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/RHIT/RHITMobile-Android/blob/4dc3edf729b125e7a822aed68499ff48a9d673ad/src/RHITMobile/src/edu/rosehulman/android/directory/service/JsonClient.java][handleResponse][1] = -> TRY {  -> statusLine=response.getStatusLine()@ -> entity=response.getEntity()@ -> body=(entity==null)?null:EntityUtils.toString(entity,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/ImaginationForPeople/android/blob/941ffa65e89a5fbe85cc689d205867a9711f70f6/src/org/imaginationforpeople/android/thread/BaseGetJson.java][sendRequest][1] = -> TRY {  -> response=httpClient.execute(httpGet,)@ -> return EntityUtils.toString(response.getEntity(),)@ } CATCH(ConnectTimeoutException,HttpHostConnectException,Exception) {}
results[https://github.com/darrenjl/pdfrun/blob/f2228948952ca30a82037fd2c618262426910388/external_sources/httpcore-4.1.1/httpcore-nio/src/test/java/org/apache/http/nio/protocol/TestTruncatedChunks.java][responseEntity][1] = -> TRY {  -> return new LenientNHttpEntity(response.getEntity(),new HeapByteBufferAllocator(),)@ } CATCH(IOException) {}
results[https://github.com/SuikoHero38/CraveParty/blob/274fcccd41393725f2d00f407ce60f0e2b91e256/FINAL/JakeWharton-ActionBarSherlock-e5c2d1c/library/src/com/exypnos/craveparty/libs/DBConnector.java][handleResponse][1] = -> TRY {  -> return URLDecoder.decode(EntityUtils.toString(arg0.getEntity(),),"UTF-8",)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/apache/jena/blob/cb847f13e0279ab3f5398a4fb6661e10ff947b48/jena-arq/src/main/java/org/openjena/riot/web/HttpResponseLib.java][handle][1] = -> TRY { -> entity=response.getEntity()@ -> in=entity.getContent()@ } CATCH(IOException) { -> ex.printStackTrace(System.err,)@ }
results[https://github.com/hellhand/SabdroidEx/blob/a9263994be73e799482ae3589bf8607d071ed0c4/src/com/utils/HttpUtil.java][getDataAsByteArray][1] = -> TRY {  -> response=httpClient.execute(host,job,credContext,)@ -> entity=response.getEntity()@ -> return EntityUtils.toByteArray(entity,)@ } CATCH(IOException) {}
results[https://github.com/mike-duvall/kanban-now-card-service/blob/b90a71ae552116850bb227e2ad028dcf633562e2/src/main/java/kanbannow/health/CardServicePostponeCardHealthCheck.java][getStringFromHttpResponse][1] = -> TRY {  -> inputStream=httpResponse.getEntity().getContent()@ -> inputStreamReader=new InputStreamReader(inputStream,)@ } CATCH(IOException) {}
results[https://github.com/christoffer/readmill-java-wrapper/blob/4886cc4c4d1df0b51d6b9b8739e62b09fd28e1b1/src/main/java/com/readmill/api/RequestBuilder.java][getResponseText][1] = -> TRY {  -> response=sendRequest()@ -> entity=response.getEntity()@ -> return EntityUtils.toString(entity,)@ } CATCH(IOException) {}
results[https://github.com/RedHatEMEA/rh6pd/blob/c4bee8c3f2281991795f4a2a97edcb7ec45aff75/examples/rest-web-example/src/main/java/com/rest/example/manager/JBPMRestManagementClient.java][getRequestString][1] = -> TRY {  -> inputStream=response.getEntity().getContent()@ -> inputStreamReader=new InputStreamReader(inputStream,)@ } CATCH(Exception) {}
results[https://github.com/porcelli/OpenSpotLight/blob/a7d223f88651e277d675b2e863d7ad57b2a6d5f5/osl-web/osl-web-war/src/test/java/org/openspotlight/web/command/ITHelloWeb.java][testHelloWorld][1] = -> TRY {  -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ -> result=EntityUtils.toString(entity,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/jsonld-java/jsonld-java/blob/015704bf96d35aa969b2133d6f2be35f511bf110/core/src/test/java/com/github/jsonldjava/utils/JSONUtilsTest.java][fromURLCache][1] = -> TRY {  -> respo=client.execute(get,localContext,)@ -> EntityUtils.consume(respo.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/beothorn/FilmeUtils/blob/24e76434615c992f4a70ddf389cef65e2c9666f1/src/main/java/filmeUtils/SimpleHttpClient.java][executeAndGetResponseContents][1] = -> TRY {  -> response=execute(httpost,)@ -> entity=response.getEntity()@ -> contentIS=entity.getContent()@ } CATCH(IOException,ClientProtocolException) {}
results[https://github.com/europeana/contrib/blob/15934811e1930e93405735facf6b5c3989f9efdd/ntua/awareness/app/gr/ntua/ivml/awareness/search/SearchServiceAccess.java][searchEuropeana][1] = -> TRY {  -> httpRes=httpClient.execute(httpGet,)@ -> httpEntity=httpRes.getEntity()@ -> httpEntity.writeTo(out,)@ } CATCH(Exception) {}
