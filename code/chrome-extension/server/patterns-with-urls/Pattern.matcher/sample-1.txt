results[https://github.com/eclipse/mtj/blob/feeb84db32e1b9c062ba3ee189fd01a6f76a9e2a/tags/1.0.1RC1/plugins/org.eclipse.mtj.ui/src/org/eclipse/mtj/internal/ui/preprocess/contentAssistant/AntennaPPPrefixHandler.java][hasLegalPrefix][88] = -> matcher=preprocessStatPattern.matcher(line,)@ -> IF { -> return true@matcher.matches() }
results[https://github.com/cmccabe/hadoop/blob/dbedbf2d9308833816c5597eb8d5964a3cba25d4/src/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java][getDataNodeStorageRoot][587] = -> matcher=BLOCK_POOL_PATH_PATTERN.matcher(bpRoot,)@ -> IF { -> return matcher.group(1,)@matcher.matches() }
results[https://github.com/OpenSextant/Xponents/blob/2e78f0335c0a12dffa6d690355a8a323f22eb386/Core/src/main/java/org/mitre/opensextant/util/TextUtils.java][squeeze_whitespace][26] = -> m=delws.matcher(t,)@ -> IF { -> return m.replaceAll(" ",)@m!=null }
results[https://github.com/colemickens/camlistore/blob/2ee0374bc3d0610604bf66f1728cc366405c1c14/clients/android/src/org/camlistore/UploadThread.java][<init>][5] = -> mm=statPattern.matcher(line,)@ -> IF { -> throw new RuntimeException("bogus CamputStatMessage: "+line,)@!(mm.matches()) }
results[https://github.com/Unidata/thredds/blob/3fe4a931124981d44baad05115c23a8f5dca2fcf/bufr/src/test_framework/java/ucar/nc2/iosp/bufr/Scanner.java][extractWMO][149] = -> matcher=wmoPattern.matcher(header,)@ -> IF { -> return null@!(matcher.matches()) } -> return matcher.group(1,)@!(!(matcher.matches()))
results[https://github.com/shantanusharma/barna/blob/22f0be87461b31652f308e1ea39cfbf651b76a12/barna/fbi.genome.tools/src/main/java/StreamTest.java][isNumeric][125] = -> pattern=Pattern.compile("[0-9]*",)@ -> isNum=pattern.matcher(str,)@ -> IF { -> return false@!(isNum.matches()) }
results[https://github.com/walkerart/services/blob/cec0dc4fca5320ad133f91504934c630a35f60b7/services/account/service/src/main/java/org/collectionspace/services/account/storage/AccountValidatorHandler.java][isInvalidEmail][4] = -> p=Pattern.compile("^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[_A-Za-z0-9-]+)",)@ -> m=p.matcher(email,)@ -> IF { -> msgBldr.append("\nemail : invalid "+email,)@ }
results[https://github.com/polyvi/xface-android/blob/623e2423d90d3a9ec5ece6db576f7fc3a6dde5b7/framework/src/com/squareup/okhttp/internal/DiskLruCache.java][validateKey][34] = -> matcher=LEGAL_KEY_PATTERN.matcher(key,)@ -> IF { -> throw new IllegalArgumentException("keys must match regex [a-z0-9_-]{1,64}: \""+key+"\"",)@!(matcher.matches()) }
results[https://github.com/KristianKarl/GraphWalker/blob/e89e610c5161b2a22085906e2d5a912ccde4b238/graphwalker/src/main/java/org/graphwalker/graph/Vertex.java][isSwitchModel][18] = -> p=Pattern.compile("\\n(SWITCH_MODEL)",Pattern.MULTILINE,)@ -> m=p.matcher(str,)@ -> IF { -> return true@m.find() }
results[https://github.com/graphstream/gs-core/blob/9439122e8675773f08484e76baf15d4c6aee4c8f/src/org/graphstream/ui/graphicGraph/GraphicElement.java][addAttribute][3] = -> matcher=acceptedAttribute.matcher(attribute,)@ -> IF { -> super.addAttribute(attribute,values,)@ }
results[https://github.com/JacORB/JacORB/blob/1f622ed9a104adffcb4437a3c8fc6d498cd35637/test/regression/src/test/java/org/jacorb/test/common/TestUtils.java][patternMatcher][13] = -> matcher=pattern.matcher(text,)@ -> IF { -> return matcher.end()@matcher.find() }
results[https://github.com/codeforamerica/open311_java/blob/2b8e4a0a3808cc0420d1de6f5baec18624a7a005/src/main/java/org/codeforamerica/open311/facade/data/operations/POSTServiceRequestData.java][setEmail][1] = -> matcher=VALID_EMAIL_ADDRESS_REGEX.matcher(email,)@ -> IF { -> tryToAddString(DataParser.EMAIL_TAG,email,)@ }
results[https://github.com/rovo89/public-transport-enabler-fork/blob/5eb81d40aea6fc27c1b11595793450c370d33c07/src/de/schildbach/pte/SeProvider.java][splitPlaceAndName][14] = -> m=P_SPLIT_NAME_KN.matcher(name,)@ -> IF { -> return  new String[]@m.matches() } -> return super.splitPlaceAndName(name,)@!(m.matches())
results[https://github.com/nbraun/texclipse/blob/4ef8da5f65287b18f121a4073850c7d3b1a0cfdc/source/net/sourceforge/texlipse/editor/TexEditorTools.java][isLineCommandLine][3] = -> txt=text.trim()@ -> m=simpleCommandPattern.matcher(txt,)@ -> IF { -> return true@m.matches() }
results[https://github.com/junichi11/netbeans-vagrant-plugin/blob/ef704da6603bcbc97ad32803a482910d6ee6d71f/vagrant/src/org/netbeans/modules/vagrant/command/Vagrant.java][processLine][2] = -> matcher=URL_PATTERN.matcher(line,)@ -> IF { -> vagrantshareUrl=matcher.group("http",)@matcher.find() }
results[https://github.com/pgorla/usergrid/blob/f20a174a3d7e371bec8e6b6bfbca265c9ffcd69f/core/src/main/java/org/usergrid/utils/Inflector.java][apply][10] = -> matcher=expressionPattern.matcher(input,)@ -> IF { -> return null@!(matcher.find()) } -> return matcher.replaceAll(replacement,)@!(!(matcher.find()))
results[https://github.com/antiAD/AntiAd/blob/8d46ac3312cc885f73d46cda1eedfcd03f947374/src/main/java/me/jne/antiad/Adfinder.java][checkForAdvertising][2] = -> regexMatcher=ipPattern.matcher(message,)@ -> IF { -> regexMatcherurl=webpattern.matcher(message,)@ }
results[https://github.com/kiivihal/open-europeana/blob/585c2404351834e363963e036c01ad76c07921fc/normalizer/src/main/java/eu/europeana/normalizer/converters/YearExtractor.java][convertValue][20] = -> matcher=PATTERN.matcher(value,)@ -> IF { -> return matcher.group()@matcher.find() }
results[https://github.com/42BV/jarb/blob/b57908f0479c55ff5972effcb3f8dfcab13364d0/jarb-constraints/src/main/java/org/jarbframework/constraint/violation/resolver/vendor/ViolationMessagePatterns.java][match][2] = -> matcher=pattern.matcher(message,)@ -> IF { -> variables=new VariableAccessor(matcher,)@matcher.matches() }
results[https://github.com/rsavoye/cadpage/blob/187585a855080faa527b48204f0448be8674a12f/cadpage/src/net/anei/cadpage/parsers/MsgParser.java][getMatcher][1] = -> match=ptn.matcher(line,)@ -> IF { -> return null@!(match.find(spt,)) } -> spt=match.end()@!(!(match.find(spt,)))
results[https://github.com/roghughe/captaindebug/blob/ae72ea13a858bd505c0c244be76870a4b01b4369/powermock-tips/src/main/java/com/captaindebug/AnchorTag.java][validate][1] = -> m=pattern.matcher(url,)@ -> IF { -> throw new IllegalArgumentException()@!(m.matches()) }
results[https://github.com/jsanda/rhq-plugins/blob/4105bc972d2cd08c97bcab5187be8b146832dec4/apache/src/test/java/org/rhq/plugins/apache/helper/LensFilter.java][accept][2] = -> name=pathname.getName()@ -> match=pattern.matcher(name,)@ -> IF { -> return true@match.matches() }
results[https://github.com/cometd/cometd/blob/d762563160998c73d6a5bc05ea26629d05c87fc4/cometd-jetty/server/src/main/java/org/mortbay/cometd/filter/NoScriptsFilter.java][filterString][4] = -> m=__script.matcher(string,)@ -> IF { -> string=StringUtil.replace(string,"script","span",)@ }
results[https://github.com/NiceSystems/hrider/blob/31cf1066b053f449fa9e46ffb872bb276260bdcd/src/main/java/hrider/filters/PatternFilter.java][match][1] = -> result=this.regex.matcher(value,).find()@ -> IF { -> return !(result)@ }
results[https://github.com/d00n/sage/blob/d2843f86039b2c923b05a21959034cf824b87f02/wowza/src/com/infrno/multiplayer/commands/StringExpression.java][createExpression][2] = -> matcher=m_pattern.matcher(token,)@ -> IF { -> return null@!(matcher.find()) } -> return new StringExpression(token,)@!(!(matcher.find()))
results[https://github.com/ndemengel/hackergarten-moreunit/blob/9108f73f9eb4f090797172027fc1b20b494b7e81/org.moreunit.mock/src/org/moreunit/mock/templates/resolvers/SimplePatternResolver.java][resolve][2] = -> matcher=pattern.matcher(codePattern,)@ -> IF { -> return matched(matcher,)@matcher.find() }
results[https://github.com/tatsuhiro-t/argparse4j/blob/f3baffb31425df9bf6b7827690f9a86f939cfdd8/src/main/java/net/sourceforge/argparse4j/helper/PrefixPattern.java][removePrefix][5] = -> m=prefixPattern_.matcher(str,)@ -> IF { -> return m.replaceFirst("",)@m.find()&&!(m.group(0,).equals(str,)) }
results[https://github.com/schildbach/public-transport-enabler/blob/cf651676d29f85b331fc5f789326e9845f6ded06/enabler/src/de/schildbach/pte/BahnProvider.java][splitStationName][2] = -> m=P_SPLIT_NAME_ONE_COMMA.matcher(name,)@ -> IF { -> return  new String[]@m.matches() } -> return super.splitStationName(name,)@!(m.matches())
results[https://github.com/ochafik/nativelibs4java/blob/4001c94e2922689cefb1ef1c9ec4474c32989f1d/libraries/jnaerator/ochafik-util/src/main/java/com/ochafik/util/string/RegexUtils.java][match][2] = -> matcher=p.matcher(s,)@ -> IF { -> return getGroups(matcher,)@matcher.matches() }
results[https://github.com/andynicholson/Vidiom/blob/90c632187d8b8a5de9e1f0913e533447fc1e53ad/sources/commons-net-2.0-src/src/main/java/org/apache/commons/net/ftp/parser/RegexFTPFileEntryParserImpl.java][matches][2] = -> _matcher_=pattern.matcher(s,)@ -> IF { -> this.result=_matcher_.toMatchResult()@_matcher_.matches() }
results[https://github.com/anotheria/moskito/blob/8ef92f36f0d5d5bb75f7829b2b47f4200d87c459/moskito-webcontrol/test/junit/net/java/dev/moskito/webcontrol/MoskitoWebControlUIFilterTest.java][isWildCard][1] = -> p=Pattern.compile("\\[@([^=]+)=\'([^*\\]]*\\*[^\\]]*)\'\\]+",)@ -> m=p.matcher(pattern,)@ -> IF { -> System.out.println("pattern="+pattern+" is wildcard",)@!(m.find()) -> return true@m.find() }
results[https://github.com/ihh/zoogas/blob/3a89657933369af3c5f9971b318a02706ad1203f/current/ParticlePattern.java][makeParticle][2] = -> m=namePattern.matcher(name,)@ -> IF { -> p=new Particle(name,prefix,color,energy,board,ps,)@ }
results[https://github.com/apache/synapse/blob/bc2626ace2d70d26767851b8baeb8ab9c3cb871e/scratch/asankha/synapse_ws/modules/core/src/main/java/org/apache/synapse/config/xml/SwitchCase.java][matches][1] = -> matcher=regex.matcher(value,)@ -> IF { -> return false@matcher==null } -> retVal=matcher.matches()@!(matcher==null)
results[https://github.com/TeamApex/ju4pa/blob/d928139b07c34e4544f100d4fd1d2480f0d1114b/org.eclipse.papyrus.uml.diagram.common/src/org/eclipse/papyrus/uml/diagram/common/editpolicies/OrphanViewPolicy.java][isInteger][2] = -> matcher=digit.matcher(s,)@ -> IF { -> result=matcher.matches()@matcher!=null }
results[https://github.com/cygri/pubby/blob/0cc1fbf41b2b235064c0c9e5a0f720fac777d3c4/src/main/java/de/fuberlin/wiwiss/pubby/sources/RemoteSPARQLDataSource.java][parseQueryParam][1] = -> match=queryParamPattern.matcher(param,)@ -> IF { -> throw new ConfigurationException("Query parameter \""+param+"\" is not in \"param=value\" form",)@!(match.matches()) }
results[https://github.com/headsupdev/agile/blob/9413f0a23c995dc8c716315dc76db1bcdac09421/agile-apps/agile-app-builds/src/main/java/org/headsupdev/agile/app/ci/builders/MavenTwoBuildHandler.java][matchErrorWarningCounts][1] = -> mBugs=LINT_ERROR_WARNING_COUNTS_PATTERN.matcher(line,)@ -> IF { -> updateErrorWarningCounts(build,mBugs,)@mBugs.find() }
results[https://github.com/wiwie/clusteval/blob/e2d9db2cff37f12eecd109f38c588c01668b1b2b/clusteval/src/de/clusteval/data/dataset/DataSetAttributeParser.java][processLine][2] = -> m=attributeLinePrefixPattern.matcher(line,)@ -> IF { -> stripped=line.replace(attributeLinePrefix,"",)@ }
results[https://github.com/gildmi/iCrossFit/blob/7ee53f7d702410a4e391df5183d73ad05f0eb8a7/NetBeansProject/iCrossFit/src/com/icrossfit/gui/CreateGymJFrame.java][checkEmail][2] = -> pattern=Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"+"[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$",)@ -> matcher=pattern.matcher(emailjTextField.getText(),)@ -> IF { -> return false@!(matcher.matches()) }
results[https://github.com/itm/spyglass/blob/76a183a0ea23b127307103bdf25a8a020e40681f/src/de/uniluebeck/itm/spyglass/util/StringFormatter.java][indexOfNonNumeric][3] = -> m=notNumeric.matcher(lookIn,)@ -> IF { -> return m.start()@m.find() }
results[https://github.com/rsavoye/cadpage/blob/e7648522f78f41caccd37b50c1c40c8923938b3d/cadpage/src/net/anei/cadpage/parsers/IN/INPorterCountyParser.java][parseMsg][2] = -> body=MISSING_LF_PTN.matcher(body,).replaceAll("\n",)@ -> IF { -> return false@!(parseFields(body.split("\n",),4,data,)) }
results[https://github.com/impulse-org/imp.releng/blob/8733f1cd8ced3607e4c5187b350496d8e0bef101/src/org/eclipse/imp/releng/CopyrightAdder.java][addCopyright][2] = -> m=COPYRIGHT_PATTERN.matcher(src,)@ -> IF { -> return src@m.find() } -> src=removeOldCopyright(src,)@!(m.find())
results[https://github.com/teachus/teachus/blob/91616cee536d341b7ae629287cb77fb34893957d/teachus-tools/src/main/java/dk/teachus/tools/upgrade/config/IntegerNode.java][setValue][1] = -> matcher=INT_PATTERN.matcher(value,)@ -> IF { -> this.value=Integer.parseInt(value,)@ }
results[https://github.com/jmchilton/SnpEffect/blob/493a7615355a5f2c520b199ed6afa5532595dde8/src/main/java/ca/mcgill/mcb/pcingola/reactome/Reactome.java][findRegexp][2] = -> m=pattern.matcher(str,)@ -> IF { -> return null@!(m.find()) } -> return m.group()@!(!(m.find()))
results[https://github.com/stg-tud/tigerseyeplugin-examples/blob/ff0e480b0357dd1ed58b585b2b9c89ec47715dac/de.tud.stg.tigerseye.sdfdsl.tests/src/sdf/test/TypeHandlerTest.java][assertMatch][1] = -> matcher=pattern.matcher(input,)@ -> IF { -> fail("pattern <"+pattern+"> does not match <"+input+">",)@ }
results[https://github.com/eduardogreco/ProjetoIntegradorLavaRapido/blob/0371b47afca4d439527965df595b3929fc068f47/CWSManager/src/br/edu/utfpr/cwsmanager/model/util/Validacao.java][validarEmail][1] = -> padrao=Pattern.compile("^[a-z][a-z\\-_.0-9]+@.+\\.[a-z]+",)@ -> pesquisa=padrao.matcher(email.toLowerCase(),)@ -> IF { -> return false@!(pesquisa.matches()) }
results[https://github.com/ihh/zoogas/blob/ccb4cdd4524bf6dc769a4141bff1b9576accc47d/ParticlePattern.java][makeParticle][1] = -> m=namePattern.matcher(name,)@ -> IF { -> p=new Particle(name,color,board,ps,)@ }
results[https://github.com/caelum/vraptor4/blob/98c27f69b11ebb396a746c3a3990d87b890d9a8f/vraptor-core/src/main/java/br/com/caelum/vraptor4/Extractor.java][matches][3] = -> matcher=regex.matcher(requestURI,)@ -> IF { -> throw new IllegalStateException("Should match any uri",)@!(matcher.matches()) }
results[https://github.com/catyguan/bma.java.common/blob/34fc99539a44d5eea453907b94f7b32b2aa0c97c/langutil/src/main/java/bma/common/langutil/core/StringUtil.java][patternParse][1] = -> m=pattern.matcher(org,)@ -> IF { -> return null@!(m.matches()) } -> m.appendReplacement(sb,format,)@!(!(m.matches()))
results[https://github.com/apache/hive/blob/12c43b2ed151ef954aa628c8fb24fe8d43154cc0/ql/src/java/org/apache/hadoop/hive/ql/exec/vector/expressions/FilterStringColLikeStringScalar.java][tryCreate][1] = -> matcher=NONE_PATTERN.matcher(pattern,)@ -> IF { -> return new NoneChecker(pattern,)@matcher.matches() }
results[https://github.com/voxeolabs/moho/blob/f10a6a80dd9c059cc35f98f79d8191bf3b7fe551/moho-impl/src/main/java/com/voxeo/moho/util/ParticipantIDParser.java][parseId][1] = -> matcher=pattern.matcher(raw,)@ -> IF { -> return  new String[]@matcher.matches() } -> throw new IllegalArgumentException("Illegal ID format:"+raw,)@!(matcher.matches())
results[https://github.com/ImmobilienScout24/yum-repo-server/blob/459e2da0509884bca3b57ad4422a09223c2ccccf/src/main/java/de/is24/infrastructure/gridfs/http/web/controller/FileController.java][getMatcher][1] = -> matcher=RANGE_PATTERN.matcher(rangeHeader,)@ -> IF { -> throw new BadRangeRequestException("Byte range header does not match "+RANGE_PATTERN_REGEXP,rangeHeader,)@!(matcher.matches()) }
results[https://github.com/rrkommer/gwiki/blob/880040b0dac1302dfb0aa08eddcffb6e88ab4b62/gwiki-genome-dependencies/src/main/java/de/micromata/genome/util/text/RegExpToken.java][consume][1] = -> matcher=pattern.matcher(text,)@ -> IF { -> return null@mr.groupCount()<2 } -> return new RegExpTokenResult(this,matcher,matched,)@!(mr.groupCount()<2)
results[https://github.com/timurstrekalov/saga/blob/7ad92ecb12d71cb9461c92ce5a96d536cb5c7c55/saga-core/src/main/java/com/github/timurstrekalov/saga/core/instrumentation/HtmlUnitBasedScriptInstrumenter.java][handleEvals][1] = -> matcher=evalRe.matcher(sourceName,)@ -> IF { -> return sourceName+"("+evalCounter.getAndIncrement()+")"@matcher.find() }
results[https://github.com/terraframe/Runway-SDK/blob/1b5b7139200a8f1e69ce76d65134b274d73cba79/runwaysdk-server/src/main/java/com/runwaysdk/dataaccess/io/XMLImporter.java][validateId][1] = -> matcher=idPattern.matcher(id,)@ -> IF { -> throw new XMLException(msg,)@!(matcher.matches()) }
results[https://github.com/arquillian/arquillian-core/blob/9d3b82f736b7ab5407930af9954d2b88b2d416ac/config/impl-base/src/main/java/org/jboss/arquillian/config/impl/extension/PropertiesParser.java][handle][1] = -> matcher=expression.matcher(propertyName,)@ -> IF { -> handle(matcher,value,descriptor,)@matcher.matches() -> return true@matcher.matches() }
results[https://github.com/illumos/opengrok/blob/d4779cee50a85146ac72dbfe52033b3fd645f5ff/src/org/opensolaris/opengrok/web/Util.java][getEmail][3] = -> email_matcher=EMAIL_PATTERN.matcher(author,)@ -> IF { -> email=email_matcher.group(1,).trim()@email_matcher.find() }
results[https://github.com/alfredas/jwbf/blob/049ad1c8e1ac71018e81e09bfc9c9201d1738b64/jwbf/src/net/sourceforge/jwbf/actions/http/mw/api/alpha/GetTemplateUserTitles.java][parseHasMore][6] = -> p=Pattern.compile("<query-continue>.*?"+"<embeddedin *eicontinue=\"([^\"]*)\" */>"+".*?</query-continue>",Pattern.DOTALL|Pattern.MULTILINE,)@ -> m=p.matcher(s,)@ -> IF { -> nextPageInfo=m.group(1,)@m.find() }
results[https://github.com/svn2github/plantuml/blob/641cc02dfbf7dc9215334608b65c31a4ca6a22bc/tags/plantuml-7363/src/net/sourceforge/plantuml/eggs/PSystemPathFactory.java][executeLine][5] = -> m=p.matcher(line,)@ -> IF { -> return false@m.find()==false } -> system=new PSystemPath(m.group(1,),)@!(m.find()==false)
results[https://github.com/spullara/maptool/blob/8da6aeffef4b39222901852f7eab200423214fb8/src/net/rptools/maptool/client/ui/macrobuttons/buttons/MacroButton.java][getButtonText][1] = -> label=properties.getLabel()@ -> m=MACRO_LABEL.matcher(label,)@ -> IF { -> buttonLabel=m.group(2,)@m.matches() }
results[https://github.com/rsavoye/cadpage/blob/2abfea6e23745869051e628f65c0a86c044d0bac/cadpage/src/net/anei/cadpage/parsers/MD/MDCarrollCountyBParser.java][parseMsg][3] = -> match=SUBJECT_PTN.matcher(subject,)@ -> IF { -> return false@!(match.matches()) } -> data.strSource=match.group(1,)@!(!(match.matches())) -> data.strCallId=match.group(2,)@!(!(match.matches()))
results[https://github.com/breskeby/griffon/blob/fc54acfbbac3e19b18644c5cf2c9b2b25ba52c18/src/cli/org/codehaus/griffon/cli/support/GriffonBuildEventListener.java][setVariable][1] = -> matcher=EVENT_NAME_PATTERN.matcher(var,)@ -> IF { -> eventName=matcher.group(1,)@matcher.matches()&&o instanceof Closure } -> super.setVariable(var,o,)@
results[https://github.com/mouyang/urlrewrite/blob/c0df147871ddd253ac421c00f89181fe31ff8ac9/src/main/java/org/tuckey/web/filters/urlrewrite/utils/ModRewriteConfLoader.java][parseLogType][1] = -> logTypeMatcher=LOG_TYPE_PATTERN.matcher(line,)@ -> IF { -> logTypeStr=StringUtils.trimToNull(logTypeMatcher.group(1,),)@logTypeMatcher.matches() }
results[https://github.com/apache/hadoop-common/blob/8900c87f717c7615db22e68463dee2d74ad31d28/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FsShellPermissions.java][parseOwnerGroup][4] = -> matcher=chgrpPattern.matcher(groupStr,)@ -> IF { -> throw new IllegalArgumentException("'"+groupStr+"' does not match expected pattern for group",)@!(matcher.matches()) } -> group=matcher.group(1,)@!(!(matcher.matches()))
results[https://github.com/svn2github/plantuml/blob/da543896a67c7a26eafbafd05a21c78526de9cfc/tags/plantuml-6703/src/net/sourceforge/plantuml/graphic/Img.java][getVspace][1] = -> m=vspacePattern.matcher(html,)@ -> IF { -> return 0@m.find()==false } -> return Integer.parseInt(m.group(1,),)@!(m.find()==false)
results[https://github.com/gxa/gxa/blob/16bce870223adb4bf971d9d399fcf71d2e1f42ce/atlas-utils/src/main/java/uk/ac/ebi/gxa/anatomogram/svgutil/SvgViewport.java][parse][1] = -> str=(Strings.isNullOrEmpty(str,))?"":str@ -> m=PAR_REGEXP.matcher(str,)@ -> IF { -> return new PreserveAspectRatio(str,)@m.matches() }
results[https://github.com/iwein/spring-integration/blob/e6302ffff8ec59d517ff47d010bbb31614c6f340/org.springframework.integration.adapter/src/main/java/org/springframework/integration/adapter/mail/monitor/MailTransportUtils.java][getSubject][1] = -> matcher=SUBJECT_PATTERN.matcher(uri.getSchemeSpecificPart(),)@ -> IF { -> return matcher.group(1,)@matcher.find() }
results[https://github.com/apache/hive/blob/997202b4fe678d24991f67085e7a11fca2194f00/ql/src/java/org/apache/hadoop/hive/ql/exec/vector/expressions/FilterStringColRegExpStringScalar.java][tryCreate][1] = -> matcher=MIDDLE_PATTERN.matcher(pattern,)@ -> IF { -> return new MiddleChecker(matcher.group(1,),)@matcher.matches() }
results[https://github.com/motech/MOTECH-Mobile/blob/eb1aa8a3cff4acc3283bb56f7576f81ea7d97682/motech-mobile-imp/src/test/java/org/motechproject/mobile/imp/serivce/FormRequestTest.java][testRegularExp][1] = -> p=Pattern.compile("[a-zA-Z0-9_\\-]+\\s*=\\s*([a-zA-Z0-9_\\-\\s/.,'])+",)@ -> m=p.matcher(message,)@ -> IF { -> result=m.group()@m.find() }
results[https://github.com/Najon/Grabber/blob/61d221bffb6b21453a6ebe42bd3fd36c74ed0079/org/esgi/java/grabber/resource/Ressource.java][<init>][9] = -> p=Pattern.compile("^(https?://[^/]+)",)@ -> m=p.matcher(urlString,)@ -> IF { -> domain=m.group(1,)@m.find() }
results[https://github.com/svn2github/plantuml/blob/96eed82d1a1bcb0918e210de8520142e8f7d54d1/tags/plantuml-7931/src/net/sourceforge/plantuml/svg/SvgData.java][init][5] = -> p=Pattern.compile("(?i)<polygon\\s+[^>]*points=\"([^\"]+)\"",)@ -> m=p.matcher(svg,)@ -> IF { -> return @m.find()==false } -> points=m.group(1,)@!(m.find()==false)
results[https://github.com/aaronbinns/wayback/blob/9e70071b1d8b367c53680d6ad0344b63e6403193/src/java/org/archive/wayback/archivalurl/parser/PathDatePrefixParser.java][parse][8] = -> matcher=WB_QUERY_REGEX.matcher(requestPath,)@ -> IF { -> dateStr=matcher.group(1,)@matcher!=null&&matcher.matches() -> urlStr=matcher.group(2,)@matcher!=null&&matcher.matches() }
results[https://github.com/eclipse/mylyn.docs/blob/4fff6d8477b2512720e4ba4916aa56919fd37ecd/org.eclipse.mylyn.wikitext.tests/src/org/eclipse/mylyn/wikitext/core/parser/markup/token/ImpliedHyperlinkReplacementTokenTest.java][testFind][1] = -> matcher=pattern.matcher(url,)@ -> IF { -> start=matcher.start(1,)@matcher.find() -> end=matcher.end(1,)@matcher.find() }
results[https://github.com/pedralho/more-about-it/blob/3bc27ee77578ba940b43204639fab6b1164800da/desana/src/base/TokenData.java][hasDataMaskCommomDomain][1] = -> mask=getMask()@ -> pattern=Pattern.compile("\\[\\^<>\\]\\)\\+\\?",)@ -> matcher=pattern.matcher(mask,)@ -> IF { -> return true@matcher.find() }
results[https://github.com/aerogear/aerogear-simplepush-server/blob/9173f10b5f143effc4a39c48f956e01668de78c0/server/src/main/java/org/jboss/aerogear/simplepush/util/VersionExtractor.java][extractVersion][1] = -> matcher=VERSION_PATTERN.matcher(payload,)@ -> IF { -> return matcher.group(1,)@matcher.find() } -> throw new RuntimeException("Could not find a version in payload ["+payload+"]",)@!(matcher.find())
results[https://github.com/aaronbinns/wayback/blob/a107a5160a2c8721aad44d1610114739e9cdd2f2/wayback-core/src/main/java/org/archive/wayback/util/webapp/BeanNameRegistrar.java][registerPort][4] = -> m=PORT_PATTERN.matcher(name,)@ -> IF { -> port=Integer.parseInt(m.group(1,),)@m.matches() -> return true@m.matches() }
results[https://github.com/seasarorg/s2dao/blob/1418233b6c8888c4abca5190274911b9039344dc/s2-dao/src/main/java/org/seasar/dao/impl/DaoMetaDataImpl.java][startsWithSelect][3] = -> IF { -> m=startWithSelectPattern.matcher(query,)@query!=null -> IF { -> return true@query!=null && m.lookingAt() } }
results[https://github.com/ZiRTeam/ITStep/blob/b4f93e7070a45cad3e158741512ef76c9a83de9e/ILost/src/com/zirteam/ilost/ActivityRegistration.java][validateEmail][3] = -> pattern=Pattern.compile("^[A-Za-z0-9_.%+\\-]+@[A-Za-z0-9.\\-]+\\.[A-Za-z]{2,4}",)@ -> matcher=pattern.matcher(email,)@ -> IF { -> return true@matcher.find() } ELSE { -> return false@!(matcher.find()) }
results[https://github.com/bryanjimenez/empanada/blob/e6a5ffa14bde5495b1182a74875f392f2a968b08/hadoop/hadoop-1.2.1/src/core/org/apache/hadoop/util/ProcfsBasedProcessTree.java][getValidPID][3] = -> IF { -> return deadPid@pid==null } -> m=numberPattern.matcher(pid,)@!(pid==null) -> IF { -> return pid@!(pid==null) && m.matches() }
results[https://github.com/svn2github/plantuml/blob/6fb4bf7f5d2f29095dff86db3b87e60feedf0afe/tags/plantuml-7650/src/net/sourceforge/plantuml/graphic/Img.java][getInstance2][3] = -> m=srcPattern2.matcher(html,)@ -> IF { -> return new Text("(SYNTAX ERROR)",)@m.find()==false } -> src=m.group(1,)@!(m.find()==false)
results[https://github.com/INightmare/apache-isis/blob/493009c9ce69f28481f0e3dac6aaf4e79b4ad9c5/framework/viewer/restfulobjects/json-viewer/src/main/java/org/apache/isis/viewer/json/viewer/util/UrlParserUtils.java][oidFromLink][1] = -> href=link.getString("href",)@ -> matcher=OBJECT_OID.matcher(href,)@ -> IF { -> return null@!(matcher.matches()) } -> return matcher.group(1,)@!(!(matcher.matches()))
results[https://github.com/rsavoye/cadpage/blob/dd23c43934482a1901ad6a2e3d27de6ab73d4e8e/cadpage/src/net/anei/cadpage/parsers/KS/KSButlerCountyParser.java][parseMsg][1] = -> body=PARENS.matcher(body,).replaceAll(" $1:",)@ -> body=body.replace(" (RP PHONE NUMBER) "," RP PHONE NUMBER: ",)@ -> IF { -> return false@!(super.parseMsg(body,data,)) }
results[https://github.com/tekul/spring-security/blob/bc6fc518d3a05ae3fd1c9e728032f5be2930d448/ldap/src/main/java/org/springframework/security/ldap/authentication/ad/ActiveDirectoryLdapAuthenticationProvider.java][parseSubErrorCode][1] = -> m=SUB_ERROR_CODE.matcher(message,)@ -> IF { -> return Integer.parseInt(m.group(1,),16,)@m.matches() }
results[https://github.com/apache/hive/blob/12c43b2ed151ef954aa628c8fb24fe8d43154cc0/ql/src/java/org/apache/hadoop/hive/ql/exec/vector/expressions/FilterStringColLikeStringScalar.java][tryCreate][1] = -> matcher=BEGIN_PATTERN.matcher(pattern,)@ -> IF { -> return new BeginChecker(matcher.group(1,),)@matcher.matches() }
results[https://github.com/RoyalDev/RoyalChat/blob/10a99efa131f648b48ee83e6568a20f0e56d7a99/src/org/royaldev/royalchat/DataManager.java][indexOfRegex][1] = -> p=Pattern.compile(regex,)@ -> m=p.matcher(str,)@ -> IF { -> return -1@!(m.find()) } -> return m.start()@!(!(m.find()))
results[https://github.com/NCIP/cab2b/blob/0f71cb14639be1090425be778a8689ef1fc046c1/source/common/main/edu/wustl/cab2b/common/util/Utility.java][indexOfRegEx][1] = -> pat=Pattern.compile(searchPattern,Pattern.CASE_INSENSITIVE,)@ -> mat=pat.matcher(searchString,)@ -> IF { -> position=mat.start()@mat.find() }
results[https://github.com/dhanji/sitebricks/blob/19e19c805d260222172566999b57d3ee689407bb/sitebricks/src/main/java/com/google/sitebricks/compiler/AnnotationParser.java][readAnnotation][1] = -> matcher=WIDGET_ANNOTATION_REGEX.matcher(text,)@ -> IF { -> annotation=matcher.group().trim()@matcher.find() }
results[https://github.com/atlasapi/atlas/blob/53821fe0a9b20c24e84a2eb24c6c5dd6dbfcff14/src/main/java/org/atlasapi/remotesite/channel4/pmlsd/C4AtomApi.java][canonicalizeSeriesFeedId][1] = -> matcher=SERIES_PAGE_ID_PATTERN.matcher(source.getId(),)@ -> IF { -> return FEED_ID_CANONICAL_PREFIX+matcher.group(1,)@matcher.matches() }
results[https://github.com/pjf57/mat-server-side/blob/aadac068d455720a81ab2e825cd3e520fbfaaf6e/java/fwk/src/com/cs/fwk/core/sys/MatPropertiesHelper.java][getParamNameFromProperty][1] = -> name=filterName(name,)@ -> matcher=regexParam.matcher(name,)@ -> IF { -> param=matcher.group(2,)@matcher.find() -> return param@matcher.find() }
results[https://github.com/deepsky/SQL-Code-Assistant-/blob/8fb9f91dbfce7177cdc4fea74378047849ce2e21/shared/root/java/resolver/com/deepsky/lang/plsql/resolver/utils/ContextPathUtil.java][getOwnColumns][1] = -> m=fkPattern.matcher(value,)@ -> IF { -> return m.group(2,).split("\\,",)@m.find() }
results[https://github.com/svn2github/htmlunit-fork/blob/00268eb4dd900deff466cf7b1e8cc4d26a94143e/htmlunit/src/test/java/com/gargoylesoftware/htmlunit/CodeStyleTest.java][getIndentation][1] = -> matcher=leadingWhitespace.matcher(line,)@ -> IF { -> return matcher.end()-matcher.start()@matcher.find() }
results[https://github.com/jbsalgado/bpa-i/blob/6266e85de93379d4b08018b3015dcdc82189ee79/src/br/gov/saudecaruaru/bpai/gui/OnlyNumbers.java][verify][1] = -> valor=txtField.getText()@ -> p=Pattern.compile("^[0-9]+$",)@ -> m=p.matcher(valor,)@ -> IF { -> return false@!(m.find()) }
results[https://github.com/zibhub/GNDMS/blob/0e835e9a7d539302b3b48fce7f76f42725c3f17d/model/src/de/zib/gndms/model/common/types/PermissionConfigData.java][checkUserName][1] = -> pat_usr=Pattern.compile("[a-z_][a-z0-9_]*",)@ -> m=pat_usr.matcher(usr,)@ -> IF { -> throw new IllegalArgumentException(usr+" is not a vaild user name",)@!(m.matches()) }
results[https://github.com/AlanFoster/Camelry/blob/0070a9c2264e99de74cdc52b95b3fec7a2ac7a0f/src/me/alanfoster/camelus/camel/converters/ComponentDefinitionReferenceConverter.java][getComponentDefinition][2] = -> compile=Pattern.compile("^(?<componentName>\\w+):(.+)$",)@ -> matcher=compile.matcher(componentString,)@ -> IF { -> componentName=matcher.group("componentName",)@matcher.matches() -> return componentDefinition@matcher.matches() }
results[https://github.com/rsavoye/cadpage/blob/3ad9503f9a6515bd7d78ae0748d795187509f8e3/cadpage/src/net/anei/cadpage/parsers/WA/WAMasonCountyParser.java][parse][1] = -> match=APT_PTN.matcher(field,)@!(field.equalsIgnoreCase("YES",)) && !(field.length()==0) && !(field.equalsIgnoreCase("CONTACT",)) -> IF { -> field=match.group(1,)@!(field.equalsIgnoreCase("YES",)) && match.matches() && !(field.length()==0) && !(field.equalsIgnoreCase("CONTACT",)) } -> super.parse(field,data,)@!(field.equalsIgnoreCase("YES",)) && !(field.length()==0) && !(field.equalsIgnoreCase("CONTACT",))
results[https://github.com/boggle/public-transport-enabler/blob/982507dd11a75653c1125cd69177c6042cae52ed/enabler/src/de/schildbach/pte/BvgProvider.java][normalizeLineName][1] = -> mTram=P_NORMALIZE_LINE_NAME_TRAM.matcher(lineName,)@ -> IF { -> return mTram.group(1,)@mTram.matches() } -> return super.normalizeLineName(lineName,)@!(mTram.matches())
results[https://github.com/vorburger/odata4j/blob/9a04845a418d9fcfd904b84dce18182957c9f3d9/odata4j-core/src/main/java/org/odata4j/format/xml/AtomFeedFormatParser.java][parseEntitySetName][1] = -> m=ENTITY_SET_NAME.matcher(atomEntryId,)@ -> IF { -> throw new RuntimeException("Unable to parse the entity-set name from atom entry id: "+atomEntryId,)@!(m.find()) } -> return m.group(1,)@!(!(m.find()))
results[https://github.com/gamma9mu/SOMa/blob/d3f85626000752797f64dbba627c0b45f4164801/src/cs437/som/util/CustomSOMFileReader.java][matchGridType][1] = -> gridTypeMatch=gridTypeRegEx.matcher(line,)@ -> IF { -> gridType=(GridType) Reflector.instantiateClass("cs437.som.topology",gridTypeMatch.group(1,),)@gridTypeMatch.matches() -> return true@gridTypeMatch.matches() }
results[https://github.com/bpow/picard/blob/89d41412552cb3ef274f7b361777b5673e289ab6/src/java/net/sf/picard/illumina/parser/readers/AbstractIlluminaPositionFileReader.java][fileNameToLaneAndTile][1] = -> tokens=fileName.split(File.pathSeparator,)@ -> matcher=FileNamePattern.matcher(tokens[tokens.length-1],)@ -> IF { -> throw new PicardException("File name not of the right structure: <filePath>/s_<lane>_<tile>(_pos.txt|_pos.txt.gz|_pos.txt.bz2.locs|.clocs).  File name ("+fileName+")",)@!(matcher.matches()) }
results[https://github.com/stevenremot/RaSKlett/blob/c92873d358d6b135634a6c5907c57b2a04e0214f/src/compiler/combinators/LazyCallFactory.java][get][1] = -> m=lazyCallPattern.matcher(name,)@ -> IF { -> return new LazyCall(m.group(1,),)@m.find() }
results[https://github.com/playframework/play1/blob/47053cf21d59e37786360539e7375f195e287633/framework/src/play/libs/Expression.java][evaluate][1] = -> matcher=expression.matcher(value,)@ -> IF { -> return Play.configuration.getProperty(matcher.group(1,),defaultValue,)@matcher.matches() }
