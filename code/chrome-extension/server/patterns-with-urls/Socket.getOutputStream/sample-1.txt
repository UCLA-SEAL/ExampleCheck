results[https://github.com/InsomniaROM/android_packages_apps_Bluetooth/blob/005d0590e060ceea9ac9727bac79807f77f96bd3/src/com/android/bluetooth/opp/TestActivity.java][openOutputStream][200] = -> TRY {  -> return s.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/ericherman/gearmanij/blob/5ad961a914ec7ca15cc59c200a0faab07f9c7ff2/src/gearmanij/util/IOUtil.java][getOutputStream][2] = -> TRY { -> return s.getOutputStream()@ } CATCH(IOException) { -> throw new IORuntimeException(e,)@ }
results[https://github.com/YoX89/Pathogenum/blob/188c86b342bdec1e0b2f7039be754f4f59fad720/Pathogenum/src/LobbyServer/LobbyComOutputServer.java][<init>][17] = -> TRY { -> os=conn.getOutputStream()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/uvalbbu/dalvik_test/blob/9cc0b47e4b0f2ea33e3961e8b6d3cf041dbd0146/luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketWrapper.java][initTransportLayer][128] = -> TRY {  -> input=socket.getInputStream()@ -> output=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/damonkohler/sl4a/blob/835db34c7fe2173c3dee025f8aaf88715619c14c/android/Common/src/com/googlecode/android_scripting/facade/EventServer.java][<init>][9] = -> TRY {  -> out=new PrintWriter(l.getOutputStream(),true,)@ } CATCH(IOException) {}
results[https://github.com/jenkinsci/remoting/blob/9214e2afd21ba70a965ead8a6321add5c0b13120/src/main/java/hudson/remoting/SocketOutputStream.java][<init>][6] = -> TRY {  -> super(socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/apatrushev/ServerAccess/blob/fcfc332b7a6bf84e201e3e9a3e6803f2ecf2faa4/src/ru/naumen/servacc/HTTPProxy.java][crossConnectStreams][1] = -> TRY {  -> clientOutputStream=socket.getOutputStream()@ -> connectStreams(channelInputStream,clientOutputStream,)@ } CATCH(IOException) {}
results[https://github.com/sangamon/sneer/blob/85ad57dda355ffd6b8a613c4c1e7e737034b00ff/sneer/src/sneer/old/core/VirusReplicator.java][writeObject][10] = -> TRY {  -> sos=socket.getOutputStream()@ -> oos=new ObjectOutputStream(sos,)@ } CATCH(IOException) {}
results[https://github.com/logentries/le_java/blob/5475c7ff7fb4e3c6c9d97e1a371ded2570a1069d/src/com/logentries/log4j/LeAppender.java][openConnection][8] = -> TRY {  -> socket=new Socket(api_addr,port,)@ -> stream=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/aptana/studio2/blob/0905925e7efa7e473e7c2b3d69a618e19056ed31/plugins/com.aptana.ide.server.core/src/com/aptana/ide/server/http/ServerThreadRunnable.java][sendRedirect][5] = -> TRY {  -> output=s.getOutputStream()@ -> response=new HttpResponse(output,)@ } CATCH(IOException) {}
results[https://github.com/ms969/ChenSun/blob/4c37ce8021635a47e6469c2612a81190ef0e6a6c/Phase2/jars/mysql-connector-java-5.1.18/src/testsuite/UnreliableSocketFactory.java][getOutputStream][25] = -> TRY {  -> return new HangingOutputStream(underlyingSocket.getOutputStream(),props,aliasedHostname,)@ } CATCH(IOException) {}
results[https://github.com/epronk/fitnesse/blob/e27c17eef220e6bba556cc2b63d62d018ad36831/src/fitnesse/socketservice/SocketServer.java][GetPrintStream][4] = -> TRY {  -> os=s.getOutputStream()@ -> return new PrintStream(os,)@ } CATCH(IOException) {}
results[https://github.com/heavenlyhash/ahslib/blob/3803cc6ef736b1422b3637254c4cb324e02f2cf0/src/us/exultant/ahs/io/WriteHeadBabbleToStream.java][<init>][3] = -> TRY {  -> <init>($sock.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/gaurav324/distri-projects/blob/56a20b1fc49e5cb487b2aaa221ea44e74e2a9509/bayou_playlist/src/ut/distcomp/communication/OutgoingSock.java][<init>][4] = -> TRY {  -> out=sock.getOutputStream()@ -> sock.shutdownInput()@ } CATCH(IOException) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/ba6e9e97c84948700e301eb25dc16e8a36b52524/test/java/net/Socket/HttpProxy.java][send200][10] = -> TRY {  -> out=clientSocket.getOutputStream()@ -> pout=new PrintWriter(out,)@ } CATCH(IOException) {}
results[https://github.com/joseignaciosg/TPProtos2cuat2012/blob/76b51089e98f2ccadc824ee3e37bf8edcca7b8fb/src/main/java/service/MailSocketService.java][setOriginServerSocket][7] = -> TRY {  -> outToOriginServer=new DataOutputStream(originServerSocket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/eclipse/dltk.javascript/blob/8f63d0ec2ad9e59ad2713edd25d8bad85149532d/plugins/org.eclipse.dltk.javascript.rhino.dbgp/src/org/eclipse/dltk/rhino/dbgp/DBGPDebugger.java][<init>][2] = -> TRY {  -> out=new BufferedOutputStream(socket.getOutputStream(),2048,)@ } CATCH(IOException) {}
results[https://github.com/freenet/contrib-official/blob/0761aa2d2de2fbf23bd3f3dee72d1f57164caf12/db4o/src/db4oj/core/src/com/db4o/foundation/network/NetworkSocket.java][initSocket][9] = -> TRY {  -> _out=_socket.getOutputStream()@ -> _in=_socket.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/Jeremy-Gaillard/TPCIAI/blob/d2db461a1aa3e74463be7663bd3016634a020f23/Programme/Windows/Interface_windows_CIAI/src/network/NetworkInterface.java][send_message][6] = -> TRY {  -> oStream=client.getOutputStream()@ -> bOStream=new BufferedOutputStream(oStream,)@ } CATCH(IOException) {}
results[https://github.com/peodratash/mina-ftpserver/blob/680fafdc6fd42b4d32d989a1622978a07b645aa9/trunk/src/java/org/apache/ftpserver/FtpWriter.java][setControlSocket][5] = -> TRY {  -> writer=new OutputStreamWriter(soc.getOutputStream(),"UTF-8",)@ } CATCH(IOException) {}
results[https://github.com/hobinyoon/faban-src/blob/3e5915efc7d4625266a27c0846a5b2dd2d1b37f9/driver/src/com/sun/faban/driver/transport/util/TimedSocketWrapper.java][getOutputStream][1] = -> TRY {  -> return new TimedOutputStream(delegate.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/xsited/packetcable/blob/53822ad72e54eacf100f7461159e7faabb779649/src/main/java/org/umu/cops/stack/COPSUtil.java][writeData][3] = -> TRY {  -> output=id.getOutputStream()@ -> output.write(data,0,len,)@ } CATCH(IOException) {}
results[https://github.com/cchriste/visit/blob/167fc2c6dc4843ab4cefbf1e3989ebd14d5ae138/src/java/Connection.java][DirectWrite][2] = -> TRY {  -> DirectWriteHelper(readConnection.getOutputStream(),buf,)@ } CATCH(IOException) {}
results[https://github.com/htwg/UCE/blob/d3b4c2e7675a06c931b30c82b1bcf69c7efc0e26/relaying.server/src/main/java/de/fhkn/in/uce/relaying/server/MessageDispatcherTask.java][<init>][2] = -> TRY {  -> this.controlConnectionWriter=new MessageWriter(s.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/BaseXdb/basex/blob/6645e7dba562fc6514cee8c7dfb14ed6a6f6eba9/src/main/java/org/basex/server/ServerProcess.java][register][2] = -> TRY {  -> eout=PrintOutput.get(s.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/CSEMike/OneSwarm/blob/a542199905a1106eb71e37ad6c644a61cbaa855e/javatests/edu/washington/cs/oneswarm/test/integration/ServiceSharingTeardownTest.java][writeReadVerify][2] = -> TRY {  -> outStream=client.getOutputStream()@ -> outStream.write(out,)@ } CATCH(IOException) {}
results[https://github.com/AllBinary/phoneme-components-cdc/blob/03923aebc00db2e353b6c3c86a7874c009d48647/src/share/foundation/classes/com/sun/cdc/io/j2me/http/HttpStreamConnection.java][openOutputStream][2] = -> TRY {  -> return new UniversalFilterOutputStream(this,socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/GadgetFactory/Papilio-Schematic-Library/blob/648a70893907a9cb446f1546d4fd39cf6457f0e8/zpu/sw/simulator/com/zylin/zpu/simulator/gdb/GDBServer.java][flush][2] = -> TRY {  -> sc.getOutputStream().flush()@ } CATCH(IOException) {}
results[https://github.com/rczerny/vs2012-13/blob/e8e5a5a66429282aa3c3bca5d20c8ea017fe9d57/src/tools/SuperSecureSocket.java][getOutputStream][1] = -> TRY { -> os=s.getOutputStream()@ } CATCH(IOException) { -> System.err.println("ERROR: Couldn't get input stream!",)@ }
results[https://github.com/aptana/Pydev/blob/71a347c04f25f48d439c4b5f5224fefcf4dd27e4/org.python.pydev.debug/src/org/python/pydev/debug/model/remote/DebuggerWriter.java][<init>][2] = -> TRY {  -> out=new OutputStreamWriter(s.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/nloreti/ProtoProxyHTTP/blob/8ac6607a05a386aa9aeb4460c18ab09f7e387e7f/IlMarseProxy/src/main/java/connection/ConnectionImpl.java][getOutputStream][1] = -> TRY { -> return this.socket.getOutputStream()@ } CATCH(IOException) { -> throw new CloseException("Cierre de la conexion por fallo del Stream",)@ }
results[https://github.com/leandroferro/mestrado/blob/a974ef703b0a74bcbcb33e6a206e64715b0e5aa5/codigos/mt-memnode/src/main/java/br/usp/ime/coordinator/SocketBasedConnection.java][getOutputStream][1] = -> TRY { -> return socket.getOutputStream()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/squaremo/rabbitmq-streams/blob/a3e158471bfe2ed00b51064018a9fbb004ff05a6/plugins/socket_destination/socket_destination.java][<init>][1] = -> TRY {  -> socket=new Socket(address,port,)@ -> socketOutputStream=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/ultrasaurus/test-first-teaching/blob/80cb09b601d1f8b0f4be4cbcf2edabed5d65b7cb/learn_java/net/ChatTest.java][openSocketWriter][4] = -> TRY {  -> out=new PrintWriter(new OutputStreamWriter(socket.getOutputStream(),),)@ } CATCH(IOException) {}
results[https://github.com/kaffe/kaffe/blob/8cb27337856dc47d33195d69507e26f50da85253/libraries/javalib/vmspecific/gnu/inet/gopher/GopherConnection.java][<init>][18] = -> TRY {  -> socket=new Socket(host,port,)@ -> in=socket.getInputStream()@ -> out=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/bokormen/IT1901/blob/3cab015721afe2bd046ff0cf52de967d28031961/src/Server/ComProtocol.java][<init>][1] = -> TRY { -> oout=new DataOutputStream(osocket.getOutputStream(),)@ } CATCH(IOException) { -> System.err.println("Could not open object streams",)@ }
results[https://github.com/BaseXdb/basex/blob/0a839ab7004007adae3d99862dade4a5005fccb2/src/org/basex/BaseXWebServer.java][evalXQuery][2] = -> TRY {  -> os=s.getOutputStream()@ -> out=new PrintOutput(new BufferedOutput(os,),)@ } CATCH(IOException) {}
results[https://github.com/kalecser/jpatchaca/blob/fe27cbaa16a98b00b3317a497b396546690efa83/commons-core/src/main/java/basic/SocketUtils.java][writeLine][1] = -> TRY {  -> outputStream=socket.getOutputStream()@ -> writer=new BufferedWriter(new OutputStreamWriter(outputStream,),)@ } CATCH(IOException) {}
results[https://github.com/Jeremy-Gaillard/TPCIAI/blob/f03ab5b2bfc84d31b4643f92cac5ca3491ea788c/Programme/Windows_old/Network/src/serv.java][send_message][3] = -> TRY {  -> oStream=client.getOutputStream()@ -> bOStream=new BufferedOutputStream(oStream,)@ -> feedback=client.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/dana-i2cat/opennaas-routing-nfv/blob/d84230f46d0db8027c12d6027bb438e60795df78/extensions/bundles/luminis.protocols.wonesys/src/main/java/net/i2cat/luminis/transports/wonesys/rawsocket/RawSocketTransport.java][sendAsyncToSocket][9] = -> TRY {  -> out=sock.getOutputStream()@ -> out.write(bts,)@ -> out.flush()@ } CATCH(IOException) {}
results[https://github.com/cinovo/de.cinovo.q.connector/blob/d1d4ee9319e8ce3400b4b7cceb44ea455605a00a/src/main/java/kx/c.java][io][2] = -> TRY {  -> i=new DataInputStream(s.getInputStream(),)@ -> o=s.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/CleverCloud/Bianca/blob/c83c24a16c950ab122e0896992e712a0c4959c7f/modules/kernel/src/com/caucho/vfs/HttpStream.java][<init>][5] = -> TRY {  -> _is=_s.getInputStream()@ -> _os=_s.getOutputStream()@ -> _ws=VfsStream.openWrite(_os,)@ } CATCH(IOException) {}
results[https://github.com/mogotest/selenium/blob/ab4929acef85729b97a58a1827c78f4dc4d6e320/remote/server/src/java/org/openqa/jetty/http/HttpTunnel.java][<init>][13] = -> TRY {  -> IF { -> _sOut=socket.getOutputStream()@_sOut==null } } CATCH(IOException) {}
results[https://github.com/OpenJunction/JavaJunction/blob/d31196f79b50ca1c2c5839c2e37347193708bb92/src/main/java/edu/stanford/junction/provider/jx/Junction.java][<init>][1] = -> TRY { -> tmpIn=socket.getInputStream()@ -> tmpOut=socket.getOutputStream()@ } CATCH(IOException) { -> Log.e(TAG,"temp sockets not created",e,)@ }
results[https://github.com/sneaker/Mediastopf/blob/9f1906dce428fa558606b0d880339c26899c48eb/Code/src/ch/nomoresecrets/mediastopf/client/networking/ServerConnection.java][sendMessage][1] = -> TRY {  -> sender=new PrintWriter(mediastopfSocket.getOutputStream(),true,)@ -> sender.println(message,)@ } CATCH(IOException) {}
results[https://github.com/edward-yakop/flexmojos/blob/95a0b96302817672e2c3cd064cbbcadf810e367a/mojos/src/main/java/info/flexmojos/test/FlexUnitMojo.java][openClientSocket][4] = -> TRY {  -> clientSocket=serverSocket.accept()@ -> in=clientSocket.getInputStream()@ -> out=clientSocket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/aldaris/opensso/blob/0208edccc10a63ead065efea45ff44b74d14438f/products/amserver/source/com/iplanet/services/comm/https/ReaderWriter.java][<init>][3] = -> TRY { -> out=new DataOutputStream(ts.getOutputStream(),)@ } CATCH(IOException) { -> debug.error("ReaderWriter: Cannot construct ReaderWriter ",e,)@ }
results[https://github.com/acontes/programming/blob/198c88dcff0402da0b531c20e71f38154b0b343c/src/org/objectweb/proactive/core/rmi/HTTPRequestHandler.java][<init>][1] = -> TRY {  -> <init>(socket.getInputStream(),socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/bslund/jetty-maven-plugin/blob/2963c471392fb22b6c4c36ded4de92a99f6c5b9e/modules/jetty/src/org/mortbay/io/bio/SocketEndPoint.java][<init>][15] = -> TRY {  -> super(socket.getInputStream(),socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/Shevchik/AutoSaveWorld/blob/f3d4b7672fc53eeb1ed2735646ee663bbf807632/src/libs/org/apache/commons/net/SocketClient.java][_connectAction_][9] = -> TRY {  -> _socket_.setSoTimeout(_timeout_,)@ -> _input_=_socket_.getInputStream()@ -> _output_=_socket_.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/pascalrobert/jsonrpc4j/blob/715803cfdf9d330cd7801b19da264689a9803280/jsonrpc4j/src/main/java/com/googlecode/jsonrpc4j/ProxyUtil.java][createClientProxy][1] = -> TRY {  -> return createClientProxy(classLoader,proxyInterface,false,client,socket.getInputStream(),socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/src/share/classes/com/sun/tools/jdi/SocketTransportService.java][<init>][2] = -> TRY {  -> socket.setTcpNoDelay(true,)@ -> socketInput=socket.getInputStream()@ -> socketOutput=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/haizi-zh/micromanager/blob/540b83f20ab14f0c28c997a9eff1fe1c4b9f9c4f/plugins/MTTracker/src/org/ndaguan/micromanager/mmtracker/TCPClient.java][SendCommand][2] = -> TRY {  -> outPutSteam=socket.getOutputStream()@ -> outPutSteam.write(rawData,0,len,)@ -> outPutSteam.flush()@ } CATCH(IOException) {}
results[https://github.com/Enough-Software/j2mepolish/blob/355ce3a5cf8b3a4fee4884c26794fb472e514541/enough-polish-j2me/source/src/de/enough/polish/android/io/SocketConnectionImpl.java][openOutputStream][1] = -> TRY {  } ELSE { -> return this.internalSocket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/YoX89/Pathogenum/blob/11acb9a17b578a1300e2111e14496df5758790de/Pathogenum/src/HubServer/HubInputThread.java][<init>][4] = -> TRY { -> is=connection.getInputStream()@ -> os=connection.getOutputStream()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/codefollower/H2-Research/blob/b002b3eb4d2c623fcb28bab5a3a22e03fd493bfc/src/tools/org/h2/dev/ftp/FtpClient.java][passive][4] = -> TRY {  -> socketData=NetUtils.createSocket(addr,port,false,)@ -> inData=socketData.getInputStream()@ -> outData=socketData.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/nickebbutt/jtimeseries/blob/3de6e62194673138bf3be2e844c7c8896cbd5f5d/jtimeseries/src/main/java/com/od/jtimeseries/net/httpd/NanoHTTPD.java][sendResponse][1] = -> TRY {  -> out=mySocket.getOutputStream()@ -> pw=new PrintWriter(out,)@ -> response.writeResponseBody(out,pw,)@ } CATCH(IOException) {}
results[https://github.com/eclipse/vjet.all/blob/5fd7a59fa2273d31a69ff303e42b343fa06c4cb8/runtime/org.eclipse.vjet.rt.jsdebugger/src/org/eclipse/vjet/dsf/js/dbgp/DBGPDebugger.java][createDebugger][1] = -> TRY {  -> m_out=new PrintStream(socket.getOutputStream(),)@ -> m_out.flush()@ } CATCH(IOException) {}
results[https://github.com/kiniry-teaching/UCD/blob/160f3f6879b60b6ec505152b6bbe97481065909d/COMP30050-2008/users/BHarty/construct/src/org/construct_infrastructure/client/SocketWrapper.java][<init>][2] = -> TRY {  -> my_printStream=new PrintStream(my_socket.getOutputStream(),true,)@ -> my_in=my_socket.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/htwg/UCE/blob/0eea9069b456391149b1d7e9f3ad4f5b41dcddf9/reversal/src/main/java/de/fhkn/in/uce/reversal/core/ReversalTarget.java][sendFailureResponse][1] = -> TRY {  -> response=request.buildFailureResponse(STUNErrorCode.BAD_REQUEST,errorReason,)@ -> response.writeTo(controlConnection.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/arkleima/traffic/blob/bb511dd4fa686e24aee3de9d0e2002423e041282/src/edu/brown/cs32/evenitz/arkleima/maps/client/TrafficClient.java][sendData][1] = -> TRY {  -> this.framer.frameMsg(this.dataCoder.toWire(requestData,),this.socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/jaunis/Harmless/blob/f121b7d3d46976dddae69015a14e26ec512892ea/Java/src/harmless/controller/Updater.java][<init>][1] = -> TRY {  -> out=new PrintWriter(socket.getOutputStream(),true,)@ -> ips=socket.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/joaoplay/ProjectFinal/blob/a6627921aaa6bcbe6b1b03d8845819fd8e321ab8/src/serverTCP/UserNotifications.java][<init>][1] = -> TRY { -> outStream=new ObjectOutputStream(clientSocket.getOutputStream(),)@ } CATCH(IOException) { -> System.out.println("[Notifications] Could not create input and output streams:\n"+ie,)@ }
results[https://github.com/damirkusar/jsip/blob/0fb47291dd1ee87751896cf3c9e9d9c7686dba7d/src/gov/nist/javax/sip/stack/TCPMessageChannel.java][<init>][1] = -> TRY {  -> peerAddress=mySock.getInetAddress()@ -> myClientInputStream=mySock.getInputStream()@ -> myClientOutputStream=mySock.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/nekanek/JavaBook/blob/4236f77ee372505e235835ab9efba8e2d8b98f35/stanfStd/Out.java][<init>][3] = -> TRY { -> os=socket.getOutputStream()@ -> osw=new OutputStreamWriter(os,CHARSET_NAME,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/DailyEfforts/programming/blob/45027bd5e2c5853e2facefffe4994b28c1c04d2c/java/src/java/util/logging/SocketHandler.java][connect][4] = -> TRY {  -> sock=new Socket(host,port,)@!(port==0) && !(host==null) -> out=sock.getOutputStream()@!(port==0) && !(host==null) -> bout=new BufferedOutputStream(out,)@!(port==0) && !(host==null) } CATCH(IOException) {}
results[https://github.com/loveingenioustech/Study/blob/9543c78135e92b5fc1038af97b657182aa742fde/algorithm-demo/src/stdlib/BinaryOut.java][<init>][2] = -> TRY { -> os=socket.getOutputStream()@ -> out=new BufferedOutputStream(os,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/vivo-project/Tools/blob/1b209394021d90bdebf186993a4d8b2134a1a5af/VIVO Harvesters/tags/Milestone 1/src/org/vivoweb/ingest/io/MultipleSocketServer.java][getOOS][2] = -> TRY {  -> bos=new BufferedOutputStream(this.connection.getOutputStream(),)@ -> return new ObjectOutputStream(bos,)@ } CATCH(IOException) {}
results[https://github.com/curdinB/GonzoProxy/blob/4e12d31f193e8e79b7a4e3db1601ffbb628323bf/src/main/ch/compass/gonzoproxy/relay/RelayManager.java][initCommandStreamHandlers][1] = -> TRY {  -> outputStream=new BufferedOutputStream(target.getOutputStream(),)@ -> commandStreamWriter=new PacketStreamWriter(outputStream,relayDataHandler,sessionSettings,ForwardingType.COMMAND,)@ } CATCH(IOException) {}
results[https://github.com/TomTasche/netCrawler/blob/02a3abd07c5a1b08977a284c3a5291964af0eaa4/src/at/andiwand/packettracer/ptmp/simple2/SimpleMultiuserClient.java][connect][1] = -> TRY {  -> socket=new Socket(address,port,)@ -> inputStream=socket.getInputStream()@ -> outputStream=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/square/okhttp/blob/b6e785e79e6c9c31fff4dc0ce264afc35a9a729f/src/main/java/libcore/net/spdy/SpdyConnection.java][<init>][1] = -> TRY {  -> <init>(client,socket.getInputStream(),socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/seanjosephwu/nonogramFun/blob/dbbab6f347b61a4e6960c1a06da9b115ab5174f3/server-code/src/main/java/network/NonoNetwork.java][<init>][2] = -> TRY {  -> outStrm=tcpSocket.getOutputStream()@ -> inStrm=tcpSocket.getInputStream()@ -> tcpSocket.setSoTimeout(NonoConfig.SOCKET_TIMEOUT,)@ } CATCH(IOException) {}
results[https://github.com/imrehg/pinguino32/blob/49898099148ae4a5627b61ba624fdb535d47b2f1/x.3/examples/09.Interfacing/Android/pinguinoLED/src/org/pinguinobutton/Client.java][<init>][1] = -> TRY {  -> socket.setKeepAlive(true,)@ -> this.input=this.socket.getInputStream()@ -> this.output=this.socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/wangyif2/4d19/blob/c342a180510f2ea75d1f6fb08a8f9d19bde4138d/Lab2/mazewar/src/MazewarServerHandler.java][<init>][3] = -> TRY { -> out=new ObjectOutputStream(socket.getOutputStream(),)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/ecologylab/ecologylabFundamental/blob/dbdd2f7d2a3bbee2e85ec4a05eb31f1219a1f16f/3-2Beta1b/ecologylab/services/distributed/legacy/ServerToClientConnection.java][<init>][1] = -> TRY {  -> inputStream=incomingSocket.getInputStream()@ -> outputStreamWriter=new PrintStream(incomingSocket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/HackerDom/ructf2013-final/blob/04d97b06d5ab7f63f3d50c8b15fe256a502d8533/checksystem/project/ructf/getflags/LoggingWriter.java][Create][1] = -> TRY {  -> w=new PrintWriter(s.getOutputStream(),true,)@ -> return new LoggingWriter(w,logger,)@ } CATCH(IOException) {}
results[https://github.com/arekinath/jop/blob/ad76781fdc88160d646464ae8f2e81c8ef23535c/java/tools/src/com/jopdesign/debug/jdwp/jop/JopServer.java][handshake][1] = -> TRY {  -> outputStream=socket.getOutputStream()@ -> outputStream.write(JDWPConstants.JDWP_HANDSHAKE_BYTES,)@ -> inputStream=socket.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/ntfc/pi1-voting/blob/eb7c33c1bc608931fe7334e7805ae419b504fd19/src/org/evoting/voter/VoterClient.java][<init>][1] = -> TRY {  -> this.dsu=new DataStreamUtils(socket.getInputStream(),socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/cfeclipse/cfeclipse/blob/b4be19559bde3cf976207bd8347dac841c60d861/svn/org.cfeclipse.cfml/tags/1.3-dev/src/com/enterprisedt/net/ftp/FTPControlSocket.java][initStreams][1] = -> TRY {  -> is=controlSock.getInputStream()@ -> os=controlSock.getOutputStream()@ -> writer=new OutputStreamWriter(os,encoding,)@ } CATCH(IOException) {}
results[https://github.com/philipv/bonfire/blob/b1c24ad36eb84e6a37bf396d2f0d1e8148b22ed2/default/utilities/src/main/java/com/bonfire/ipc/client/OldClient.java][<init>][1] = -> TRY {  -> super(socket,)@ -> socketWriter=new PrintWriter(socket.getOutputStream(),true,)@ } CATCH(IOException) {}
results[https://github.com/bj0rn/Gruppe34/blob/ab24cb1c4c0fb7d8af9864fad461ee3aa5633982/Code/src/no/ntnu/fp/net/network/TestCommunicationClient.java][<init>][1] = -> TRY { -> os=new DataOutputStream(mySocket.getOutputStream(),)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/ymcagodme/Courses/blob/92036e9e1d9f92d5bdd8fa122e49338fe0f0a24b/CIS282/codes/EchoClient.java][getStreams][1] = -> TRY {  -> input=client.getInputStream()@ -> output=client.getOutputStream()@ -> output.flush()@ } CATCH(IOException) {}
results[https://github.com/Vannevelj/Messy/blob/a6d8c51c2c777d3caeed460bdbd308326a67a4a2/src/domain/Client.java][initiateIO][1] = -> TRY {  -> inbound=socket.getInputStream()@ -> outbound=new PrintWriter(socket.getOutputStream(),true,)@ } CATCH(IOException) {}
results[https://github.com/cantwait/psp/blob/9bded46b1f149d95e42382b689202dce39b57cb2/psp-services/src/com/pdvsa/psp/transport/tcp/protocols/ModBusTcpProtocol.java][createResponse][1] = -> TRY {  -> return new ResponseOutputStream(socket,new ProtocolStream(this,false,socket.getOutputStream(),),)@ } CATCH(IOException) {}
results[https://github.com/apache/derby/blob/fdaf2b584d789b48b93c3b78dfb5a16d2ee90e3d/java/drda/org/apache/derby/impl/drda/ProtocolTestAdapter.java][<init>][1] = -> TRY {  -> this.reader=new DDMReader(socket.getInputStream(),)@ -> this.out=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/Atlee/P2PChineseCheckers/blob/6e0b36594ac349ccbe65443b1a47727fd128a524/ChineseCheckers/src/protocols/CreateUserProtocol.java][sendKey][2] = -> TRY {  -> out=new ObjectOutputStream(s.getOutputStream(),)@ -> out.writeObject(key,)@ } CATCH(IOException) {}
results[https://github.com/sasq64/droidsound/blob/c4e721e4df191b1d01500a97652a4c1129234d9c/src/com/ssb/droidsound/utils/StreamingHttpConnection.java][connect][1] = -> TRY {  -> os=httpSocket.getOutputStream()@ -> os.write(req.getBytes(),)@ } CATCH(IOException) {}
results[https://github.com/terencehonles/jaramiko/blob/46f157abc206e7a9a42a5e767293cdeffc40bf01/java/net/lag/paramiko/BaseTransport.java][<init>][1] = -> TRY {  -> mInStream=mSocket.getInputStream()@ -> mOutStream=mSocket.getOutputStream()@ -> mPacketizer=new Packetizer(mInStream,mOutStream,mRandom,)@ } CATCH(IOException) {}
results[https://github.com/jjnguy/PublicFun/blob/1bde394a990e4fe394f7020c77cf483f41e3eea2/chatPrototype/src/FullChatPanel.java][hostConversation][1] = -> TRY {  -> connection=f.showConnectionDialog()@ -> sockIn=connection.getInputStream()@!(connection==null) -> socOut=connection.getOutputStream()@!(connection==null) } CATCH(IOException) {}
results[https://github.com/Meldanya/eda040_project/blob/41f591d8baabe644059bac5bbcb1d90adb900325/Server/src/network/ServerProtocol.java][<init>][1] = -> TRY { -> this.input=socket.getInputStream()@ -> this.output=socket.getOutputStream()@ } CATCH(IOException) { -> System.err.println("Could not get streams from socket.",)@ }
results[https://github.com/kleiinnn/LinkJVM/blob/ce76aeb7a1fb73541b2ea3e5ccda51cd276aee8e/src/java/linkjvm/ardrone/manager/AbstractTCPManager.java][ticklePort][1] = -> TRY { -> os=socket.getOutputStream()@ -> os.write(buf,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/ContemplateLtd/dapij/blob/a6c4a3f84468b4b5582fbd5136d5db3301ad3b26/Dapij/src/main/java/comms/EventServer.java][<init>][1] = -> TRY { -> outToClient=new DataOutputStream(conn.getOutputStream(),)@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/thornwishstalon/flaming-octo-nemesis/blob/f88b6c9d411ffda91acc30c39d2343512715660e/dslab/src/network/tcp/client/TCPOutputConnection.java][resetSocket][2] = -> TRY { -> writer=new PrintWriter(socket.getOutputStream(),true,)@ } CATCH(IOException) { -> System.out.println("Output Socket crashed!",)@ }
results[https://github.com/bladesilent/Harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/ldap/LdapClient.java][setSocket][1] = -> TRY {  -> this.in=new InputStreamWrap(socket.getInputStream(),)@ -> this.out=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/vivo-project/Tools/blob/d788bd404a9f4a6766c6db04e8ff78fbc39eeeff/VIVO Harvesters/trunk2/src/org/vivoweb/ingest/io/SocketClient.java][getOOS][1] = -> TRY {  -> return new ObjectOutputStream(new BufferedOutputStream(connection.getOutputStream(),),)@ } CATCH(IOException) {}
results[https://github.com/joeytwiddle/code/blob/a537fafc92b7f63bef83acbb15cc8bc41564c04a/java/com/fooware/net/FtpClient.java][store][1] = -> TRY {  -> m_dataXfrSocket=m_dataSocket.accept()@ -> ostr=m_dataXfrSocket.getOutputStream()@ -> out=new OutputStreamWriter(ostr,)@ } CATCH(IOException) {}
results[https://github.com/proofpoint/kairosdb/blob/7bade49a287884f59210dd33b0ad6218aff9ba79/src/test/java/org/kairosdb/core/telnet/TelnetClient.java][<init>][1] = -> TRY {  -> m_socket=new Socket(host,port,)@ -> m_writer=new PrintWriter(m_socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/Audioboo/audioboo-android/blob/194fc1828d5c85cb614e4e50b07b71098d67c520/externals/dnsjava/org/xbill/DNS/SimpleResolver.java][writeTCP][1] = -> TRY {  -> outStream=s.getOutputStream()@ -> outStream.write(lengthArray,)@ -> outStream.write(out,)@ } CATCH(IOException) {}
results[https://github.com/mdpnp/mdpnp/blob/d0b0a9a21785885b733a63ff23e4eab54d2e7fde/devices/cpc/src/main/java/org/mdpnp/devices/cpc/bernoulli/Bernoulli.java][sendCommand][1] = -> TRY {  -> return sendCommand(sock.getOutputStream(),sock.getInputStream(),bid,cmd,)@ } CATCH(IOException) {}
results[https://github.com/bndtools/bndtools/blob/894bfe98b7f0240120ebdf5da763acc403a4572f/bndtools.ace.plugin/src/bndtools/ace/launch/AceLaunchSocket.java][run][1] = -> TRY { -> m_socket=m_serverSocket.accept()@ -> m_outputStream=m_socket.getOutputStream()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
