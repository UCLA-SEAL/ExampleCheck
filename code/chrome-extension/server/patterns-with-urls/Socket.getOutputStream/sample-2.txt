results[https://github.com/aospX/platform_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/main/java/libcore/net/url/FtpURLConnection.java][getOutputStream][200] = -> TRY {  -> return dataSocket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/mingfang/Redshape-AS/blob/971fbb4d28049c4f339c7733d32e38dbabda1911/io/src/main/java/com/redshape/io/net/adapters/socket/client/SocketAdapter.java][getOutputStream][10] = -> TRY {  -> return this.socket.getOutputStream()@ } CATCH(java.io.IOException) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/sun/net/www/protocol/http/ProxyTunnelServer.java][<init>][15] = -> TRY {  -> output=sockOut.getOutputStream()@ } CATCH(Exception) {}
results[https://github.com/ericherman/gearmanij/blob/5ad961a914ec7ca15cc59c200a0faab07f9c7ff2/src/gearmanij/util/IOUtil.java][getOutputStream][2] = -> TRY { -> return s.getOutputStream()@ } CATCH(IOException) { -> throw new IORuntimeException(e,)@ }
results[https://github.com/kankoli/blox/blob/4ebc29f766d8be2c5faf47d9f08b2d5caf5d89f8/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSSocket.java][getOutputStream][4] = -> TRY { -> return socket.getOutputStream()@ } CATCH(Exception) { -> throw new GdxRuntimeException("Error getting output stream from socket.",e,)@ }
results[https://github.com/YoX89/Pathogenum/blob/188c86b342bdec1e0b2f7039be754f4f59fad720/Pathogenum/src/LobbyServer/LobbyComOutputServer.java][<init>][17] = -> TRY { -> os=conn.getOutputStream()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/jenkinsci/remoting/blob/9214e2afd21ba70a965ead8a6321add5c0b13120/src/main/java/hudson/remoting/SocketOutputStream.java][<init>][6] = -> TRY {  -> super(socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/apatrushev/ServerAccess/blob/fcfc332b7a6bf84e201e3e9a3e6803f2ecf2faa4/src/ru/naumen/servacc/HTTPProxy.java][crossConnectStreams][1] = -> TRY {  -> clientOutputStream=socket.getOutputStream()@ -> connectStreams(channelInputStream,clientOutputStream,)@ } CATCH(IOException) {}
results[https://github.com/Japhez/Sweet-Potato-MUD/blob/2766d692cd00ca17c3e4cb492f5b00654b45f087/src/mud/network/server/Connection.java][<init>][9] = -> TRY {  -> toClient=new PrintWriter(client.getOutputStream(),true,)@ } CATCH(IOException) {}
results[https://github.com/tinyos/tinyos-main/blob/91d095da005d6f0d08ab95962e6242c1de2736e1/support/sdk/java/net/tinyos/sf/SFClient.java][openSource][128] = -> TRY {  -> is=socket.getInputStream()@ -> os=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/logentries/le_java/blob/5475c7ff7fb4e3c6c9d97e1a371ded2570a1069d/src/com/logentries/log4j/LeAppender.java][openConnection][8] = -> TRY {  -> socket=new Socket(api_addr,port,)@ -> stream=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/aptana/studio2/blob/0905925e7efa7e473e7c2b3d69a618e19056ed31/plugins/com.aptana.ide.server.core/src/com/aptana/ide/server/http/ServerThreadRunnable.java][sendRedirect][5] = -> TRY {  -> output=s.getOutputStream()@ -> response=new HttpResponse(output,)@ } CATCH(IOException) {}
results[https://github.com/ms969/ChenSun/blob/4c37ce8021635a47e6469c2612a81190ef0e6a6c/Phase2/jars/mysql-connector-java-5.1.18/src/testsuite/UnreliableSocketFactory.java][getOutputStream][25] = -> TRY {  -> return new HangingOutputStream(underlyingSocket.getOutputStream(),props,aliasedHostname,)@ } CATCH(IOException) {}
results[https://github.com/epronk/fitnesse/blob/e27c17eef220e6bba556cc2b63d62d018ad36831/src/fitnesse/socketservice/SocketServer.java][GetPrintStream][4] = -> TRY {  -> os=s.getOutputStream()@ -> return new PrintStream(os,)@ } CATCH(IOException) {}
results[https://github.com/gye-tgm/schat/blob/8c7b6fbcccc059476d095c6cc1f079169d924e49/common/src/networking/SChatClientWriter.java][<init>][10] = -> TRY {  -> this.out=new ObjectOutputStream(socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/ac3faf88491f55369fb6b83f77fbb75557ed3bf4/test/sun/security/ssl/sun/net/www/protocol/https/HttpsURLConnection/B6226610.java][send400][10] = -> TRY {  -> out=clientSocket.getOutputStream()@ -> pout=new PrintWriter(out,)@ } CATCH(IOException) {}
results[https://github.com/vinin3/nxc_bank/blob/5ccc43988151cd689aac9d4f5075f4b83a79d491/server/src/main/java/org/server/http/HttpServer.java][<init>][3] = -> TRY {  -> this.is=s.getInputStream()@ -> this.os=s.getOutputStream()@ } CATCH(Exception) {}
results[https://github.com/freenet/contrib-official/blob/0761aa2d2de2fbf23bd3f3dee72d1f57164caf12/db4o/src/db4oj/core/src/com/db4o/foundation/network/NetworkSocket.java][initSocket][9] = -> TRY {  -> _out=_socket.getOutputStream()@ -> _in=_socket.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/peodratash/mina-ftpserver/blob/680fafdc6fd42b4d32d989a1622978a07b645aa9/trunk/src/java/org/apache/ftpserver/FtpWriter.java][setControlSocket][5] = -> TRY {  -> writer=new OutputStreamWriter(soc.getOutputStream(),"UTF-8",)@ } CATCH(IOException) {}
results[https://github.com/bladesilent/Harmony/blob/87f808c3959115c898df33be5083e9a757283396/classlib/modules/luni/src/test/api/common/org/apache/harmony/luni/tests/java/util/ScannerTest.java][setUp][20] = -> TRY {  -> serverSocket=server.accept()@ -> os=serverSocket.getOutputStream()@ } CATCH(Exception) {}
results[https://github.com/xsited/packetcable/blob/53822ad72e54eacf100f7461159e7faabb779649/src/main/java/org/umu/cops/stack/COPSUtil.java][writeData][3] = -> TRY {  -> output=id.getOutputStream()@ -> output.write(data,0,len,)@ } CATCH(IOException) {}
results[https://github.com/vshcryabets/V2StyxLib/blob/617fd3c915ff4f4911d06b833b7454fc2dca21bb/src/com/v2soft/styxandroid/library/core/Messenger.java][<init>][6] = -> TRY {  -> mOutputStream=new BufferedOutputStream(mSocket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/marstein/GosuJacoco/blob/bffa41b4eec5328cd34eaf8d9faa308d64a73ef3/org.jacoco.agent.rt.test/src/org/jacoco/agent/rt/controller/MockSocketConnectionTest.java][testWaitForContents][1] = -> TRY {  -> out=b.getOutputStream()@ -> out.write(123,)@ } CATCH(Exception) {}
results[https://github.com/htwg/UCE/blob/d3b4c2e7675a06c931b30c82b1bcf69c7efc0e26/relaying.server/src/main/java/de/fhkn/in/uce/relaying/server/MessageDispatcherTask.java][<init>][2] = -> TRY {  -> this.controlConnectionWriter=new MessageWriter(s.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/marstein/GosuJacoco/blob/bffa41b4eec5328cd34eaf8d9faa308d64a73ef3/org.jacoco.agent.rt.test/src/org/jacoco/agent/rt/controller/MockSocketConnectionTest.java][testGetOutputStreamOnClosedSocket][1] = -> TRY {  -> a.close()@ -> a.getOutputStream()@ } CATCH(Exception) {}
results[https://github.com/CSEMike/OneSwarm/blob/a542199905a1106eb71e37ad6c644a61cbaa855e/javatests/edu/washington/cs/oneswarm/test/integration/ServiceSharingTeardownTest.java][writeReadVerify][2] = -> TRY {  -> outStream=client.getOutputStream()@ -> outStream.write(out,)@ } CATCH(IOException) {}
results[https://github.com/fgeraci/cs352-bittorrent-project/blob/e531ea55abb026278c83338f46d88a0434a2c51e/src/bt/Model/Peer.java][<init>][1] = -> TRY {  -> in=dataSocket.getInputStream()@ -> out=dataSocket.getOutputStream()@ } CATCH(UnknownHostException,IOException) {}
results[https://github.com/heavenlyhash/ahslib/blob/a6d6a373064f7e6590cc718d7a0cf9510ef34e4d/src/ahs/io/WriteHeadBabbleToStream.java][<init>][3] = -> TRY {  -> <init>($sock.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/GadgetFactory/Papilio-Schematic-Library/blob/648a70893907a9cb446f1546d4fd39cf6457f0e8/zpu/sw/simulator/com/zylin/zpu/simulator/gdb/GDBServer.java][flush][2] = -> TRY {  -> sc.getOutputStream().flush()@ } CATCH(IOException) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/sun/security/ssl/com/sun/net/ssl/internal/ssl/InputRecord/ProxyTunnelServer.java][respondForConnect][3] = -> TRY {  -> out=clientSocket.getOutputStream()@ -> pout=new PrintWriter(out,)@ } CATCH(Exception) {}
results[https://github.com/dimitarp/basex-all/blob/6645e7dba562fc6514cee8c7dfb14ed6a6f6eba9/src/main/java/org/basex/server/ServerProcess.java][register][2] = -> TRY {  -> eout=PrintOutput.get(s.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/akosicki/org.eclipse.dltk.javascript/blob/8f63d0ec2ad9e59ad2713edd25d8bad85149532d/plugins/org.eclipse.dltk.javascript.rhino.dbgp/src/org/eclipse/dltk/rhino/dbgp/DBGPDebugger.java][<init>][2] = -> TRY {  -> out=new BufferedOutputStream(socket.getOutputStream(),2048,)@ } CATCH(IOException) {}
results[https://github.com/Rotten194/TJ-Hackathon-2013/blob/babc5b48d8d05d05f57dfb7cc0a956507fc3e6f6/Hackathon/src/com/teampigley/client/NetworkHandler.java][<init>][7] = -> TRY {  -> this.output=new DataOutputStream(socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/aptana/Pydev/blob/71a347c04f25f48d439c4b5f5224fefcf4dd27e4/org.python.pydev.debug/src/org/python/pydev/debug/model/remote/DebuggerWriter.java][<init>][2] = -> TRY {  -> out=new OutputStreamWriter(s.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/leandroferro/mestrado/blob/a974ef703b0a74bcbcb33e6a206e64715b0e5aa5/codigos/mt-memnode/src/main/java/br/usp/ime/coordinator/SocketBasedConnection.java][getOutputStream][1] = -> TRY { -> return socket.getOutputStream()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/gaurav324/distri-projects/blob/ae1f6ff95787cf810dba7380b4c8d28c079dc4c8/playlist_3Phase/src/ut/distcomp/framework/OutgoingSock.java][<init>][4] = -> TRY {  -> out=sock.getOutputStream()@ -> sock.shutdownInput()@ } CATCH(IOException) {}
results[https://github.com/lushl9301/IDoNotWantToLearnJava/blob/d3fb5e2b263b0e896babed5573ab29dbf41dc603/CE2006/webcam/GrabberShow.java][send][1] = -> TRY {  -> ImageIO.write(buf,"JPG",socket.getOutputStream(),)@ } CATCH(Exception) {}
results[https://github.com/squaremo/rabbitmq-streams/blob/a3e158471bfe2ed00b51064018a9fbb004ff05a6/plugins/socket_destination/socket_destination.java][<init>][1] = -> TRY {  -> socket=new Socket(address,port,)@ -> socketOutputStream=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/AllBinary/phoneme-components-cdc/blob/0de5b108f6e3d8c561516ff62eeb85dc74af929c/src/share/foundation/classes/com/sun/cdc/io/j2me/socket/Protocol.java][openOutputStream][2] = -> TRY {  -> os=new UniversalFilterOutputStream(this,socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/hobinyoon/faban-src/blob/3e5915efc7d4625266a27c0846a5b2dd2d1b37f9/driver/src/com/sun/faban/driver/transport/util/TimedSocketWrapper.java][getOutputStream][1] = -> TRY {  -> return new TimedOutputStream(delegate.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/cchriste/visit/blob/167fc2c6dc4843ab4cefbf1e3989ebd14d5ae138/src/java/Connection.java][DirectWrite][2] = -> TRY {  -> DirectWriteHelper(readConnection.getOutputStream(),buf,)@ } CATCH(IOException) {}
results[https://github.com/StudentClientServer/Lab2/blob/6211478ed01b6e6781fa70904d82a128897a8441/Server/src/edu/sumdu/group5/server/view/ServerViewThread.java][run][1] = -> CATCH(Exception) { -> TRY { -> out=new DataOutputStream(socket.getOutputStream(),)@ } }
results[https://github.com/0xdata/h2o/blob/57283f70ca450815de1a9e855ad280328c6d9ef9/hadoop/src/main/java/water/hadoop/AbstractMessage.java][writeBytes][1] = -> TRY {  -> os=s.getOutputStream()@ -> os.write(b,)@ } CATCH(Exception) {}
results[https://github.com/Gmote/Gmote/blob/1e506e2aa6757d8f9c0ab6d8532eeb0280e75df3/gmoteserver/src/org/server/GmoteHttpServer.java][run][1] = -> CATCH(Exception) { -> TRY { -> ps=new PrintWriter(connectionSocket.getOutputStream(),)@ } }
results[https://github.com/rczerny/vs2012-13/blob/e8e5a5a66429282aa3c3bca5d20c8ea017fe9d57/src/tools/SuperSecureSocket.java][getOutputStream][1] = -> TRY { -> os=s.getOutputStream()@ } CATCH(IOException) { -> System.err.println("ERROR: Couldn't get input stream!",)@ }
results[https://github.com/nloreti/ProtoProxyHTTP/blob/8ac6607a05a386aa9aeb4460c18ab09f7e387e7f/IlMarseProxy/src/main/java/connection/ConnectionImpl.java][getOutputStream][1] = -> TRY { -> return this.socket.getOutputStream()@ } CATCH(IOException) { -> throw new CloseException("Cierre de la conexion por fallo del Stream",)@ }
results[https://github.com/cgutman/limelight/blob/3433ab1ccc89b3451a840789e5aebce3755f22e7/src/com/limelight/nvstream/NvController.java][<init>][1] = -> TRY {  -> s=new Socket(host,PORT,)@ -> out=s.getOutputStream()@ } CATCH(UnknownHostException,IOException) {}
results[https://github.com/ultrasaurus/test-first-teaching/blob/80cb09b601d1f8b0f4be4cbcf2edabed5d65b7cb/learn_java/net/ChatTest.java][openSocketWriter][2] = -> TRY {  -> out=new PrintWriter(new OutputStreamWriter(socket.getOutputStream(),),)@ } CATCH(IOException) {}
results[https://github.com/bokormen/IT1901/blob/3cab015721afe2bd046ff0cf52de967d28031961/src/Server/ComProtocol.java][<init>][1] = -> TRY { -> oout=new DataOutputStream(osocket.getOutputStream(),)@ } CATCH(IOException) { -> System.err.println("Could not open object streams",)@ }
results[https://github.com/markushx/tinyos-main-mab-github/blob/f67a6e7028a98e675983c61a3019f1c71a976143/support/sdk/java/net/tinyos/packet/NetworkByteSource.java][openStreams][13] = -> TRY {  -> socket=new Socket(host,port,)@ -> is=socket.getInputStream()@ -> os=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/dana-i2cat/opennaas-routing-nfv/blob/d84230f46d0db8027c12d6027bb438e60795df78/extensions/bundles/luminis.protocols.wonesys/src/main/java/net/i2cat/luminis/transports/wonesys/rawsocket/RawSocketTransport.java][sendAsyncToSocket][2] = -> TRY {  -> out=sock.getOutputStream()@ -> out.write(bts,)@ -> out.flush()@ } CATCH(IOException) {}
results[https://github.com/cinovo/de.cinovo.q.connector/blob/d1d4ee9319e8ce3400b4b7cceb44ea455605a00a/src/main/java/kx/c.java][io][2] = -> TRY {  -> i=new DataInputStream(s.getInputStream(),)@ -> o=s.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/winhamwr/selenium/blob/de8101521782394a6962ccd727861c8a37878d79/java/server/src/org/openqa/jetty/http/HttpTunnel.java][<init>][8] = -> TRY {  -> IF { -> _sOut=socket.getOutputStream()@_sOut==null } } CATCH(IOException) {}
results[https://github.com/codehaus/jetty-project/blob/fc456fb2d8b1e05d4fbc824287177bbd7eeea326/jetty-server/src/test/java/org/mortbay/jetty/UnreadInputTest.java][setUp][1] = -> TRY {  -> _socket=new Socket((String) null,_port,)@ -> _outputStream=_socket.getOutputStream()@ -> _inputStream=_socket.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/edward-yakop/flexmojos/blob/95a0b96302817672e2c3cd064cbbcadf810e367a/mojos/src/main/java/info/flexmojos/test/FlexUnitMojo.java][openClientSocket][3] = -> TRY {  -> clientSocket=serverSocket.accept()@ -> in=clientSocket.getInputStream()@ -> out=clientSocket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/elka-projekt/cs-voltdb/blob/8b01731a091d92a069ecc5174a813523d6abdb50/examples/voltcache/src/voltcache/api/MemcachedTextProtocolService.java][<init>][1] = -> TRY {  -> this.in=socket.getInputStream()@ -> this.out=new BufferedOutputStream(socket.getOutputStream(),65535,)@ } CATCH(Exception) {}
results[https://github.com/Shevchik/AutoSaveWorld/blob/f3d4b7672fc53eeb1ed2735646ee663bbf807632/src/libs/org/apache/commons/net/SocketClient.java][_connectAction_][7] = -> TRY {  -> _socket_.setSoTimeout(_timeout_,)@ -> _input_=_socket_.getInputStream()@ -> _output_=_socket_.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/velo/flexmojos/blob/2f6ac4fb061979743a9ab8d161770571c08c5fce/flexmojos-tester/src/main/java/org/sonatype/flexmojos/test/monitor/AbstractSocketThread.java][openClientSocket][2] = -> TRY {  -> clientSocket=serverSocket.accept()@ -> in=clientSocket.getInputStream()@ -> out=clientSocket.getOutputStream()@ } CATCH(SocketException,IOException,SocketTimeoutException) {}
results[https://github.com/haizi-zh/micromanager/blob/540b83f20ab14f0c28c997a9eff1fe1c4b9f9c4f/plugins/MTTracker/src/org/ndaguan/micromanager/mmtracker/TCPClient.java][SendCommand][2] = -> TRY {  -> outPutSteam=socket.getOutputStream()@ -> outPutSteam.write(rawData,0,len,)@ -> outPutSteam.flush()@ } CATCH(IOException) {}
results[https://github.com/jonosterman/cube/blob/d39554e2b9da5ff5b81385f978989fbb1c53b9f5/cube-client-wm/src/test/java/ch/admin/vbs/cube/client/wm/demo/swm/MockXrandrUI.java][reconnect][1] = -> TRY { -> client=new Socket("localhost",9122,)@ -> outClient=client.getOutputStream()@ } CATCH(Exception) { -> LOG.debug("Failed to reconnect",)@ }
results[https://github.com/codefollower/H2-Research/blob/b002b3eb4d2c623fcb28bab5a3a22e03fd493bfc/src/tools/org/h2/dev/ftp/FtpClient.java][passive][2] = -> TRY {  -> socketData=NetUtils.createSocket(addr,port,false,)@ -> inData=socketData.getInputStream()@ -> outData=socketData.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/nickebbutt/jtimeseries/blob/3de6e62194673138bf3be2e844c7c8896cbd5f5d/jtimeseries/src/main/java/com/od/jtimeseries/net/httpd/NanoHTTPD.java][sendResponse][1] = -> TRY {  -> out=mySocket.getOutputStream()@ -> pw=new PrintWriter(out,)@ -> response.writeResponseBody(out,pw,)@ } CATCH(IOException) {}
results[https://github.com/fnppl/openSDX/blob/25a2e158f7710a5cabc3086ea1a77784f7d429c3/src/org/fnppl/opensdx/securesocket/OSDXSocketServerThread.java][<init>][1] = -> TRY { -> socketOut=new BufferedOutputStream(socket.getOutputStream(),)@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/gabrovski/knowevo/blob/04857f7d235cbaf9be121a36d9174e00abf95672/java/knowevo/src/knowevo/springbox/vizster/VizsterDBStreamBuilder.java][<init>][2] = -> TRY { -> os=sd.getOutputStream()@ -> dos=new DataOutputStream(os,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/htwg/UCE/blob/0eea9069b456391149b1d7e9f3ad4f5b41dcddf9/reversal/src/main/java/de/fhkn/in/uce/reversal/core/ReversalTarget.java][sendFailureResponse][1] = -> TRY {  -> response=request.buildFailureResponse(STUNErrorCode.BAD_REQUEST,errorReason,)@ -> response.writeTo(controlConnection.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/mdaniel/svn-caucho-com-resin/blob/9ab3228645b843833ecb3cbdefe9f55013e54ab8/modules/util/src/com/caucho/vfs/HmuxStream.java][<init>][2] = -> TRY {  -> _is=_s.getInputStream()@ -> _os=_s.getOutputStream()@ -> _ws=VfsStream.openWrite(_os,)@ } CATCH(IOException) {}
results[https://github.com/arkleima/traffic/blob/bb511dd4fa686e24aee3de9d0e2002423e041282/src/edu/brown/cs32/evenitz/arkleima/maps/client/TrafficClient.java][sendData][1] = -> TRY {  -> this.framer.frameMsg(this.dataCoder.toWire(requestData,),this.socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/jaunis/Harmless/blob/f121b7d3d46976dddae69015a14e26ec512892ea/Java/src/harmless/controller/Updater.java][<init>][1] = -> TRY {  -> out=new PrintWriter(socket.getOutputStream(),true,)@ -> ips=socket.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/joaoplay/ProjectFinal/blob/a6627921aaa6bcbe6b1b03d8845819fd8e321ab8/src/serverTCP/UserNotifications.java][<init>][1] = -> TRY { -> outStream=new ObjectOutputStream(clientSocket.getOutputStream(),)@ } CATCH(IOException) { -> System.out.println("[Notifications] Could not create input and output streams:\n"+ie,)@ }
results[https://github.com/damirkusar/jsip/blob/0fb47291dd1ee87751896cf3c9e9d9c7686dba7d/src/gov/nist/javax/sip/stack/TCPMessageChannel.java][<init>][1] = -> TRY {  -> peerAddress=mySock.getInetAddress()@ -> myClientInputStream=mySock.getInputStream()@ -> myClientOutputStream=mySock.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/nekanek/JavaBook/blob/4236f77ee372505e235835ab9efba8e2d8b98f35/stanfStd/Out.java][<init>][3] = -> TRY { -> os=socket.getOutputStream()@ -> osw=new OutputStreamWriter(os,CHARSET_NAME,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/toddlipcon/jetty-hadoop-fix/blob/01dab7e3bdf0cc43a15e136bfdb36753e8f58ba4/modules/jetty/src/main/java/org/mortbay/io/bio/SocketEndPoint.java][<init>][7] = -> TRY {  -> super(socket.getInputStream(),socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/jjnguy/PublicFun/blob/263bcb4e7175a896da79dc7ed9e77a77e639a0dd/486_hw2/src/client/Client.java][connect][1] = -> TRY {  -> connection=new Socket(host,port,)@ -> serverOut=connection.getOutputStream()@ -> serverIn=connection.getInputStream()@ } CATCH(UnknownHostException,IOException) {}
results[https://github.com/cris-b/blacktie/blob/30ed9753217503e6070073ad77b604426b7bd885/jatmibroker-xatmi/src/main/java/org/jboss/narayana/blacktie/jatmibroker/core/transport/hybrid/stomp/StompSenderImpl.java][<init>][1] = -> TRY {  -> this.socket=StompManagement.connect(host,port,username,password,)@ -> this.outputStream=socket.getOutputStream()@ -> this.inputStream=socket.getInputStream()@ } CATCH(ConnectionException,IOException) {}
results[https://github.com/loveingenioustech/Study/blob/9543c78135e92b5fc1038af97b657182aa742fde/algorithm-demo/src/stdlib/BinaryOut.java][<init>][1] = -> TRY { -> os=socket.getOutputStream()@ -> out=new BufferedOutputStream(os,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/lightningdb/chililog-server/blob/1e2684d7fd348fe462e877c835885edb7b30e47e/src/test/java/org/chililog/client/stomp/Client.java][<init>][1] = -> TRY {  -> _socket=new Socket(server,port,)@ -> _input=_socket.getInputStream()@ -> _output=_socket.getOutputStream()@ } CATCH(IOException,LoginException) {}
results[https://github.com/apache/openejb/blob/f1c03ca3b8f5e68012212bb6d4624113334e156c/sandbox/arquillian-tomee/arquillian-tomee-remote/src/main/java/org/apache/openejb/arquillian/remote/RemoteTomEEContainer.java][connect][1] = -> TRY {  -> socket=new Socket("localhost",port,)@ -> out=socket.getOutputStream()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/ttron/lab/blob/8e5b87a6d50b46fe212da99a143fd44cdf38e528/HttpCore-4.2/httpcore/src/test/java/org/apache/http/impl/io/TestSocketOutputBuffer.java][setUp][1] = -> TRY {  -> when(socket.getOutputStream(),).thenReturn(os,)@ } CATCH(Exception) {}
results[https://github.com/svn2github/openam-trunk/blob/183ccaec180731557c8aa67915bc239e09aca43d/openam-core/src/main/java/com/iplanet/services/comm/https/ReaderWriter.java][<init>][2] = -> TRY { -> out=new DataOutputStream(ts.getOutputStream(),)@ } CATCH(IOException) { -> debug.error("ReaderWriter: Cannot construct ReaderWriter ",e,)@ }
results[https://github.com/DDuarte/lpoo-2013/blob/865983cb03113035597ed7ad08d30d2a30bea2f1/bombermen2/bombermen-server/src/pt/up/fe/pt/lpoo/bombermen/Sender.java][<init>][2] = -> TRY { -> _out=new ObjectOutputStream(socket.getOutputStream(),)@ } CATCH(IOException) { -> e1.printStackTrace()@ }
results[https://github.com/ymcagodme/Courses/blob/92036e9e1d9f92d5bdd8fa122e49338fe0f0a24b/CIS282/codes/EchoClient.java][getStreams][1] = -> TRY {  -> input=client.getInputStream()@ -> output=client.getOutputStream()@ -> output.flush()@ } CATCH(IOException) {}
results[https://github.com/axDev-JDK/jdk/blob/acbdb0ade569a980d025ec2b09f528c0bc1a29cd/src/share/classes/java/util/logging/SocketHandler.java][connect][2] = -> TRY {  -> sock=new Socket(host,port,)@!(port==0) && !(host==null) -> out=sock.getOutputStream()@!(port==0) && !(host==null) -> bout=new BufferedOutputStream(out,)@!(port==0) && !(host==null) } CATCH(IOException) {}
results[https://github.com/Vannevelj/Messy/blob/a6d8c51c2c777d3caeed460bdbd308326a67a4a2/src/domain/Client.java][initiateIO][1] = -> TRY {  -> inbound=socket.getInputStream()@ -> outbound=new PrintWriter(socket.getOutputStream(),true,)@ } CATCH(IOException) {}
results[https://github.com/apache/derby/blob/fdaf2b584d789b48b93c3b78dfb5a16d2ee90e3d/java/drda/org/apache/derby/impl/drda/ProtocolTestAdapter.java][<init>][1] = -> TRY {  -> this.reader=new DDMReader(socket.getInputStream(),)@ -> this.out=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/Atlee/P2PChineseCheckers/blob/6e0b36594ac349ccbe65443b1a47727fd128a524/ChineseCheckers/src/protocols/CreateUserProtocol.java][sendKey][1] = -> TRY {  -> out=new ObjectOutputStream(s.getOutputStream(),)@ -> out.writeObject(key,)@ } CATCH(IOException) {}
results[https://github.com/Jeremy-Gaillard/TPCIAI/blob/784e66c868027150ce39a2b20ce72009d2202290/Programme/Windows/Interface_windows_CIAI/src/Reseau/serv.java][send_message][1] = -> TRY {  -> oStream=client.getOutputStream()@ -> bOStream=new BufferedOutputStream(oStream,)@ -> feedback=client.getInputStream()@ } CATCH(IOException) {}
results[https://github.com/terencehonles/jaramiko/blob/46f157abc206e7a9a42a5e767293cdeffc40bf01/java/net/lag/paramiko/BaseTransport.java][<init>][1] = -> TRY {  -> mInStream=mSocket.getInputStream()@ -> mOutStream=mSocket.getOutputStream()@ -> mPacketizer=new Packetizer(mInStream,mOutStream,mRandom,)@ } CATCH(IOException) {}
results[https://github.com/jjnguy/PublicFun/blob/1bde394a990e4fe394f7020c77cf483f41e3eea2/chatPrototype/src/FullChatPanel.java][hostConversation][1] = -> TRY {  -> connection=f.showConnectionDialog()@ -> sockIn=connection.getInputStream()@!(connection==null) -> socOut=connection.getOutputStream()@!(connection==null) } CATCH(IOException) {}
results[https://github.com/Meldanya/eda040_project/blob/41f591d8baabe644059bac5bbcb1d90adb900325/Server/src/network/ServerProtocol.java][<init>][1] = -> TRY { -> this.input=socket.getInputStream()@ -> this.output=socket.getOutputStream()@ } CATCH(IOException) { -> System.err.println("Could not get streams from socket.",)@ }
results[https://github.com/thornwishstalon/flaming-octo-nemesis/blob/f88b6c9d411ffda91acc30c39d2343512715660e/dslab/src/network/tcp/client/TCPOutputConnection.java][resetSocket][2] = -> TRY { -> writer=new PrintWriter(socket.getOutputStream(),true,)@ } CATCH(IOException) { -> System.out.println("Output Socket crashed!",)@ }
results[https://github.com/bladesilent/Harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/ldap/LdapClient.java][setSocket][1] = -> TRY {  -> this.in=new InputStreamWrap(socket.getInputStream(),)@ -> this.out=socket.getOutputStream()@ } CATCH(IOException) {}
results[https://github.com/weishengshui/posnet2-server/blob/4a8b1b71c049f3b44dcf6da346c76873aa7730df/server/src/test/java/com/chinarewards/qqgbvpn/main/jmx/PosnetConnectTest.java][init][1] = -> TRY {  -> oldPosInit(s.getOutputStream(),s.getInputStream(),challenge,)@ } CATCH(Exception) {}
results[https://github.com/marstein/GosuJacoco/blob/bffa41b4eec5328cd34eaf8d9faa308d64a73ef3/org.jacoco.agent.rt.test/src/org/jacoco/agent/rt/controller/MockSocketConnectionTest.java][testWriteOnClosedSocket][1] = -> TRY {  -> out=a.getOutputStream()@ -> a.close()@ -> out.write(123,)@ } CATCH(Exception) {}
results[https://github.com/vivo-project/Tools/blob/d788bd404a9f4a6766c6db04e8ff78fbc39eeeff/VIVO Harvesters/trunk2/src/org/vivoweb/ingest/io/SocketClient.java][getOOS][1] = -> TRY {  -> return new ObjectOutputStream(new BufferedOutputStream(connection.getOutputStream(),),)@ } CATCH(IOException) {}
results[https://github.com/seanjosephwu/nonogramFun/blob/dbbab6f347b61a4e6960c1a06da9b115ab5174f3/Nonogram/src/uw/cse403/nonogramfun/network/NonoNetwork.java][<init>][1] = -> TRY {  -> outStrm=tcpSocket.getOutputStream()@ -> inStrm=tcpSocket.getInputStream()@ -> tcpSocket.setSoTimeout(NonoConfig.SOCKET_TIMEOUT,)@ } CATCH(IOException) {}
results[https://github.com/proofpoint/kairosdb/blob/7bade49a287884f59210dd33b0ad6218aff9ba79/src/test/java/org/kairosdb/core/telnet/TelnetClient.java][<init>][1] = -> TRY {  -> m_socket=new Socket(host,port,)@ -> m_writer=new PrintWriter(m_socket.getOutputStream(),)@ } CATCH(IOException) {}
results[https://github.com/Audioboo/audioboo-android/blob/194fc1828d5c85cb614e4e50b07b71098d67c520/externals/dnsjava/org/xbill/DNS/SimpleResolver.java][writeTCP][1] = -> TRY {  -> outStream=s.getOutputStream()@ -> outStream.write(lengthArray,)@ -> outStream.write(out,)@ } CATCH(IOException) {}
results[https://github.com/YoX89/Pathogenum/blob/b49d63238824dafdf43ed1874d95ca9723eec5bc/Pathogenum/src/GamesLobby/HubComInputServer.java][<init>][1] = -> TRY { -> is=connection.getInputStream()@ -> os=connection.getOutputStream()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/bndtools/bndtools/blob/894bfe98b7f0240120ebdf5da763acc403a4572f/bndtools.ace.plugin/src/bndtools/ace/launch/AceLaunchSocket.java][run][1] = -> TRY { -> m_socket=m_serverSocket.accept()@ -> m_outputStream=m_socket.getOutputStream()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/raykroeker/thinkparity/blob/5693c6b6e80be770b2ac2acae66d88d563e648e6/remote/model/src/main/java/com/thinkparity/desdemona/model/queue/notification/NotificationSocketDelegate.java][<init>][1] = -> TRY {  -> this.socketInput=socket.getInputStream()@ -> this.socketOutput=socket.getOutputStream()@ -> this.socketRemoteAddress=socket.getRemoteSocketAddress()@ } CATCH(IOException) {}
