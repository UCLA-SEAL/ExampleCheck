results[https://github.com/ttron/lab/blob/48a9930884791c3fa1869ad3bcc9adb656ce9f76/nexus-oss-2.11.2-06/components/nexus-core/src/main/java/org/sonatype/nexus/LimitedInputStream.java][read][840] = -> TRY {  -> return is.read()@ } CATCH(IOException) {}
results[https://github.com/rasmusjensen/lightscript/blob/0b6b7980fb70c9a5bcee6850356eb05e66352d05/com/solsort/mobile/HTMLParser.java][ensureBuffer][17] = -> LOOP { -> TRY { -> ch=is.read()@ } -> buffer+=(char) ch@buffer.length()<len }
results[https://github.com/HioLeong/Compilers/blob/0cc2df66c10a14115c10a98b051f28c54bae7935/cwAST/java_cup/simple_calc/scanner.java][advance][16] = -> TRY {  -> next_char=instream.read()@ } CATCH(java.io.IOException) {}
results[https://github.com/ybrs/hazelcastforked/blob/aa6068c648ec95c821ddae0d93a3d2a1fcc6cb4a/dist/TestApp.java][readCharacter][6] = -> TRY {  -> return in.read()@ } CATCH(Exception) {}
results[https://github.com/apache/commons-io/blob/3c8ec897d3894d66c3433c58318d40396c832808/src/java/org/apache/commons/io/SwappedDataInputStream.java][readByte][2] = -> TRY {  -> return (byte) m_input.read()@ } CATCH(IOException,EOFException) {}
results[https://github.com/mdb92nc/STAR-Vote/blob/72b6bbcd9933cf6b9edeb1a1cbd287b358a55737/sexpression/stream/ASEInputStreamReader.java][readWildcard][1] = -> TRY {  -> b=(byte) _stream.read()@ } CATCH(IOException,InvalidVerbatimStreamException) {}
results[https://github.com/darrinwillis/distributedSystems/blob/50d10061f6d4025f583570d436a712953fe93632/lab3/src/RMIInputStreamImpl.java][read][1] = -> TRY {  -> return in.read()@ } CATCH(IOException,RemoteException) {}
results[https://github.com/apache/tika/blob/05f007e1af8861f0ca8c2eb0170c9c0822ac7d6a/tika-core/src/test/java/org/apache/tika/fork/ForkTestParser.java][parse][1] = -> TRY {  -> stream.read()@ } CATCH(IOException,SAXException,TikaException) {}
results[https://github.com/stas/pos/blob/bfb80cc82f73d90e1f2f12ebf6d51f81436de726/src-pos/com/openbravo/pos/scale/ScaleSamsungEsp.java][serialEvent][3] = -> TRY { -> LOOP { -> b=m_in.read()@m_in.available()>0 } }
results[https://github.com/dkomanov/fizteh-java-2013/blob/bfc80eb74b06b37097db5b8153dd802d2c2b4237/src/ru/fizteh/fivt/students/vlmazlov/calculator/Calculator.java][nextChar][1] = -> TRY { -> IF { -> curChar=(char) expression.read()@0<expression.available() } }
results[https://github.com/wellsie1116/Darxen/blob/444c86193f18f25168c04d0432ff1116f53dd672/src/android/darxen/src/me/kevinwells/darxen/data/DataFileStream.java][readByte][1] = -> TRY {  -> r=s.read()@ -> return (byte) r@ } CATCH(ParseException,IOException) {}
results[https://github.com/saterus/asm_simulator/blob/cbca1d3cee07b050e12ce9c04a54412fbc2f6035/src/edu/osu/cse/mmxi/ui/UI.java][getChar][2] = -> TRY { -> n=in.read()@ -> IF { -> b=(byte) n@n!=-1 } }
results[https://github.com/jclouds/jclouds/blob/828d8790c2c1e87e4db3a2dd650a8fd2d7f3a790/core/src/main/java/org/jclouds/crypto/ASN1Codec.java][read][2] = -> TRY { -> return s.read()@ } CATCH(IOException) { -> throw propagate(e,)@ }
results[https://github.com/feiyan35488/nutz/blob/f62f727eb51a6e8362e6df0215bda9b8cb1ec5ec/src/org/nutz/mock/servlet/multipart/inputing/StringInputing.java][read][5] = -> TRY { -> return ins.read()@ } CATCH(IOException) { -> throw Lang.wrapThrow(e,)@ }
results[https://github.com/axDev-JDK/jdk/blob/e29089cd2f1827672b8e1fd7d492d8de8a128937/test/sun/security/ssl/javax/net/ssl/TLSv11/GenericStreamCipher.java][doClientSide][174] = -> TRY {  -> sslIS=sslSocket.getInputStream()@ -> sslIS.read()@ } CATCH(Exception) {}
results[https://github.com/frostwire/frostwire-desktop/blob/90eacf1ef657a5664fd9b5e2e84d819091f9ea3c/lib/jars-src/mp4parser/isoparser/src/main/java/com/googlecode/mp4parser/authoring/tracks/H264TrackImpl.java][<init>][9] = -> TRY {  -> is.read()@ -> reader=new CAVLCReader(is,)@ } CATCH(IOException) {}
results[https://github.com/emboss/krypt-core-java/blob/1c1382f6bbdd2021309fb1faa2ace8bea89fdb80/src/org/jruby/ext/krypt/asn1/parser/PullHeaderParser.java][nextInt][3] = -> TRY { -> return in.read()@ } CATCH(IOException) { -> throw new ParseException(ex,)@ }
results[https://github.com/dukeboard/kevoree-extra/blob/005d202d3f4a214b806f50ad4d19fb6e12ede2f1/org.kevoree.extra.quercus/src/main/java/com/caucho/hessian/micro/MicroHessianInput.java][readBoolean][5] = -> TRY {  -> tag=is.read()@ -> throw expect("boolean",tag,)@ } CATCH(IOException) {}
results[https://github.com/and146/SPLAT-ARI/blob/2bde9af409c10ea82a0df52d8d2ce680ab099024/ttools/src/main/uk/ac/starlink/ttools/lint/ValueParser.java][checkStream][4] = -> TRY {  -> chr=(char) 0xffff&in.read()@ -> error("Bad boolean value '"+chr+"'",)@ } CATCH(IOException) {}
results[https://github.com/omanamos/cse490h_p1/blob/6d2f9c5a2477aa52b1fce27da7c53d5171f06bf9/src/edu/washington/cs/cse490h/lib/NodeServer.java][<init>][3] = -> TRY {  -> in=socket.getInputStream()@ -> address=in.read()@ } CATCH(IOException) {}
results[https://github.com/Dimorphus/llvm-gcc-4.2/blob/f5aa5dfd0308b31bb98e36ed72f79ee0bb184af6/libjava/classpath/gnu/javax/imageio/gif/GIFFile.java][decodeRaster][5] = -> TRY {  -> initialCodeSize=in.read()@ -> compressedData=readData(in,)@ } CATCH(IOException) {}
results[https://github.com/tiin57/luaforge/blob/38274e59b1ef89d2b949ea7e39f4fc97615a827e/src/common/luaforge/luaj/vm2/compiler/LexState.java][nextChar][14] = -> TRY { -> current=z.read()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/ndeloof/svnkit/blob/03395d303fec9451596a6a2111212885e7c310e3/svnkit/src/org/tmatesoft/svn/core/wc/SVNAdminUtil.java][readKeyOrValue][6] = -> TRY {  -> r=dumpStream.read(buffer,)@ -> r=dumpStream.read()@ } CATCH(SVNException,IOException) {}
results[https://github.com/environmentalinformatics-marburg/magic/blob/bd5aa3e9673b76735fd11d435e855850b51ea18a/dfg_spp_exploratories/adml/commons-io-2.4-src/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java][testReadOneByte][3] = -> TRY {  -> assertEquals('a',tee.read(),)@ } CATCH(Exception) {}
results[https://github.com/gracefullife/gerrit/blob/dac17eac2013fb1405eb82bf77c44b7b7d211740/gerrit-patch-jgit/src/main/java/org/eclipse/jgit/lib/ObjectIdSerialization.java][readCanBeNull][14] = -> TRY {  -> in.read()@ -> return readNotNull(in,)@ } CATCH(IOException) {}
results[https://github.com/jfinkels/tuxguitar/blob/1f38bb942576c95fe3338f2e95a81f6c36fc386f/src/main/java/org/herac/tuxguitar/io/ptb/PTInputStream.java][readBoolean][6] = -> TRY { -> return this.stream.read()>0@ } CATCH(IOException) { -> LOG.error(e,)@ }
results[https://github.com/metaborg/imp-patched/blob/abc52ccc70aa8aee7aed2a625c19e7be7b4df2f6/org.eclipse.imp.pdb.values/src/org/eclipse/imp/pdb/facts/io/binary/BinaryReader.java][readType][2] = -> TRY {  -> return doReadType(in.read(),)@ } CATCH(IOException) {}
results[https://github.com/nuodb/migration-tools/blob/d0e4e14dec80e61ff647a5131fa0a08076984447/core/src/test/java/com/nuodb/migrator/integration/ResultSetUtil.java][compareStream][1] = -> TRY {  -> Assert.assertEquals(tarStream.read(),-1,"Target Stream is longer than expected",)@ } CATCH(IOException) {}
results[https://github.com/boundlessgeo/geotools-2.7.x/blob/97dca30e4c611e742429aede2b20551e931c57d8/modules/unsupported/wfs/src/main/java/org/geotools/data/wfs/v1_0_0/LogInputStream.java][read][12] = -> TRY {  -> result=delegate.read()@ -> buffer.append((char) result,)@ } CATCH(IOException) {}
results[https://github.com/jaliste/unitime/blob/adc18e62da485e7ef82f4fd3d418505185e4984a/JavaSource/org/unitime/timetable/filter/QueryLogFilter.java][read][4] = -> TRY {  -> out=iInputStream.read()@ -> iOutputStream.write(out,)@ } CATCH(IOException) {}
results[https://github.com/NowBaseline/nebula/blob/c3e5242b2fabea18003ccd8e19bededb817d1800/techtest/src/test/java/test/javabytecode/BlockStruct.java][readU1][3] = -> TRY { -> return (byte) in.read()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/svn2github/H2-Mirror/blob/550395b065b4d775feba22cd9c55946d2c3529b5/h2/src/test/org/h2/test/db/TestLob.java][testConcurrentRemoveRead][1] = -> TRY {  -> in=rs.getBinaryStream(1,)@ -> in.read()@ } CATCH(Exception) {}
results[https://github.com/ttron/lab/blob/31d92906d5d61f28af1711da4fa7fff18aa4e947/jersey/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/server/ExceptionMapperTest.java][testWriterThrowsExceptionAfterFirstBytesAreWritten][2] = -> TRY {  -> inputStream=res.readEntity(InputStream.class,)@ -> inputStream.read()@ } CATCH(IOException) {}
results[https://github.com/binwiederhier/syncany/blob/c7eb5a4a5d05cbecec59b5b768a6b57afda8eecf/src/org/syncany/crypto/MultiCipherInputStream.java][readByteAndUpdateHmac][2] = -> TRY {  -> abyte=inputStream.read()@ -> hmac.update((byte) abyte,)@ } CATCH(IOException) {}
results[https://github.com/i2p/i2p.i2p/blob/289a8e7b40a01e49f42647254fab1245e5d063dc/core/java/src/net/i2p/data/DataHelper.java][readBoolean][1] = -> TRY {  -> val=in.read()@ -> throw new DataFormatException("Uhhh.. readBoolean read a value that isn't a known ternary val (0,1,2): "+val,)@ } CATCH(DataFormatException,IOException) {}
results[https://github.com/krashbot/moby/blob/3599c49f52220811050a56bafb385638f1b02bdd/support/common/src/org/plt/platform/Platform.java][readLine][2] = -> LOOP { -> TRY { -> ch=in.read()@ -> buf.append((char) ch,)@ } }
results[https://github.com/eclipse/webtools.dali/blob/92e3783462b168cd5c39f28d53df7cf23d145ac5/common/tests/org.eclipse.jpt.common.utility.tests/src/org/eclipse/jpt/common/utility/tests/internal/io/NullInputStreamTests.java][testRead][3] = -> TRY {  -> assertEquals(-1,this.nullInputStream.read(),)@ } CATCH(IOException) {}
results[https://github.com/sgothel/jogl/blob/1c51abc1872b3cb984800fd76941a82dacd9e7b1/src/jogl/classes/jogamp/opengl/util/pngj/PngHelperInternal.java][readByte][1] = -> TRY { -> return is.read()@ } CATCH(IOException) { -> throw new PngjInputException("error reading byte",e,)@ }
results[https://github.com/openGDA/gda-core/blob/9acee6bd6d31525e568b16a965abc834bacd44e1/uk.ac.gda.core/src/gda/jython/UserMessagesIO.java][readMessages][1] = -> TRY {  -> version=is.read()@ -> dis=new DataInputStream(is,)@ } CATCH(IOException) {}
results[https://github.com/jalop-tresys/jjnl/blob/e95564d3ab731dd0571ade9fe479f19eebedfcc6/jnl_lib/src/test/java/com/tresys/jalop/jnl/impl/SubscriberANSHandlerTest.java][testJalopDataStreamReadThrowsIOExceptionUponFailure][1] = -> TRY {  -> jds=(Dispatcher) dispatcher.getJalopDataStreamInstance(5,ds,md,)@ -> jds.read()@ } CATCH(Exception) {}
results[https://github.com/adamantoise/wordswithcrosses/blob/d5ddaef42161cba91b5c32f363d954010b5d3f0f/puzlib/src/main/java/com/totsp/crossword/puz/IO.java][readCustom][1] = -> TRY {  -> version=is.read()@ -> v.read(puz,is,)@ } CATCH(IOException) {}
results[https://github.com/Onkeliroh/Projekt-SS2013/blob/2f7ce8a1414f8812007b7746f400a8ca8414cfb6/code/KickFlick-Server/src/kickflick/utility/serial_lib.java][run][1] = -> TRY { -> availableBytes=this.in_.available()@ -> LOOP { -> this.Buffer_[tmp_int]=(byte) this.in_.read()@tmp_int<availableBytes } }
results[https://github.com/arekinath/jop/blob/9dc4dcda204fc85490e7561e10b8501b66971d37/java/target/src/jdk11/java/io/DataInputStream.java][readUnsignedByte][2] = -> TRY {  -> return convertToUnsignedByte(in.read(),)@ } CATCH(IOException) {}
results[https://github.com/BombusMod/BombusMod/blob/84b9e314f98be3cef45883050a38a9b90f2bd6ea/src/login/GoogleTokenAuth.java][readLine][2] = -> TRY { -> LOOP { -> ch=is.read()@ -> buf.append((char) ch,)@ } }
results[https://github.com/mnip91/proactive-component-monitoring/blob/eab598ed4d31a26cc5069d41c3d4302fa194c8d6/src/Extensions/org/objectweb/proactive/extensions/processbuilder/stream/ByteStepStreamReader.java][readByte][2] = -> TRY { -> in=inputStream.read()@ -> IF { -> inputBuffer.put((byte) in,)@in!=-1 } } -> return (in==-1)?-1:0@
results[https://github.com/jdkoftinoff/mb-linux-msli/blob/bf19b5277f2d4d23d9d7d9ca7f5ffd7e04666a0d/uClinux-dist/lib/classpath/gnu/javax/imageio/gif/GIFFile.java][readExtension][5] = -> TRY {  -> functionCode=in.read()@ -> data=readData(in,)@ } CATCH(IOException,GIFException) {}
results[https://github.com/mdaniel/svn-caucho-com-resin/blob/02e4a49ed368f1e38acf83312f940867bd3ba992/modules/resin/src/com/caucho/message/tourmaline/AbstractNautilusEndpoint.java][onReadBinary][1] = -> TRY {  -> code=is.read()@ -> _dispatch[code].onMessage(this,is,)@ } CATCH(IOException) {}
results[https://github.com/metaborg/imp-patched/blob/e7ac83d9cb43dace542ea62bff5b0c728148a63d/org.eclipse.imp.pdb.values/src/org/eclipse/imp/pdb/facts/io/StandardTextReader.java][read][1] = -> TRY {  -> this.stream=new NoWhiteSpaceInputStream(stream,)@ -> current=stream.read()@ } CATCH(FactTypeUseException,IOException) {}
results[https://github.com/JetBrains/jetpad-mapper/blob/fed9b4788c8477d3860ed122d4297d9f8e77739a/util/json/src/main/java/jetbrains/jetpad/json/InputStreamJsonLexer.java][readCurrent][1] = -> TRY { -> read=myInputStream.read()@ } CATCH(IOException) { -> throw new RuntimeIOException(e,)@ }
results[https://github.com/amal029/jop/blob/926858f64ec8f3b4f94f6da9d7b1bfdc7679cdcf/java/target/src/jdk11/java/io/DataInputStream.java][readBoolean][2] = -> TRY {  -> return convertToBoolean(in.read(),)@ } CATCH(IOException) {}
results[https://github.com/xored/f4/blob/82d3c126f014bec0b060a0a2d66793d45041c562/com.xored.f4.fantom/fantom/src/sys/java/fan/sys/SysInStream.java][r][1] = -> TRY { -> return in.read()@ } CATCH(IOException) { -> throw IOErr.make(e,)@ }
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/sun/net/www/http/KeepAliveStream/KeepAliveStreamClose.java][run][4] = -> TRY { -> is=s.getInputStream()@ -> LOOP { -> is.read()@ } }
results[https://github.com/ops4j/org.ops4j.pax.runner/blob/cbd21d743652739482aefa31479fb3e1c400db29/pax-runner/src/main/java/org/ops4j/pax/runner/daemon/Daemon.java][readStream][1] = -> LOOP { -> TRY { -> ch=stream.read()@stream!=null&&expected>0 } -> command.append((char) ch,)@ }
results[https://github.com/amal029/jop/blob/926858f64ec8f3b4f94f6da9d7b1bfdc7679cdcf/java/target/src/jdk11/java/io/DataInputStream.java][readByte][2] = -> TRY {  -> return convertToByte(in.read(),)@ } CATCH(IOException) {}
results[https://github.com/zh2009/openfridge/blob/f3e7e4e300f4340510a9938fd0142a8422272f29/OpenFridge_ZH/src/com/openfridge/FridgeFood.java][remove][1] = -> TRY {  -> x=url.openStream()@ -> x.read()@ } CATCH(IOException) {}
results[https://github.com/adamantoise/wordswithcrosses/blob/d5ddaef42161cba91b5c32f363d954010b5d3f0f/puzlib/src/main/java/com/totsp/crossword/puz/IO.java][readMeta][1] = -> TRY {  -> version=is.read()@ -> m=v.readMeta(is,)@ } CATCH(IOException) {}
results[https://github.com/tonyg/hop/blob/3a303015f890858e19430e291c230fac78852c17/java/src/hop/SexpReader.java][read][2] = -> TRY {  -> return _read(_input.read(),)@ } CATCH(IOException) {}
results[https://github.com/langresser/socool/blob/d4dd92816a599a06a9e1987a60927d4da33004fb/src/info/monitorenter/cpdetector/io/InputStreamDebug.java][read][1] = -> TRY {  -> ret=this.m_delegate.read()@ -> System.out.print((char) ret,)@ } CATCH(IOException) {}
results[https://github.com/splunk/splunk-shuttl/blob/d832140b3ec9f2a36c3392d16dff0fbe149f70da/test/java/com/splunk/shuttl/archiver/bucketlock/SimpleFileLockSharedTest.java][waitForOtherJvmToTryLock][2] = -> TRY {  -> in=otherJvmLocker.getInputStreamFromClass()@ -> in.read()@ } CATCH(IOException) {}
results[https://github.com/jsampson/prevayler/blob/fd6715373fa4f07bbe2a8cf3fb24c3b278c1c437/tests/src/test/java/org/prevayler/foundation/DeepCopierTest.java][readObject][1] = -> TRY {  -> return new Byte((byte) stream.read(),)@ } CATCH(Exception) {}
results[https://github.com/0xdata/h2o/blob/d8e2baae1de0f0813815df1f6b721159cebd75c8/src/main/java/water/parser/PMMLParser.java][get][1] = -> TRY { -> b=_is.read()@!(_idx>0) } CATCH(IOException) { -> Log.err(ioe,)@!(_idx>0) }
results[https://github.com/jponge/izpack-full-svn-history-copy/blob/9d4073c9c23ece54e9a7bc6fbc0d4660565aead6/izpack-src/branches/IZPACK-63-protocol-buffers/src/lib/com/izforge/izpack/installer/Unpacker.java][readProtocolBuffer][1] = -> TRY {  -> bufferSize=in.read()@ -> readAll(in,buffer,)@ } CATCH(IOException) {}
results[https://github.com/metaborg/imp-patched/blob/abc52ccc70aa8aee7aed2a625c19e7be7b4df2f6/org.eclipse.imp.pdb.values/src/org/eclipse/imp/pdb/facts/io/binary/BinaryReader.java][readBool][1] = -> TRY {  -> bool=in.read()@ -> return valueFactory.bool((bool==0)?false:true,)@ } CATCH(IOException) {}
results[https://github.com/alanhorizon/Java-Slick/blob/70e37c8cd16df5b5d1361b7e9cb1dbbf5b34a7f3/SlickPlayground/src/playground/jnlp/LaunchConfig.java][run][1] = -> LOOP { -> TRY { -> i=in.read()@ -> out.write(i,)@!(i<0) } }
results[https://github.com/xperimental/javadrone/blob/dd128d9d64339e37f443b1211be62d4be7c937a1/javadrone-api/src/main/java/com/codeminders/ardrone/data/logger/LogStreamWrapper.java][read][1] = -> TRY {  -> data=dataStream.read()@ -> logger.logStreamContent(data,)@ } CATCH(IOException) {}
results[https://github.com/SiteView/NEWECC9.2/blob/141f3f132d2656f94f5ee62a3054d27162e8e5ad/com.siteview.kernel.core/src/COM/dragonflow/Utils/DebugInputStream.java][read][1] = -> TRY {  -> i=is.read()@ -> java.lang.System.out.print((char) i,)@ } CATCH(java.io.IOException) {}
results[https://github.com/eclipse/actf.common/blob/e43884fbe361c0db804faae977b343a0f29311c3/plugins/org.eclipse.actf.model.flash/src/org/eclipse/actf/model/flash/bridge/proxy/HTTPLocalServerSWF.java][setBridgeInitSwf][1] = -> TRY { -> LOOP { -> b=is.read()@ -> os.write(b,)@ } }
results[https://github.com/jpcaruana/jsynthlib/blob/7e3458a688b9c8733f217c9966c484713348c2e9/JSynthLib/midiprovider/LinuxCharDev/LinuxCharDevMidiProvider/LinuxCharDevMidiDevice.java][run][2] = -> LOOP { -> TRY { -> c=inStream.read()@ -> addToList(c,)@ } }
results[https://github.com/metaborg/jsglr/blob/6e2b3764b1c06031e2ebba8da6c8763cfa8ac645/jsglr-gwt/src/org/spoofax/jsglr/server/RemoteParseTableServiceImpl.java][fetchParseTable][1] = -> TRY { -> is=new FileInputStream(resourceName,)@ -> LOOP { -> ch=is.read()@ -> buffer[i]=(char) ch@i<buffer.length } }
results[https://github.com/sobkowiak/gjtapi/blob/a2419166514a65f1013c86ae418fedc0f208d699/src/src/net/sourceforge/gjtapi/test/TestCallListener.java][prompt][2] = -> TRY {  -> in.read()@ -> in.skip(in.available(),)@ } CATCH(IOException) {}
results[https://github.com/mbastian/gephi-maven/blob/64b97a17b969eb55cd95be2182ecce23c3eefbe1/ImportAPI/src/main/java/org/gephi/io/importer/api/ImportUtils.java][ignoreBytes][52] = -> TRY {  -> LOOP { -> inputStream.read()@ } } CATCH(IOException) {}
results[https://github.com/overturetool/overture/blob/c4a962b2b3fb9a52904b68216cf7ef61ebb34b1a/core/vdmtools/vdmtoolsapi/src/main/java/org/overture/vdmtools/interpreter/Interpreter.java][GetNumeric][1] = -> TRY { -> is=new ByteArrayInputStream(b1,)@ -> LOOP { -> c=is.read()@ -> str+=Character.toString((char) c,)@ } }
results[https://github.com/steveloughran/hadoop-trunk/blob/81db335ac6b67c749006e98223b61973a44ff4de/hadoop-common/src/test/java/org/apache/hadoop/net/TestSocketIOWithTimeout.java][run][9] = -> TRY { -> in.read()@ } CATCH(IOException) { -> LOG.info("Got expection while reading as expected : "+e.getMessage(),)@ }
results[https://github.com/dimitarp/basex-all/blob/75c13d3aaf3a5eab991d7e98572f3e7dc8290f91/basex/src/main/java/org/basex/io/in/LookupInput.java][read][17] = -> TRY {  -> IF { -> curr=input.read()@ } } CATCH(IOException) {}
results[https://github.com/ChioriGreene/ChioriWebServer/blob/f534eb0debf24fcff822edd776141e96ba05a51a/src/jline/internal/NonBlockingInputStream.java][run][3] = -> LOOP { -> IF { -> TRY { -> charRead=in.read()@ } } }
results[https://github.com/dimitarp/basex-all/blob/f7d970a4fcf18cd16a51809b044bc68062383717/src/main/java/org/basex/io/WrapInputStream.java][read][2] = -> TRY {  -> IF { -> return -1@v==-1 } -> curr=input.read()@!(v==-1) } CATCH(IOException) {}
results[https://github.com/blickly/ptii/blob/0b7fc4ec784252950cf16c990ac925bef4ed0352/com/microstar/xml/XmlParser.java][read8bitEncodingDeclaration][3] = -> TRY {  -> LOOP { -> ch=is.read()@ -> readBuffer[++readBufferLength]=(char) ch@ } } CATCH(java.lang.Exception) {}
results[https://github.com/mlundblad/bc-java/blob/158b54fbacb8926df0e74086e95900924c862b6e/src/main/java/org/bouncycastle/openpgp/PGPEncryptedData.java][read][7] = -> TRY {  -> ch=in.read()@ -> IF { -> return c@ch>=0 } } CATCH(IOException) {}
results[https://github.com/RaphaelJ/Cours-3eme-ann-e/blob/9534845d5ba03b7af60e3f34b8e7a3c572b044ca/Java/tomcat/examples/WEB-INF/classes/validators/DebugValidator.java][validate][5] = -> is=page.getInputStream()@ -> LOOP { -> TRY { -> ch=is.read()@ -> System.out.print((char) ch,)@ } }
results[https://github.com/pacerom/libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/net/OldJarURLConnectionTest.java][test_setUseCaches][12] = -> TRY {  -> in=connection.getInputStream()@ -> in.read()@ -> in.close()@ } CATCH(Exception) {}
results[https://github.com/ALRubinger/oreilly-ejb-6thedition-book-examples/blob/50d9d35c79f88a19924df6156020a2f983c5423a/chxx-interceptors/src/test/java/org/jboss/ejb3/examples/chxx/tuner/InterceptionIntegrationTest.java][testCachingInterception][1] = -> TRY {  -> content=bean.getChannel(channel,)@ -> TestCase.assertEquals("Did not obtain expected response",channel,content.read(),)@ } CATCH(NamingException,IOException) {}
results[https://github.com/jameskennard/mockito-collections/blob/9dd04b7221ec5aab181895723a2309470f03de1f/mockito-collections-core/src/test/java/uk/co/webamoeba/mockito/collections/internal/VerifierTest.java][shouldCollectiveVerifyNoMoreInteractions][2] = -> TRY {  -> aMock=mock(InputStream.class,)@ -> aMock.read()@ -> collection=Arrays.asList(aMock,)@ } CATCH(IOException) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/249ff22f64878a7eac7a4f62f92e7b706ed76c58/test/sun/security/ssl/com/sun/net/ssl/internal/ssl/ClientHandshaker/CipherSuiteOrder.java][doClientSide][3] = -> TRY {  -> sslIS=sslSocket.getInputStream()@ -> read=sslIS.read()@ -> System.out.println("client read: "+read,)@ } CATCH(Exception) {}
results[https://github.com/splunk/splunk-shuttl/blob/10380e357265552569deea3444c7caab224f8a76/test/java/com/splunk/shuttl/testutil/ShellClassRunnerTest.java][main][1] = -> TRY {  -> read=in.read()@ -> in.close()@ -> System.exit(read,)@ } CATCH(IOException) {}
results[https://github.com/richfaces/richfaces-sandbox/blob/5f585505a5c193c547e6646984bc3eaf46020f55/bootstrap/demo/src/test/java/org/richfaces/bootstrap/demo/TaglibReaderTest.java][getStreamTest][1] = -> TRY {  -> stream=reader.getStream()@ -> Assert.assertNotNull(stream.read(),)@ } CATCH(Exception) {}
results[https://github.com/Comandante/LearningREST/blob/be94541672c9abf6fb669b6570e84083f6255568/REST/Common/support/src/main/ru/forxy/common/log/BufferingInputStream.java][read][3] = -> TRY {  } ELSE { -> return m_delegate.read()@!(m_pos<m_buffer.length) } CATCH(IOException) {}
results[https://github.com/babble/babble/blob/03420c5d3bd3d03613783880ab5078d7f744735f/src/test/ed/net/httpserver/HttpServerTest.java][testHead2][1] = -> TRY {  -> in=s.getInputStream()@ -> r=read(in,true,)@ -> assert in.read()==-1@ } CATCH(IOException) {}
results[https://github.com/tl64/Jan/blob/c3dd565ff22bd7b3451f3d48399266c54aa7ee63/Jan/src/de/tl/jan/transfer/ScpToolsImp.java][streamToString][1] = -> TRY {  -> LOOP { -> output+=(char) input.read()@input.available()>0 } } CATCH(Exception) {}
results[https://github.com/apache/httpcore/blob/b36d2e5e9c94f2da365f81957bf9c2e4f23d4ea3/httpcore/src/test/java/org/apache/http/impl/io/TestChunkCoding.java][testCorruptChunkedInputStreamInvalidSize][1] = -> TRY {  -> in=new ChunkedInputStream(new SessionInputBufferMock(s,Consts.ISO_8859_1,),)@ -> in.read()@ } CATCH(IOException) {}
results[https://github.com/Meldanya/eda040_project/blob/2789b65fa9b692d59a2662fefeff816d8f8cdcaa/Server/src/se/lth/cs/cameraproxy/MotionDetector.java][updateLevel][1] = -> TRY { -> level=inp.read()@ } CATCH(IOException) { -> System.err.println("Could not connect to Axis camera in MotionDetector.",)@ -> System.exit(1,)@ }
results[https://github.com/rackerlabs/repose/blob/211d02ea9f397fcf3f740a959e9bc9f0eff3447e/project-set/commons/utilities/src/test/java/com/rackspace/papi/commons/util/io/InputStreamMergerTest.java][shouldHandleEmptyStreams][1] = -> TRY {  -> emptyStream=InputStreamMerger.merge(emptyStream1,emptyStream2,emptyStream3,)@ -> assertEquals(expected,emptyStream.read(),)@ } CATCH(IOException) {}
results[https://github.com/seasarorg/kijimuna/blob/bd3886df474d0682ca4350c94488de63f55e78ce/org.seasar.kijimuna.core/test/org/seasar/kijimuna/core/KijimunaTest.java][testGetEntry][1] = -> TRY {  -> in=url.openStream()@ -> i=in.read()@ -> assertEquals((char) i,'<',)@ } CATCH(Exception) {}
results[https://github.com/bladesilent/Harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/luni/src/test/api/common/org/apache/harmony/luni/tests/java/io/FilterInputStreamTest.java][test_read][1] = -> TRY {  -> c=is.read()@ -> assertTrue("read returned incorrect char",c==fileString.charAt(0,),)@ } CATCH(Exception) {}
results[https://github.com/ebollens/ccnmp/blob/af5dd1c5b9a633139880ca1c15d2aafda37b0ffd/javasrc/src/org/ccnx/ccn/impl/encoding/BinaryXMLDecoder.java][backup][1] = -> TRY {  -> istream.reset()@ -> istream.read()@ -> istream.mark(_resyncLimit,)@ } CATCH(IOException) {}
results[https://github.com/davidmerrick/Classes/blob/a678930a225ead058872c7c6899008b81c780b70/ECE 152/Final Project/finalproj/lab5_2.java][readUART][1] = -> TRY { -> IF { -> temp=input.read()@input.available()>0 } -> IF { -> return 0@temp==-1 } } -> return (char) (byte) temp@!(temp==-1)
results[https://github.com/apache/harmony/blob/71c66be58b1079445e05bbb30ede0d1c2dc2013d/classlib/modules/pack200/src/main/java/org/apache/harmony/unpack200/Archive.java][available][1] = -> TRY {  -> inputStream.mark(1,)@ -> check=inputStream.read()@ -> inputStream.reset()@ } CATCH(IOException) {}
results[https://github.com/ansible07/luaj/blob/357916ffee06813bdc9c19ec030c302dd3a7764d/test/junit/org/luaj/vm2/compiler/AbstractUnitTests.java][loadFromBytes][1] = -> TRY {  -> is=new ByteArrayInputStream(bytes,)@ -> return LoadState.loadBinaryChunk(is.read(),is,script,)@ } CATCH(IOException) {}
results[https://github.com/diesieben07/SevenCommons/blob/c33e663f04669d91587a385e4d4e254d34fdbeb2/source/de/take_weiland/mods/commons/network/Packets.java][readEnum][1] = -> TRY {  -> return JavaUtils.safeArrayAccess(clazz.getEnumConstants(),in.read(),)@ } CATCH(IOException) {}
results[https://github.com/apache/derby/blob/ec6fcf1f3b93d7b9d350071632731d67cfe04508/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BLOBTest.java][testDerby2992_Repro][1] = -> TRY {  -> is=rs.getBinaryStream(1,)@ -> i=is.read()@ -> assertTrue(i!=-1,)@ } CATCH(IOException,SQLException) {}
results[https://github.com/jknoxville/raceTrace/blob/0fcb2b43afad0f01e50e77c8c9806ad40a9af009/project/src/uk/ac/cam/jk510/part2project/network/TCPConnection.java][connect][1] = -> TRY {  -> is=sock.getInputStream()@ -> device=is.read()@ -> connections[device]=new TCPConnection(sock,is,os,)@ } CATCH(IOException) {}
