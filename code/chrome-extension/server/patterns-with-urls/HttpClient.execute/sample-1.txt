results[https://github.com/internetarchive/ia-hadoop-tools/blob/c9fe3a3a4332de98b899e8833226ac48271734b2/src/main/java/org/archive/petabox/PetaboxClient.java][doGet][1] = -> TRY {  -> get=createHttpGet(uri,)@ -> return client.execute(get,)@ } CATCH(IOException) {}
results[https://github.com/tomakehurst/wiremock/blob/4a4f022163c2239ce19bf104bac79cd7357b1e78/src/test/java/com/github/tomakehurst/wiremock/RequestDelayAcceptanceTest.java][executeGetRequest][5] = -> TRY {  -> get=new HttpGet(url,)@ -> httpClient.execute(get,)@ } CATCH(IOException) {}
results[https://github.com/barchart/barchart-http/blob/f45bae667b13fc7518b66cbe56ff0625a52de9b1/barchart-http-server/src/test/java/com/barchart/http/server/TestHttpServer.java][testKill][3] = -> TRY {  -> get=new HttpGet("http://localhost:8888/client-disconnect",)@ -> client.execute(get,)@ } CATCH(Exception) {}
results[https://github.com/ieb/sparsemapcontent/blob/052daeda6e785446481b40999729f26268552440/extensions/integration/src/main/java/uk/co/tfd/sm/integration/HttpTestUtils.java][get][1] = -> TRY {  -> return defaultHttpClient.execute(new HttpGet(request,),)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/onecoders/ViewPageIndicator/blob/3d10a304c12935d585765864a8b6c4a6aa3d6bfb/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/download/HttpClientImageDownloader.java][getStreamFromNetwork][7] = -> TRY {  -> httpRequest=new HttpGet(imageUri,)@ -> response=httpClient.execute(httpRequest,)@ -> entity=response.getEntity()@ } CATCH(IOException) {}
results[https://github.com/mavry/TimeToGo/blob/a6c10f345caaf9e5d8496d274238775dcfab4691/android/TimeToGo/src/main/java/com/timetogo/waze/RetreivesWazeRouteResult.java][retreive][1] = -> TRY {  -> getMethod=new HttpGet(url,)@ -> response=client.execute(getMethod,)@ -> content=extractResponseContent(response,)@ } CATCH(ClientProtocolException,IOException,JSONException) {}
results[https://github.com/softwaremill/softwaremill-common/blob/8bf6879b4bb23aa260c4a051e02c059b86975e7e/softwaremill-test/softwaremill-test-server/src/test/java/pl/softwaremill/common/testserver/TestServerTest.java][callUrl][7] = -> TRY {  -> client=new DefaultHttpClient()@ -> get=new HttpGet(url,)@ -> return client.execute(get,)@ } CATCH(IOException) {}
results[https://github.com/darthsuicune/CreuRoja/blob/560ab976e9622e6f311a947e2383d4daeff1c329/android/voluntarios/CreuRoja/src/main/java/net/creuroja/android/model/webservice/lib/RestWebServiceClient.java][get][4] = -> TRY {  -> client=getClient()@ -> return client.execute(getRequest(WebServiceRequestType.GET,resource,format,options,),)@ } CATCH(IOException) {}
results[https://github.com/sigmarkarl/world/blob/4fc8f09bd8c98be19a05f3bed4ff0e6f33406f2d/smasogur/src/oauth/signpost/commonshttp/CommonsHttpOAuthProvider.java][sendRequest][11] = -> TRY {  -> response=httpClient.execute((HttpUriRequest) request.unwrap(),)@ -> return new HttpResponseAdapter(response,)@ } CATCH(Exception) {}
results[https://github.com/mike-duvall/kanban-now-card-service/blob/b4bef032386ee5f53421301fc4537bc797de9d5f/src/main/java/kanbannow/health/CardServiceHealthCheck.java][callCardService][2] = -> TRY {  -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(uri,)@ -> return httpclient.execute(httpget,)@ } CATCH(IOException,ConfigurationException) {}
results[https://github.com/mollyproject/mollyandroid/blob/e74533c48d6564142f96b991f03fa5ad11ad2cc1/src/org/mollyproject/android/controller/Router.java][getFrom][1] = -> TRY {  -> get=new HttpGet(getURL,)@ -> responseGet=client.execute(get,)@ -> resEntityGet=responseGet.getEntity()@ } CATCH(MalformedURLException,IOException,UnknownHostException,SocketException,JSONException,ParseException) {}
results[https://github.com/darthsuicune/CreuRoja/blob/611eeb00c76b8a72d9750a8657eeeb675a71ed7c/android/VehicleTracking/app/src/main/java/net/creuroja/android/vehicletracking/model/Vehicle.java][upload][1] = -> TRY {  -> client=new DefaultHttpClient()@ -> client.execute(getRequest(accessToken,),)@ } CATCH(IOException) {}
results[https://github.com/apache/openejb/blob/3771741861769fe63d7853d361ce5a991ae7ee1a/sandbox/tools/src/main/java/org/apache/openejb/tools/twitter/ScreenNamesRetriever.java][getContribListMembersResponse][1] = -> TRY {  -> client=new DefaultHttpClient()@ -> response=client.execute(getRequestForContribListMembers(),)@ } CATCH(OAuthMessageSignerException,OAuthExpectationFailedException,OAuthCommunicationException,IOException,ClientProtocolException) {}
results[https://github.com/se2-1213/coyote/blob/1827bb3bb9dacbecb7ca1397bcca9076afa7b524/roadrunner/src/com/project/roadrunner/revision/ServerRequest.java][executeProfileRequest][3] = -> TRY {  -> httpGet=new HttpGet(ServerConstants.USERS_URL+ServerConstants.FOLDER+username+ServerConstants.TOKEN+authToken,)@ -> httpGet.setHeader("Host",ServerConstants.HOST,)@ -> httpResponse=httpClient.execute(httpGet,)@ } CATCH(ConnectTimeoutException,ClientProtocolException,IOException) {}
results[https://github.com/apache/tomee/blob/53e1147907868d40979946b3de6abecd0ea03388/arquillian/arquillian-tomee-tests/arquillian-tomee-jaxws-tests/src/test/java/org/apache/openejb/arquillian/tests/jaxws/wsrs/WsRsTest.java][invokeRest][2] = -> TRY {  -> get=new HttpGet(uri,)@ -> response=client.execute(get,)@ -> body=asString(response,)@ } CATCH(Exception) {}
results[https://github.com/europeana/contrib/blob/15934811e1930e93405735facf6b5c3989f9efdd/ntua/awareness/app/gr/ntua/ivml/awareness/search/SearchServiceAccess.java][searchEuropeana][2] = -> TRY {  -> httpGet=new HttpGet(uri,)@ -> httpRes=httpClient.execute(httpGet,)@ -> httpEntity=httpRes.getEntity()@ } CATCH(Exception) {}
results[https://github.com/livenson/libcdmi-java/blob/b26d7f1294e0ed0727c1fd225e8cf29d5e49cf4e/src/main/java/eu/venusc/cdmi/NonCDMIContainerOperations.java][read][1] = -> TRY {  -> httpget=new HttpGet(Utils.getURI(endpoint,path,true,),)@ -> return httpclient.execute(httpget,)@ } CATCH(ClientProtocolException,IOException,URISyntaxException) {}
results[https://github.com/tjhart/swivel/blob/9cdcda81d0e7fee6516bca37c04a4b9900dba1f7/src/main/java/com/tjh/swivel/model/ShuntResponseHandler.java][handle][2] = -> TRY { -> return client.execute(createShuntRequest(request,),)@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/apache/stanbol/blob/47c99bccb3c525087b430e36f8e62601a17034fa/enhancer/integration-tests/src/test/java/org/apache/stanbol/commons/testing/it/RequestExecutor.java][execute][1] = -> TRY {  -> response=httpClient.execute(r.getRequest(),)@ -> entity=response.getEntity()@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/Kailesh/Canteen-Management-Software-System--Witwatersrand/blob/52091f4f2b294bea86c713a080b0aef435280408/AndroidApplication/src/com/witwatersrand/androidapplication/menuitems/TodaysItems.java][httpRequest][1] = -> TRY {  -> client=new DefaultHttpClient(httpParams,)@ -> myGetRequest=new HttpGet(url,)@ -> return client.execute(myGetRequest,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/softwaremill/softwaremill-common/blob/185dc0b8eecb68065b08c69684fccebba17e72f0/softwaremill-test/softwaremill-test-server/src/test/java/com/softwaremill/common/testserver/TestServerTest.java][gulliblyCallHttps][2] = -> TRY {  -> client=createGullibleHttpClient(port,)@ -> get=new HttpGet(url,)@ -> return client.execute(get,)@ } CATCH(UnrecoverableKeyException,NoSuchAlgorithmException,KeyStoreException,KeyManagementException,IOException) {}
results[https://github.com/lunifera/lunifera-runtime-web/blob/97803f62e27d58532fc137c82c002ae2a40e4c80/org.lunifera.runtime.web.http.tests/src/org/lunifera/runtime/web/http/tests/context/RequestTest.java][httpGET][2] = -> TRY {  -> client=new DefaultHttpClient()@ -> get=new HttpGet(url,)@ -> resp=client.execute(get,)@ } CATCH(IOException,ClientProtocolException) {}
results[https://github.com/craftercms/social/blob/e29c63734f8b4efdcb0004f110211c7597208434/server/src/test/java/org/craftercms/social/util/UGCHttpClient.java][getModerationStatusTarget][4] = -> TRY {  -> httpget=new HttpGet(uri,)@ -> httpclient=new DefaultHttpClient()@ -> return httpclient.execute(httpget,)@ } CATCH(URISyntaxException,ClientProtocolException,IOException) {}
results[https://github.com/majikthys/jpa-dao-helloworld/blob/573981b70f1b58f461d1850094484ee12bb1ee2a/karyon-admin/src/test/java/com/netflix/adminresources/AdminResourceTest.java][testCustomPort][2] = -> TRY {  -> client=new DefaultHttpClient()@ -> healthGet=new HttpGet("http://localhost:"+AdminResourcesContainer.LISTEN_PORT_DEFAULT+"/healthcheck",)@ -> client.execute(healthGet,)@ } CATCH(Exception) {}
results[https://github.com/livenson/libcdmi-java/blob/a0d36dfeace62bc9e9dcec40e829e6f500447029/src/main/java/eu/venusc/cdmi/NonCDMIBlobOperations.java][read][1] = -> TRY {  -> httpget=new HttpGet(Utils.getURI(endpoint,remoteFNM,),)@ -> return httpclient.execute(httpget,)@ } CATCH(IOException,URISyntaxException) {}
results[https://github.com/rosedu/wouso-extras/blob/b629e91a611962f90737937fa05e9cd0625143c9/android/AWoUSO/src/cdl/android/server/MyCommonsHttpOAuthProvider.java][sendRequest][1] = -> TRY {  -> response=httpClient.execute((HttpUriRequest) request.unwrap(),)@ -> return new HttpResponseAdapter(response,)@ } CATCH(Exception) {}
results[https://github.com/proofpoint/kairosdb/blob/d3edaa04e7fd06add9a7987ed35e756571226704/src/test/java/net/opentsdb/core/http/rest/MetricsResourceTest.java][get][1] = -> TRY {  -> get=new HttpGet(url,)@ -> response=client.execute(get,)@ -> return new JsonResponse(response,)@ } CATCH(IOException) {}
results[https://github.com/Mr-Slash/TrailDevils/blob/7b739e72cb26b9820a45f55f6a2a0691d78cfcbd/src/ch/hsr/traildevil/util/HttpHandler.java][isHostReachable][1] = -> httpGet=new HttpGet(url,)@ -> TRY { -> response=client.execute(httpGet,)@ } CATCH(IOException) { -> Log.e(TAG,TAG_PREFIX+"connecting to server failed",e,)@ } -> return (response==null)?false:true@
results[https://github.com/craftercms/social/blob/e29c63734f8b4efdcb0004f110211c7597208434/server/src/test/java/org/craftercms/social/util/UGCHttpClient.java][getThread][1] = -> TRY {  -> httpget=new HttpGet(uri,)@ -> httpclient=new DefaultHttpClient()@ -> return httpclient.execute(httpget,)@ } CATCH(Exception) {}
results[https://github.com/barchart/barchart-netty4/blob/0144bd71d8779d2276e052591418a36dde4946ee/server/src/test/java/com/barchart/netty/server/http/TestHttpServer.java][testKill][1] = -> TRY {  -> get=new HttpGet("http://localhost:"+port+"/client-disconnect",)@ -> client.execute(get,).getEntity()@ } CATCH(Exception) {}
results[https://github.com/rodericj/TopDish/blob/92166044c839dbe81a3c95a5387aacea0c0bfdac/server/old/java/TopDishAndroid/src/com/topdish/comms/HTTPComms.java][doGet][1] = -> TRY {  -> httpget=new HttpGet(this.url,)@ -> httpResponse=(BasicHttpResponse) httpclient.execute(httpget,)@ -> return getResponse(httpResponse,)@ } CATCH(Exception) {}
results[https://github.com/cerijerome/ceri/blob/575d95be1b7c0917627dcc56122e8ebd4efb9dee/ceri-image/src/java/ceri/image/spi/HttpClientDownloader.java][download][1] = -> TRY {  -> client=new DefaultHttpClient(connectionManager,)@ -> request=new HttpGet(url,)@ -> response=client.execute(request,)@ } CATCH(IOException) {}
results[https://github.com/griddynamics/GDLogTool/blob/c4613b5b841d388dc79115ec779b36716f02cc7f/logtool/selenium-tests/src/main/java/com/griddynamics/logtool/selenium/Utils.java][httpGet][2] = -> TRY {  -> httpget=new HttpGet(uri,)@ -> httpclient=new DefaultHttpClient()@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/apache/karaf-cave/blob/1a56729609f80e385297ae816953afac313118b8/server/backend/filesystem/src/main/java/org/apache/karaf/cave/server/backend/impl/CaveRepositoryImpl.java][proxyHttp][8] = -> TRY {  -> httpClient=new DefaultHttpClient()@ -> httpGet=new HttpGet(url,)@ -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/dpalmisano/NoTube-Beancounter-2.0/blob/3bca744428246c52bbe11d641b1e92ebf6756e5d/commons/tagdef/src/test/java/io/beancounter/commons/TagDefResponseHandlerTestCase.java][testHandleResponse][1] = -> TRY {  -> client=new DefaultHttpClient()@ -> get=new HttpGet(url,)@ -> response=client.execute(get,)@ -> tagDefResponse=handler.handleResponse(response,)@ } CATCH(IOException,URISyntaxException) {}
results[https://github.com/sugarcrm/candybean/blob/49aa83aa7b9e7de9399a2728f5ff098837130e5b/src/test/java/com/sugarcrm/candybean/automation/mobile/AppiumIosTest.java][testSessions][2] = -> TRY {  -> request=new HttpGet("http://localhost:4723/wd/hub/sessions",)@ -> httpClient=new DefaultHttpClient()@ -> response=httpClient.execute(request,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/splunk/splunk-shuttl/blob/65a4b4e3e6df49b4c891bcc1b557bb97232e7457/test/java/com/splunk/shuttl/archiver/archive/ArchiveRestHandlerTest.java][callRestToArchiveLocalBucket_httpClientThrowsIOException_caughtAndLogged][2] = -> TRY {  -> when(httpClient.execute(any(HttpUriRequest.class,),),).thenThrow(IOException.class,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/kylejamesross/CMPUT301W13T09/blob/5a80e695d16d9d007aabd8a840278d5f50fe7321/CMPUT301Project/src/com/cmput301w13t09/cmput301project/controllers/UploadController.java][getRecipeListLength][1] = -> TRY {  -> getRequest=new HttpGet("http://cmput301.softwareprocess.es:8080/cmput301w13t09/recipelistlength/value",)@ -> getRequest.addHeader("Content-type","application/json",)@ -> response=httpclient.execute(getRequest,)@ -> json=getEntityContent(response,)@ } CATCH(IOException) {}
results[https://github.com/cofface/android_packages_apps_Dialer/blob/83739e808835e1db1edc4a2778a0a2bf8d26387e/src/com/android/dialer/omni/PlaceUtil.java][getRequest][1] = -> TRY {  -> client=new DefaultHttpClient(params,)@ -> request=new HttpGet(url,)@ -> response=client.execute(request,)@ -> entity=response.getEntity()@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/kanilturgut/EN4S/blob/03360277b1182e448ad17766a4e5e4ea94308567/src/com/tobbetu/en4s/backend/Requests.java][getWithoutDomain][1] = -> TRY {  -> httpclient=Requests.getInstance().getHttpClient()@ -> getRequest=new HttpGet(path,)@ -> response=httpclient.execute(getRequest,)@ } CATCH(IOException) {}
results[https://github.com/BENGMN/soen490/blob/966fcaf982461c6cce6644ee34280a80959ea5b8/DemoClient/src/Tests/CommandTests.java][testReadUserCommand][4] = -> TRY {  -> client=new DefaultHttpClient()@ -> httpGet=new HttpGet(uri,)@ -> response=client.execute(httpGet,)@ -> return response.toString()@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/Berico-Technologies/AMP/blob/a467806589fda5022ff32d68ce6731c1c7f426e6/java/amp-topology/global-topology-clients/java/src/main/java/amp/topology/client/HttpRoutingInfoRetriever.java][retrieveRoutingInfo][3] = -> httpGet=new HttpGet(url,)@ -> TRY { -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> logger.error("Failed to retrieve routing info: {}",e,)@ }
results[https://github.com/imkevinxu/totoro/blob/61f0bb9c27c337d8eb7a8e324569289b2af26bf5/btchat-elm/src/com/example/android/BluetoothChat/BluetoothChatService.java][run][1] = -> TRY { -> client=new DefaultHttpClient()@ -> get=new HttpGet(getURL,)@ -> responseGet=client.execute(get,)@ } CATCH(Exception) { -> Log.e(TAG,"FAILURE",)@ }
results[https://github.com/SzaszZsigmondAttila/mol-liga/blob/6a0f97b2e1378786516a2924c2978bb5f37f6826/server/core/src/test/java/ro/szzsa/molliga/core/test/SourceTest.java][testSource][2] = -> TRY {  -> httpClient=new DefaultHttpClient()@ -> httpGet=new HttpGet("http://icehockey.hu/oldalak/mol_liga/menetrend",)@ -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(IOException,ParseException) {}
results[https://github.com/i09158knct/c6t-proto/blob/10ef499e9887db906898c536b63b705575a86d8d/src/jp/knct/di/c6t/communication/BasicClient.java][getString][1] = -> TRY {  -> request=new HttpGet(url,)@ -> client=new DefaultHttpClient()@ -> response=client.execute(request,)@ -> return extractEntity(response,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/mperdikeas/esavo-reg-II/blob/449b526867ce08ae7b9ecd5663313c5b3fa434e2/curation/lib/src/_int/esa/esavo/ivoavalidation/BaseAccessValidator.java][statusCode][1] = -> TRY {  -> client=httpClient()@ -> request=new HttpGet(url,)@ -> response=(HttpResponse) client.execute(request,)@ -> status=response.getStatusLine()@ } CATCH(IOException) {}
results[https://github.com/dataiku/dctc/blob/0b5e02122271016327c16e94c2f3a19b8a6e988e/src/dctc/java/com/dataiku/dctc/file/HttpFile.java][setResponse][1] = -> TRY {  -> request=new HttpGet(givenName(),)@ -> httpClient=new DefaultHttpClient()@ -> response=httpClient.execute(request,)@ } CATCH(IOException) {}
results[https://github.com/eltoraz/PUG/blob/65e672ede4e666f126d212445e60bfadbbe7d5b1/src/eltoraz/pug/android/PugNetworkInterface.java][leaveGame][3] = -> httpClient=new DefaultHttpClient()@ -> TRY { -> httpGet=new HttpGet(page,)@ -> response=httpClient.execute(httpGet,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/cksystemsgroup/CPCC/blob/4d43748548cff2edf6a1c5e457285f5b5b475380/utils/src/main/java/at/uni_salzburg/cs/ckgroup/cscpp/utils/HttpQueryUtils.java][simpleQuery][5] = -> TRY {  -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(url,)@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(IOException) {}
results[https://github.com/zhoulzhou/IPCPlayer/blob/18c0a6a74b17d8bde750b84307a2e3168ff1be6a/src/com/nostra13/universalimageloader/core/download/HttpClientImageDownloader.java][getStreamFromNetwork][3] = -> TRY {  -> httpRequest=new HttpGet(imageUri.toString(),)@ -> response=httpClient.execute(httpRequest,)@ -> entity=response.getEntity()@ } CATCH(IOException) {}
results[https://github.com/epamTest1/vashapara/blob/a9a3ee22a29d50f98d368bb366459b3f59b96a26/src/main/java/com/couple/web/controllers/BaseVKController.java][request][2] = -> TRY {  -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(requestURL,)@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(IOException,ClientProtocolException,UnsupportedEncodingException) {}
results[https://github.com/porcelli/OpenSpotLight/blob/a7d223f88651e277d675b2e863d7ad57b2a6d5f5/osl-web/osl-web-war/src/test/java/org/openspotlight/web/command/ITHelloWeb.java][testHelloWorld][3] = -> TRY {  -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet("http://localhost:8080/osl-web-war/?action=hello",)@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/luigiliquori/myMed/blob/4e97dbe87f66973b856f0a336a623d1fa259ab04/backend/src/com/mymed/tests/unit/handler/GenralHandlerTest.java][sendWrongCodeGetTest][2] = -> TRY {  -> getRequest=new HttpGet(uri,)@ -> response=client.execute(getRequest,)@ -> BackendAssert.assertResponseCodeIs(response,500,)@ -> BackendAssert.assertIsValidJson(response,)@ } CATCH(URISyntaxException,ClientProtocolException,IOException) {}
results[https://github.com/MoSync/MoSync/blob/69cab3aefea6d208159ad411ea8bf770aa644eda/tests/Benchmarks/database_libs/android/BenchDB/src/mosync/benchmarks/BenchDB.java][publishOpenglResult][2] = -> TRY {  -> request.setURI(new URI(URL+"benchmark=opengl&revision="+revision+"&runtime=Android%20Dalvik&git_hash="+git_hash+"&phone=AndroidTestDevice"+"&test1="+test1+"&test2="+test2+"&test3="+test3+"&test4="+test4+"&native_sdk_ver="+native_sdk_ver,),)@ -> response=client.execute(request,)@ -> System.out.println(response,)@ } CATCH(Exception) {}
results[https://github.com/ecologylab/BigSemanticsService/blob/47a06df43433f18737eaad094c898d9fd907df31/DownloaderPool/src/test/java/ecologylab/bigsemantics/downloaderpool/TestURI.java][testUri][2] = -> TRY {  -> get=new HttpGet(uri,)@ -> client=factory.get()@ -> resp=client.execute(get,)@ -> assertNotNull(resp,)@ } CATCH(URISyntaxException,ClientProtocolException,IOException) {}
results[https://github.com/USGS-CIDA/geo-data-portal/blob/ad329ab3a95188ab45af9d9c12cfda462992fc7f/gdp-process-wps/src/test/java/gov/usgs/cida/gdp/wps/algorithm/it/AlgorithmTestIT.java][validateFeatureCoverageIntersectionAlgorithmDescribeProcess][1] = -> TRY {  -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(url,)@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(IOException,XmlException) {}
results[https://github.com/t1/webresource/blob/93faf8680f6a53c712930d1c51de08f721a5b84e/demo/src/test/java/net/java/webresource/PersonWebClient.java][get][1] = -> TRY {  -> request=new HttpGet(BASE_URL+relativePath,)@ -> setAcceptHeader(request,)@ -> printResponse(httpClient.execute(request,),)@ } CATCH(IOException,ClientProtocolException) {}
results[https://github.com/tomakehurst/wiremock/blob/761d35c2710263a9821e84d02b771bc79e879375/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java][contentFor][1] = -> TRY {  -> get=new HttpGet(url,)@ -> response=httpClient.execute(get,)@ -> content=EntityUtils.toString(response.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/Mr-Slash/TrailDevils/blob/4dd2d099a57a0c5af0765177cfaaa05bd77fccf4/src/ch/hsr/traildevil/util/network/HttpHandler.java][isHostReachable][1] = -> httpGet=new HttpGet(url,)@ -> TRY { -> response=client.execute(httpGet,)@ } CATCH(IOException) { -> Log.e(Constants.TAG,TAG_PREFIX+"connecting to server failed",e,)@ } -> Log.i(Constants.TAG,TAG_PREFIX+"host is reachable = : "+response!=null,)@
results[https://github.com/SlimRoms/packages_apps_Dialer/blob/d9b86684337f9f0a31691f1efcc49f7e9c4b2e0b/src/com/android/dialer/lookup/google/GoogleAuth.java][invalidateToken][2] = -> client=new DefaultHttpClient()@ -> request=new HttpGet(url,)@ -> TRY { -> response=client.execute(request,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/wicknicks/cuenet/blob/3e7e1942402590697a0bfb364bc0cd0b82eb5387/src/main/java/esl/cuenet/query/drivers/webjson/HttpDownloader.java][get][1] = -> TRY {  -> get=new HttpGet(url,)@ -> client=new DefaultHttpClient()@ -> response=client.execute(get,)@ -> entity=response.getEntity()@ } CATCH(IOException) {}
results[https://github.com/jimzheng/Puzzling.com/blob/ccd90d592cade01bcdf9eea1ec69bca61fff4f71/SDKs/Java/src/com/Puzzling/SDK/APIHttp.java][_delete][1] = -> TRY {  -> request=new HttpPut(urlpath,)@ -> response=client.execute(new HttpDelete(urlpath,),)@ -> return parseResponse(response,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/applications4android/ComicReader/blob/81bf3d6fe1b5b6e9975aa378ccff3fdd8d84c854/ComicReader/src/com/blogspot/applications4android/comicreader/core/Downloader.java][openConnection][1] = -> TRY {  -> http=new HttpGet(uri,)@ -> client=new DefaultHttpClient()@ -> resp=(HttpResponse) client.execute(http,)@ -> entity=resp.getEntity()@ } CATCH(URISyntaxException,ClientProtocolException,IOException) {}
results[https://github.com/jcahan/privacy-app/blob/4bacf421bd2d4280703b4b5fe5aeac3cd935cdf7/src/myapp/columbiaprivacyapp/MainActivity.java][doGetStream][1] = -> TRY {  -> getRequest=new HttpGet(theURL,)@ -> client=new DefaultHttpClient()@ -> response=client.execute(getRequest,)@ -> return responseToString(response,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/ralscha/extdirectspring/blob/6da63b68aab10c684d7b59e8038e71b4bcbe62b8/extdirectspring/src/test/java/ch/ralscha/extdirectspring_itest/MyModelControlerTest.java][testApi][1] = -> TRY {  -> g=new HttpGet("http://localhost:9998/controller/api.js?group=itest_base",)@ -> response=client.execute(g,)@ -> responseString=EntityUtils.toString(response.getEntity(),)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/sylvainlecoy/tip-off.tv/blob/016b30ba515c2135f627f609282beb89b035e786/src/tv/tipoff/services/pgep/RESTService.java][request][1] = -> request=new HttpGet(uri,)@ -> TRY { -> response=client.execute(request,)@ -> entity=response.getEntity()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/Limesco/CServ/blob/764dccf68adbe77e361f2675feaf4fe3d72549e5/nl.limesco.cserv.cdr/src/nl/limesco/cserv/cdr/retriever/steps/GetStep.java][execute][1] = -> TRY {  -> request=new HttpGet(uri,)@ -> response=client.execute(request,)@ -> return execute(response,variables,)@ } CATCH(IOException) {}
results[https://github.com/dyoo/moby-scheme/blob/f386f1d47e4717c6dbb50ac5872c4bc4f4728705/sandbox/cheney/Sketch/src/org/plt/platform/AndroidPlatform.java][getUrl][3] = -> client=new DefaultHttpClient()@ -> method=new HttpGet(url,)@ -> TRY { -> response=client.execute(method,)@ -> entity=response.getEntity()@ -> IF { -> return ""@entity==null } }
results[https://github.com/ralscha/extdirectspring/blob/6da63b68aab10c684d7b59e8038e71b4bcbe62b8/extdirectspring/src/test/java/ch/ralscha/extdirectspring_itest/SimpleServiceTest.java][testSimpleApi][1] = -> TRY {  -> client=new DefaultHttpClient()@ -> get=new HttpGet("http://localhost:9998/controller/api-debug.js?group=itest_simple",)@ -> response=client.execute(get,)@ -> entity=response.getEntity()@ } CATCH(IllegalStateException,IOException) {}
results[https://github.com/stapelberg/vsy-bullshit/blob/b3fdd9ae2d54ffa73cc1e2b37b85c52de316c1b6/JavaClientBullshitBingo/src/hsma/ss2011/vsy/RequestHandler.java][getRequest][1] = -> TRY {  -> httpclient=new DefaultHttpClient()@ -> req=new HttpGet(this.baseURL+path,)@ -> rawResponse=httpclient.execute(req,)@ -> entity=rawResponse.getEntity()@ } CATCH(ClientProtocolException,IOException,JSONException) {}
results[https://github.com/sleepsort/lucene-solr/blob/da875c5ed5097831d210018ccaf61138e1280891/lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase.java][executeGET][1] = -> TRY {  -> m=new HttpGet(queryString(request,params,),)@ -> response=httpc.execute(m,)@ -> verifyStatus(response,)@ } CATCH(IOException) {}
results[https://github.com/ceylon/ceylon-compiler/blob/19a4c80a22e354b0d1ac005509c12958460a924d/langtools/test/tools/javac/generics/inference/6650759/T6650759g.java][httpClientTest][44] = -> client=new DefaultHttpClient()@ -> TRY { -> request=new HttpGet("http://www.google.com",)@ -> response=client.execute(request,)@ } ELSE { -> mHttpClientTestResult="Fail: Code: "+String.valueOf(response,)@!(response.getStatusLine().getStatusCode()==200) -> request.abort()@ }
results[https://github.com/uib/matterhorn/blob/2a682e583ead0c4d8b96bbf601b36380d783bad8/modules/opencast-test-harness/trunk/src/main/java/org/opencastproject/remotetest/EngageModuleTest.java][testJQuerySlider][42] = -> TRY {  -> get=new HttpGet(ENGAGE_BASE_URL+"/engage-hybrid-player/jquery/ui/ui.slider.js",)@ -> response=client.execute(get,)@ -> Assert.assertEquals(200,response.getStatusLine().getStatusCode(),)@ } CATCH(Exception) {}
results[https://github.com/SzaszZsigmondAttila/mol-liga/blob/dc8b5a1dda097dfdc51f11c41c0631c6cadaf0f9/server/content/src/main/java/ro/szzsa/molliga/content/client/impl/WebPageContentClient.java][getWebPageContent][1] = -> TRY { -> httpClient=new DefaultHttpClient()@ -> httpGet=new HttpGet(url,)@ -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> throw new ContentException(e,)@ }
results[https://github.com/applications4android/ComicReader/blob/81bf3d6fe1b5b6e9975aa378ccff3fdd8d84c854/ComicReader/src/com/blogspot/applications4android/comicreader/core/Downloader.java][openConnectionStream][1] = -> TRY {  -> http=new HttpGet(uri,)@ -> client=new DefaultHttpClient()@ -> resp=(HttpResponse) client.execute(http,)@ -> is=resp.getEntity().getContent()@ } CATCH(URISyntaxException,ClientProtocolException,IOException) {}
results[https://github.com/arvindbatra-aap/AapMediaMonitoring/blob/e7a2a12508d99bbf56b537962237dd4d14ad0b04/crawler/src/main/java/org/aap/media/utils/URLUtils.java][fetchHTML][1] = -> TRY {  -> httpClient=new DefaultHttpClient()@ -> get=new HttpGet(url,)@ -> response=httpClient.execute(get,)@ -> html=EntityUtils.toString(response.getEntity(),"UTF-8",)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/soluvas/soluvas-framework/blob/a124d6d2f2e63bd1855c5586a2b02643bf999ad7/socmed/src/main/java/org/soluvas/facebook/FriendListDownloader.java][call][1] = -> TRY {  -> getReq=new HttpGet(uri,)@ -> friendsResp=httpClient.execute(getReq,)@ -> json=mapper.readTree(friendsResp.getEntity().getContent(),)@ } CATCH(Exception) {}
results[https://github.com/uib/matterhorn/blob/286c16891a03273e15ddb9c64dee0a5174ce7cc4/modules/opencast-test-harness/src/main/java/org/opencastproject/remotetest/CaptureRestEndpointTest.java][testStopCaptureGet][2] = -> TRY {  -> get=new HttpGet(BASE_URL+"/capture/rest/stopCapture",)@ -> getResponse=httpClient.execute(get,).getStatusLine().getStatusCode()@ -> Assert.assertTrue(getResponse==HttpStatus.SC_OK||getResponse==HttpStatus.SC_INTERNAL_SERVER_ERROR,)@ } CATCH(Exception) {}
results[https://github.com/OpenRefine/OpenRefine/blob/365868564fb426d2aa3f3c84ec1ef52966067f02/main/java/com/metaweb/gridworks/oauth/FreebaseTimeCommonsHttpOAuthConsumer.java][generateTimestamp][2] = -> TRY { -> httpClient=new DefaultHttpClient(httpParams,)@ -> httpget=new HttpGet(TIMER_URL,)@ -> response=httpClient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(IOException) { -> logger.warn("Error obtaining the synchronized remote timestamp, defaulting to the local one",e,)@ }
results[https://github.com/SAP/cloud-odata-java/blob/ad97287e2bcf8c4055a3252622b6c611f012f559/odata-fit/src/test/java/com/sap/core/odata/core/fit/serviceresolution/test/ServiceResolutionTest.java][testBaseUriWithEncoding][1] = -> TRY {  -> get=new HttpGet(uri,)@ -> response=this.httpClient.execute(get,)@ -> assertEquals(200,response.getStatusLine().getStatusCode(),)@ } CATCH(ClientProtocolException,IOException,ODataException,URISyntaxException) {}
results[https://github.com/nidi3/languager/blob/99e6df98b04e947834c5cf33d2e329530539d5ec/languager-core/src/main/java/stni/languager/LinkChecker.java][isLinkValid][1] = -> get=new HttpGet(url,)@ -> TRY { -> response=client.execute(get,)@ -> statusCode=response.getStatusLine().getStatusCode()@ } FINALLY { -> get.releaseConnection()@ }
results[https://github.com/Berico-Technologies/AMP/blob/09d1373e0c470c2d891f7969005dd22ec7e6fde1/java/amp-rabbit/src/main/java/amp/rabbit/connection/TokenConnectionFactory.java][getNamedToken][2] = -> TRY {  -> client=_httpClientFactory.getClient()@ -> getMethod=new HttpGet(_anubisUri,)@ -> response=client.execute(getMethod,)@ -> content=EntityUtils.toString(response.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/escidoc/escidoc-core/blob/bf1c1aa7a31de8241fc22d276621a3d04e135796/integration-tests/src/test/java/de/escidoc/core/test/om/item/ItemRetrieveContentIT.java][contentFilenameAndMimeType][2] = -> TRY {  -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(baseUrl+hrefContent,)@ -> response=httpclient.execute(httpget,)@ -> headerCType=response.getHeaders("Content-Type",)@ -> headerDisp=response.getHeaders("Content-Disposition",)@ } CATCH(Exception) {}
results[https://github.com/colombbus/tangara/blob/aad07f90887bbf1f4e5696f8c04b1b9ffca977ef/help-generator/src/main/java/org/colombbus/helpgenerator/net/WebDownloaderImpl.java][download][2] = -> httpget=createGetRequest(pagePath,)@ -> TRY { -> response=httpclient.execute(httpget,)@ -> return responseAsBinary(response,)@ } CATCH(IOException) { -> throw new RuntimeException("Fail to read "+httpget.getURI(),ioEx,)@ }
results[https://github.com/youngsterxyf/Coder-s-code/blob/9742544fcec3564a7bbe6ed598d00189a7f4008e/Java/GUIDictionary/IcibaDict.java][run][1] = -> TRY { -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(searchstring,)@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/waseemAtRice/glass-present/blob/2c00187ef850fdacc855cc92c3052df4f5cf75f5/android/src/com/clarity/glassviewer/FullscreenActivity.java][httpGet][1] = -> httpclient=new DefaultHttpClient()@ -> TRY { -> httpGet=new HttpGet(initURL,)@ -> response=httpclient.execute(httpGet,)@ } CATCH(Exception) { -> Log.d("Exception",e.toString(),)@ }
results[https://github.com/marcb70/ideasofmarch/blob/593af22e447daeb1ddeab966128d5b9bbcfae0aa/main/src/edu/csumb/ideasofmarch/codecruncher/ScoresHelper.java][putGlobalHighScore][1] = -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(restUrl,)@ -> TRY { -> httpclient.execute(httpget,)@ } CATCH(Exception) { -> Log.v("error","Exception thrown! Check out calls to 'getGlobalHighScores().'",)@ }
results[https://github.com/TeamFauna/dumbo/blob/ce92e2c843ed1b5b3da3011a583c73c924ae4965/android/dumbo/src/com/fawna/dumbo/FingerprintListener.java][prepareForPickerActivity][1] = -> TRY { -> client=new DefaultHttpClient()@ -> get=new HttpGet(urlstr,)@ -> response=client.execute(get,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/philipflohr/AKKtuell/blob/232867773def40e8d4e11f004338ef1b4238439f/AKKtuell/src/org/akk/akktuell/Model/downloader/AkkHomepageEventParser.java][getSource][1] = -> TRY {  -> client=new DefaultHttpClient()@ -> request=new HttpGet(add,)@ -> response=client.execute(request,)@ -> in=response.getEntity().getContent()@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/eltoraz/PUG/blob/65e672ede4e666f126d212445e60bfadbbe7d5b1/src/eltoraz/pug/android/PugNetworkInterface.java][getUser][1] = -> httpClient=new DefaultHttpClient()@ -> TRY { -> httpGet=new HttpGet(page,)@ -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/delving/sip-creator/blob/a3e19e35c95a133df1f79dab5466d30364a769ed/schema-repo/src/test/java/eu/delving/schema/TestSchemaRepository.java][getFileContents][1] = -> TRY {  -> get=new HttpGet("http://schemas.delving.eu"+path,)@ -> response=httpClient.execute(get,)@ -> line=response.getStatusLine()@ -> return EntityUtils.toString(response.getEntity(),"UTF-8",)@!(line.getStatusCode()!=HttpStatus.SC_OK) } CATCH(IOException) {}
results[https://github.com/youfeng/healthyside/blob/fb59390e05a6eb846419f9dc9c163e7bd92c0017/client/healthyside-android/src/org/hiside/healthy/android/util/NetworkTool.java][getContent][1] = -> TRY {  -> client=new DefaultHttpClient()@ -> httpParams=client.getParams()@ -> response=client.execute(new HttpGet(url,),)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/one-in-the-crowd/qpzm-woxn-eicn/blob/8c5a84636d18660fc0a3fa82ab5783425d46965d/src/ru/ifree/drugstore/server/util/HttpUtil.java][load][1] = -> TRY { -> getMethod=new HttpGet(url,)@ -> response=httpClient.execute(getMethod,)@ -> r_entity=response.getEntity()@ } CATCH(Exception) { -> Log.e(e.getMessage(),)@ }
results[https://github.com/RHIT/Mobile/blob/19f1e0813e29fec4151b06ab8b632df9c447f91b/android/src/BetaManager/src/edu/rosehulman/android/directory/beta/StartupActivity.java][downloadFile][1] = -> TRY {  -> client=new DefaultHttpClient()@ -> response=client.execute(new HttpGet(url,),)@ -> response.getEntity().writeTo(fout,)@ } CATCH(Exception) {}
results[https://github.com/HugoLnx/parrott/blob/48965a7ebc4dc2698b02fa601d25697a0f13bd0d/src/test/aceitacao/seus/testes/de/aceitacao/aqui/EfetuacaoDoPagamentoTest.java][requisicaoParaSuaPropriaAPP][1] = -> TRY {  -> get=new HttpGet(uri,)@ -> response=client.execute(get,)@ -> assertEquals("1b: Get para URI que foi retornado",200,response.getStatusLine().getStatusCode(),)@ } CATCH(HttpException,IOException,InterruptedException) {}
results[https://github.com/parworks/PARWorks-Android-Java/blob/eee9c60231f9372dcab3ba6fa1b37004e855d764/ParWorksAndoidLibrary/src/com/parworks/androidlibrary/utils/AsyncHttpTask.java][doInBackground][1] = -> TRY { -> client=new DefaultHttpClient()@ -> resp=client.execute(rinfo.getRequest(),)@ -> rinfo.setResponse(resp,)@ } CATCH(Exception) { -> rinfo.setException(e,)@ }
results[https://github.com/se-SteveThePirate/CMPUT301W13T01/blob/7830f96bd0659c7c801bf1a8b078e5ac9031ff54/NewRecipeBook/src/ca/dreamteam/newrecipebook/Helpers/ElasticSearch/ESClient.java][getNextAvailableId][1] = -> getRequest=new HttpGet("http://cmput301.softwareprocess.es:8080/cmput301w13t01/recipelist/nextID",)@ -> getRequest.addHeader("Content-type","application/json",)@ -> TRY { -> response=httpClient.execute(getRequest,)@ -> json=getEntityContent(response,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sagioto/LipReading/blob/7ebcead7be91737750319bcf59f8eb0cd57d3292/src/main/java/edu/lipreading/Utils.java][textToSpeech][1] = -> TRY {  -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(stringURL,)@ -> get=httpclient.execute(httpget,)@ -> in=get.getEntity().getContent()@ } CATCH(Exception) {}
results[https://github.com/Union-Investment/Crud2Go/blob/f8f760b7b68e709561f913de7870f094b8bcca75/eai-portal-support-scripting/src/test/java/de/unioninvestment/eai/portal/portlet/crud/scripting/domain/container/rest/ReSTDelegateImplTest.java][shouldThrowReadableExceptionOnProtocolErrors][1] = -> TRY {  -> when(httpMock.execute(any(HttpUriRequest.class,),),).thenThrow(new ClientProtocolException("bla",),)@ } CATCH(IOException) {}
results[https://github.com/RestExpress/RestExpress-Scaffold/blob/7c7430e7766ae4e763f7d14307b567f1f5b2f0f6/mongodb/src/test/java/com/strategicgains/restexpress/scaffold/mongodb/controller/SampleControllerTest.java][postDirectiveReplayRequest][1] = -> TRY {  -> getRequest=new HttpGet(BASE_URL+"/your/route/here/123.json",)@ -> response=httpClient.execute(getRequest,)@ -> assertEquals(400,response.getStatusLine().getStatusCode(),)@ } CATCH(IOException) {}
