results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-2_19-FINAL/blojsom-2.0/plugins/src/org/blojsom/plugin/obfuscation/SimpleObfuscationPlugin.java][process][30] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_SIMPLE_OBFUSCATION,this,)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/hjalmare/discobot/blob/5bac5dd08cef5eaded66cc668ab55aa126898285/src/main/org/codehaus/groovy/tools/groovydoc/MockOutputTool.java][writeToOutput][22] = -> TRY {  -> output.put(fileName,text,)@ } CATCH(Exception) {}
results[https://github.com/deric/clueminer/blob/15b4bd35f5ee76d9c15c68b4bcce0c4b5693ce2a/dataset-io/src/main/java/be/abeel/net/ClientHttpRequest.java][setCookie][19] = -> TRY {  -> cookies.put(name,value,)@ } CATCH(IOException) {}
results[https://github.com/chanwit/groovy/blob/9f20ba5381aba56e8813ff19892d72497f9d91b4/src/main/groovy/util/XmlSlurper.java][startPrefixMapping][7] = -> TRY {  -> this.namespaceTagHints.put(tag,uri,)@ } CATCH(SAXException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/trunk/blojsom-3.0/plugins/src/org/blojsom/plugin/obfuscation/SimpleObfuscationPlugin.java][process][2] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_SIMPLE_OBFUSCATION,this,)@ } CATCH(PluginException) {}
results[https://github.com/camptocamp/secureOWS/blob/36abae7e77d3c056352799f286899453ecac360b/owsproxyserver/src/org/deegree/model/coverage/grid/AbstractGridCoverageReader.java][setMetadataValue][2] = -> TRY {  -> metadata.put(name,value,)@ } CATCH(IOException,MetadataNameNotFoundException) {}
results[https://github.com/bobmcwhirter/jboss-messaging/blob/7c94a90762e8dc015278808b8bbba0fefa668b5c/tests/jms-tests/src/org/jboss/test/messaging/jms/message/SimpleJMSMessage.java][setStringProperty][14] = -> TRY {  -> properties.put(name,value,)@ } CATCH(JMSException) {}
results[https://github.com/mikaelstaldal/LSP/blob/ee935d9b40a6f43f5b658d5269d556656d0b9ac8/sample/framework/src/test/services/Dirlist1.java][execute][2] = -> TRY {  -> pageParams.put("dirlist", new String[],)@ } CATCH(ServletException,IOException) {}
results[https://github.com/jbosstm/narayana/blob/a42849c15cf1a38d68765131192118a833df03eb/txframework/framework/src/test/java/org/jboss/narayana/txframework/functional/services/BAParticipantCompletionService.java][saveData][5] = -> TRY {  -> TXDataMap.put("data","data",)@ } CATCH(SomeApplicationException) {}
results[https://github.com/eclipse/rap/blob/adabffc3369e5ed8b02bb3eace6bb2251c6869eb/bundles/org.eclipse.rap.ui.workbench/Eclipse UI/org/eclipse/ui/internal/statushandlers/InternalDialog.java][openTray][2] = -> TRY {  -> dialogState.put(IStatusDialogConstants.TRAY_OPENED,Boolean.TRUE,)@ } CATCH(IllegalStateException,UnsupportedOperationException) {}
results[https://github.com/atoulme/xmlrpc/blob/084fe08a2140c916f645fbf24a8f3189bd186ce6/client/src/main/java/org/apache/xmlrpc/client/XmlRpcLiteHttpTransport.java][sendRequest][3] = -> TRY {  -> host=(port==80)?hostname:hostname+":"+port@ -> headers.put("Host",host,)@ } CATCH(XmlRpcException) {}
results[https://github.com/bogeblad/infoglue2/blob/55fe2a3dc3f83fd4896d74095f85cf43559c9713/src/java/org/infoglue/deliver/taglib/management/RemoteUserPropertiesServiceTag.java][addContentVersionAttribute][4] = -> TRY {  -> this.userPropertiesAttributesMap.put(name,value,)@ } CATCH(JspException) {}
results[https://github.com/clescot/jguard/blob/dfde0da467a39158b37c52ef11a2a89b87a3572f/jguard-ext/src/main/java/net/sf/jguard/ext/authentication/loginmodules/CRLLoginModule.java][login][2] = -> TRY {  -> sharedState.put(SKIP_CREDENTIAL_CHECK,"true",)@!(!(login)) } CATCH(LoginException) {}
results[https://github.com/ndeloof/svnkit/blob/8788cb722373e1d00c6dd3ca3595bf8a24276a80/javasvn/src/org/tmatesoft/svn/core/internal/wc/SVNExportEditor.java][changeFileProperty][3] = -> TRY {  -> myFileProperties.put(name,value,)@ } CATCH(SVNException) {}
results[https://github.com/YongJiang/org.eclipse.birt.data/blob/d82389fc4f6aef4593de97e715834f1d691a0f6a/tests/org.eclipse.birt.data.tests/test/org/eclipse/birt/data/engine/binding/DataSetCacheTest.java][testUseAppContextMemoryCache1][5] = -> TRY {  -> this.appContextMap.put(DataEngine.MEMORY_DATA_SET_CACHE,new Integer(7,),)@ } CATCH(BirtException,Exception) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/trunk/blojsom-3.0/addon/plugins/src/org/blojsom/plugin/tools/DateToolPlugin.java][process][2] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_DATE_TOOL,new DateTool(),)@ } CATCH(PluginException) {}
results[https://github.com/teiid/teiid/blob/ac4eac755f92428090427935c6b9e669c250c335/client-jdbc/src/test/java/com/metamatrix/jdbc/api/TestQueryPlanDisplayHelper.java][testGetDescriptionWNullType][4] = -> TRY {  -> nodeProps=plan.getProperties()@ -> nodeProps.put("type",null,)@ } CATCH(Exception) {}
results[https://github.com/bobmcwhirter/jboss-messaging/blob/7242bf06cf19fa4c3f76a6124421bad88e0c555d/tests/src/org/jboss/test/messaging/tools/MessageImpl.java][setBooleanProperty][10] = -> TRY {  -> properties.put(name,new Boolean(value,),)@ } CATCH(JMSException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-2_24-FINAL/blojsom-2.0/plugins/src/org/blojsom/plugin/helper/PluginHelperPlugin.java][process][3] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_PLUGIN_HELPER,new PluginHelper(httpServletRequest,httpServletResponse,context,user,),)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/suvajitgupta/Tasks/blob/e8b1afa8014fb1246ae8c5a831907ff1fd2292ea/persevere/WEB-INF/src/org/persvr/datasource/HttpJsonSource.java][recordProperty][1] = -> TRY {  -> object.put(name,recordValueAsJSON(value,),)@ } CATCH(Exception) {}
results[https://github.com/steinarb/mockrunner/blob/28aef767c66437e972f4a72de0ecff6415468f17/src/com/mockrunner/test/NestedTagTest.java][setUp][33] = -> TRY {  -> testMap=new HashMap()@ -> testMap.put("testString","test",)@ } CATCH(Exception) {}
results[https://github.com/boundlessgeo/geoserver-2.1.x/blob/47fc16afcd7706d880a54ef46bc73d544b2e69b4/main/src/main/java/org/geoserver/security/impl/EditableUserDAO.java][setUserDetails][5] = -> TRY {  -> myDetailStorage.put(username,makeUser(username,details,),)@ } CATCH(IOException,ConfigurationException) {}
results[https://github.com/krosenvold/struts2/blob/c3abe31f215dd082ca20d30f6b8e31334a2477ca/plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/ServletPortletPreferences.java][reset][2] = -> TRY {  -> session.put(PREFERENCES_KEY,new HashMap(),)@ } CATCH(ReadOnlyException) {}
results[https://github.com/aldaris/opensso/blob/c1ef250037b8298119082d1e474aa34eb7e5eae7/products/amserver/source/com/sun/identity/authentication/internal/AuthSSOToken.java][<init>][4] = -> TRY {  -> key=getNewKey()@ -> allSSOTokens.put(key,this,)@ } CATCH(InvalidAuthContextException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-3.3/addon/plugins/src/org/blojsom/plugin/tools/ImportToolPlugin.java][process][3] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_IMPORT_TOOL,new ImportTool(),)@ } CATCH(PluginException) {}
results[https://github.com/teiid/teiid/blob/1e24ba9c9eb45716b3096b9b4e997b8a87e5b223/federate-server/src/main/java/com/metamatrix/server/connector/service/ConnectorService.java][getCaches][1] = -> TRY {  -> names=new HashMap()@ -> names.put(RESULT_SET_CACHE_NAME,CacheAdmin.CONNECTOR_RESULT_SET_CACHE,)@ } CATCH(MetaMatrixComponentException) {}
results[https://github.com/bogeblad/infoglue2/blob/7c35ec7dd75d65c2c069140151bd3cc5fdc74f50/src/java/org/infoglue/deliver/taglib/management/FormEntryParameterTag.java][setUserAgent][14] = -> TRY {  -> this.formEntryMap.put("userAgent",evaluateString("parameter","userAgent",userAgent,),)@ } CATCH(JspException) {}
results[https://github.com/sleepsort/lucene-solr/blob/ff763d5e43f1fb59fbaf7c796d79f32d608ef9e5/lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource.java][createWeight][14] = -> TRY {  -> context.put(this,new LongDocValues(this,),)@ } CATCH(IOException) {}
results[https://github.com/steinarb/mockrunner/blob/6bfe7f5c4e90d4b8d6e4335199b95c5871f067c8/src/com/mockrunner/test/web/TestSimpleTag.java][setDynamicAttribute][3] = -> TRY {  -> dynamicAttributes.put(localName,new DynamicAttribute(uri,value,),)@ } CATCH(JspException) {}
results[https://github.com/frostwire/frostwire-android/blob/08b4ce8de0ba4b471334495ef59bed41e3a3eebf/common/vuze/azureus2/src/org/gudy/azureus2/core3/torrent/impl/TOTorrentImpl.java][setPrivate][8] = -> TRY {  -> additional_info_properties.put(TK_PRIVATE,new Long((_private_torrent)?1:0,),)@ } CATCH(TOTorrentException) {}
results[https://github.com/rhusar/HornetQ-oldmigration/blob/bb3e3d74df87a198175f3663c880742093468d4d/tests/jms-tests/src/test/java/org/hornetq/jms/tests/message/SimpleJMSMessage.java][setShortProperty][11] = -> TRY {  -> properties.put(name,new Short(value,),)@ } CATCH(JMSException) {}
results[https://github.com/dongpd/ecms/blob/b0a3b5ab8034d8daeba95be3de32af1e697e38e9/exo-ecms-ext/exo-ecms-ext-workflow-bp-content-plugin/src/main/java/org/exoplatform/services/plugin/actions/impl/BPActionPlugin.java][executeAction][6] = -> TRY {  -> variables.put("repository",repository,)@ -> executeAction(userId,businessProcess,variables,repository,)@ } CATCH(Exception) {}
results[https://github.com/ekirkilevics/Spring/blob/04d3f984b135572a40f2b08c1b52ed34d1fae3da/org.springframework.testsuite/src/test/java/org/springframework/jms/support/SimpleMessageConverterTests.java][testMapConversionWhereMapHasNNullForKey][3] = -> TRY {  -> content=new HashMap()@ -> content.put(null,"value1",)@ } CATCH(JMSException) {}
results[https://github.com/rhusar/HornetQ-oldmigration/blob/cd2c21f02311acaa67149a711541db09a663f3a8/tests/src/org/jboss/test/messaging/tools/MessageImpl.java][setByteProperty][11] = -> TRY {  -> properties.put(name,new Byte(value,),)@ } CATCH(JMSException) {}
results[https://github.com/jmesnil/hornetq-old/blob/2fbcf90b3a08b169a491bd03a04fbc72c4d4d745/tests/jms-tests/src/org/hornetq/jmstests/message/SimpleJMSMessage.java][setDoubleProperty][10] = -> TRY {  -> properties.put(name,new Double(value,),)@ } CATCH(JMSException) {}
results[https://github.com/rhusar/HornetQ-oldmigration/blob/29d00cda12d626996eba8881768b1947497ffa4a/tests/jms-tests/src/org/hornetq/jmstests/message/SimpleJMSMessage.java][setLongProperty][10] = -> TRY {  -> properties.put(name,new Long(value,),)@ } CATCH(JMSException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-3.3/addon/plugins/src/org/blojsom/plugin/tools/MathToolPlugin.java][process][2] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_MATH_TOOL,new MathTool(),)@ } CATCH(PluginException) {}
results[https://github.com/YongJiang/org.eclipse.birt.data/blob/d82389fc4f6aef4593de97e715834f1d691a0f6a/tests/org.eclipse.birt.data.tests/test/org/eclipse/birt/data/engine/binding/DataSetCacheTest.java][testUseCachedMeta1][4] = -> TRY {  -> this.appContextMap.put(DataEngine.DATA_SET_CACHE_ROW_LIMIT,new Integer(1,),)@ } CATCH(BirtException) {}
results[https://github.com/bogeblad/infoglue2/blob/19a41205f176662a2502e744a4b2e6af8a8f80f3/src/java/org/infoglue/deliver/taglib/content/ContentParameterTag.java][setIsBranch][11] = -> TRY {  -> this.contentMap.put("isBranch",(Boolean) evaluate("parameter","isBranch",isBranch,Boolean.class,),)@ } CATCH(JspException) {}
results[https://github.com/jmesnil/hornetq-old/blob/c1fc3e3f6da3ac8522fa7dbb67fa2d450ca26181/tests/src/org/jboss/test/messaging/jms/message/SimpleJMSMessage.java][setFloatProperty][11] = -> TRY {  -> properties.put(name,new Float(value,),)@ } CATCH(JMSException) {}
results[https://github.com/apache/manifoldcf/blob/6ab7874cf3615dfb3baf783e4585945d059cf36d/modules/connectors/webcrawler/connector/src/main/java/org/apache/manifoldcf/crawler/connectors/webcrawler/CredentialsDescription.java][addAuthPage][1] = -> TRY {  -> sessionPages.put(urlregexp,new SessionCredentialItem(urlregexp,urlPattern,preferredLinkRegexp,preferredLinkPattern,formNameRegexp,formNamePattern,preferredRedirectionRegexp,preferredRedirectionPattern,),)@ } CATCH(ManifoldCFException) {}
results[https://github.com/jdeolive/geotools-old/blob/7a6531ade31f4ad1f107819eae16c0922a69a1b4/modules/unsupported/postgis-versioned/src/test/java/org/geotools/data/postgis/VersiondPostgisDataStoreFactoryOnlineTest.java][testVersioned][8] = -> TRY {  -> remote.put("version enable all",Boolean.TRUE,)@ -> ds=(VersionedPostgisDataStore) DataStoreFinder.getDataStore(remote,)@ } CATCH(Exception) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-3_1-final/blojsom-3.0/addon/plugins/src/org/blojsom/plugin/tools/RenderToolPlugin.java][process][3] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_RENDER_TOOL,new RenderTool(),)@ } CATCH(PluginException) {}
results[https://github.com/concord-consortium/geogebra/blob/61559064f3d6a14e290b9cf7a9ccee36941f7ae4/geogebra/org/freehep/graphicsio/font/truetype/TTFFont.java][newTable][2] = -> TRY {  -> entry.put(tag,initTable(tag,input,),)@ } CATCH(IOException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/trunk/blojsom-2.0/plugins/src/org/blojsom/plugin/common/StringUtilitiesPlugin.java][process][3] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_STRING_UTILITIES,new StringUtilities(),)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-2_25-final/blojsom-2.0/addon/plugins/src/org/blojsom/plugin/tools/IteratorToolPlugin.java][process][8] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_ITERATOR_TOOL,new IteratorTool(),)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/trunk/blojsom-3.0/plugins/src/org/blojsom/plugin/common/CollectionUtilitiesPlugin.java][process][3] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_COLLECTION_UTILITIES,new CollectionUtilities(),)@ } CATCH(PluginException) {}
results[https://github.com/bogeblad/infoglue2/blob/19a41205f176662a2502e744a4b2e6af8a8f80f3/src/java/org/infoglue/deliver/taglib/content/ContentParameterTag.java][setRepositoryId][19] = -> TRY {  -> this.contentMap.put("repositoryId",evaluateInteger("parameter","repositoryId",repositoryId,),)@ } CATCH(JspException) {}
results[https://github.com/alevy/comet/blob/2077d66e96bdbf07bfb5a80b3b65f8521bb50667/dht/org/gudy/azureus2/core3/torrent/impl/TOTorrentImpl.java][writeStringToMetaData][8] = -> TRY {  -> meta_data.put(name,writeStringToMetaData(value,),)@ } CATCH(TOTorrentException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-2_20-final/blojsom-2.0/addon/plugins/src/org/blojsom/plugin/tools/ImportToolPlugin.java][process][14] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_IMPORT_TOOL,new ImportTool(),)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/jdbc-bare/spring-jdbc-bare/blob/ed27e04a0d31d100173d93558f7f36e31a04ee31/org.springframework.jdbc/src/test/java/org/springframework/jdbc/datasource/lookup/MapDataSourceLookupTests.java][testGetDataSourcesReturnsUnmodifiableMap][4] = -> TRY {  -> dataSources=lookup.getDataSources()@ -> dataSources.put("","",)@ } CATCH(Exception) {}
results[https://github.com/gridengine/arco/blob/eeaa4b7106cbb635f53950c6cbdc82dbeb71a2f8/source/dbwriter/src/com/sun/grid/reporting/dbwriter/StatisticManager.java][<init>][4] = -> TRY {  -> statisticsMap=new HashMap()@ -> statisticsMap.put("s_name","s_name",)@ } CATCH(ReportingException) {}
results[https://github.com/bobmcwhirter/jboss-messaging/blob/2520791bceca538555f7adb2fbf07b4a2f0286f2/tests/src/org/jboss/test/messaging/jms/message/SimpleJMSMessage.java][setIntProperty][13] = -> TRY {  -> properties.put(name,new Integer(value,),)@ } CATCH(JMSException) {}
results[https://github.com/lbroman/struts2-old/blob/c770c6f38a7fcbe93007a4515a89225e55f498ca/src/test/org/apache/struts/action2/interceptor/WebWorkConversionErrorInterceptorTest.java][testFieldErrorAdded][3] = -> TRY {  -> conversionErrors.put("foo",new Long(123,),)@ } CATCH(Exception) {}
results[https://github.com/krosenvold/struts2/blob/899a074c856e1b6e9394005a9cbdcef63b9fd5c2/xwork-core/src/test/java/com/opensymphony/xwork2/interceptor/ConversionErrorInterceptorTest.java][testWithPreResultListener][1] = -> TRY {  -> conversionErrors.put("foo","Hello",)@ -> ac.setConversionErrors(conversionErrors,)@ } CATCH(Exception) {}
results[https://github.com/FullMetal210/milton-cloud/blob/00bc91955eb3d131949328f9cdd67a7e5cee1590/milton-cloud-server-api/src/test/java/io/milton/cloud/server/web/templating/DataBinderTest.java][testPopulate_String][3] = -> TRY {  -> map.put("s1","astring",)@ -> dataBinder.populate(bean,map,)@ } CATCH(Exception) {}
results[https://github.com/seasarorg/teeda/blob/1cb9d04bcf3a07fe8c5733c4d0956079da534f94/teeda/teeda-extension/src/test/java/org/seasar/teeda/extension/component/TSessionSaveTest.java][testDecode][1] = -> TRY {  -> values=sessionSave.getOrCreateSaveValues(context,)@ -> values.put("aaa","111",)@ } CATCH(Exception) {}
results[https://github.com/YongJiang/org.eclipse.birt.engine/blob/07d67e0d3f61b8f22a6eadbb7db3c9b43a565769/tests/org.eclipse.birt.report.engine.tests/test/org/eclipse/birt/report/engine/api/script/instance/InstanceTest.java][testRowInstance][1] = -> TRY {  -> expressionMap=new HashMap()@ -> expressionMap.put(EXPRESSION,EXPRESSION_VALUE,)@ } CATCH(ScriptException) {}
results[https://github.com/markokr/pgjdbc-test/blob/8b67d5ea9eb81c77ac33086df708c1c84c71e4c1/org/postgresql/test/util/MiniJndiContext.java][rename][3] = -> TRY {  -> map.put(newName,map.remove(oldName,),)@ } CATCH(NamingException) {}
results[https://github.com/impetus-opensource/Kundera/blob/123a84661596222974eeaa79b30de0d44491277a/src/kundera-hbase/src/test/java/com/impetus/client/hbase/schemaManager/HBaseSchemaOperationTest.java][testUpdate][2] = -> TRY {  -> propertyMap.put(PersistenceProperties.KUNDERA_DDL_AUTO_PREPARE,"update",)@ -> emf=Persistence.createEntityManagerFactory(persistenceUnit,propertyMap,)@ } CATCH(IOException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-3_1-final/blojsom-3.0/addon/plugins/src/org/blojsom/plugin/tools/ExtendedListToolPlugin.java][process][2] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_EXTENDED_LIST_TOOL,new ExtendedListTool(),)@ } CATCH(PluginException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/maven-spike/blojsom-addon-plugins/src/main/java/org/blojsom/plugin/tools/ListToolPlugin.java][process][2] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_LIST_TOOL,new ListTool(),)@ } CATCH(PluginException) {}
results[https://github.com/naur/research/blob/a590c4fe689d954fdf3f3d1199d10592a6f97fc6/naure-integrate/src/main/java/org/naure/services/SessionService.java][get][1] = -> TRY {  -> params.put("application",systemProperties.applicationName,)@ -> return sessionRepository.get(params,Session.class,)@ } CATCH(Exception) {}
results[https://github.com/bobmcwhirter/jboss-messaging/blob/88d18a55ba1dbeb08edd9df1c8069539b7bc6bdf/tests/src/org/jboss/test/messaging/jms/message/SimpleJMSMapMessage.java][setString][8] = -> TRY {  -> checkName(name,)@ -> content.put(name,value,)@ } CATCH(JMSException) {}
results[https://github.com/jankotek/MapDB/blob/adf4c68c48afb223599bf3ad81aa11a4b9f0a2ef/src/test/java/examples/Transactions2.java][tx][1] = -> TRY {  -> m=db.getHashMap("test",)@ -> m.put("test","test",)@ } CATCH(TxRollbackException) {}
results[https://github.com/apache/manifoldcf/blob/71f0d34ede27929254c61e4577872360f70738c5/products/connectors/webcrawler/com/metacarta/crawler/connectors/webcrawler/CredentialsDescription.java][addAuthPage][1] = -> TRY {  -> sessionPages.put(urlregexp,new SessionCredentialItem(urlregexp,urlPattern,preferredLinkRegexp,preferredLinkPattern,formNameRegexp,formNamePattern,preferredRedirectionRegexp,preferredRedirectionPattern,),)@ } CATCH(MetacartaException) {}
results[https://github.com/frostwire/frostwire-desktop/blob/ad73e10b91d16904a8dcb86f7b17bb5fb45f5399/vuze/azureus3/src/com/aelitis/azureus/util/ImportExportUtils.java][exportBoolean][6] = -> TRY {  -> map.put(key,new Long((value)?1:0,),)@ } CATCH(IOException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-2_27-final/blojsom-2.0/plugins/src/org/blojsom/plugin/fetcher/FetcherHelperPlugin.java][process][5] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_FETCHER_HELPER,new FetcherHelper(_fetcher,user,),)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-2_22-final/blojsom-2.0/addon/plugins/src/org/blojsom/plugin/tools/MathToolPlugin.java][process][8] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_MATH_TOOL,new MathTool(),)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/ybrs/hazelcastforked/blob/6d494fa5ef514816a415adb7e2e13314d67bbf87/hazelcast/src/test/java/com/hazelcast/impl/ClusterTest.java][testHazelcastInstanceSerializationWhenUsingExecutorService][1] = -> TRY {  -> m1=h1.getMap("default",)@ -> m1.put("1","value1",)@ } CATCH(Exception) {}
results[https://github.com/seasarorg/teeda/blob/1cb9d04bcf3a07fe8c5733c4d0956079da534f94/teeda/teeda-core/src/main/java/javax/faces/internal/WindowIdUtil.java][setWindowId][1] = -> TRY {  -> requestMap=externalContext.getRequestMap()@ -> requestMap.put(WID,wid,)@ } CATCH(FacesException) {}
results[https://github.com/nmacs/lm3s-uclinux/blob/e9de083ae36b96d22c13662b5bae4225408f710d/lib/classpath/gnu/xml/libxmlj/sax/GnomeSAXParserFactory.java][setFeature][2] = -> TRY {  -> GnomeXMLReader.checkFeatureName(name,)@ -> features.put(name,(flag)?Boolean.TRUE:Boolean.FALSE,)@ } CATCH(ParserConfigurationException,SAXNotRecognizedException,SAXNotSupportedException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-2_21-final/blojsom-2.0/addon/plugins/src/org/blojsom/plugin/tools/RenderToolPlugin.java][process][9] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_RENDER_TOOL,new RenderTool(),)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/seasarorg/teeda/blob/1cb9d04bcf3a07fe8c5733c4d0956079da534f94/teeda/teeda-core/src/test/java/javax/faces/internal/WindowIdEncodeUrlCustomizerTest.java][testEncodeActionUrl][2] = -> TRY {  -> requestMap=externalContext.getRequestMap()@ -> requestMap.put(WindowIdUtil.WID,"123",)@ } CATCH(Exception) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-3_1-final/blojsom-3.0/plugins/src/org/blojsom/plugin/common/StringUtilitiesPlugin.java][process][4] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_STRING_UTILITIES,new StringUtilities(),)@ } CATCH(PluginException) {}
results[https://github.com/dCache/dcache/blob/2962b546f98dded928f07f39503a1ac229880889/modules/dCache/src/main/java/diskCacheV111/namespace/PnfsManagerBroker.java][<init>][2] = -> TRY {  -> _pnfsManagers.put("default",new WorkerInstance("default",),)@ } CATCH(Exception) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-2_28-final/blojsom-2.0/addon/plugins/src/org/blojsom/plugin/tools/ExtendedListToolPlugin.java][process][3] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_EXTENDED_LIST_TOOL,new ExtendedListTool(),)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-2_27-final/blojsom-2.0/addon/plugins/src/org/blojsom/plugin/tools/ArrayToolPlugin.java][process][2] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_ARRAY_TOOL,new ArrayTool(),)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/uib/matterhorn/blob/284cdbf899d1ebd0c990965bf3adb34ec172224b/modules/opencast-ingest-service-impl/trunk/src/main/java/de/schlichtherle/io/archive/spi/MultiplexedOutputArchive.java][<init>][1] = -> TRY {  -> temps.put(entry.getName(),this,)@ } CATCH(IOException) {}
results[https://github.com/droolsjbpm/drools/blob/a4e8e3096b76eba7c3148c6e7b17bf406b2bc73c/drools-core/src/main/java/org/drools/xml/ExtensibleXmlParser.java][startPrefixMapping][3] = -> TRY {  -> super.startPrefixMapping(prefix,uri,)@ -> this.namespaces.put(prefix,uri,)@ } CATCH(SAXException) {}
results[https://github.com/mikaelstaldal/LSP/blob/30dff7f0b66ae8afb9b2b195d45ba3b49f6c9f18/sample/restful/src/test/services/Include2.java][execute][3] = -> TRY {  -> pageParams.put("foo",request.getAttribute(INCLUDE_ATTR_PREFIX+"myattr2",),)@ } CATCH(ServletException,IOException) {}
results[https://github.com/dongpd/ecms/blob/80af60862fc0ecc878cc30afc60b9e81a23c184b/ext/workflow/bp-content-plugin/src/main/java/org/exoplatform/services/plugin/actions/impl/BPActionPlugin.java][executeAction][1] = -> TRY {  -> variables.put("repository",repository,)@ -> executeAction(userId,businessProcess,variables,)@ } CATCH(Exception) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-3_1-final/blojsom-3.0/addon/plugins/src/org/blojsom/plugin/tools/IteratorToolPlugin.java][process][2] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_ITERATOR_TOOL,new IteratorTool(),)@ } CATCH(PluginException) {}
results[https://github.com/stefanofornari/cipeciop/blob/0307ca9f57bda5e5a629c0d512234dbe78a9fdaf/src/test/java/tests/ste/cipeciop/web/CipControllerTest.java][addCip][1] = -> TRY {  -> attributes=(Map) s.getAttribute(ATTRIBUTE_IDENTIFIER,)@ -> attributes.put(ALIAS_USER_ID,CipCiopTestUtil.TEST_USER2,)@ } CATCH(Exception) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-2_27-final/blojsom-2.0/addon/plugins/src/org/blojsom/plugin/tools/ListToolPlugin.java][process][2] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_LIST_TOOL,new ListTool(),)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/frostwire/frostwire-desktop/blob/90eacf1ef657a5664fd9b5e2e84d819091f9ea3c/common/vuze/azureus3/src/com/aelitis/azureus/util/ImportExportUtils.java][exportJSONBoolean][5] = -> TRY {  -> map.put(key,new Boolean(value,),)@ } CATCH(IOException) {}
results[https://github.com/RamesesDev/osiris2/blob/342f92a022c075bb30927f41149976aa298d0ff3/web/web-support/src/com/rameses/web/support/PollerServlet.java][poll][2] = -> TRY {  -> conf.put("readTimeout","-1",)@ -> ctx=new EJBServiceContext(conf,)@ } CATCH(Exception) {}
results[https://github.com/mikaelstaldal/LSP/blob/30dff7f0b66ae8afb9b2b195d45ba3b49f6c9f18/sample/restful/src/test/services/Func3.java][execute][2] = -> TRY {  -> flag=request.getParameter("flag",)@ -> pageParams.put("flag",(flag==null)?"":flag,)@ } CATCH(ServletException,IOException) {}
results[https://github.com/OpenXavaEx/OpenXavaEx/blob/cae7219e763ec48d9276159a8b291037ba9ccc40/code/OpenXava/src/org/openxava/model/meta/DefaultSize.java][_addScaleForType][3] = -> TRY {  -> scaleTypes.put(className,new Integer(length,),)@ } CATCH(XavaException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/branches/blojsom-2_25-final/blojsom-2.0/addon/plugins/src/org/blojsom/plugin/tools/DateToolPlugin.java][process][5] = -> TRY {  -> context.put(BLOJSOM_PLUGIN_DATE_TOOL,new DateTool(),)@ } CATCH(BlojsomPluginException) {}
results[https://github.com/apache/chainsaw/blob/0f9b7e9256857899bfeb13e23bb054b39cfe5048/src/main/java/org/apache/log4j/chainsaw/ChainsawAppenderHandler.java][addCustomEventBatchListener][1] = -> TRY {  -> customExpressionRules.put(identifier,ExpressionRule.getRule(identifier,),)@ } CATCH(IllegalArgumentException) {}
results[https://github.com/kdvolder/org.eclipse.ajdt/blob/44c0f2d6859ff26872f700d9086d7205ea057b0a/org.eclipse.contribution.weaving.jdt.tests/src/org/eclipse/contribution/weaving/jdt/tests/sourceprovider/SourceTransformerTests.java][testFormatCleanUp][1] = -> TRY {  -> settings=new Hashtable()@ -> settings.put(CleanUpConstants.FORMAT_SOURCE_CODE,CleanUpOptions.TRUE,)@ } CATCH(Exception) {}
results[https://github.com/tobrien/docbkx-tools/blob/005e3ea34b287ec699ee51053dc510dd14980549/docbkx-maven-base/src/test/java/com/agilejava/docbkx/maven/ExpressionEvaluatorTest.java][testEvaluator][1] = -> TRY {  -> foo=new HashMap()@ -> foo.put("bar","whatever",)@ } CATCH(ELException) {}
results[https://github.com/czarneckid/blojsom-sourceforge/blob/d161d7c443a718e6185036920bc166078a26ecd2/trunk/blojsom-3.0/plugins/src/org/blojsom/plugin/user/UserLookupPlugin.java][process][1] = -> TRY {  -> context.put(USER_LOOKUP_PLUGIN_LOOKUP_OBJECT,new UserLookup(_fetcher,),)@ } CATCH(PluginException) {}
results[https://github.com/picketlink2/federation/blob/9619296ba574b932209aa0f963f1004f8efa4409/trust/jbossws/src/test/java/org/picketlink/test/trust/jbossws/jaas/SAMLRoleLoginModuleUnitTestCase.java][login][2] = -> TRY {  -> sharedState.put("javax.security.auth.login.name",new PicketLinkPrincipal("",),)@ } CATCH(LoginException) {}
results[https://github.com/seasarorg/teeda/blob/1cb9d04bcf3a07fe8c5733c4d0956079da534f94/teeda/teeda-core/src/main/java/javax/faces/internal/scope/RedirectScope.java][setRedirectingPath][1] = -> TRY {  -> ctx=getOrCreateContext(context,)@ -> ctx.put(REDIRECTING_KEY,path,)@ } CATCH(FacesException) {}
results[https://github.com/ybrs/hazelcastforked/blob/6d494fa5ef514816a415adb7e2e13314d67bbf87/hazelcast/src/test/java/com/hazelcast/impl/ClusterTest.java][testPutAfterShutdown][1] = -> TRY {  -> map=h1.getMap("default",)@ -> map.put("1","value",)@ } CATCH(InterruptedException) {}
results[https://github.com/naur/research/blob/5f0d6eb688481307e5b283d760ccc931884e5f6d/naure-web-integrate/src/main/java/org/naure/web/integrate/service/SessionService.java][get][1] = -> TRY {  -> params.put("application",systemProperties.applicationName,)@ -> return sessionRepository.get(params,)@ } CATCH(Exception) {}
results[https://github.com/HermesJMS/HermesJMS/blob/f77a961bf97853561d59412641914071ac46e169/src/java/hermes/providers/messages/MapMessageImpl.java][setChar][1] = -> TRY {  -> body.put(arg0,new Character(arg1,),)@ } CATCH(JMSException) {}
results[https://github.com/jdeolive/geotools-old/blob/5eb09f4175816bce66fa6a9bea218f0a2be5d0df/modules/plugin/arcsde/datastore/src/test/java/org/geotools/arcsde/pool/SessionPoolTest.java][testConnectFailure][1] = -> TRY {  -> connectionParameters.put(SERVER_NAME_PARAM_NAME,"unreacheable-server-name",)@ -> config=new ArcSDEDataStoreConfig(connectionParameters,)@ } CATCH(IOException) {}
