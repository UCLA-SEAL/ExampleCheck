results[https://github.com/tpunder/ebean-svn-mirror/blob/d7438ca5db641c6c11e4464b92218d4561a5d79d/core/src/main/java/com/avaje/ebean/server/query/CQuery.java][readCollection][9] = -> TRY {  -> exeNano=System.nanoTime()-startNano@ -> executionTimeMicros=(int) exeNano/1000@ } CATCH(SQLException) {}
results[https://github.com/RobertFischer/caliper/blob/43e0c314f5ff358dcece8c5ceb3d26b6d8f572bd/caliper/src/main/java/com/google/caliper/worker/MicrobenchmarkWorker.java][<init>][90] = -> TRY {  -> this.startTick=System.nanoTime()@ } CATCH(Exception) {}
results[https://github.com/elasticsearch/elasticsearch/blob/3413eedd8dcfd84e138ae34388c4ce5e5909c02a/src/test/java/org/elasticsearch/benchmark/common/util/BytesRefComparisonsBenchmark.java][main][15] = -> TRY {  -> start=System.nanoTime()@ } CATCH(InterruptedException) {}
results[https://github.com/syapse/bigdata/blob/d779dd39414e6e78d3fd95b6653a3a68923605e5/bigdata-jini/src/java/com/bigdata/service/jini/JiniCoreServicesHelper.java][getServiceRegistrars][2] = -> TRY {  -> begin=System.nanoTime()@ } CATCH(InterruptedException,IOException) {}
results[https://github.com/app-inventor-gallery/aig/blob/0b5d0cb4dc28c3d0949255fb92031422b1fd02a3/backend-appengine/appengine-java-sdk-1.5.0.1/demos/mandelbrot/src/com/google/appengine/demos/mandelbrot/FractalTileServlet.java][doGet][8] = -> TRY {  -> start=System.nanoTime()@ } CATCH(IOException,ServletException) {}
results[https://github.com/dzonekl/netxstudio/blob/c08013c1f6987f4bca3a33fb25232d67dee8a87f/3rdPartyLib/org.snmp4j/src/org/snmp4j/transport/TLSTM.java][<init>][1] = -> TRY {  -> this.lastUse=System.nanoTime()@ } CATCH(NoSuchAlgorithmException) {}
results[https://github.com/proofpoint/event-collector/blob/436ec886d076d1596a44e50be35e60f00bf6f697/src/main/java/com/proofpoint/event/collector/SpoolingEventWriter.java][open][56] = -> TRY {  -> createdTime=System.nanoTime()@ } CATCH(IOException) {}
results[https://github.com/ansell/protege-editor-owl/blob/13af8f83ccc185f92fd579b1309637a0abb6d6cd/src/org/protege/editor/owl/model/classexpression/anonymouscls/AnonymousDefinedClassManager.java][getRawID][2] = -> TRY {  -> nextId=System.nanoTime()@ } CATCH(AutoIDException) {}
results[https://github.com/foursquare/commons-old/blob/ea1b38ae856953d9f11939c5466bb88304e58d8b/src/java/com/twitter/common/thrift/ThriftServer.java][doStart][3] = -> TRY {  -> serverStartNanos=System.nanoTime()@ } CATCH(TTransportException) {}
results[https://github.com/datastax/java-driver/blob/74204b3295db6f65f9881c7653621a5d71ef92bd/driver-core/src/main/java/com/datastax/driver/core/Connection.java][<init>][1] = -> TRY {  -> this.startTime=System.nanoTime()@ } CATCH(BusyConnectionException) {}
results[https://github.com/aaronbinns/tnh/blob/cc70560c7001175f7fb90a0ba0065024c00a8ca6/src/java/org/apache/archive/tnh/MetaOpenSearchServlet.java][doGet][4] = -> TRY {  -> responseTime=System.nanoTime()@ } CATCH(ServletException,IOException) {}
results[https://github.com/joninvski/Appia/blob/61c656c1f11c1215f5ca52248f954b94093b35dc/tags/release_4_1_1/appia/src/test/net/sf/appia/demo/jgcs/opengroup/ClientOpenGroupTest.java][sendMessage][2] = -> TRY {  -> tInit=System.nanoTime()@ } CATCH(UnsupportedServiceException,IOException) {}
results[https://github.com/apache/hive/blob/d9511c944da15e2bbb6c828c88406dceff1a1303/metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java][start][1] = -> TRY {  -> start=(doTrace)?System.nanoTime():0@ } CATCH(MetaException,NoSuchObjectException) {}
results[https://github.com/scalegraph/sx10/blob/643289265bc424ac29f9922b95af137d53bf7ca8/x10.compiler/src/polyglot/main/Main.java][start][1] = -> TRY {  -> startTime=System.nanoTime()@ } CATCH(TerminationException) {}
results[https://github.com/Periapsis/aphelion/blob/2419481a78fee611ba0d93e38b48ce353619d0a9/src/main/java/aphelion/client/net/Ping.java][run][2] = -> LOOP { -> TRY { -> now=System.nanoTime()@ } }
results[https://github.com/ezhukov/scim-sample/blob/c619e55560f49a6d661259eacd60666c4cd3e4a4/src/test/java/eugene/zhukov/AccountManagementTest.java][testRegisterAndUpdateUserRawJson][3] = -> TRY {  -> nanoTime=System.nanoTime()@ } CATCH(ParseException) {}
results[https://github.com/flareman/VoidFinger/blob/2d34be16e37a5f271a47ffc1c26bc6879acf3390/src/voidfinger/VoidFinger.java][<init>][1] = -> TRY {  -> this.time=System.nanoTime()@ } CATCH(FileNotFoundException,IOException,OctreeException,EPArrayException) {}
results[https://github.com/integrity-tf/integrity/blob/cf904cd4ac5a0dd4e7167fc961bbe25021bb4142/de.gebit.integrity.runner/src/de/gebit/integrity/runner/DefaultTestRunner.java][createFork][1] = -> TRY {  -> tempStartTime=System.nanoTime()@!(tempForkDef.getForkerClass()!=null) } CATCH(ForkException) {}
results[https://github.com/Cybiras/packages_apps_DeskClock/blob/904f0dad8191e86ebb6af837941ecd0ee5bf33c7/src/com/android/deskclock/TimerClockService.java][createTimer][5] = -> TRY {  -> timer.mId=System.nanoTime()@ } CATCH(RemoteException) {}
results[https://github.com/nickman/shorthand/blob/5826aba839a2a1258501a9a73e9a2e55bb1a2f0b/agent/src/main/java/com/heliosapm/InstrumentationPrototype.java][normalOp][1] = -> TRY {  -> start=System.nanoTime()@ } CATCH(NumberFormatException,InterruptedException) {}
results[https://github.com/AEminium/AEminiumProject/blob/8e125cadd39fa0dea7990e22365cd11c4e3dc141/AeminiumRuntime/src/aeminium/runtime/implementations/implicitworkstealing/ImplicitWorkStealingRuntime.java][get][1] = -> TRY {  -> start=System.nanoTime()@ } CATCH(InterruptedException,ExecutionException,TimeoutException) {}
results[https://github.com/continuuity/weave/blob/47c47b05f7eebcf9b9f25c69ee5b2cf5640aa161/src/test/java/com/continuuity/weave/KafkaTest.java][testKafka][1] = -> TRY {  -> startTime=System.nanoTime()@ } CATCH(InterruptedException,ExecutionException) {}
results[https://github.com/freenet/plugin-Freemail-v0.1/blob/411fe7322499d00513243d01126a28d7c95ca621/src/freemail/OutboundContact.java][pollAcks][2] = -> TRY {  -> start=System.nanoTime()@ } CATCH(ConnectionTerminatedException,InterruptedException) {}
results[https://github.com/openxc/openxc-android/blob/31f98ac27b0394d6d91f51deb279ef6b85a29705/src/main/java/com/openxc/measurements/Measurement.java][getAge][1] = -> TRY {  -> return System.nanoTime()-mBornTime@ } CATCH(NoValueException) {}
results[https://github.com/helloworldopen/hwo-bot-team-187/blob/27fccde7c923cf5c4dada3527eb7e2a7363f8d4c/src/redlynx/pong/server/LagSimulator.java][run][2] = -> TRY { -> LOOP { -> time=System.nanoTime()@ } }
results[https://github.com/pbeaman/persistit/blob/10b259d3c0b72a7c5882268df9128b9cdf51d5a4/src/main/java/com/persistit/CheckpointManager.java][pollCreateCheckpoint][1] = -> TRY {  -> now=System.nanoTime()@ } CATCH(PersistitException) {}
results[https://github.com/apache/sis/blob/c72125b93fddfdd6f2fe72cb2aef82d9c8488375/core/sis-utility/src/main/java/org/apache/sis/xml/Pooled.java][reset][2] = -> TRY {  -> resetTime=System.nanoTime()@ } CATCH(JAXBException) {}
results[https://github.com/linkedin/databus/blob/dd39e049bb83bbacfea80ed5547270a812151211/databus-client/databus-client-common/src/main/java/com/linkedin/databus/client/consumer/LoggingConsumer.java][<init>][1] = -> TRY {  -> _lastWindowStartTs=System.nanoTime()@ } CATCH(InvalidConfigException) {}
results[https://github.com/cojen/Dirmi/blob/f642efe1119dd1cfd7ac724e2eeb2e839d230a42/Dirmi/src/main/java/org/cojen/dirmi/io/BasicChannelBroker.java][<init>][1] = -> TRY {  -> mLastPingNanos=System.nanoTime()@ } CATCH(RejectedException) {}
results[https://github.com/nourlcn/yarn-comment/blob/9a9fcf826d455aacdc24948300bdf3015302d0f5/mapreduce/src/contrib/mumak/src/java/org/apache/hadoop/mapred/SimulatorJobStoryProducer.java][<init>][33] = -> TRY {  -> <init>(path,cluster,firstJobStartTime,conf,System.nanoTime(),)@ } CATCH(IOException) {}
results[https://github.com/pfaffle/MiniChessBot/blob/ce593a5a1757517da227cc2a94ee58db23c897ae/MiniChess/src/State.java][getBestMove][7] = -> TRY { -> searchElapsedTime=System.nanoTime()-searchStartTime*1.0e-9@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/cbrun/emf-compare/blob/731597f5e7910e6386db2a3c572397bfc2b7f837/tests/org.eclipse.emf.compare.tests/src/org/eclipse/emf/compare/tests/util/EcoreModelUtils.java][createModel][3] = -> TRY {  -> return createModel(writerCount,bookPerWriterCount,System.nanoTime(),false,false,)@ } CATCH(FactoryException) {}
results[https://github.com/nglazyrin/chordest/blob/24f754151a6a8d6b132913697df2ffe30788cb3d/msdchallenge/src/main/java/msdchallenge/query/QueryEvaluator.java][printTupleQueryResult][1] = -> TRY {  -> queryEnd=System.nanoTime()@ -> log(rows+" result(s) in "+queryEnd-queryBegin/1000000+"ms.",)@ } CATCH(QueryEvaluationException) {}
results[https://github.com/mkeesey/guava-for-small-classpaths/blob/956d3d3a40c6148de35957b1d0d4d8b268ba1ee6/guava-tests/test/com/google/common/util/concurrent/SimpleTimeLimiterTest.java][testBadCallableWithEnoughTime][88] = -> TRY {  -> start=System.nanoTime()@ -> assertTheCallTookBetween(start,DELAY_MS,ENOUGH_MS,)@ } CATCH(Exception) {}
results[https://github.com/nourlcn/yarn-comment/blob/afc156cc261205fcb9314c60fc89e794bcda1e79/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestGetFileBlockLocations.java][setUp][82] = -> TRY {  -> random=new Random(System.nanoTime(),)@ } CATCH(IOException) {}
results[https://github.com/junit-team/junit/blob/c861b8a24a0663b9f2496214d1a58048d80284a8/src/main/java/org/junit/experimental/max/MaxHistory.java][testStarted][2] = -> TRY {  -> starts.put(description,System.nanoTime(),)@ } CATCH(Exception) {}
results[https://github.com/lichongxin/hbase-snapshot/blob/371d589c5f9ffe9220b1eb11113387b64d7876c7/src/test/org/apache/hadoop/hbase/regionserver/TestMemcache.java][testGetWithDelete][70] = -> TRY {  -> ts1=System.nanoTime()@ -> put1=new KeyValue(row,fam,qf1,ts1,val,)@ } CATCH(IOException) {}
results[https://github.com/junit-team/junit/blob/c861b8a24a0663b9f2496214d1a58048d80284a8/src/main/java/org/junit/experimental/max/MaxHistory.java][testFinished][2] = -> TRY {  -> end=System.nanoTime()@ -> putTestDuration(description,end-start,)@ } CATCH(Exception) {}
results[https://github.com/smee/elateXam/blob/fec6369937daf26af2cdfffdb1f35925d9b37b48/taskmodel/taskmodel-core/src/main/java/de/thorstenberger/taskmodel/complex/complextaskhandling/subtasklets/impl/AbstractSubTasklet.java][buildPreview][1] = -> TRY {  -> build(System.nanoTime(),)@ } CATCH(TaskApiException) {}
results[https://github.com/marymiller/floodlight/blob/3cdb35a9c1502271282da343e271e1aad1a00716/src/test/java/net/floodlightcontroller/core/internal/RoleChangerTest.java][doSendNxRoleRequest][3] = -> TRY {  -> cookie=System.nanoTime()@ -> xid=roleChanger.sendHARoleRequest(sw,role,cookie,)@ } CATCH(Exception) {}
results[https://github.com/darkyellow/DarkYellowEngine/blob/8c7dd2074c4e57d5b2ec36d07fc7a7017e50d8e3/com/darkyellow/engine/world/animation/Skeleton.java][startAnimation][1] = -> TRY {  -> animationManager.startAnimation(group,System.nanoTime(),)@ } CATCH(AnimationEndException) {}
results[https://github.com/europeana/uim-core/blob/982aea92ade745a1fb0951661a9a9102c18a142a/external/repox/trunk/basic/src/test/java/eu/europeana/uim/repox/rest/RepoxServiceTest.java][setupRepoxService][21] = -> TRY {  -> timeStamp=Long.toString(System.nanoTime(),)@ } CATCH(Exception) {}
results[https://github.com/eirikbakke/studycaster/blob/cc30df0e47b56ecc49ac93c2a57e9ccb38481236/sc_client/src/no/ebakke/studycaster/util/Util.java][delayAtLeast][1] = -> TRY {  -> delayAtLeastUntil(System.nanoTime()+nanos,)@ } CATCH(InterruptedException) {}
results[https://github.com/forcedotcom/phoenix/blob/aa9442701737311801d770b7fe6fa8b991cc759f/phoenix-core/src/test/java/com/salesforce/phoenix/index/IndexMaintainerTest.java][testCompositeRowKeyTimeIndex][4] = -> TRY {  -> timeInNanos=System.nanoTime()@ -> ts.setNanos((int) timeInNanos%1000000000,)@ } CATCH(Exception) {}
results[https://github.com/pquerna/cassandra/blob/3e3ebc3fb39ef56da87661057359aa997f49e0ab/src/java/org/apache/cassandra/db/CommitLogExecutorService.java][processWithSyncBatch][11] = -> TRY {  -> end=System.nanoTime()+(long) 1000000*DatabaseDescriptor.getCommitLogSyncBatchWindow()@!(!(firstTask.getRawCallable() instanceof CommitLog.LogRecordAdder)) } CATCH(Exception) {}
results[https://github.com/blizzy78/egit/blob/fed21849f6a0fc2003a30bc036cefbbdf428a8cb/org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/test/commit/CommitEditorTest.java][showAnnotations][3] = -> TRY {  -> setTestFileContent("updated content"+System.nanoTime(),)@ } CATCH(Exception) {}
results[https://github.com/tdunning/LatentFactorLogLinear/blob/e1014d5ef02de6ebed030f807fa68ff8a3ce3b05/core/src/main/java/org/apache/mahout/math/hadoop/TimesSquaredJob.java][createTimesSquaredJobConf][8] = -> TRY {  -> now=System.nanoTime()@ -> inputVectorPath=new Path(outputVectorPathBase,INPUT_VECTOR+'/'+now,)@ } CATCH(IOException) {}
results[https://github.com/thomasbecker/jetty-7/blob/c3e170bb74e75edfd104c763f1d1523dc3ae6be0/jetty-websocket/src/main/java/org/eclipse/jetty/websocket/TestClient.java][ping][8] = -> TRY {  -> _starts.add(System.nanoTime(),)@ } CATCH(Exception) {}
results[https://github.com/OpenDataSpace/opendj3/blob/d40fad1007e058cc9cdb004dfc2560cb1ebf64e8/opendj-client-tools/src/main/java/com/sun/opends/sdk/tools/AuthRate.java][chainResult][4] = -> TRY {  -> searchWaitRecentTime.getAndAdd(System.nanoTime()-startTime,)@ } CATCH(ErrorResultException) {}
results[https://github.com/tprk77/lcm-gitified/blob/7852e6aac3cb597e5b3df06425b47d4f38514105/examples/java/SendMessage.java][main][2] = -> TRY { -> msg.timestamp=System.nanoTime()@ } CATCH(IOException) { -> System.out.println("Exception: "+ex,)@ }
results[https://github.com/tjake/Solandra/blob/a10ea4081e864392cd280044b07c05d7f3273e99/test/lucandra/cluster/IndexManagerTests.java][testCassandraIncrement4][2] = -> TRY {  -> indexName=String.valueOf(System.nanoTime(),)@ } CATCH(Exception) {}
results[https://github.com/darkyellow/DarkYellowEngine/blob/3b7485962b2f18bbd85f61071b98ab48e701b778/com/darkyellow/engine/draw/ui/movie/Movie.java][initialise][1] = -> TRY {  -> tickDiff=(long) 1000000000/ffmpeg.getFramerate()@ -> nextGameTick=System.nanoTime()+tickDiff@ } CATCH(DarkYellowException) {}
results[https://github.com/escidoc/escidoc-core/blob/3de0ed1dd286670c514fe0e0f65381db826d404d/integration-tests/src/test/java/de/escidoc/core/test/EscidocRestSoapTestsBase.java][getPidParam][3] = -> TRY {  -> extUrl+=System.nanoTime()@ -> param="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"+"<param last-modification-date=\""+getTheLastModificationDate(id,)+"\"><url>"+extUrl+"</url></param>"@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/acbdb0ade569a980d025ec2b09f528c0bc1a29cd/test/javax/management/remote/mandatory/notif/ListenerScaleTest.java][timeNotif][3] = -> TRY { -> startTime=System.nanoTime()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/mschn/wissl/blob/bedc43a119897dbdb088ba97afed7f8d558487df/src/main/java/fr/msch/wissl/server/REST.java][editAlbum][11] = -> TRY {  -> l1=System.nanoTime()@ -> log(s,l1,)@ } CATCH(SecurityError,SQLException) {}
results[https://github.com/flupes/GrannyRoomba/blob/1d30feffb598d49c75da231afb0df6ddd8e209a4/code/org.flupes.ljf.grannyroomba.hw/src/org/flupes/ljf/grannyroomba/hw/RoombaCreate.java][run][1] = -> TRY { -> m_telemetryTimestamp=System.nanoTime()@ } CATCH(ConnectionLostException) { -> e.printStackTrace()@ }
results[https://github.com/ttron/lab/blob/48a9930884791c3fa1869ad3bcc9adb656ce9f76/nexus-oss-2.11.2-06/testsuite/legacy-testsuite/src/test/java/org/sonatype/nexus/testsuite/repo/nexus4539/AutoBlockITSupport.java][shakeNexus][2] = -> TRY {  -> downloadArtifact("nexus4539","a","404-"+System.nanoTime(),)@ } CATCH(IOException) {}
results[https://github.com/darkyellow/DarkYellowEngine/blob/b37b6c1c713550b38b7f1db24623e7c792ecfe4f/com/darkyellow/loader/scene/AnimationSceneObject.java][startAnimation][1] = -> TRY {  -> animationManager.startAnimation(animationGroup,System.nanoTime(),)@ } CATCH(DarkYellowAnimationEndException,DarkYellowException) {}
results[https://github.com/mschn/wissl/blob/722e6f400085f7aeb5945835c02ba7311fa6d20d/src/fr/msch/wissl/server/REST.java][addSongsToPlaylist][2] = -> TRY {  -> t1=System.nanoTime()@ -> log(sess,t1,)@ } CATCH(SQLException,SecurityError,ForbiddenException,NotFoundException) {}
results[https://github.com/jonatas/mktc-platform/blob/747047bec58594e730ae5d382609faf79a24f85f/source/core/src/test/java/org/marketcetera/marketdata/MockMarketDataFeedCredentials.java][<init>][2] = -> TRY {  -> <init>("http://url-"+System.nanoTime(),)@ } CATCH(FeedException) {}
results[https://github.com/tpietzsch/jAER/blob/5b267dfe28e178b4de0644c4ed2817b02b1ede3a/host/java/src/ch/unizh/ini/jaer/projects/tobi/goalie/Goalie.java][startLogging][2] = -> TRY { -> startLoggingTime=System.nanoTime()@ } CATCH(IOException) { -> ex.printStackTrace()@ }
results[https://github.com/sk89q/commandhelper/blob/deaa467aedc3f6d7fcb14b4208e5b44c24a50e84/src/main/java/com/laytonsmith/aliasengine/functions/Scheduling.java][exec][2] = -> TRY {  -> return new CInt(System.nanoTime(),line_num,f,)@ } CATCH(CancelCommandException,ConfigRuntimeException) {}
results[https://github.com/sk89q/commandhelper/blob/2074cb76e2d5d93edd38b345626fcceffcfc670b/src/main/java/com/laytonsmith/core/functions/Scheduling.java][exec][1] = -> TRY {  -> return new CInt(System.nanoTime(),t,)@ } CATCH(CancelCommandException,ConfigRuntimeException) {}
results[https://github.com/HidemotoNakada/cassandra-udf/blob/7a6fbc1b22a099abe368b786e9933fb5d980c329/src/java/org/apache/cassandra/cli/CliClient.java][executeList][2] = -> TRY {  -> startTime=System.nanoTime()@ -> elapsedTime(startTime,)@ } CATCH(TException,InvalidRequestException,NotFoundException,IllegalAccessException,InstantiationException,NoSuchFieldException,UnavailableException,TimedOutException,CharacterCodingException) {}
results[https://github.com/boundlessgeo/geotools-2.7.x/blob/5d155caeadb700bf421bd46149bdea1f1b6c5cd6/modules/plugin/imagemosaic/src/main/java/org/geotools/gce/imagemosaic/catalogbuilder/CatalogBuilder.java][<init>][3] = -> TRY {  -> this.transaction=new DefaultTransaction("MosaicCreationTransaction"+System.nanoTime(),)@ } CATCH(IOException) {}
results[https://github.com/forcedotcom/SalesforceMobileSDK-Android/blob/aeb022c9a1082ef038801fedaea2dd92a48585d4/libs/test/SalesforceSDKTest/src/com/salesforce/androidsdk/rest/RestClientTest.java][testCreate][3] = -> TRY {  -> newAccountName=ENTITY_NAME_PREFIX+System.nanoTime()@ -> fields.put("name",newAccountName,)@ } CATCH(Exception) {}
results[https://github.com/Jasig/cas/blob/284e753070bea7ada8ab97ebd8016679df296c17/cas-server-core/src/test/java/org/jasig/cas/authentication/PolicyBasedAuthenticationManagerTests.java][newMockHandler][1] = -> TRY {  -> return newMockHandler("MockAuthenticationHandler"+System.nanoTime(),success,)@ } CATCH(Exception) {}
results[https://github.com/bcoverston/apache-hosted-cassandra/blob/dd8a3c45072efbc0fea14e98552b4b5a9dab9de3/src/java/org/apache/cassandra/cli/CliClient.java][executeDelete][2] = -> TRY {  -> startTime=System.nanoTime()@ -> elapsedTime(startTime,)@ } CATCH(TException,InvalidRequestException,UnavailableException,TimedOutException) {}
results[https://github.com/darkyellow/DarkYellowEngine/blob/9a9096171562aae2a47063023c22d4f83013b604/com/darkyellow/engine/graphics2d/component/movie/Movie.java][initialise][1] = -> TRY {  -> tickDiff=(long) 1000000000/ffmpeg.getFramerate()@ -> nextGameTick=System.nanoTime()+tickDiff@ } CATCH(DarkYellowLinkedException,DarkYellowException) {}
results[https://github.com/kephale/brevis/blob/fda1933ade9d852f28d4cbf8957f47388b8a07aa/java/brevis/Engine.java][initWorld][1] = -> TRY { -> startWallTime=System.nanoTime()@ } FINALLY { -> lock.unlock()@ }
results[https://github.com/HidemotoNakada/cassandra-udf/blob/7a6fbc1b22a099abe368b786e9933fb5d980c329/src/java/org/apache/cassandra/cli/CliClient.java][doSlice][2] = -> TRY {  -> startTime=System.nanoTime()@ -> elapsedTime(startTime,)@ } CATCH(InvalidRequestException,UnavailableException,TimedOutException,TException,IllegalAccessException,NotFoundException,InstantiationException,NoSuchFieldException) {}
results[https://github.com/rabbitmq/rabbitmq-java-client/blob/679f2e4db54ff5390c46266afd19dae9f6667469/test/src/com/rabbitmq/examples/perf/Producer.java][createMessage][2] = -> TRY {  -> nano=System.nanoTime()@ -> d.writeLong(nano,)@ } CATCH(IOException) {}
results[https://github.com/chgenly/experiment/blob/aa6c3133aed6a79228d693dc989faffac9288d19/DataExtractionOSM/src/net/osmand/binary/BinaryRouteDataReader.java][searchRoute][1] = -> TRY {  -> startNanoTime=System.nanoTime()@ -> return prepareResult(ctx,start,end,startNanoTime,finalRoute,)@ } CATCH(IOException) {}
results[https://github.com/bcoverston/apache-hosted-cassandra/blob/dd8a3c45072efbc0fea14e98552b4b5a9dab9de3/src/java/org/apache/cassandra/cli/CliClient.java][executeSet][2] = -> TRY {  -> startTime=System.nanoTime()@ -> elapsedTime(startTime,)@ } CATCH(TException,InvalidRequestException,UnavailableException,TimedOutException,NoSuchFieldException,InstantiationException,IllegalAccessException) {}
results[https://github.com/nglazyrin/chordest/blob/24f754151a6a8d6b132913697df2ffe30788cb3d/msdchallenge/src/main/java/msdchallenge/query/QueryEvaluator.java][printGraphQueryResult][1] = -> TRY {  -> queryEnd=System.nanoTime()@ -> log(rows+" result(s) in "+queryEnd-queryBegin/1000000+"ms.",)@ } CATCH(QueryEvaluationException,Exception) {}
results[https://github.com/BaseXdb/basex/blob/5ad7695b0dc780dc7cd6496c27ad96ebd760bec7/src/main/java/org/basex/query/func/FNProf.java][item][2] = -> TRY {  -> return Int.get(System.nanoTime(),)@ } CATCH(QueryException) {}
results[https://github.com/wuxiang/language/blob/ecf58ab66015ce16cf0656e4e5fb81845aba5fa2/zguide/examples/Java/lpserver.java][main][6] = -> TRY {  -> rand=new Random(System.nanoTime(),)@ } CATCH(Exception) {}
results[https://github.com/jitsi/libjitsi/blob/ec4e13012fc0d2e39a8c67e153f1a98b91b1fd04/src/org/jitsi/impl/neomedia/jmfext/media/protocol/maccoreaudio/MacCoreaudioStream.java][read][1] = -> TRY {  -> bufferTimeStamp=System.nanoTime()@ -> buffer.setTimeStamp(bufferTimeStamp,)@ } CATCH(IOException) {}
results[https://github.com/dweiss/lucene_solr/blob/936f6431f476a81a16910aca20cbe9af1af6cfa4/lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter.java][replaceTaxonomy][1] = -> TRY {  -> createTime=Long.toString(System.nanoTime(),)@ } CATCH(IOException) {}
results[https://github.com/caiusb/gitsvn/blob/d2b016693e2f25726e854de90d7f3e6bef6101f1/infra/src/edu/illinois/gitsvn/infra/RepositoryCrawler.java][cloneRepo][1] = -> TRY {  -> cloneDirName="repos/clone"+System.nanoTime()@ -> cloneDir=new File(cloneDirName,)@ } CATCH(GitAPIException,InvalidRemoteException,TransportException) {}
results[https://github.com/Amooti/SensorStream/blob/15e8debd8b6f8738ad979031aab56815e70f72a4/Sensor/src/main/java/nl/wes/communication/SensorServerHandler.java][messageSent][1] = -> TRY {  -> timeTracker.sentObservation((String) message,System.nanoTime(),)@ } CATCH(Exception) {}
results[https://github.com/nearinfinity/blur/blob/87986f32ec1cb113ad021f743d42e11d524768d6/src/blur-core/src/main/java/com/nearinfinity/blur/manager/writer/TransactionRecorder.java][open][1] = -> TRY {  -> lastSync.set(System.nanoTime(),)@!(fileSystem.exists(walPath,)) } CATCH(IOException) {}
results[https://github.com/madhusudancs/asterixdb/blob/677206dbf5c35d9c7f8b26e9a3846304865484e1/asterix-events/src/main/java/edu/uci/ics/asterix/event/driver/EventDriver.java][prepare][1] = -> TRY {  -> scriptDirSuffix=""+System.nanoTime()@ -> args.add(scriptDirSuffix,)@ } CATCH(IOException,InterruptedException) {}
results[https://github.com/tumblr/jumblr/blob/31bd6f83359d9dfb9b9e37ccdc397e7db3fda35d/src/main/java/com/tumblr/jumblr/request/MultipartConverter.java][<init>][1] = -> TRY {  -> this.boundary=Long.toHexString(System.nanoTime(),)@ } CATCH(IOException) {}
results[https://github.com/justayak/emc/blob/07954b85054eeeb9c0b5d55cddd1e47e225de65b/src/emc/Game.java][afterDraw][1] = -> TRY { -> sleep=lastLoopTime-System.nanoTime()+OPTIMAL_TIME/1000000@ -> IF { -> Thread.sleep(sleep,)@sleep>0 } }
results[https://github.com/tjhickey724/fishgame/blob/ca21f9f815de27ae31a6a6335ac6f85ffb2c45a7/src/game/GameModel.java][writeToLog][1] = -> TRY { -> theTime=System.nanoTime()-this.gameStart@ } CATCH(Exception) { -> System.out.println("Error writing to log "+e,)@ }
results[https://github.com/rlgomes/dtf/blob/b5379f9427efa791e0fe1186ef4174913d7321c0/src/java/com/yahoo/dtf/range/RandomListRange.java][<init>][1] = -> TRY {  -> _rand=new Random(System.nanoTime(),)@ } CATCH(RangeException) {}
results[https://github.com/sangamon/sneer/blob/2604d54ac54c7030b7ae1a753370e42187dde4f2/code/src/sneer/bricks/expression/files/tests/FileCopyTestBase.java][zeroLengthFile][2] = -> TRY {  -> return createTmpFile("tmp"+System.nanoTime(),)@ } CATCH(IOException) {}
results[https://github.com/NCIP/cagrid-grid-incubation/blob/b4240fd15c8e4540e7d4d77c616c6b51f6a69828/grid-incubation/incubator/projects/caOS/projects/workflowHelper/src/org/cagrid/workflow/helper/instrumentation/InstrumentationRecord.java][eventStart][1] = -> TRY {  -> startTime=System.nanoTime()@ -> record.setStartTime(startTime,)@ } CATCH(Exception) {}
results[https://github.com/apache/jackrabbit-oak/blob/c2dfcc516a982f7317c9fc90fb767583a36d8574/oak-solr-remote/src/test/java/org/apache/jackrabbit/oak/plugins/index/solr/http/RemoteSolrServerProviderIT.java][canCreateCollections][1] = -> TRY {  -> solrCollection="solr_"+System.nanoTime()@ -> req.setParam("name",solrCollection,)@ } CATCH(Exception) {}
results[https://github.com/exoego/Queen/blob/5085cda23f6d2c4ef18c497e6f93e5cc655393fd/test/net/exoego/function/OnFileTest.java][createFiles][1] = -> TRY {  -> relativeNonExist=new File("./relative"+System.nanoTime()+".txt",)@ } CATCH(IOException) {}
results[https://github.com/mceier/trafficsim/blob/47eb8aa7a81f7987ad52e571c79f357423adf5cc/simulation/src/trafficsim/network/ConnectionInfo.java][<init>][1] = -> TRY {  -> this.setLastUpdate(System.nanoTime(),)@ } CATCH(IOException) {}
results[https://github.com/hobinyoon/faban-src/blob/c687fdead415cc93856cc0dd67817c9da777aed4/driver/src/com/sun/faban/driver/engine/AgentThread.java][waitStartTime][1] = -> TRY { -> delay=agent.startTime-System.nanoTime()@ } CATCH(InterruptedException) { -> throw new FatalException(e,)@ }
results[https://github.com/facebook/hive-io-experimental/blob/206a875bd4b9ed657fe7ff07dd0e33652c2ba307/hive-io-exp-core/src/main/java/com/facebook/hiveio/output/HiveOutput.java][writeTable][1] = -> TRY {  -> uniqueId=System.nanoTime()@ -> taskAttemptIdStr="attempt_200707121733_"+(int) uniqueId+"_m_000005_0"@ -> profile=Long.toString(uniqueId,)@ } CATCH(TException,IOException,InterruptedException) {}
results[https://github.com/darkyellow/DarkYellowEngine/blob/8c7dd2074c4e57d5b2ec36d07fc7a7017e50d8e3/com/darkyellow/engine/world/animation/Skeleton.java][animate][1] = -> TRY {  -> animationManager.animate(System.nanoTime(),)@ } CATCH(AnimationEndException) {}
results[https://github.com/jjedele/Multicast-Testing-Tool/blob/9aafbe0c70f714a79389ba21f9dc3162c49ac5a2/engineering_documents_german/MCTOOL/src/main/java/com/spam/mctool/model/Sender.java][run][2] = -> TRY { -> nowSent=System.nanoTime()@ -> IF { -> this.sentTimes.enqueue((int) nowSent-lastSent,)@ } }
results[https://github.com/rjeschke/neetutils-base/blob/2d900008c9e5b51a8832af7c98d8173bbdc40edf/src/main/java/com/github/rjeschke/neetutils/Timer.java][run][1] = -> t0=System.nanoTime()@ -> TRY { -> LOOP { -> t1=System.nanoTime()-t0@ } }
results[https://github.com/radlab/sparrow/blob/e931f47106bd6b974d7642225df9035bc6fc98ea/src/main/java/edu/berkeley/sparrow/examples/ThriftPongClient.java][onComplete][1] = -> TRY { -> System.out.println("Took: "+System.nanoTime()-t0/1000.0*1000.0+"ms",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/tprk77/lcm-gitified/blob/55b932abceb4fd7253d6298068772a70f09f841f/lcm-java/lcm/lcm/LogFileProvider.java][<init>][1] = -> TRY {  -> IF { -> nanotime_start=System.nanoTime()@ } } CATCH(IOException) {}
results[https://github.com/x03570227/zzapp/blob/a7e3bf3eb9766e3651ceab4a43f9dedc855a82ee/zz91-log/src/main/java/com/zz91/log/thread/TrackingThreadPool.java][afterExecute][1] = -> TRY { -> endTime=System.nanoTime()@ -> taskTime=endTime-startTime.get()@ } FINALLY { -> super.afterExecute(r,t,)@ }
