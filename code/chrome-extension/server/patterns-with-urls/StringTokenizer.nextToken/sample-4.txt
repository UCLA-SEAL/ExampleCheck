results[https://github.com/NCIP/catissue-dynamic-extensions/blob/e808738c3046f983f107de596c0fb43f2cb87825/software/DynamicExtentions/src/java/edu/common/dynamicextensions/xmi/importer/XMIImportProcessor.java][getSecondLastToken][24] = -> LOOP { -> token=tokenizer.nextToken()@tokenizer.hasMoreTokens() }
results[https://github.com/idega/se.idega.idegaweb.commune.block.importer/blob/869c74d28314575c843dbfbb680bf35b035c6630/src/java/se/idega/idegaweb/commune/block/importer/business/NackaImportBusinessBean.java][getValueAtIndexFromNameString][99] = -> tokens=new StringTokenizer(name,)@ -> LOOP { -> value=tokens.nextToken()@tokens.hasMoreTokens()&&i<=index }
results[https://github.com/pasonu-soupe/soupe-eclipse/blob/61979ce6f4ed7def6782de21e9e1f2e72129d9fa/soupe-expert-eclipse/src/main/java/org/drools/eclipse/editors/completion/DSLTree.java][addTokens][9] = -> LOOP { -> newnode=thenode.addToken(tokens.nextToken(),)@tokens.hasMoreTokens() }
results[https://github.com/kambatla/hadoop-1/blob/2e22c750647f006e7ecdc8b009478c8eae5b6ccc/src/test/org/apache/hadoop/cli/util/TokenComparator.java][compare][258] = -> tokenizer=new StringTokenizer(expected,",\n\r",)@ -> LOOP { -> token=tokenizer.nextToken()@tokenizer.hasMoreTokens() }
results[https://github.com/eclipse/mtj/blob/0475780fe4000ed5c2fb991f1116b0b111f84b61/tags/1.1RC4/plugins/org.eclipse.mtj.core/src/org/eclipse/mtj/internal/core/project/midp/ApplicationDescriptor.java][<init>][41] = -> st=new StringTokenizer(definitionString,",",true,)@ -> LOOP { -> token=st.nextToken()@st.hasMoreTokens() }
results[https://github.com/bobmcwhirter/drools/blob/e0f1bcf6ee9a309541ddbea9671875f01e0a360f/drools-guvnor/src/main/java/org/drools/guvnor/server/util/ClassicDRLImporter.java][laConsumeToEnd][4] = -> LOOP { -> line=lines.nextToken()@true&&lines.hasMoreTokens() -> currentRule.append(line,)@ }
results[https://github.com/DevBoost/EMFText/blob/33f75295cd7a22f5c9e868ce2bc83eb71e63454e/Deprecated/org.emftext.sdk.antlr/src-sdk/antlr/NameSpace.java][parse][1] = -> tok=new StringTokenizer(name,"::",)@ -> LOOP { -> names.addElement(tok.nextToken(),)@tok.hasMoreTokens() }
results[https://github.com/apache/etch/blob/dcdf8c9fb4794ba080b83b414c7758519dc7a22f/compiler/src/main/java/org/apache/etch/compiler/ast/Named.java][checkModuleName][1] = -> st=new StringTokenizer(name.name,".",)@ -> LOOP { -> ok=startsWithLower(st.nextToken(),)@ok&&st.hasMoreTokens() }
results[https://github.com/iBot/HAW_SS13_AI/blob/645024421e2bd723a7fd411aa734886db0b375b8/code/HES/lib/dom4j-1.6.1/src/java/org/dom4j/tree/AbstractBranch.java][getTextTrim][2] = -> tokenizer=new StringTokenizer(text,)@ -> LOOP { -> str=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> textContent.append(str,)@ }
results[https://github.com/demoiselle/laboratory/blob/4d7d31372293a9c61e4c3f3ea91aac366f967b9c/eventos-demoiselle-portlet/docroot/WEB-INF/src/br/gov/demoiselle/portal/evento/util/Util.java][stringTokenizerToList][1] = -> lista=new ArrayList<String>()@ -> LOOP { -> lista.add(stringTokenizer1.nextToken(),)@stringTokenizer1.hasMoreTokens() }
results[https://github.com/allardhoeve/pcgen-multiline-objects/blob/62294839b1954659200382090e58f281111d3d5c/pcgen/code/src/java/plugin/lsttokens/gamemode/HiddenskilltypesToken.java][parse][2] = -> st=new StringTokenizer(value,Constants.PIPE,)@ -> LOOP { -> gameMode.addHiddenType(Skill.class,st.nextToken(),)@st.hasMoreTokens() }
results[https://github.com/teiid/teiid/blob/8273d9399fefe6c592473d5cb668a4b24f5ab7ff/common-core/src/main/java/com/metamatrix/core/util/StringUtil.java][collapseWhitespace][14] = -> izer=new StringTokenizer(raw," ",)@ -> LOOP { -> tok=izer.nextToken()@izer.hasMoreTokens() -> rv.append(tok,)@ }
results[https://github.com/amal029/jop/blob/7598113600ea49f6723c46a5a48566f74a14a756/java/tools/src/com/jopdesign/wcet/WCETAnalyser.java][prepare][11] = -> st=new StringTokenizer(wca.srcPath,File.pathSeparator,)@ -> LOOP { -> srcDir=st.nextToken()@st.hasMoreTokens() -> sDir=new File(srcDir,)@ }
results[https://github.com/apache/cayenne/blob/c8d19e06cab94f3efe0139e41b44b514dab031a7/framework/cayenne-core-unpublished/src/main/java/org/apache/cayenne/query/PrefetchTreeNode.java][getNode][3] = -> toks=new StringTokenizer(path,Entity.PATH_SEPARATOR,)@!(Util.isEmptyString(path,)) -> LOOP { -> segment=toks.nextToken()@!(Util.isEmptyString(path,)) && toks.hasMoreTokens()&&node!=null -> node=node.getChild(segment,)@!(Util.isEmptyString(path,)) && toks.hasMoreTokens()&&node!=null }
results[https://github.com/bogeblad/infoglue/blob/c733024418c49996c56bfc6ef659c365d7fb771d/src/java/org/infoglue/cms/applications/structuretool/actions/ViewMultiSelectStructureTreeForServiceBindingAction.java][parseQualifyers][2] = -> st=new StringTokenizer(qualifyerString,",",)@ -> LOOP { -> next=st.nextToken()@st.hasMoreTokens() -> qualifyerVO.setValue(next,)@ }
results[https://github.com/zycgit/hasor/blob/0a17c2a3196bae318cfab0e903be860ef5521e40/src/hasor-jetty/src/main/java/org/apache/jasper/JspC.java][setJspFiles][71] = -> tok=new StringTokenizer(jspFiles," ,",)@ -> LOOP { -> pages.add(tok.nextToken(),)@tok.hasMoreTokens() }
results[https://github.com/panbasten/BA/blob/79bfeb4e4a713119961a9db63c30b0e66897e6db/kettle/kettle-ui/src/main/java/org/pentaho/di/ui/spoon/wizards/RipDatabaseWizardPage2.java][drop][2] = -> strtok=new StringTokenizer((String) event.data,Const.CR,)@ -> LOOP { -> source=strtok.nextToken()@strtok.hasMoreTokens() -> addToDestination(source,)@ }
results[https://github.com/marcel-valdez/tesis/blob/98a193ee694994dbdf560a749afb060f048a8a0b/benchmarking/iPlasma6/lrg/memoria/importer/recoder/JavaModelLoader.java][addJars][1] = -> st=new StringTokenizer(pathList,File.pathSeparator,)@ -> LOOP { -> currentLibraryPath=st.nextToken()@st.hasMoreTokens() -> newClassPath=newClassPath+File.pathSeparator+findAllJarsFromPath(currentLibraryPath,)@ }
results[https://github.com/jstroem/TAPY/blob/8e693b5ffdc7bb059abc1ebe2aca3972774ec34b/lib/jython-2.7-b1/src/org/python/core/PyJavaPackage.java][addPlaceholders][4] = -> tok=new StringTokenizer(classes,",@",)@ -> LOOP { -> p=tok.nextToken()@tok.hasMoreTokens() -> name=p.trim().intern()@ }
results[https://github.com/jgzornoza/SistemaVotacion/blob/161b6e54ca97f210962ca7a341dd2ba745c541a4/VotingToolAndroidProject/libraries/bc/src/main/java/org/bouncycastle2/asn1/x509/GeneralName.java][parseIPv4][8] = -> sTok=new StringTokenizer(ip,"./",)@ -> LOOP { -> addr[offset+++index]=(byte) Integer.parseInt(sTok.nextToken(),)@sTok.hasMoreTokens() }
results[https://github.com/SysFera/GoDIET/blob/4c29ac329977f8f81a923270adc1707ed3f0e2cc/src/main/java/Utils/OptionChecker.java][getObjectClass][2] = -> strTok=new StringTokenizer(class_name,".",)@ -> nb=strTok.countTokens()@ -> LOOP { -> name=strTok.nextToken()@strTok.hasMoreTokens() }
results[https://github.com/wubs/485-Project/blob/3686f123d2fdaf434afa9e50a50e424a71d515b4/pa6/hadoop/src/test/org/apache/hadoop/cli/util/RegexpComparator.java][compare][15] = -> tokenizer=new StringTokenizer(actual,"\n\r",)@ -> LOOP { -> actualToken=tokenizer.nextToken()@tokenizer.hasMoreTokens()&&!(success) -> m=p.matcher(actualToken,)@ }
results[https://github.com/boundlessgeo/geotools-2.7.x/blob/e4cbf0e2734e331f4b0c19cfdc83e357b4b804dd/modules/library/metadata/src/main/java/org/geotools/io/TableWriter.java][nextColumn][2] = -> tk=new StringTokenizer(cellText,"\r\n",)@ -> LOOP { -> lg=tk.nextToken().length()@tk.hasMoreTokens() }
results[https://github.com/hongxucn/platform_external_bouncycastle/blob/ee2f1d02b1874ed3ec7f8575130b3232a0fb7a45/src/main/java/org/bouncycastle/jce/ProviderConfigurationPermission.java][calculateMask][9] = -> tok=new StringTokenizer(Strings.toLowerCase(actions,)," ,",)@ -> LOOP { -> s=tok.nextToken()@tok.hasMoreTokens() }
results[https://github.com/bslund/jetty-maven-plugin/blob/271368ce6816514def52e420e4bd9e40c4eb0b85/modules/server/jetty/src/main/java/org/mortbay/xml/XmlParser.java][setXpath][14] = -> tok=new StringTokenizer(xpath,"| ",)@ -> LOOP { -> _xpaths=LazyList.add(_xpaths,tok.nextToken(),)@tok.hasMoreTokens() }
results[https://github.com/Unidata/thredds/blob/772e2bb286561b319672257dd9994f72bf0ef1ef/ui/src/main/java/ucar/nc2/ui/DatasetWriter.java][setChunkSize][1] = -> stoke=new StringTokenizer(chunkSize,"(), ",)@ -> LOOP { -> this.chunked[++count]=Long.parseLong(stoke.nextToken(),)@stoke.hasMoreTokens() }
results[https://github.com/opower/itext/blob/25394a847a88b77d3b0df2fb5b3483cb4264f34b/src/core/com/lowagie/text/html/simpleparser/HTMLWorker.java][<clinit>][4] = -> tok=new StringTokenizer(tagsSupportedString,)@ -> LOOP { -> tagsSupported.put(tok.nextToken(),null,)@tok.hasMoreTokens() }
results[https://github.com/geosolutions-it/geoserver-enterprise/blob/be2a1d28eaa783c4fc03356ca82a14dba34f7d2d/src/wfs/src/test/java/org/geoserver/wfs/v1_1/WFSReprojectionWriteTest.java][posList][2] = -> st=new StringTokenizer(string," ",)@ -> LOOP { -> coordinates[++i]=Double.parseDouble(st.nextToken(),)@st.hasMoreTokens() }
results[https://github.com/MobilizeLabs/ohmage/blob/8325369199b662a94622b0c7452f6d3b1bcb23fe/src/projects/ohmage-mwf/android/assets/www/tools/rhino1_7R4/src/org/mozilla/javascript/serialize/ScriptableOutputStream.java][lookupQualifiedName][10] = -> st=new StringTokenizer(qualifiedName,".",)@ -> LOOP { -> s=st.nextToken()@st.hasMoreTokens() -> result=ScriptableObject.getProperty((Scriptable) result,s,)@ }
results[https://github.com/kastork/simkit-mirror/blob/1a67b1090cdd2a10a0c8f38faa0341aa69147b06/Launch4j/src/net/sf/launch4j/Builder.java][add][16] = -> st=new StringTokenizer(s,)@ -> LOOP { -> _cmd.add(st.nextToken(),)@st.hasMoreTokens() }
results[https://github.com/pietermartin/umlg/blob/c30ceebc7425c46e3437aaa07b2cef297109656e/framework/java-metamodel/src/main/java/org/umlg/java/metamodel/OJPathName.java][<init>][1] = -> st=new StringTokenizer(name,".",)@ -> LOOP { -> this.addToNames(st.nextToken(),)@st.hasMoreTokens() }
results[https://github.com/int3/jython/blob/010b08182f00962e43a0c1efcd1d16d34a1e1750/src/org/python/core/PySystemState.java][initBuiltins][3] = -> tok=new StringTokenizer(builtinprop,",",)@ -> LOOP { -> addBuiltin(tok.nextToken(),)@tok.hasMoreTokens() }
results[https://github.com/KenMacD/ted-orig/blob/b943e10ef9d15a339a9d89bf1964a4f6200b2257/src/main/java/ted/ui/TimedOptionPane.java][<init>][2] = -> tokenizer=new StringTokenizer(message,"\n",)@ -> LOOP { -> token=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> messageLabel=new JLabel(token,)@ }
results[https://github.com/aptana/Pydev/blob/a87ccdb450e578574d15716e8d897cbbd2792ec1/plugins/org.python.pydev.jython/src_jython/org/python/core/SysPackageManager.java][addJarPath][2] = -> tok=new StringTokenizer(path,java.io.File.pathSeparator,)@ -> LOOP { -> entry=tok.nextToken()@tok.hasMoreTokens() -> addJarDir(entry,true,false,)@ }
results[https://github.com/ebayopensource/turmeric-security/blob/67b1eb48f19ac1b3def1fe3309a142be975afb54/integration-tests/PolicyTests/src/test/java/org/ebayopensource/turmeric/policyservice/subjectgroup/FindSubjectGroupTests.java][constructCreateSubjectRequest][2] = -> subjListTokens=new StringTokenizer(subjectsTokens,"&",)@ -> LOOP { -> token=subjListTokens.nextToken()@subjListTokens.hasMoreTokens() -> subjTokens=new StringTokenizer(token,":",)@ }
results[https://github.com/eclipse/dltk.core/blob/318136a4bd29e27c0191be0bc33c62669da7751c/core/plugins/org.eclipse.dltk.ui/src/org/eclipse/dltk/ui/MembersOrderPreferenceCache.java][fillCategoryOffsetsFromPreferenceString][5] = -> tokenizer=new StringTokenizer(str,",",)@ -> LOOP { -> token=tokenizer.nextToken().trim()@tokenizer.hasMoreTokens() }
results[https://github.com/insidepower/eclipseandroid/blob/d366e5cfe5d3b7a79a04e0d575cdddbf5cd839bb/android-tutorial/javatest/SplitInsertTest.java][mytoken][1] = -> st=new StringTokenizer(mystr,"。",)@ -> LOOP { -> System.out.print(st.nextToken()+"\n",)@st.hasMoreTokens() }
results[https://github.com/NCIP/caadapter/blob/a4201cf08dba94a1371d3db4661a5f2efe77dbe9/software/caadapter/src/java/gov/nih/nci/caadapter/common/metadata/XsdUtil.java][reversePackageName][1] = -> tokens=new StringTokenizer(uriName,".",)@!(uriName.indexOf(".",)<0) -> LOOP { -> tokenValue=tokens.nextToken()@!(uriName.indexOf(".",)<0) && tokens.hasMoreTokens() -> sb.insert(0,"."+tokenValue,)@!(uriName.indexOf(".",)<0) }
results[https://github.com/ChrisLundquist/CS143-Project/blob/c3a45b8889cd6932681320e484ed1d3dc5408574/src/graphics/WavefrontObjLoader.java][readVertex][1] = -> LOOP { -> value=Float.parseFloat(tokenizer.nextToken(),)@tokenizer.hasMoreTokens() -> vertex.add(value,)@ }
results[https://github.com/leif81/open-dis-maven/blob/83147ccb760d3d6f2e60a01b2d06f7fdc4049910/xmlpg/trunk/src/edu/nps/moves/xmlpg/JavaGenerator.java][writeImports][2] = -> tokenizer=new StringTokenizer(imports,", ",)@ -> LOOP { -> aPackage=(String) tokenizer.nextToken()@tokenizer.hasMoreTokens() -> pw.println("import "+aPackage+";",)@ }
results[https://github.com/genepi/pig-gene/blob/9f53e4a3dfdbfb2cfcbea8ea494e3065f7f12b89/AuswertTestdat/lib/pig_src/org/apache/pig/impl/PigContext.java][initializeImportList][2] = -> tokenizer=new StringTokenizer(importListCommandLineProperties,":",)@ -> LOOP { -> importItem=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> importList.add(pos,importItem,)@ }
results[https://github.com/eduardodaluz/xfire/blob/ebffeed5dba5f022dd3bfa58eed519816ce8dcd1/xfire-generator/src/main/org/codehaus/xfire/gen/documentation/DocumentationConfigGen.java][createOutputFolders][1] = -> tokenizer=new StringTokenizer(path,".",)@ -> LOOP { -> folder=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> pathLevel=addSubfolder(pathLevel,folder,)@ }
results[https://github.com/eclipse/eclipse.platform.team/blob/9acae06ee966818e996b595e44a051b9de217b2c/bundles/org.eclipse.team.core/src/org/eclipse/team/internal/core/TeamPlugin.java][getPaths][1] = -> t=new StringTokenizer(metaFilePaths,",",)@ -> LOOP { -> next=t.nextToken()@t.hasMoreTokens() -> path=new Path(null,next,)@ }
results[https://github.com/stlanger/Docear/blob/465b591e7d42c9f65deee3c2814be07f1ba93f10/freeplane/src/org/freeplane/features/mindmapmode/export/ExportWithXSLT.java][copyFilesFromResourcesToDirectory][1] = -> tokenizer=new StringTokenizer(files,",",)@ -> LOOP { -> next=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> FileUtils.copyFromResource(filePrefix,next,destinationDirectory,)@ }
results[https://github.com/jogetworkflow/jw-community/blob/e1f1eb89592ccfcbcb0352fba736c08319e18386/wflow-consoleweb/src/main/java/org/joget/apps/app/controller/ConsoleWebController.java][consoleFormDelete][1] = -> strToken=new StringTokenizer(formId,",",)@ -> LOOP { -> id=strToken.nextToken()@strToken.hasMoreTokens() -> formDefinitionDao.delete(id,appDef,)@ }
results[https://github.com/secondmarket/SecondMarket-NYU-Spring-2012/blob/394cdf4a7c5fecad221c19b21a7ee4d766e84c0f/src/main/java/com/secondmarket/properties/XMLPropertyLoader.java][eccape][6] = -> tokenizer=new StringTokenizer(string,OPEN_TAG+CLOSE_TAG+QUOTE,true,)@ -> LOOP { -> token=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> buffer.append(token,)@ }
results[https://github.com/spring-projects/spring-hadoop/blob/ebc156d60b7c2ffdd449521cfa26dabc83f9ecb8/src/test/java/org/springframework/hadoop/test/word/PojoConfiguration.java][map][1] = -> itr=new StringTokenizer(value,)@ -> LOOP { -> writer.put(itr.nextToken(),1,)@itr.hasMoreTokens() }
results[https://github.com/sakai-mirror/metaobj/blob/c564fffe7f75fc9c76c9c63b618fd920d858d47b/metaobj-util/tool-lib/src/java/org/sakaiproject/metaobj/shared/control/XsltArtifactView.java][replaceNodes][1] = -> st=new StringTokenizer(sessionBean.getCurrentPath(),"/",)@ -> LOOP { -> schemaName=st.nextToken()@st.hasMoreTokens() }
results[https://github.com/svn2github/fleXive/blob/c862e33da58cec5117fb5d09d4aa32cb8e1437b8/src/framework/java/com/flexive/extractor/htmlExtractor/HtmlExtractor.java][extract][1] = -> st=new StringTokenizer(result.toString()," ",false,)@ -> LOOP { -> st.nextToken()@st.hasMoreTokens() }
results[https://github.com/jomat/psyced/blob/4e601cf1c725538d1d2c067e841c07fa72cf07fb/utility/veChat.java][wrapsay][1] = -> st=new StringTokenizer(t,)@ -> LOOP { -> token=st.nextToken()@st.hasMoreTokens() -> sw=fm.stringWidth(token,)@ }
results[https://github.com/ninesunqian/excitedmind/blob/6fb18dda13c849abd22d1591b18b2a3a60963cf3/prefuse/src/main/java/prefuse/data/search/PrefixSearchTupleSet.java][unindex][1] = -> st=new StringTokenizer(s,m_delim,)@!((s=t.getString(field,))==null) -> LOOP { -> tok=st.nextToken()@!((s=t.getString(field,))==null) && st.hasMoreTokens() -> removeString(tok,t,)@!((s=t.getString(field,))==null) }
results[https://github.com/geotools/geotools/blob/49ba262b7c7f80e9c2c5dfb95997d5d32314edf6/modules/extension/graph/src/test/java/org/geotools/graph/build/polygon/PolygonGraphGeneratorTest.java][createPolygon][9] = -> tokens=new StringTokenizer(coordinates,",",)@ -> LOOP { -> token=tokens.nextToken()@tokens.hasMoreTokens() -> oordinates=token.split(" ",)@ }
results[https://github.com/evanchsa/eik/blob/2838e2e273d604f02d8810340fe9bcdbc7681c73/plugins/info.evanchik.eclipse.felix/src/main/java/info/evanchik/eclipse/felix/internal/FelixLaunchHelper.java][getBundles][1] = -> tok=new StringTokenizer(source,",",)@ -> LOOP { -> bundle=tok.nextToken()@tok.hasMoreTokens() -> entry=BundleEntry.fromString(bundle,)@ }
results[https://github.com/eclipse/eclipse.platform.ua/blob/0906262aca635cce66ad5c69ac4b3b49ae49aa9f/org.eclipse.help.webapp/src/org/eclipse/help/internal/webapp/data/ToolbarButton.java][getMenuData][2] = -> tok=new StringTokenizer(param,",",)@ -> LOOP { -> token=tok.nextToken()@tok.hasMoreTokens() -> index=token.indexOf('=',)@ }
results[https://github.com/hoshino0318/JAVA_TRAINING/blob/58e8572031f01859c5bb91666419119a95937fd5/JPL/ch22/ex22_14/MyStringTokenizer.java][sumString][3] = -> tokens=new StringTokenizer(str," ",)@ -> LOOP { -> sum+=Double.valueOf(tokens.nextToken(),)@tokens.hasMoreTokens() }
results[https://github.com/julianhyde/sqlline/blob/337236aa38a3eb73c6b86033af01c9ac74de6eca/src/sqlline/SqlLine.java][split][3] = -> tok=new StringTokenizer(line,delim,)@ -> LOOP { -> t=tok.nextToken()@tok.hasMoreTokens() -> t=dequote(t,)@ }
results[https://github.com/apache/fop/blob/1c6728eb5a464d582548018a3f94ccc73b871437/src/java/org/apache/fop/svg/SVGUtilities.java][wrapText][1] = -> st=new StringTokenizer(str," \t\r\n",)@ -> LOOP { -> token=st.nextToken()@st.hasMoreTokens() -> strwidth=getStringWidth(token,font,)@ }
results[https://github.com/JohannesBuchner/Jarsync/blob/9bec663a12af1a0d90c071e27ced2a220db1344a/jarsync/src/main/java/org/metastatic/rsync/v2/RsyncUtil.java][sanitizePath][1] = -> tok=new StringTokenizer(path,File.separator,)@ -> LOOP { -> s=tok.nextToken()@tok.hasMoreTokens() -> p.addLast(s,)@ }
results[https://github.com/marcust/j-wings/blob/74b4ef9c6f23d138f8ab7dc6b582332e55c06701/wings2/src/java/org/wings/plaf/css/CaptureDefaultBindingsScriptListener.java][install][1] = -> tokenizer=new StringTokenizer(string,",",)@ -> LOOP { -> token=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> keyStroke=KeyStroke.getKeyStroke(token,)@ }
results[https://github.com/alandbarroso/tcc-rr/blob/824bf1e746a2eea1982b43d3f34cb9323e8fd4b1/robocuprescue2013/Simuladores/roborescue-2013/modules/maps/src/maps/gml/formats/OrdnanceSurveyFormat.java][readEdges][1] = -> tokens=new StringTokenizer(coordinatesString," ",)@ -> LOOP { -> token=tokens.nextToken()@tokens.hasMoreTokens() -> nextApex=new GMLCoordinates(token,)@ }
results[https://github.com/wso2/commons/blob/6adfc623c63fd98791a12e57612156db7d00b67e/ode/bpel-api/src/main/java/org/apache/ode/bpel/pmapi/ProcessInfoCustomizer.java][<init>][3] = -> stok=new StringTokenizer(value,",",false,)@ -> LOOP { -> t=stok.nextToken()@stok.hasMoreTokens() -> i=Item.valueOf(t,)@ }
results[https://github.com/ninesunqian/excitedmind/blob/d802df45949cf98daf4cb7129cc00bdcf4dd70c0/src/prefuse/data/search/PrefixSearchTupleSet.java][index][2] = -> st=new StringTokenizer(s,m_delim,)@!((s=t.getString(field,))==null) -> LOOP { -> tok=st.nextToken()@!((s=t.getString(field,))==null) && st.hasMoreTokens() -> addString(tok,t,)@!((s=t.getString(field,))==null) }
results[https://github.com/allardhoeve/pcgen-multiline-objects/blob/62294839b1954659200382090e58f281111d3d5c/pcgen/code/src/java/plugin/lsttokens/kit/prof/ProfToken.java][parseTokenWithSeparator][1] = -> tok=new StringTokenizer(value,Constants.PIPE,)@ -> LOOP { -> tokText=tok.nextToken()@tok.hasMoreTokens() -> ref=context.ref.getCDOMReference(WEAPONPROF_CLASS,tokText,)@ }
results[https://github.com/allardhoeve/pcgen-multiline-objects/blob/62294839b1954659200382090e58f281111d3d5c/pcgen/code/src/java/plugin/lsttokens/kit/deity/DomainToken.java][parseTokenWithSeparator][1] = -> pipeTok=new StringTokenizer(value,Constants.PIPE,)@ -> LOOP { -> tokString=pipeTok.nextToken()@pipeTok.hasMoreTokens() -> ref=context.ref.getCDOMReference(DOMAIN_CLASS,tokString,)@ }
results[https://github.com/drevicko/MeandreComponentFoundry/blob/438280ca85eb508a4b668d09c16a8458caea50a7/src-apps/org/seasr/meandre/apps/twitter/support/TwitterServices.java][findPattern][1] = -> tokens=new StringTokenizer(sentence,)@ -> LOOP { -> s=tokens.nextToken()@tokens.hasMoreTokens() -> m=pattern.matcher(s,)@ }
results[https://github.com/ninesunqian/excitedmind/blob/6fb18dda13c849abd22d1591b18b2a3a60963cf3/prefuse/src/main/java/prefuse/data/search/PrefixSearchTupleSet.java][search][2] = -> st=new StringTokenizer(m_query,m_delim,)@!(query.equals(m_query,)) -> LOOP { -> prefixSearch(st.nextToken(),)@st.hasMoreTokens() && !(query.equals(m_query,)) }
results[https://github.com/danc86/jena-core/blob/b0a9da7c2143da0dcf5865ca832aa8e18b914c6d/src/test/java/com/hp/hpl/jena/graph/test/GraphTestBase.java][assertOmitsAll][1] = -> semis=new StringTokenizer(s,";",)@ -> LOOP { -> assertOmits(name,g,semis.nextToken(),)@semis.hasMoreTokens() }
results[https://github.com/MiniSEC/adito_reload/blob/a7ab4a61b4ddf74c3887ef5e2f551cb3bbe84e65/adito/branches/nonembedded/ui/src/main/java/com/sshtools/ui/awt/MultilineLabel.java][setText][2] = -> tok=new StringTokenizer(text,"\n",)@ -> LOOP { -> t=tok.nextToken()@tok.hasMoreTokens() -> l=new Label(t,)@ }
results[https://github.com/webx/citrus-tool/blob/dacad3d5e349953e91aa7adbe1ad9ca2105669f4/antx/autoconfig/src/main/java/org/w3c/tidy/Configuration.java][parseBlockTagNames][1] = -> t=new StringTokenizer(s," \t\n\r,",)@ -> LOOP { -> tt.defineBlockTag(t.nextToken(),)@t.hasMoreTokens() }
results[https://github.com/visage-lang/netbeans-plugin/blob/5d0d8dff3f73da832dcd1f4d2ef1e19179e20edc/visage.kit/test/qa-functional/src/qa/visage/functional/editor/JavaCodeFormatingTest.java][normilizeString][1] = -> tokenizer=new StringTokenizer(str,"\n",)@ -> LOOP { -> s=reduceSpaces(tokenizer.nextToken(),)@tokenizer.hasMoreTokens() }
results[https://github.com/akulyakhtin/psy-tests/blob/4fa45fea903973a448cc5253887b17300b6f5dd1/src/main/java/org/akul/psy/engine/KeyReader.java][addNoQuestions][1] = -> LOOP { -> qNo=Integer.valueOf(st.nextToken(),)@st.hasMoreTokens() -> mCurScale.addNoQuestion(qNo,)@ }
results[https://github.com/mccraigmccraig/opennlp/blob/1e2a6340b788acc9dc1c9dbdbd8cb37b7ddf9b96/src/main/java/opennlp/tools/postag/POSEventCollector.java][convertAnnotatedString][2] = -> st=new StringTokenizer(s,)@ -> LOOP { -> p=split(st.nextToken(),)@st.hasMoreTokens() }
results[https://github.com/ChrisLundquist/CS143-Project/blob/af783b724436816c13443e8865c3f837986304b1/src/graphics/core/WavefrontObjLoader.java][setGroup][1] = -> currentGroups=new java.util.ArrayList<String>()@ -> LOOP { -> currentGroups.add(tokenizer.nextToken(),)@tokenizer.hasMoreTokens() }
results[https://github.com/irbull/rt.eclipse.p2/blob/4708e7a9071acf3f000247199e8d666bf11057b9/bundles/org.eclipse.equinox.frameworkadmin.equinox/src/org/eclipse/equinox/internal/frameworkadmin/equinox/EquinoxManipulatorImpl.java][makeArrayAbsolute][2] = -> tokenizer=new StringTokenizer(array,COMMA,)@ -> LOOP { -> token=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> absolute=makeAbsolute(token,rootURL,)@ }
results[https://github.com/cid2105/Cb/blob/c09c170a35131b8a292692b66f7236116d0ee57a/helper/CSV2MIDI/CSV.java][addLineToVector][1] = -> st=new StringTokenizer(str,"\n\r,",true,)@ -> LOOP { -> data.addElement(st.nextToken(),)@st.hasMoreTokens() }
results[https://github.com/wox2/migrace_databaze/blob/fb25813836953fe7831a153ee10fbc2d8a2e74ec/skola/Fel_bc/subversion-1.6.1/subversion/bindings/javahl/src/org/tigris/subversion/javahl/Mergeinfo.java][parseRevisions][1] = -> st=new StringTokenizer(revisions,",",)@ -> LOOP { -> revisionElement=st.nextToken()@st.hasMoreTokens() -> range=new RevisionRange(revisionElement,)@ }
results[https://github.com/afd/symmetrytools/blob/b5a1ee2c72a45ae6ff5f37b15c59b7d41da8f79c/GRIP/src/utilities/StringHelper.java][gapToNauty][1] = -> strtok=new StringTokenizer(gapGenerators,"!\n",)@ -> LOOP { -> result=result+gapToNautyPerm(strtok.nextToken(),)+"\n"@strtok.hasMoreTokens() }
results[https://github.com/magsilva/presley/blob/4d6c0ab876b0fff7a6390bfb405e396c8fffbbbb/code/presley-server/src/experiment/java/ArquivosNaoEncontrados.java][main][1] = -> st=new StringTokenizer(listaArquivos_C_H,)@ -> LOOP { -> arquivo=st.nextToken()@st.hasMoreTokens() -> listaArquivos_H=listaArquivos_H.replace(arquivo+" ","",)@ }
results[https://github.com/ops4j/org.ops4j.pax.runner/blob/ffb106d0b79505acb6344dffc10660226b12d69a/cmdline/src/main/java/org/ops4j/pixea/runner/cmdline/Run.java][extractRepositories][1] = -> st=new StringTokenizer(repoValue,", ",false,)@ -> LOOP { -> repo=st.nextToken()@st.hasMoreTokens() -> extractRepoParams(repo,options,)@ }
results[https://github.com/scooter/scooter/blob/28c3d09a71b5d8b02c535853af8e0e99a4527728/source/src/com/scooterframework/common/util/BeanUtil.java][getBeanProperty][1] = -> st=new StringTokenizer(property," .",)@!(property.indexOf('.',)==-1) -> LOOP { -> token=st.nextToken()@st.hasMoreTokens() && !(property.indexOf('.',)==-1) -> tmp=_getBeanPropertyData(tmp,token,)@!(property.indexOf('.',)==-1) }
results[https://github.com/ChrisLundquist/CS143-Project/blob/c3a45b8889cd6932681320e484ed1d3dc5408574/src/graphics/WavefrontObjLoader.java][readPolygon][1] = -> LOOP { -> token=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> vertex_tokens=token.split("/",)@!(tokenizer.hasMoreTokens()) -> throw new IllegalArgumentException("Malformed vertex token: "+token,)@tokenizer.hasMoreTokens() }
results[https://github.com/srnsw/xena/blob/8e19788ceb5f18d32d53017a5fc60bc2b3024de9/plugins/pdf/ext/src/jpedal_lgpl-3.83b38/src/org/jpedal/PdfDecoder.java][addFonts][1] = -> fontPaths=new StringTokenizer(fontDirs,",",)@ -> LOOP { -> fontPath=fontPaths.nextToken()@fontPaths.hasMoreTokens() -> addTTDir(fontPath,failed,)@ }
results[https://github.com/apodhrad/temp-jbosstools-integration-tests/blob/a245a05c865401a74d5cefabae4aa4aa7c9683e8/tests/org.jboss.tools.openshift.ui.bot.test/src/org/jboss/tools/openshift/ui/bot/test/explorer/EmbedCartrides.java][selectCartridges][2] = -> tokenizer=new StringTokenizer(TestProperties.get("openshift.jbossapp.cartridges",),";",)@ -> LOOP { -> cartridge=tokenizer.nextToken()@tokenizer.hasMoreTokens() }
results[https://github.com/and146/SPLAT-ARI/blob/dd5a41620f2739930b8fbe8ea74bacfb77088bef/ant/src/main/org/apache/tools/ant/taskdefs/Javadoc.java][setPackages][3] = -> tok=new StringTokenizer(src,",",)@ -> LOOP { -> p=tok.nextToken()@tok.hasMoreTokens() -> pn.setName(p,)@ }
results[https://github.com/colombbus/tangara/blob/4d2b0e4401e92b2dfd66c11493bdd68a544a04eb/software/src/main/java/org/colombbus/tangara/SplashScreen.java][<init>][1] = -> namesTokenizer=new StringTokenizer(developersNames,tokenSeparator,)@ -> LOOP { -> packageName=namesTokenizer.nextToken()@namesTokenizer.hasMoreTokens() -> drawingGraphics.drawString(packageName,marginLeft+150,height/2+lineHeight*i,)@ }
results[https://github.com/maihde/org.eclipse.rap/blob/8235f447cdbd4a8152bf6fe904d9c3ed7836d54a/bundles/org.eclipse.rap.rwt/src/org/eclipse/swt/widgets/MessageBox.java][getMaxMessageLineWidth][1] = -> tokenizer=new StringTokenizer(message,"\n",)@ -> LOOP { -> line=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> lineWidth=Graphics.stringExtent(font,line,).x@ }
results[https://github.com/builddoctor/cruisecontrol/blob/50b1bce81c424bd87c513be804c458c20625341f/cruisecontrol/main/src/net/sourceforge/cruisecontrol/sourcecontrols/SnapshotCM.java][setSourcePaths][1] = -> st=new StringTokenizer(sourcePaths,";",)@ -> LOOP { -> setSourcePath(st.nextToken(),)@st.hasMoreTokens() }
results[https://github.com/aldaris/openam/blob/9d4e13e32c7bfaf546140eeac1c6023f2488c9ff/opensso/products/amserver/source/com/sun/identity/common/admin/PossibleLocales.java][parseLocaleCharsetValue][2] = -> st=new StringTokenizer(localeCharset,SEPARATOR,)@ -> LOOP { -> locale=getLocale(st.nextToken(),)@st.hasMoreTokens()&&locale==null }
results[https://github.com/mhl/libbio-formats-java/blob/e4f3617c744da967471c8749f06341d0645d2733/components/forks/jai/src/com/sun/media/imageioimpl/plugins/tiff/TIFFImageMetadata.java][listToCharArray][1] = -> st=new StringTokenizer(list," ",)@ -> LOOP { -> nextInteger=st.nextToken()@st.hasMoreTokens() -> nextInt=new Integer(nextInteger,)@ }
results[https://github.com/PanosPapazoglou/My_Java_Inventory/blob/ea7501244fb8213931582fb98a57c1ec3dd101c9/JavaBasicsExamples/src/com/javaexamples/CommonlyUsedJavaClasses/StringTokenizer/StringTokenizerReturnDelimiterExample.java][main][1] = -> st=new StringTokenizer("Java|StringTokenizer|Example 1","|",true,)@ -> LOOP { -> System.out.println(st.nextToken(),)@st.hasMoreTokens() }
results[https://github.com/anthonydahanne/make-p2-buildable-with-tycho/blob/cc44085a396623e7230654b30a8bfb7f1a0616c1/bundles/org.eclipse.equinox.frameworkadmin.equinox/src/org/eclipse/equinox/frameworkadmin/equinox/internal/EquinoxManipulatorImpl.java][makeArrayRelative][1] = -> tokenizer=new StringTokenizer(array,COMMA,)@ -> LOOP { -> token=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> absolute=makeRelative(token,rootURL,)@ }
results[https://github.com/walkerart/services2.4/blob/5f0cb19a4716b5d646a1443e1c990ffcc2c3314c/services/common/src/main/java/org/collectionspace/services/common/security/SecurityUtils.java][getResourceEntity][1] = -> strTok=new StringTokenizer(relativePath,URI_PATH_SEPARATOR,)@ -> LOOP { -> pathSegment=strTok.nextToken()@strTok.hasMoreTokens()==true -> result=result.concat(pathSegment,)@ }
results[https://github.com/avh4/jfugue/blob/242e98f4124fc15d48094676b4cd4b0036ef8577/jfugue/src/main/java/org/jfugue/parsers/MusicStringParser.java][parseSystemExclusiveData][2] = -> strtok=new StringTokenizer(sysexData,",",)@ -> LOOP { -> data[i]=(byte) Integer.parseInt(strtok.nextToken(),radix,)@strtok.hasMoreTokens() }
results[https://github.com/jenkinsci/groovy/blob/e2bce56b88ec31fd279f7a6d7e48bb22986685bd/src/main/org/codehaus/groovy/tools/groovydoc/SimpleGroovyPackageDoc.java][getRelativeRootPath][1] = -> tokenizer=new StringTokenizer(name(),""+FS,)@ -> LOOP { -> tokenizer.nextToken()@tokenizer.hasMoreTokens() }
results[https://github.com/PanosPapazoglou/My_Java_Inventory/blob/ea7501244fb8213931582fb98a57c1ec3dd101c9/JavaBasicsExamples/src/com/javaexamples/CommonlyUsedJavaClasses/StringTokenizer/ReverseLine.java][main][1] = -> st=new StringTokenizer(strLine," ",)@ -> LOOP { -> strReversedLine=st.nextToken()+" "+strReversedLine@st.hasMoreTokens() } -> System.out.println("Reversed string by word is : "+strReversedLine,)@
results[https://github.com/sammthomson/semafor/blob/a67385661dd5d3073bb29cb1d7155375e81d16f3/edu/cmu/cs/lti/ark/fn/data/prep/LexicalUnitsFrameExtraction.java][getTokenNumberRepresentation][1] = -> st=new StringTokenizer(text," ",true,)@ -> LOOP { -> token=st.nextToken()@st.hasMoreTokens() -> countChars+=token.length()@ }
results[https://github.com/TMSWhite/Dialogix2007/blob/f117a3f70e213981ab7985137db6532d181aefaf/Dialogix_J2EE/Dialogix/src/org/dianexus/triceps/InstrumentExcelLoader.java][parseAnswerList][1] = -> ans=new StringTokenizer(responseOptions,"|",true,)@ -> LOOP { -> s=ans.nextToken().trim()@ans.hasMoreTokens() }
results[https://github.com/vanzin/jEdit/blob/f7b88127999d65efd67217b296ab74585f6395b7/org/gjt/sp/jedit/options/StatusBarOptionPane.java][_init][1] = -> st=new StringTokenizer(statusbar,)@ -> LOOP { -> token=st.nextToken()@st.hasMoreTokens() -> listModel.addElement(token,)@ }
results[https://github.com/resteasy/Resteasy/blob/8d58d38d98dd14cb1bb8eeabf39e4e1b13991f6c/jaxrs/tjws/src/main/java/Acme/Utils.java][matchSpan][1] = -> st=new StringTokenizer(pattern,"|",)@ -> LOOP { -> len=matchSpan1(st.nextToken(),string,)@st.hasMoreTokens() }
results[https://github.com/Codingspezis/metal-only/blob/638bffd0cd18d1151115698a08561be6ce5f644d/src/main/java/com/codingspezis/android/metalonly/player/PlanActivity.java][extractEvents][1] = -> tokenizer=new StringTokenizer(site,"}",)@ -> LOOP { -> token=tokenizer.nextToken()@tokenizer.hasMoreTokens() -> planData=convertTokenToPlanEntry(token,)@ }
