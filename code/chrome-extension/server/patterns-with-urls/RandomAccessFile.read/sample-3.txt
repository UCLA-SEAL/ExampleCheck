results[https://github.com/astanway/cannon-torrent/blob/c289575e8f97333afdf210ae5f0713a03c1c18c8/utils/Helpers.java][readTorrent][1] = -> TRY { -> rFile=new RandomAccessFile(torrentFile,"rw",)@ -> rFile.read(fileBytes,)@ }
results[https://github.com/axDev-JDK/jdk/blob/acbdb0ade569a980d025ec2b09f528c0bc1a29cd/src/share/classes/com/sun/tools/hat/internal/parser/FileReadBuffer.java][get][19] = -> TRY {  -> file.read(buf,)@ } CATCH(IOException) {}
results[https://github.com/wdcode/wdcode/blob/07c14b533b5303b84218612475e3a675baa6c7cb/wdcommon/src/main/java/org/wdcode/common/io/FileUtil.java][read][2] = -> IF { -> TRY { -> file.read(b,)@ } }
results[https://github.com/molgenis/molgenis_apps-legacy/blob/2b396fcba67293e06043f3e8e12474ea11b1e5b1/modules/matrix/org/molgenis/matrix/convertors/StringConvertor.java][read][11] = -> TRY {  -> raf.read(string,)@ -> result=new String(string,)@ } CATCH(IOException) {}
results[https://github.com/apache/activemq/blob/bb4a2f73f4db9316593ca4e0e23d69b776513bad/kahadb/src/main/java/org/apache/kahadb/journal/DataFileAccessor.java][read][22] = -> TRY {  -> file.seek(offset,)@ -> return file.read(data,)@ } CATCH(IOException) {}
results[https://github.com/orcc/orcc/blob/63c1f3ce631ef0cc6a6ac230081e54654ddc7379/libraries/Java/src/net/sf/orcc/runtime/source/Source.java][source_readNBytes][1] = -> TRY { -> in.read(b,)@ } CATCH(IOException) { -> throw new RuntimeException(msg,e,)@ }
results[https://github.com/dgarnier/MDSplus/blob/b2517b54103142bfb18e3e5177d94263560e7c10/javascope/RandomAccessData.java][<init>][3] = -> TRY {  -> len=(int) file.length()@ -> file.read(buffer,)@ } CATCH(IOException) {}
results[https://github.com/uKev/knipsX/blob/b25c8cbcb5d50faa0893b8bba559250afcca21d9/Implementierung/src/org/knipsX/utils/exifAdapter/jexifviewer/JJPEGHelper.java][isJpegFile][2] = -> TRY { -> pos=file.getFilePointer()@ -> file.seek(0,)@ -> file.read(buf,)@ -> file.seek(pos,)@ }
results[https://github.com/Baystation12/complexion/blob/635ead5d2e69777a32c20e915af9c6cc094375ba/src/complexion/resource/Resource.java][getCRC32][1] = -> TRY { -> file=new RandomAccessFile(filename,"r",)@ -> file.read(buffer,)@ -> crc.update(buffer,)@ -> file.close()@ }
results[https://github.com/stephenc/java-iso-tools/blob/3203381aae4118f52b1769a7321116cfd1cb0764/sabre/src/java/de/tu_darmstadt/informatik/rbg/bstickler/udflib/structures/TerminatingDescriptor.java][read][3] = -> TRY {  -> DescriptorTag.read(myRandomAccessFile,)@ -> myRandomAccessFile.read(Reserved,)@ } CATCH(IOException) {}
results[https://github.com/y2k/Spectator/blob/79a5875c146cd26a756e5817f80eb007f912bddb/src/net/itwister/tools/widgets/drawable/DiskGifDecoder.java][readColorTable][1] = -> TRY { -> n=file.read(c,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/mpatric/mp3agic/blob/7bcc62d40eaed06c66387f3613eaceef85d2d814/test-src/com/mpatric/mp3agic/ID3v1TagTest.java][loadFile][2] = -> TRY {  -> file=new RandomAccessFile(filename,"r",)@ -> file.read(buffer,)@ } CATCH(IOException) {}
results[https://github.com/ntietz/virtualdisk/blob/9342c3bde0458643307a3ff4f45555eb4790a9a2/src/com/virtualdisk/datanode/Drive.java][read][1] = -> TRY { -> in=new RandomAccessFile(f,"r",)@ -> in.seek(physicalOffset*blockSize,)@ -> in.read(block,)@ -> in.close()@ }
results[https://github.com/dkomanov/fizteh-java-2013/blob/bfc80eb74b06b37097db5b8153dd802d2c2b4237/src/ru/fizteh/fivt/students/inaumov/filemap/handlers/ReadHandler.java][readString][5] = -> TRY {  -> inputFile.read(stringBytes,)@ -> return new String(stringBytes,AbstractDatabaseTable.CHARSET,)@ } CATCH(IOException) {}
results[https://github.com/lboynton/XMPP-Client/blob/be55f1964e4fcee93503588cd96af4c99ee7f67c/lib/mp3tag/src/org/farng/mp3/id3/FrameBodyRVAD.java][read][2] = -> TRY {  -> size=readHeader(file,)@ -> file.read(buffer,)@ -> this.bytesUsed=(byte) buffer[++offset]-1/8*8+1@ } CATCH(IOException,InvalidTagException) {}
results[https://github.com/jdeolive/geotools-old/blob/1d467bb2db89df3f146af474a9828eb77f20663e/geotools2/geotools-src/vpf/src/org/geotools/vpf/io/VPFInputStream.java][readFixedSizeData][1] = -> TRY {  -> input.read(dataBytes,)@ -> result=DataUtils.decodeData(dataBytes,dataType,)@ } CATCH(IOException) {}
results[https://github.com/Unidata/thredds/blob/60710d22c30fdca1432908fe837a71ea499a29ed/cdm/src/main/java/ucar/nc2/stream/NcStreamIosp.java][readAndTest][2] = -> TRY {  -> raf.read(b,)@ -> return test(b,test,)@ } CATCH(IOException) {}
results[https://github.com/yukuku/androidbible/blob/92768b5b520ba9a79e9bdaf99c61fa6a6353fdbd/Alkitab/src/yuku/alkitab/yes1/Yes1Reader.java][readSectionName][4] = -> TRY {  -> read=f.read(buf,)@ -> return (read<=0)?null:new String(buf,0,)@ } CATCH(IOException) {}
results[https://github.com/Unidata/thredds/blob/7dfcc094154e74ed6df4a5237c238c122e9ba535/cdm/src/main/java/ucar/nc2/iosp/hdf4/H4header.java][readString][2] = -> TRY {  -> raf.read(b,)@ -> return new String(b,0,count,CDM.utf8Charset,)@ } CATCH(IOException) {}
results[https://github.com/stephenc/java-iso-tools/blob/abd074d949c1c09b7fae5860267fe740fe0d431e/sabre/src/main/java/de/tu_darmstadt/informatik/rbg/bstickler/udflib/structures/CharSpec.java][read][3] = -> TRY {  -> CharacterSetType=myRandomAccessFile.readByte()@ -> myRandomAccessFile.read(CharacterSetInfo,)@ } CATCH(IOException) {}
results[https://github.com/stephenc/java-iso-tools/blob/3203381aae4118f52b1769a7321116cfd1cb0764/sabre/src/java/de/tu_darmstadt/informatik/rbg/bstickler/udflib/structures/LogicalVolumeHeaderDescriptor.java][read][3] = -> TRY {  -> UniqueID=BinaryTools.readUInt64AsLong(myRandomAccessFile,)@ -> myRandomAccessFile.read(Reserved,)@ } CATCH(IOException) {}
results[https://github.com/molgenis/molgenis_apps-legacy/blob/76f61921c3e710a39f5191e496724a1ec8044076/handwritten/java/matrix/implementations/binary/etc/BinaryMatrix_ADVANCED_WORKINPROGRESS.java][readNextDoublesFromRAF][2] = -> TRY {  -> raf.read(arr,)@ -> return byteArrayToDoubles(arr,)@ } CATCH(IOException) {}
results[https://github.com/rejeep/apes/blob/d5070e935f97ba2ffc0900af45da1241c6acb4a6/src/apes/models/MemoryHandler.java][read][2] = -> TRY {  -> file.seek(0,)@ -> file.read(data,)@ } CATCH(IOException) {}
results[https://github.com/asascience/THREDDS/blob/c776d816ad599ceb460e316f7f9e1c522afde02d/cdm/src/main/java/ucar/nc2/iosp/hdf5/H5header.java][read][2] = -> TRY {  -> size=raf.readInt()@ -> raf.read(value,)@ } CATCH(IOException) {}
results[https://github.com/tingletech/xtf-strap/blob/c1dc053258cd5101196e31f1c77055bd109b1a38/WEB-INF/src/org/cdlib/xtf/saxonExt/pipe/BufferedRandomAccessFile.java][fillBuffer][1] = -> TRY {  -> bufferFilePointer=(int) baseFile.getFilePointer()@ -> bufferLength=baseFile.read(buffer,)@ } CATCH(IOException) {}
results[https://github.com/mstepan/incubator/blob/f4cf7b726ec78a6350f2f0b1910a4525f014f986/algorithms/src/main/java/com/max/algs/sorting/SortedFileSequenceIterator.java][readNextChunk][1] = -> TRY { -> readedBytes=randFile.read(buf,)@ } CATCH(IOException) { -> throw new IllegalStateException(ioEx,)@ }
results[https://github.com/craigpetchell/Jaudiotagger/blob/4c9e630333bf39961d3d24f006ebd43d9cd0ad47/src/org/jaudiotagger/audio/flac/util/FlacTagReader.java][handleVorbisComment][1] = -> TRY {  -> raf.read(commentHeaderRawPacket,)@ -> tag=vorbisCommentReader.read(commentHeaderRawPacket,false,)@ } CATCH(IOException,CannotReadException) {}
results[https://github.com/hilotec/elexis-hilotec-plugins/blob/bbb9bcb97c695f4a56db0ace03707e60a1cbc039/com.hilotec.elexis.opendocument2omnivore/src/com/hilotec/elexis/opendocument2omnivore/Exporter.java][exportDocument][1] = -> TRY { -> f=new RandomAccessFile(path,"r",)@ -> f.read(b,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/asascience/THREDDS/blob/f35aee0419fcb396ec1e0a669abd196a2c08be39/cdm/src/test/java/ucar/nc2/iosp/misc/UspLightning1.java][isValidFile][11] = -> TRY {  -> raf.seek(0,)@ -> raf.read(b,)@ -> got=new String(b,)@ } CATCH(IOException) {}
results[https://github.com/dkomanov/fizteh-java-2013/blob/24181fc416b2c251dfd1ffe7b1891f09204b52cb/src/ru/fizteh/fivt/students/vlmazlov/utils/StoreableTableFileReader.java][readUTFString][2] = -> TRY {  -> dataBaseStorage.seek(readingPosition,)@ -> dataBaseStorage.read(bytes,)@ -> return new String(bytes,"UTF-8",)@ } CATCH(IOException) {}
results[https://github.com/eclipse/rt.equinox.p2/blob/a2f9d54d4ec55e27d28b6c522a2940b309729f11/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/pde/internal/swt/tools/IconExe.java][loadData][7] = -> TRY {  -> IF { -> raf.read(data,)@ } } CATCH(IOException) {}
results[https://github.com/rjohnsondev/java-libpst/blob/edd5e305957444f502242e7ed2e9a69e83140731/src/main/java/com/pff/PSTFile.java][getLeafSize][2] = -> TRY {  -> in.seek(offsetItem.fileOffset,)@ -> in.read(data,)@ -> return (int) PSTObject.convertLittleEndianBytesToLong(data,4,8,)@ } CATCH(IOException,PSTException) {}
results[https://github.com/dianping/cat/blob/847076a9ea153cbe5b1d4c59177d74b447a6642c/cat-job/src/main/java/com/dianping/cat/storage/hdfs/RAFIndexStore.java][getIndex][2] = -> TRY {  -> this.readRAF.seek(indexPos*this.indexLength,)@ -> this.readRAF.read(bytes,)@ -> return deserialMeta(bytes,)@ } CATCH(IOException) {}
results[https://github.com/srnsw/xena/blob/85e08adb77ac7de918146cab003687482d8ac8b1/ext/src/batik-1.7/sources/org/apache/batik/svggen/font/table/HmtxTable.java][<init>][21] = -> TRY {  -> raf.seek(de.getOffset(),)@ -> raf.read(buf,)@ } CATCH(IOException) {}
results[https://github.com/mpatric/mp3agic/blob/b530b5e05e9bd2496ad9a42326191aeca762e577/src/test/java/com/mpatric/mp3agic/TestHelper.java][loadFile][1] = -> TRY {  -> file=new RandomAccessFile(filename,"r",)@ -> file.read(buffer,)@ -> file.close()@ } CATCH(IOException) {}
results[https://github.com/stephenc/java-iso-tools/blob/f4e0280a4e4d066df6cf20b9941b5028d6810e46/sabre/src/main/java/com/github/stephenc/javaisotools/udflib/structures/PartitionMapType2.java][read][3] = -> TRY {  -> PartitionMapType=myRandomAccessFile.readByte()@ -> PartitionMapLength=myRandomAccessFile.readByte()@ -> myRandomAccessFile.read(PartitionIdentifier,)@ } CATCH(IOException) {}
results[https://github.com/jamesblackburn/cdt-core/blob/00c1fdc489bd9f8b293ca7f7bc4ea2b4b791820a/utils/org/eclipse/cdt/utils/som/AR.java][getObjectData][1] = -> TRY {  -> file=getRandomAccessFile()@ -> file.seek(somOffset,)@ -> file.read(temp,)@ } CATCH(IOException) {}
results[https://github.com/davros-/platform_frameworks_base/blob/4b50cc39b0518a04b16eb0f0b6286859b32373a3/tests/FrameworkPerf/src/com/android/frameworkperf/TestService.java][onRun][8] = -> TRY { -> mRAF.seek(0,)@ -> mRAF.read(mBuffer,)@ } CATCH(IOException) { -> Log.w(TAG,"Failure reading "+mFile,e,)@ }
results[https://github.com/Unidata/thredds/blob/37284b4c97140a5b011292619059e818d3231b0a/grib/src/main/java/ucar/nc2/grib/grib1/Grib1SectionProductDefinition.java][<init>][1] = -> TRY {  -> length=GribNumbers.uint3(raf,)@ -> raf.skipBytes(-3,)@ -> raf.read(rawData,)@ } CATCH(IOException) {}
results[https://github.com/stephenc/java-iso-tools/blob/3203381aae4118f52b1769a7321116cfd1cb0764/sabre/src/java/de/tu_darmstadt/informatik/rbg/bstickler/udflib/structures/Long_ad.java][read][3] = -> TRY {  -> ExtentLength=BinaryTools.readUInt32AsLong(myRandomAccessFile,)@ -> ExtentLocation.read(myRandomAccessFile,)@ -> myRandomAccessFile.read(implementationUse,)@ } CATCH(IOException) {}
results[https://github.com/ppolabs/jlinda/blob/464d2fb4ab364af11a5a95babea0bef17bb68767/jlinda-core/src/test/java/org/jlinda/core/geocode/DInSARTest.java][readFloatFile][6] = -> TRY {  -> file=new RandomAccessFile(fileName,"r",)@ -> record=ByteBuffer.wrap(recordBuffer,)@ -> file.read(recordBuffer,)@ } CATCH(IOException) {}
results[https://github.com/molgenis/molgenis_apps-legacy/blob/76f61921c3e710a39f5191e496724a1ec8044076/handwritten/java/matrix/implementations/binary/etc/BinaryMatrix_ADVANCED_WORKINPROGRESS.java][readStringsFromRAF][1] = -> TRY {  -> raf.read(bytes,)@ -> LOOP { -> chars[i]=(char) bytes[i]@i<bytes.length } } CATCH(IOException) {}
results[https://github.com/araqne/core/blob/3ae6cc1207cece4ec9ab52e3391bf46af7248bc0/araqne-confdb/src/main/java/org/araqne/confdb/file/RevLogReader.java][read][3] = -> TRY {  -> logRaf.seek(logHeaderLength+index*REV_LOG_SIZE,)@ -> logRaf.read(buffer,)@ -> bb=ByteBuffer.wrap(buffer,)@ } CATCH(IOException) {}
results[https://github.com/martoe/mytourbook/blob/b81c5a85f3c8c1fea6011e7d7a56d2bf3be76db2/net.tourbook.device.cm4xxm/src/net/tourbook/device/cm4xxm/CM4XXMDeviceReader.java][readTimeSlice][2] = -> TRY {  -> file.read(buffer,)@ -> data=Integer.parseInt(new String(buffer,0,4,),16,)@ } CATCH(IOException) {}
results[https://github.com/molgenis/systemsgenetics/blob/06fbc453404531ddd4e17f3393a2e470de985981/genetics-lib/src/main/java/umcg/genetica/io/bin/RandomAccessFile.java][seek][2] = -> TRY {  -> file.seek(pos,)@!(pos>=bufferStart&&pos<dataEnd) -> filePosition=file.getFilePointer()@!(pos>=bufferStart&&pos<dataEnd) -> dataSize=file.read(buffer,)@!(pos>=bufferStart&&pos<dataEnd) } CATCH(IOException) {}
results[https://github.com/rmoore/cs3114/blob/c4bccfeb7e9273248fcf4c71dd79da2735e47704/heapsort/LRUBuffer.java][readFromDisk][5] = -> TRY { -> disk.seek(offset,)@ -> disk.read(data,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/UNC-Libraries/Carolina-Digital-Repository/blob/2e4be47fdd9f81f3d6b82d1ad1f813a2795eba38/sword-server/src/test/java/edu/unc/lib/dl/cdr/sword/server/util/DepositReportingUtilTest.java][retrieveDepositReceiptWithDCTest][2] = -> TRY {  -> modsFile=new RandomAccessFile("src/test/resources/dcDocument.xml","r",)@ -> modsFile.read(modsBytes,)@ -> mimeStream.setStream(modsBytes,)@ } CATCH(Exception) {}
results[https://github.com/dkomanov/fizteh-java-2013/blob/bfc80eb74b06b37097db5b8153dd802d2c2b4237/src/ru/fizteh/fivt/students/elenarykunova/filemap/DataBase.java][getValueFromFile][1] = -> TRY {  -> beginPtr=(int) dataFile.getFilePointer()@ -> dataFile.read(res,)@ -> result=new String(res,StandardCharsets.UTF_8,)@ } CATCH(IOException) {}
results[https://github.com/olanto/MYCAT/blob/5dc5e6c732963894f519ce37837be54b15cf2a76/prog/coreidx/src/org/olanto/idxvli/util/BytesAndFiles.java][readBytes][1] = -> TRY { -> r.seek(pos,)@ -> r.read(byteidx,)@ } CATCH(Exception) { -> error("IO error readBytes",e,)@ }
results[https://github.com/jamesblackburn/cdt-core/blob/2e11002fd65b2aa04d3e3a9cd29f1067d14a4840/utils/org/eclipse/cdt/utils/xcoff/AR.java][getObjectData][1] = -> TRY {  -> file=getRandomAccessFile()@ -> file.seek(file_offset,)@ -> file.read(temp,)@ } CATCH(IOException) {}
results[https://github.com/liuexp/fatworm/blob/ce0ff8bc89bf3feeb01a6eeba88e7cd962ce37f2/src/fatworm/io/File.java][read][1] = -> TRY {  -> file.seek(block*getPageSize(),)@ -> file.read(b,)@ } CATCH(IOException) {}
results[https://github.com/fluffy88/OCJD/blob/1db9bdf641978a4af7d1545e25527b6a84b06256/code/suncertify/db/io/DBParser.java][readString][1] = -> TRY {  -> this.is.read(bytes,)@ -> return new String(bytes,US_ASCII,).trim()@ } CATCH(IOException) {}
results[https://github.com/rolandschulz/PTP/blob/d3717153a1289a8b9400de2ead4794bb8ebb7548/tools/etfw/org.eclipse.ptp.etfw.tau/src/org/eclipse/ptp/etfw/tau/TAUPortalUploadDialog.java][uploadPPK][1] = -> TRY {  -> rfile=new RandomAccessFile(ppkFile,"r",)@ -> rfile.read(barr,)@ -> ppkString=new String(barr,"ISO-8859-1",)@ } CATCH(Exception) {}
results[https://github.com/rgov/wage/blob/dbcdd5c45f33687ea135f7c4b6933a246c2afb61/src/main/java/org/freeshell/gbsmith/rescafe/resourcemanager/Resource.java][readData][2] = -> TRY {  -> inraf.seek(offset+dataOffset,)@ -> len=ResourceIntegers.readResLong(inraf,)@ -> inraf.read(data,)@ } CATCH(IOException) {}
results[https://github.com/lietou/insight/blob/13004086e36724a00eeb058e4a391e579169cc31/cat-job/src/main/java/com/dianping/tkv/local/RAFIndexStore.java][getIndex][2] = -> TRY {  -> this.readRAF.seek(indexPos*this.indexLength,)@ -> this.readRAF.read(bytes,)@ -> return getMeta(bytes,)@ } CATCH(IOException) {}
results[https://github.com/CSEMike/OneSwarm/blob/5014710bd4b1277f9911633877301cb453255490/oneswarm_gwt_ui/src/edu/washington/cs/oneswarm/ui/gwt/server/community/CommunityServerKeyPublish.java][main][2] = -> TRY {  -> fr=new RandomAccessFile("capabilities.xml","r",)@ -> fr.read(b,)@ -> scratch.write(b,)@ } CATCH(Exception) {}
results[https://github.com/tingletech/xtf-strap/blob/d92b21e3edff41605dadcddb8c0981c7458835f5/WEB-INF/src/org/cdlib/xtf/util/LineReader.java][readBlock][1] = -> TRY {  -> file.seek(startPos,)@ -> nRead=file.read(block,)@ -> blockEnd=Math.min(length,startPos+nRead,)@ } CATCH(IOException) {}
results[https://github.com/Koller-Digital/200Million_framework/blob/ddc582a99cb19a8073309a570310d9f5912e6c63/200Million_Framework/src/de/koller/aframe/io/ARandomAccessFile.java][readBytes][1] = -> TRY { -> file.seek(pos,)@ -> file.read(b,)@ } CATCH(IOException) { -> throw new OceanException(ex,)@ }
results[https://github.com/MIPS/libcore/blob/e595037cf49109e9e20b47e6e191eda45e414008/luni/src/test/java/org/apache/harmony/luni/tests/java/io/RandomAccessFileTest.java][test_read_$B_IOException][8] = -> TRY {  -> raf=new java.io.RandomAccessFile(fileName,"r",)@ -> raf.close()@ -> read=raf.read(rbuf,)@ -> assertEquals(0,read,)@ } CATCH(IOException) {}
results[https://github.com/paolope/Mspsim-Fixed/blob/bc05bf76d5571d624534ae324a2a617d6aa68fe8/se/sics/mspsim/chip/FileM25P80.java][readFully][1] = -> TRY {  -> IF { -> return file.read(b,)@file!=null||ensureOpen(false,) } -> Arrays.fill(b,(byte) 0,)@!(file!=null||ensureOpen(false,)) } CATCH(IOException) {}
results[https://github.com/apache/chukwa/blob/b58a0520f368438b9857b12db1fe435f2c06d2d7/src/main/java/org/apache/hadoop/chukwa/datacollection/adaptor/filetailer/LWFTAdaptor.java][slurp][2] = -> TRY {  -> reader.seek(fileReadOffset,)@ -> bufferRead=reader.read(buf,)@ -> assert " event size arithmetic is broken: "+" pointer is "+reader.getFilePointer()+" but offset is "+fileReadOffset+bufSize@ -> bytesUsed=extractRecords(dest,fileReadOffset+offsetOfFirstByte,buf,)@ } CATCH(IOException,InterruptedException) {}
results[https://github.com/stephenc/java-iso-tools/blob/3203381aae4118f52b1769a7321116cfd1cb0764/sabre/src/java/de/tu_darmstadt/informatik/rbg/bstickler/udflib/structures/AnchorVolumeDescriptorPointer.java][read][3] = -> TRY {  -> DescriptorTag.read(myRandomAccessFile,)@ -> MainVolumeDescriptorSequenceExtend.read(myRandomAccessFile,)@ -> ReserveVolumeDescriptorSequenceExtend.read(myRandomAccessFile,)@ -> myRandomAccessFile.read(reserved,)@ } CATCH(IOException) {}
results[https://github.com/molgenis/molgenis_apps-legacy/blob/2b396fcba67293e06043f3e8e12474ea11b1e5b1/modules/xgap/matrix/implementations/binary/BinaryDataMatrixInstance.java][readNextDoubleFromRAF][3] = -> TRY {  -> raf.read(arr,)@ -> d=byteArrayToDouble(arr,)@ -> IF { -> return null@d==Double.MAX_VALUE } } CATCH(IOException) {}
results[https://github.com/Unidata/thredds/blob/5e8f3706c8c725025e35a18443af7658cba605b6/cdm/src/main/java/ucar/nc2/iosp/hdf5/FractalHeap.java][readDirectBlock][1] = -> TRY {  -> raf.seek(pos,)@ -> raf.read(heapname,)@ -> magic=new String(heapname,)@ -> version=raf.readByte()@!(!(magic.equals("FHDB",))) } CATCH(IOException) {}
results[https://github.com/DominicWatson/open-bluedragon/blob/7a0bc66077007b1125edcf6de803ac15b6f284f8/src/org/farng/mp3/lyrics3/FieldBodyUnsupported.java][read][2] = -> TRY {  -> file.read(buffer,0,5,)@ -> size=Integer.parseInt(new String(buffer,0,5,),)@ -> file.read(this.value,)@ } CATCH(IOException) {}
results[https://github.com/apavlo/h-store/blob/e1f70e244e03e6adc24af4950455535ee2119e5f/src/hsqldb19b3/org/hsqldb/persist/LobStoreRAFile.java][getBlockBytes][2] = -> IF { -> throw Error.error(ErrorCode.FILE_IO_ERROR,)@file==null } -> TRY { -> file.seek(address,)@!(file==null) -> file.read(dataBytes,)@!(file==null) } CATCH(Throwable) { -> throw Error.error(ErrorCode.DATA_FILE_ERROR,t,)@!(file==null) }
results[https://github.com/kiesel/experiments/blob/cc56b763134af7c79fc0507a657b9bd1eea79b18/maven/xar/src/main/java/net/xp_framework/xar/XarFile.java][getInputStream][1] = -> TRY {  -> this.file.seek(e.getOffset()+this.bodyOffset,)@ -> this.file.read(data,)@ -> return new ByteArrayInputStream(data,)@ } CATCH(IOException) {}
results[https://github.com/DominicWatson/open-bluedragon/blob/7a0bc66077007b1125edcf6de803ac15b6f284f8/src/org/farng/mp3/id3/FrameBodySYLT.java][read][2] = -> TRY {  -> size=readHeader(file,)@ -> file.read(buffer,)@ -> str=new String(buffer,)@ -> System.arraycopy(buffer,offset,data,0,size-offset,)@ } CATCH(IOException,InvalidTagException) {}
results[https://github.com/olanto/MYCAT/blob/5dc5e6c732963894f519ce37837be54b15cf2a76/prog/coreidx/src/org/olanto/idxvli/util/BytesAndFiles.java][readInt][1] = -> TRY { -> r.seek(pos,)@ -> r.read(byteidx,)@ -> byteToint(b,4,byteidx,)@ } CATCH(Exception) { -> error("IO error readInt",e,)@ }
results[https://github.com/patrickvane/my_java_library/blob/8388867bc1e8f594b23d6e2f3321437e3c4318cf/01a. My Common Objects/lib/patrick_vane/My_Static_Classes/MyFile.java][run][1] = -> TRY { -> f=new RandomAccessFile(file,"r",)@ -> f.read(b,)@ -> progression.createrComplete(f,)@ } CATCH(Exception) { -> progression.createrException(e,)@ }
results[https://github.com/UNC-Libraries/Carolina-Digital-Repository/blob/b02579208054b01d81ed8ff0a51df10a53cf2565/sword-server/src/test/java/edu/unc/lib/dl/cdr/sword/managers/ContainerManagerTest.java][getEntryCredentials][3] = -> TRY {  -> modsFile=new RandomAccessFile("src/test/resources/modsDocument.xml","r",)@ -> modsFile.read(modsBytes,)@ -> mimeStream.setStream(modsBytes,)@ -> modsFile.close()@ } CATCH(Exception) {}
results[https://github.com/orcc/orcc/blob/959e5da27ca2d3f0bc3e49a7ea24eebb7e606663/eclipse/plugins/net.sf.orcc.simulators/src/std/io/impl/Source.java][source_readNBytes][1] = -> TRY { -> in.read(b,)@ -> LOOP { -> outTable[i]=(short) b[i]&0xFF@i<nbTokenToRead } } CATCH(IOException) { -> throw new RuntimeException(msg,e,)@ }
results[https://github.com/binwiederhier/syncany/blob/c7eb5a4a5d05cbecec59b5b768a6b57afda8eecf/src/org/syncany/crypto/CipherUtil.java][isEncrypted][1] = -> TRY {  -> rFile=new RandomAccessFile(file,"r",)@ -> rFile.read(actualMagic,)@ -> rFile.close()@ -> return Arrays.equals(actualMagic,MultiCipherOutputStream.STREAM_MAGIC,)@ } CATCH(IOException) {}
results[https://github.com/khiner/BeatBot/blob/33d8ee7d102962b38c668e87fbc642a321c3e7a5/src/com/kh/beatbot/global/WavFile.java][floatFileToBuffer][2] = -> TRY {  -> LOOP { -> sampleFile.seek(dataIndex*bytesPerSample+44,)@ -> sampleFile.read(inBytes,)@ -> s=(short) inBytes[1]&0xff<<8|inBytes[0]&0xff@ } } CATCH(IOException) {}
results[https://github.com/uKev/knipsX/blob/e083cd3f211c6ce2e3f18a59984b781379dca462/Implementierung/src/org/knipsX/utils/exifAdapter/jexifviewer/JExif.java][read][1] = -> TRY { -> m_offset=file.getFilePointer()@ -> file.read(buf,)@ -> id=new String(buf,0,4,)@ -> IF { -> file.skipBytes(2,)@ } }
results[https://github.com/stephenc/java-iso-tools/blob/abd074d949c1c09b7fae5860267fe740fe0d431e/sabre/src/main/java/de/tu_darmstadt/informatik/rbg/bstickler/udflib/structures/SpaceBitmapDescriptor.java][read][3] = -> TRY {  -> DescriptorTag.read(myRandomAccessFile,)@ -> NumberOfBits=BinaryTools.readUInt32AsLong(myRandomAccessFile,)@ -> NumberOfBytes=BinaryTools.readUInt32AsLong(myRandomAccessFile,)@ -> myRandomAccessFile.read(Bitmap,)@ } CATCH(IOException) {}
results[https://github.com/rgov/wage/blob/dbcdd5c45f33687ea135f7c4b6933a246c2afb61/src/main/java/org/freeshell/gbsmith/rescafe/resourcemanager/ResourceType.java][readType][2] = -> TRY {  -> inraf.read(tmpbytes,)@ -> id=MacRoman.toString(tmpbytes,)@ -> numItems=inraf.readShort()@ -> offset=inraf.readShort()@ } CATCH(IOException) {}
results[https://github.com/jjnguy/PublicFun/blob/236b7d4565810f3ffb1582082034bf2506b7795c/coms362_Ass1/src/dataContainers/HashFile.java][getStudentsInClass][1] = -> TRY {  -> contents.seek(pos,)@ -> LOOP { -> contents.read(entry,)@ } } CATCH(IOException) {}
results[https://github.com/Mega-Mario/Whitehole/blob/85bbd2ed28c3ffc86b0d779ab0a505a08bd195b6/src/whitehole/fileio/ExternalFile.java][getContents][1] = -> TRY {  -> oldpos=file.getFilePointer()@ -> file.seek(0,)@ -> file.read(ret,)@ -> file.seek(oldpos,)@ } CATCH(IOException) {}
results[https://github.com/fgeraci/cs352-bittorrent-project/blob/7bfce127dbd10a5f698a510a4b4eb1c50e629c3b/src/bt/Utils/Utilities.java][getBytesFromFile][1] = -> TRY { -> raf=new RandomAccessFile(file,"r",)@ -> raf.read(bytesArray,)@ -> raf.close()@ } CATCH(Exception) { -> System.out.println("Random Access File failed.",)@ }
results[https://github.com/osi/mulgara/blob/c2eb5146dac960149a3f2531967f71f124d74e65/src/jar/rdql/java/org/kowari/rdql/RdqlInterpreterTest.java][testParseQuery][2] = -> TRY {  -> LOOP { -> file=new RandomAccessFile(testFiles[i],"r",)@i<testFiles.length -> file.read(bytes,)@ } } CATCH(Exception) {}
results[https://github.com/visad/visad/blob/56f0b3a9b63424ed94209ab8f34a996422c8906f/deps/src/loci/trunk/formats/PictReader.java][initFile][1] = -> TRY {  -> in=new RandomAccessFile(id,"r",)@ -> len=(int) in.length()-512@ -> in.skipBytes(512,)@ -> in.read(bytes,)@ } CATCH(FormatException,IOException) {}
results[https://github.com/gpothier/stiq/blob/4dba67a6458ec8bf93fa550b40d463e4d1d7ef80/core/src/testcase/btree/SimplePageManager.java][read][1] = -> TRY { -> itsFile.seek(aId*Config.pageSize(),)@ -> itsFile.read(theData,)@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/stupidsing/suite/blob/9d797b4cf545cc11d1d3a36afe3acb016e6af280/src/main/java/org/btree/FileAllocator.java][<init>][2] = -> TRY {  -> allocMapFile=new RandomAccessFile(filename,"rw",)@ -> allocMapSize=Math.max(maxPages,(int) allocMapFile.length(),)@ -> allocMapFile.read(allocMap,)@ } CATCH(IOException) {}
results[https://github.com/drewfarris/metadata-extractor/blob/b10041bc64cf273ab2e4401a282eab58232973df/Source/com/drew/lang/RandomAccessFileReader.java][getBytes][1] = -> TRY {  -> bytesRead=_file.read(bytes,)@ -> IF { -> throw new BufferBoundsException("Unexpected end of file encountered.",)@bytesRead!=count } } CATCH(IOException) {}
results[https://github.com/rjohnsondev/java-libpst/blob/fa407ba3f25f89b62c0e1046849eea2270bf76b5/pff/PSTObject.java][extractLEFileOffset][1] = -> TRY {  -> in.seek(startOffset,)@ -> in.read(temp,)@ -> LOOP { -> tmpLongValue=(long) temp[x]&0xff@x>=0 } } CATCH(IOException) {}
results[https://github.com/aarddict/android/blob/d60b91b2224bc92dcade948157806c206ed889a6/src/aarddict/Dictionary.java][readArticle][1] = -> TRY {  -> this.file.seek(pos,)@ -> articleLength=this.file.readUnsignedInt()@ -> this.file.read(articleBytes,)@ -> serializedArticle=decompress(articleBytes,)@ } CATCH(IOException) {}
results[https://github.com/deruelle/mobicents/blob/e0368734b363ac3894d3f181686f773205bc40d5/servers/media/core/server-impl/src/main/java/org/mobicents/media/server/impl/resource/zap/BChannel.java][evolve][1] = -> data=(byte[]) buffer.getData()@ -> TRY { -> len=file.read(data,)@ -> buffer.setLength(len,)@ } CATCH(IOException) { -> buffer.setFlags(Buffer.FLAG_DISCARD,)@ }
results[https://github.com/olanto/MYCAT/blob/5dc5e6c732963894f519ce37837be54b15cf2a76/prog/coreidx/src/org/olanto/idxvli/util/BytesAndFiles.java][readString][1] = -> TRY { -> r.seek(pos,)@ -> r.read(bw,)@ -> return convertBytes2String(bw,encode,)@ } CATCH(Exception) { -> error("IO error readString",e,)@ }
results[https://github.com/maxmind/GeoIP2-java/blob/f58235748735e9bcd5ba37d886a98e438c9fbfcd/src/main/java/com/maxmind/geoip2/Reader.java][read_node][1] = -> TRY { -> in.seek(node_num*node_byte_size,)@ -> in.read(b,)@ } CATCH(IOException) { -> e.printStackTrace()@ } -> return split_node_into_records(b,)@
results[https://github.com/egonw/cdk-taverna-2/blob/d247a204289deec2407447ea51ec980c6f5bceae/cdk-taverna-2-activity/src/main/java/org/openscience/cdk/applications/taverna/basicutilities/CacheController.java][uncacheByteStream][1] = -> TRY {  -> raf=new RandomAccessFile(cacheFile,"r",)@ -> raf.seek(cacheObj.offset,)@ -> raf.read(data,)@ -> raf.close()@ } CATCH(Exception) {}
results[https://github.com/jeyboy/MUSIC/blob/e7e121459c7614f9cdefaa56d0c0120f1691e16b/lib/outag/outag/audioformats/mp4/util/Mp4InfoReader.java][read][1] = -> TRY {  -> seek(raf,box,"moov",)@ -> seek(raf,box,"mvhd",)@ -> raf.read(b,)@ -> mvhd=new Mp4MvhdBox(b,)@ } CATCH(CannotReadException,IOException) {}
results[https://github.com/carlosbrando/xruby/blob/3144df5b8b47a4b09c399c76a0065ff38ce8b387/src/com/xruby/runtime/value/IOValue.java][readsTheEntireContents][1] = -> TRY {  -> size=(int) file_.length()@ -> file_.read(buffer,)@ -> return ObjectFactory.createString(new String(buffer,),)@ } CATCH(IOException) {}
results[https://github.com/molgenis/molgenis_apps-legacy/blob/2b396fcba67293e06043f3e8e12474ea11b1e5b1/modules/xgap/matrix/implementations/binary/BinaryDataMatrixInstance_NEW.java][readChunk][1] = -> TRY {  -> IF { -> raf.seek(startPointer,)@startPointer!=raf.getFilePointer() } -> raf.read(bytes,)@ } CATCH(IOException) {}
results[https://github.com/koreyconway/sysc3303project/blob/25ed2ef4190dbea4fbc0baa632c1465e3010ec8a/src/sysc3303/tftp_project/Client.java][toByteArray][1] = -> TRY {  -> f=new RandomAccessFile(file.getAbsolutePath(),"r",)@ -> f.read(b,)@ -> f.close()@ } CATCH(IOException) {}
results[https://github.com/paulogomesce/jave/blob/cff838f91103f0bb2d980c2c2aa4770f1cb02ce9/src/br/com/jave/teste/TesteManterPessoa.java][salvarPessoa][1] = -> TRY {  -> arquivoEntrada=new RandomAccessFile("/home/desenv/livre/carro.jpg","r",)@ -> arquivoEntrada.read(arquivoFoto,)@ -> arquivoEntrada.close()@ -> pessoa.setFoto(arquivoFoto,)@ } CATCH(NoResultException,Exception) {}
results[https://github.com/YongJiang/org.eclipse.birt.engine/blob/f4b892eb829fd09c69affb882893e9d1d6ecb1d4/tests/org.eclipse.birt.core.tests/test/org/eclipse/birt/core/archive/ArchiveFileSaveTest.java][copyFile][1] = -> TRY {  -> srcFile=new RandomAccessFile(src,"r",)@ -> srcFile.read(bytes,)@ -> tgtFile.write(bytes,)@ -> srcFile.close()@ } CATCH(IOException) {}
results[https://github.com/marcusbb/retry/blob/7416dba0012ec322829fd9696e51de4ff04a4be9/retry-hazelcast/src/main/java/ies/retry/spi/hazelcast/LocalQueueLog.java][<init>][1] = -> TRY {  -> takeOs=new RandomAccessFile(takeMarkerFile,"rw",)@ -> takeOs.read(b,)@ -> curTakeMarker=ByteBuffer.wrap(b,).getInt()@ } CATCH(FileNotFoundException,IOException) {}
results[https://github.com/aarddict/android/blob/d5741a6cf57d9c06c4f792099b3d53ae7a955ecd/src/aarddict/Volume.java][readArticle][1] = -> TRY {  -> f.seek(pos,)@!(a!=null) -> articleLength=f.readSpec(h.articleLengthSpec,)@!(a!=null) -> f.read(articleBytes,)@!(a!=null) -> serializedArticle=decompress(articleBytes,)@!(a!=null) } CATCH(IOException) {}
results[https://github.com/conceptstailored/NCSU-GBS-Pipeline/blob/d16978268678f9fa8958e60cdd43d64937a912d5/TASSEL_20121011/maizegenetics/src/net/maizegenetics/gbs/tagdist/TagsByTaxaByteFileMap.java][bufferTagDist][1] = -> TRY { -> theRAF.seek(pos,)@ -> theRAF.read(bufferedTagDist,)@ } CATCH(IOException) { -> System.out.println("Catch in reading bufferTagDist: "+e,)@ -> e.printStackTrace()@ }
