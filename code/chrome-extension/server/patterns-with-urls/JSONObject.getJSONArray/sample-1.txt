results[https://github.com/HeraldStudio/EzHerald/blob/3f17a7c50e7dee536dd2858efc0618d82451b257/EzHerald/src/com/herald/ezherald/library/LibraryBookListDetailThread.java][<init>][12] = -> TRY {  -> this.jsonarray=mjson.getJSONArray("stores",)@ } CATCH(JSONException) {}
results[https://github.com/skyglass/skyglass/blob/56727ab94a1bb7745940e159adb86e0f0e8ca08f/skyglass-core/src/main/java/skyglass/core/resource/json/JSONUtilities.java][getJsonArrayFromJsonObject][1] = -> IF { -> TRY { -> result=object.getJSONArray(name,)@object.has(name,)&&!(object.isNull(name,)) } }
results[https://github.com/OpenRefine/OpenRefine/blob/0c70d281c772a33c1714f928d780755150a247ca/src/main/java/com/metaweb/gridworks/util/JSONUtilities.java][getIntArray][11] = -> TRY { -> a=obj.getJSONArray(key,)@ -> LOOP { -> r[i]=a.getInt(i,)@i<r.length } }
results[https://github.com/lbjay/gridworks/blob/a07b7c67f2967776571e01514ac292ab700144ca/src/main/java/com/metaweb/gridworks/util/JSONUtilities.java][getStringArray][12] = -> TRY { -> a=obj.getJSONArray(key,)@ -> LOOP { -> r[i]=a.getString(i,)@i<r.length } }
results[https://github.com/tijuca/icedove/blob/3af730cd4d20abf8b988d77b4a9b36e42d4c622e/mozilla/mobile/android/base/Prompt.java][getSafeArray][1] = -> TRY { -> return json.getJSONArray(key,)@ } CATCH(Exception) { -> return new JSONArray()@ }
results[https://github.com/seawolf/KeepingTracks/blob/d696457fe1d507018a0423f864c4c4172645dcd1/src/com/seawolfsanctuary/keepingtracks/AddActivity.java][parseSchedules][1] = -> TRY { -> servicesJson=schedulesJson.getJSONArray("services",)@ -> services=parseServices(servicesJson,"dep",locationCrs,)@ } CATCH(JSONException) { -> errorThrown=(Exception) e@ }
results[https://github.com/SINTEF-9012/oryx-neffics/blob/71c33ba0f09ed696eae0b355f8ef9d00d545da64/poem-jvm/src/java/org/b3mn/poem/jbpm/JsonToJpdl.java][<init>][19] = -> TRY { -> processElements=process.getJSONArray("childShapes",)@ -> LOOP { -> currentElement=processElements.getJSONObject(i,)@i<processElements.length() } }
results[https://github.com/b3log/b3log-latke/blob/3275e026145638664016be01437bd82649b688ff/src/main/java/org/b3log/latke/repository/jdbc/util/JdbcUtil.java][queryJsonArray][2] = -> TRY {  -> jsonObject=queryJson(sql,paramList,connection,false,tableName,)@ -> return jsonObject.getJSONArray(Keys.RESULTS,)@ } CATCH(SQLException,JSONException,RepositoryException) {}
results[https://github.com/tijuca/icedove/blob/3af730cd4d20abf8b988d77b4a9b36e42d4c622e/mozilla/mobile/android/base/FormAssistPopup.java][handleAutoCompleteMessage][1] = -> TRY {  -> suggestions=message.getJSONArray("suggestions",)@ -> rect=message.getJSONObject("rect",)@ } CATCH(JSONException) {}
results[https://github.com/RHIT/Mobile/blob/800a82a2da167c056dc8bb0af223708d00eebae5/android/src/RHITMobile/src/edu/rosehulman/android/directory/model/LocationIdsResponse.java][deserialize][2] = -> TRY {  -> res.ids=deserializeIds(root.getJSONArray("LocationIds",),)@ } CATCH(JSONException) {}
results[https://github.com/jerrycable/Tasquid/blob/e34e7d71e11a606b245fe33167ebf52bce1180e3/tests/src/com/todoroo/astrid/producteev/ProducteevSyncTest.java][getRemoteNotesArray][3] = -> TRY { -> result=remoteTask.getJSONArray("notes",)@ } CATCH(Exception) { -> fail("Remote task object did not contain notes field",)@ }
results[https://github.com/jrecursive/mecha/blob/a68398e165c672aa50086571a7ed1b0b81c611f8/src/java/mecha/vm/MVM.java][getNth][2] = -> TRY {  -> return (T) obj.getJSONArray(field,).get(n,)@ } CATCH(Exception) {}
results[https://github.com/mortenpi/ebookdroid/blob/ecc6190bbbf1f40dc1cbaf85c5f68da5e4387449/src/org/emdev/common/settings/base/JsonArrayPreferenceDefinition.java][restore][5] = -> TRY {  -> setPreferenceValue(edit,root.getJSONArray(key,),)@ } CATCH(JSONException) {}
results[https://github.com/OneBusAway/onebusaway-android/blob/abaca70484e01180cfb7bcfc3f8bfe2942114877/app/src/com/joulespersecond/seattlebusbot/ObaApi.java][getChildArray][4] = -> TRY { -> return obj.getJSONArray(key,)@ } CATCH(JSONException) { -> return new JSONArray()@ }
results[https://github.com/malinovskiy-alex/ifp-shopping/blob/0ce74ecbac58900a7841ecbcec0562b72b373609/shoppingprocess/src/test/java/com/connecture/shopping/process/service/data/converter/PlanAdvisorDataConverterTest.java][testFilterOptions][1] = -> TRY {  -> filterOptionArray=filterObject.getJSONArray("options",)@ -> filterOptionArray.put(filterOptionObject,)@ } CATCH(JSONException,Exception) {}
results[https://github.com/svn2github/SpagoBI-V4x/blob/fb2f8f4e56fd86ba3bb7948b180ecbe50f5e1f66/SpagoBIUtils/src/it/eng/spagobi/tools/dataset/common/association/AssociationGroupJSONSerializer.java][deserialize][4] = -> TRY {  -> associationsJSON=o.getJSONArray("associations",)@ -> associations=associationSerializer.deserialize(associationsJSON,)@ } CATCH(JSONException) {}
results[https://github.com/WISE-Community/WISE-VLE/blob/142636223ec8483b19ddbbc09692061ae7f1da82/src/main/java/vle/domain/project/Project.java][getNodesThatHaveTagMapsByTagNameAndTagFunctionName][1] = -> TRY { -> nodesJSONArray=projectJSON.getJSONArray("nodes",)@ -> LOOP { -> nodeJSONObject=(JSONObject) nodesJSONArray.get(i,)@i<nodesJSONArray.length() } }
results[https://github.com/apache/sling/blob/3a227a681a7f02f4a871e89de17f60fdb0137f59/launchpad/integration-tests/src/main/java/org/apache/sling/launchpad/webapp/integrationtest/userManager/UpdateGroupTest.java][getTestUserMemberships][2] = -> TRY {  -> jsonObj=new JSONObject(json,)@ -> memberships=jsonObj.getJSONArray("memberOf",)@ } CATCH(IOException,JSONException) {}
results[https://github.com/sergeymo/android-radio-t/blob/b9430373db29d6af38ae2d9a6411b85840e9dcad/Radio-T/src/org/dandelion/radiot/live/chat/ResponseParser.java][getRecords][1] = -> TRY {  -> json=new JSONObject(tokener,)@ -> return json.getJSONArray("records",)@ } CATCH(JSONException) {}
results[https://github.com/00stefan00/ITACT_GetConnected/blob/fdfce9d09cb20e810d2853b474b97990333bd6db/src/com/example/getconnected/network/GeoLocation.java][setLocation][5] = -> TRY {  -> results=json.getJSONArray("results",)@ -> resultsObject=results.getJSONObject(0,)@ } CATCH(JSONException) {}
results[https://github.com/stefaniuk/bin/blob/149c7981ab26953aa2c57dd6789a534ab30f32dc/lib.java/com.code4ge.webtools/src/main/java/com/code4ge/webtools/dojo/CombineProfiles.java][reorderLayers][1] = -> TRY {  -> array=profile.getJSONArray("layers",)@ -> profile.put("layers",layers,)@ } CATCH(JSONException) {}
results[https://github.com/Praqma/PRQA/blob/116ed450de8d347e9eaedb93c9470698d4d600ac/src/main/java/net/praqma/jenkins/plugin/prqa/notifier/PRQANotifier.java][newInstance][1] = -> TRY {  -> instance=req.bindJSON(PRQANotifier.class,formData,)@ -> arr=formData.getJSONArray("chosenReport",)@ } CATCH(Descriptor.FormException) {}
results[https://github.com/madhusudancs/asterixdb/blob/95ab427da1a6d67c52902812b646d175001b35d4/asterix-app/src/main/java/edu/uci/ics/asterix/result/ResultUtils.java][prettyPrintHTML][1] = -> TRY { -> resultsWrapper=jsonResultObj.getJSONArray("results",)@ -> LOOP { -> resultsArray=resultsWrapper.getJSONArray(i,)@i<resultsWrapper.length() } }
results[https://github.com/applications4android/ComicReader/blob/81bf3d6fe1b5b6e9975aa378ccff3fdd8d84c854/ComicReader/src/com/blogspot/applications4android/comicreader/core/JsonUtils.java][listOfComics][1] = -> TRY {  -> root=settingsRoot(file,am,)@ -> classes=root.getJSONArray(key,)@ } CATCH(IOException,JSONException) {}
results[https://github.com/parmalazs/schonherz/blob/6a43d83bf39647930311d31ccee7125a4cb37434/FlottaKezelo/src/com/schonherz/classes/JsonFromUrl.java][getRootJsonObject][1] = -> TRY {  -> mainJson=new org.json.JSONObject(jsonString,)@ -> jsonArray=mainJson.getJSONArray("rows",)@ } CATCH(Exception) {}
results[https://github.com/mixi-inc/triaina/blob/9aa1465f461531c7cd6c43e3ce5759352ee58b85/android/Commons/src/jp/mixi/triaina/commons/utils/JSONObjectUtils.java][getJSONArray][2] = -> TRY { -> return json.getJSONArray(key,)@ } CATCH(JSONException) { -> throw new JSONRuntimeException(exp,)@ }
results[https://github.com/christoffer/readmill-java-wrapper/blob/4886cc4c4d1df0b51d6b9b8739e62b09fd28e1b1/src/main/java/com/readmill/api/RequestBuilder.java][fetchItemsOrThrow][1] = -> TRY {  -> fetched=fetchOrThrow()@ -> return fetched.getJSONArray("items",)@ } CATCH(IOException,JSONException) {}
results[https://github.com/sergeymo/android-radio-t/blob/7ed31326a12213057573bc20fe0e4fb699461b14/Radio-T/src/org/dandelion/radiot/live/chat/http/HttpResponseParser.java][getMessageArray][1] = -> TRY {  -> json=new JSONObject(strJson,)@ -> return json.getJSONArray("msgs",)@ } CATCH(JSONException) {}
results[https://github.com/AndlyticsProject/andlytics/blob/7c634f9a0ddf2c234683a0c2fb809c3a2bf87a4f/src/com/github/andlyticsproject/v2/JsonParser.java][parseCommentsCount][1] = -> TRY {  -> return new JSONObject(json,).getJSONArray("result",).getInt(2,)@ } CATCH(JSONException) {}
results[https://github.com/NCIP/psc/blob/f8544f68a13c472091a228a1b436b20b3e025bce/web/src/test/java/edu/northwestern/bioinformatics/studycalendar/restlets/representations/MultipleAssignmentScheduleJsonRepresentationTest.java][testScheduledActivityStateHistoryEndsWithCurrent][8] = -> TRY {  -> actual=outputAsObject()@ -> history=actual.getJSONArray("state_history",)@ -> first=(JSONObject) history.get(1,)@ } CATCH(Exception) {}
results[https://github.com/stephenc/redmine-java-api/blob/23879effc6ddac07ece15f29acaa6897afe1855d/src/main/java/org/redmine/ta/internal/json/JsonInput.java][getArrayOrNull][4] = -> TRY {  -> IF { -> return null@!(obj.has(field,))||obj.isNull(field,) } -> return obj.getJSONArray(field,)@!(!(obj.has(field,))||obj.isNull(field,)) } CATCH(JSONException) {}
results[https://github.com/dudie/itinerennes-android/blob/0b19ad3def65d9ceda26ff0b12bedcc768f101ca/ItineRennes/src/fr/itinerennes/business/http/wms/WFSJsonService.java][getBusStationsFromBbox][2] = -> TRY {  -> data=httpService.execute(createWFSRequest(params,),responseHandler,)@ -> return data.getJSONArray("features",)@ } CATCH(GenericException,JSONException) {}
results[https://github.com/jrecursive/mecha/blob/4185d625dba3d044a862d67ae747bc5abb42e3f5/src/mecha/vm/bifs/StreamModule.java][onDataMessage][2] = -> TRY {  -> msgVec=msg.getJSONArray(dataField,).asList()@ -> Collections.sort(msgVec,comparatorFun,)@ } CATCH(Exception) {}
results[https://github.com/droolsjbpm/jbpm-designer/blob/c0b0bd3733657e8dcf2246d833d6361d2747b7d5/server/src/de/hpi/bpmn2_0/factory/TaskFactory.java][setActivityResources][26] = -> TRY { -> resources=new JSONObject(resourcesProperty,)@ -> items=resources.getJSONArray("items",)@ -> LOOP { -> resource=items.getJSONObject(i,)@i<items.length() } }
results[https://github.com/SINTEF-9012/oryx-neffics/blob/126d1b40d2b4f03211727299d21ad42c675cad1f/editor/server/src/de/hpi/jbpm/JsonToJpdl.java][getOutgoings][14] = -> TRY { -> outs=node.getJSONArray("outgoing",)@ -> LOOP { -> id=outs.getJSONObject(i,).getString("resourceId",)@i<outs.length() } }
results[https://github.com/apurtell/hadoop/blob/743d1f520a171905e77366ad2d14a7a97dd7e646/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/webapp/TestAMWebServicesJobs.java][testJobsSlash][33] = -> TRY {  -> jobs=json.getJSONObject("jobs",)@ -> arr=jobs.getJSONArray("job",)@ -> info=arr.getJSONObject(0,)@ } CATCH(JSONException,Exception) {}
results[https://github.com/amnotbot/amnotbot/blob/4c50fccbc5036854f2a0ab653d6df2103a6c7ff1/src/org/knix/amnotbot/command/GoogleResult.java][<init>][4] = -> TRY {  -> data=answer.getJSONObject("responseData",)@ -> this.result=data.getJSONArray("results",).getJSONObject(0,)@ } CATCH(JSONException) {}
results[https://github.com/thest1/Android-VKontakte-SDK/blob/fa6a71e06911d407196fec80159de793dc29c074/AndroidVkSdk/src/com/perm/kate/api/Api.java][saveDoc][1] = -> TRY {  -> root=sendRequest(params,)@ -> array=root.getJSONArray("response",)@ -> docs=Document.parseDocs(array,)@ } CATCH(IOException,JSONException,KException) {}
results[https://github.com/Dakror/LiturfaliarCest/blob/4fde76e96443bdfa75f28a1f034eb4987a1eedce/Liturfaliar Cest/src/de/dakror/liturfaliar/ui/Talk.java][find][1] = -> TRY { -> LOOP { -> t=initiator.getTalkData().getJSONObject(i,)@i<initiator.getTalkData().length() -> c=t.getJSONArray("cond",)@ } }
results[https://github.com/vstorm83/platform/blob/da0c9857c48d0df294ce3dd6da9ac521e6fcd786/eXoGadget/server/java/gadgets/src/test/java/org/apache/shindig/gadgets/http/JsonRpcHandlerTest.java][testMultipleGadgets][8] = -> TRY {  -> response=jsonRpcHandler.process(input,)@ -> outGadgets=response.getJSONArray("gadgets",)@ -> gadget=outGadgets.getJSONObject(0,)@ } CATCH(Exception) {}
results[https://github.com/nagarajug/NagaRepos/blob/49332663200f056d2c07968b5767840c655f0083/src/jp/co/rakuten/android/basket/http/CartItemHttpRequest.java][getCart][2] = -> TRY { -> jsonObject=new JSONObject(result,)@ -> actionResultObject=jsonObject.getJSONArray("actionResults",)@ -> actionResponseObject=actionResultObject.getJSONObject(0,)@ -> IF { -> return model@actionFinalObject.has("cartModel",) } }
results[https://github.com/haha1903/document/blob/53112f162f8f0fb2aed9064aba86f3af6f836871/document-web/src/test/java/com/glodon/paas/document/api/ProjectRestAPITest.java][testGetRoles][1] = -> TRY {  -> result=this.callGet(url,null,JSONObject.class,)@ -> assertNotNull(result.getJSONArray(KEY_ITEMS,),)@ } CATCH(Exception) {}
results[https://github.com/moovida/geopaparazzi/blob/04098eb9b5329c557c9d487322699aca9ace7ef3/geopaparazzilibrary/src/eu/geopaparazzi/library/forms/TagsManager.java][getFormItems][6] = -> TRY {  -> IF { -> formItemsArray=formObj.getJSONArray(TAG_FORMITEMS,)@formObj.has(TAG_FORMITEMS,) -> return formItemsArray@formObj.has(TAG_FORMITEMS,) } } CATCH(JSONException) {}
results[https://github.com/webdetails/cpf/blob/bb628d8e578d079fa3127b782078129069863c53/cpf-pentaho/test-src/pt/webdetails/cpf/tests/PersistenceTest.java][testInstanceDelete][4] = -> TRY {  -> result=pe.query("select from testClass where @rid = :id",params,)@ -> Assert.assertEquals(result.getJSONArray("object",).length(),0,)@ } CATCH(JSONException) {}
results[https://github.com/mitmel/Locast-Android-UNICEF/blob/7a5cbf467e1fbd77bdb59c2c50887b9429217c94/src/edu/mit/mobile/android/locast/data/Locatable.java][fromJSON][3] = -> TRY {  -> ja=item.getJSONArray(remoteKey,)@ -> lon=ja.getDouble(0,)@ -> lat=ja.getDouble(1,)@ } CATCH(JSONException) {}
results[https://github.com/thest1/Android-VKontakte-SDK/blob/fa6a71e06911d407196fec80159de793dc29c074/AndroidVkSdk/src/com/perm/kate/api/Api.java][saveWallPhoto][3] = -> TRY {  -> root=sendRequest(params,)@ -> array=root.getJSONArray("response",)@ -> photos=parsePhotos(array,)@ } CATCH(IOException,JSONException,KException) {}
results[https://github.com/Luftzig/Chores/blob/3418ea20ed7b93c08878c69aa43675ad157ff065/ChoresOutsideServer/src/il/ac/huji/chores/server/parse/ParseRestClientImpl.java][getTodaysApartmentList][2] = -> TRY {  -> resultJson=new JSONObject(result,)@ -> jsonArr=resultJson.getJSONArray("results",)@ -> apartments=JsonConverter.convertJsonArrayToApartmentList(jsonArr,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/malinovskiy-alex/ifp-shopping/blob/0be4e5aeea64fb82fc8b53aaa6e81e471e0a99d9/shoppingprocess/src/test/java/com/connecture/shopping/process/service/data/converter/ConsumerDataConverterUtilTest.java][testDetermineSelectedProductLines][1] = -> TRY {  -> membersObject=new JSONObject(memberJSON,)@ -> memberArray=membersObject.getJSONArray("members",)@ -> productLines=ConsumerDataConverterUtil.determineSelectedProductLines(memberArray,)@ } CATCH(Exception) {}
results[https://github.com/HugoLnx/parrott/blob/7ba5302079130019e333697877a52d70ca6d171d/src/main/java/br/com/parrot/github/repository/PayloadsParser.java][findCommitFiles][1] = -> TRY {  -> filesJsonObject=new JSONObject(jsonTokener,)@ -> filesJson=filesJsonObject.getJSONArray("files",)@ -> files=parseCommitFiles(filesJson,)@ } CATCH(ClientProtocolException,IOException,JSONException) {}
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIQbeEngine/src/it/eng/spagobi/engines/qbe/analysisstateloaders/worksheet/Version0WorksheetStateLoader.java][convertFilters][1] = -> TRY {  -> filtersObj=aSheet.getJSONObject("filters",)@ -> filters=filtersObj.getJSONArray("filters",)@ -> convertAttributes(filters,)@ } CATCH(Exception) {}
results[https://github.com/ESGF/esgf-web-fe/blob/f58a033a5ebd18c65605449661ecfaed0a364eab/src/java/main/org/esgf/filedownload/OldFileTemplateController.java][getJSONArrayForDatasetidUsingSearchAPI][7] = -> TRY { -> jsonResponse=new JSONObject(extractedString,)@ -> jsonArrayResponseDocs=jsonResponse.getJSONArray("docs",)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/leoncool/healthbook/blob/eb28aed4d0389eba06c7c74eafa5eb999a52164b/src/com/fitbit/api/common/model/timeseries/IntradayDataset.java][<init>][2] = -> TRY {  -> this.datasetInterval=json.getInt("datasetInterval",)@ -> this.dataset=IntradayData.jsonArrayToDataList(json.getJSONArray("dataset",),)@ } CATCH(JSONException) {}
results[https://github.com/eskatos/qipki/blob/a9db9976d773c3cf80f3a495c0ebaa008a974b4d/ca/src/test/java/org/codeartisans/qipki/QiPKIServerTest.java][testCA][2] = -> TRY {  -> caList=new JSONObject(jsonCaList,)@ -> items=caList.getJSONArray("items",)@ -> firstCa=items.getJSONObject(0,)@ } CATCH(InterruptedException,IOException,JSONException) {}
results[https://github.com/JackDanny/projetDCLL_MoodleXML_Json/blob/8fd32dd6097d73413d504e9d520c3bf96fefbda3/projet/src/main/java/jsonttoxml/xmlWriter/XmlWriterImpl.java][t][1] = -> TRY { -> tbis=o2.getJSONObject("quiz",)@ -> t2=tbis.getJSONArray("question",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/svn2github/primefaces-showcase/blob/413c0fd630226d5d79d7e2d49817165c04e5667d/src/main/java/org/primefaces/examples/mobile/TranslateView.java][translate][1] = -> TRY {  -> json=new JSONObject(response,)@ -> jsonArray=json.getJSONArray("text",)@ -> result=jsonArray.getString(0,)@ } CATCH(Exception) {}
results[https://github.com/vadimbobrov/hdup/blob/6e3ff3169e8d38c437a4ef2103a8d978a4c7c01b/src/main/java/com/os/rest/exchange/TimeSeriesData.java][fromJSON][2] = -> TRY { -> ja=jo.getJSONArray("data",)@ -> size=ja.length()@ -> LOOP { -> item=ja.getJSONObject(i,)@i<size } }
results[https://github.com/dudie/itinerennes-android/blob/854d57529b56e4074cf37943f81e76c7c83e4126/ItineRennes/src/fr/itinerennes/business/http/keolis/KeolisJsonService.java][getAllSubwayStations][5] = -> TRY {  -> data=httpService.execute(createKeolisRequest(params,),responseHandler,)@ -> return data.getJSONArray("station",)@ } CATCH(GenericException,JSONException) {}
results[https://github.com/watabou/Watabou-Classes/blob/b060159ae73902b262defeb68d0560732dc52ab7/com/watabou/utils/Bundle.java][getIntArray][1] = -> TRY { -> array=data.getJSONArray(key,)@ -> length=array.length()@ -> LOOP { -> result[i]=array.getInt(i,)@i<length } }
results[https://github.com/watabou/Watabou-Classes/blob/b060159ae73902b262defeb68d0560732dc52ab7/com/watabou/utils/Bundle.java][getBooleanArray][1] = -> TRY { -> array=data.getJSONArray(key,)@ -> length=array.length()@ -> LOOP { -> result[i]=array.getBoolean(i,)@i<length } }
results[https://github.com/shamansir/vimeoid/blob/622f88a5ead674e3b04c44fee445648bbef91500/apk/src/org/vimeoid/dto/advanced/Video.java][collectFromJson][1] = -> TRY {  -> return extractFromJson(jsonObj.getJSONArray(FieldsKeys.SINGLE_KEY,).getJSONObject(0,),)@ } CATCH(JSONException) {}
results[https://github.com/forcedotcom/SalesforceMobileSDK-Android/blob/aeb022c9a1082ef038801fedaea2dd92a48585d4/libs/SmartSync/src/com/salesforce/androidsdk/smartsync/util/MruSyncDownTarget.java][startFetch][2] = -> TRY {  -> responseJson=response.asJSONObject()@ -> records=responseJson.getJSONArray(Constants.RECORDS,)@ -> totalSize=records.length()@ } CATCH(IOException,JSONException) {}
results[https://github.com/sismics/docs/blob/870a44da0d520befbc41e007a63fa468487742f5/docs-web/src/test/java/com/sismics/docs/rest/TestDocumentResource.java][searchDocuments][1] = -> TRY {  -> json=response.getEntity(JSONObject.class,)@ -> return json.getJSONArray("documents",).length()@ } CATCH(Exception) {}
results[https://github.com/Luftzig/Chores/blob/3418ea20ed7b93c08878c69aa43675ad157ff065/ChoresOutsideServer/src/il/ac/huji/chores/server/parse/ParseRestClientImpl.java][getApartmentChoreInfos][1] = -> TRY {  -> resultJson=new JSONObject(result,)@ -> jsonArr=resultJson.getJSONArray("results",)@ -> choreInfoList=JsonConverter.convertJsonArrayToChoreInfoList(jsonArr,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/cgreenhalgh/droolstest/blob/3d2f266cb53e281232b28d753f7675a1a932f003/src/uk/ac/horizon/ug/hyperplace/proxy/Main.java][addClientStateUpdate][2] = -> TRY {  -> clientData=clientUpdate.getJSONObject("__data",)@ -> clientData.getJSONArray("__stateUpdates",).put(clientStatelet,)@ } CATCH(JSONException) {}
results[https://github.com/b3log/b3log-solo/blob/6dd068ee3746c90247b481eef87a8f92c7cc9536/core/src/main/java/org/b3log/solo/service/ArticleQueryService.java][getUnpublishedArticles][1] = -> TRY {  -> result=articleRepository.get(query,)@ -> articles=result.getJSONArray(Keys.RESULTS,)@ -> return CollectionUtils.jsonArrayToList(articles,)@ } CATCH(RepositoryException,JSONException) {}
results[https://github.com/coderek/store/blob/689bc9e11cb12119b4d1f4b1bd1e77e84ac69e61/src/com/starhub/store/JSONFactory.java][getAllApplications][1] = -> TRY { -> allObj=new JSONObject(response,)@ -> IF { -> allObjs=allObj.getJSONArray("all",)@allObj.has("all",) -> apps=getApplications(allObjs,self,)@!(allObj.has("all",)) -> return apps@allObj.has("all",) } }
results[https://github.com/Dakror/LiturfaliarCest/blob/6d0200ac0d4fab6e9607bbd98d1bff8a45aae2d2/src/de/dakror/liturfaliarcest/game/entity/Entity.java][getTalk][2] = -> TRY { -> return (meta.has("talk",))?meta.getJSONArray("talk",):null@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/collectionspace/application/blob/d513f21684222aaaa6c6958c434a0b32e6606168/tomcat-main/src/test/java/org/collectionspace/chain/csp/webui/main/TestUIAuthZ.java][createUsers][1] = -> TRY {  -> result=new JSONObject(out.getContent(),)@ -> items=result.getJSONArray("items",)@ } CATCH(Exception) {}
results[https://github.com/terraframe/Runway-SDK/blob/4e1a50a6e89369a0ea61403f3dc6ca0aef06f5a8/runwaysdk-test/src/main/java/com/runwaysdk/facade/JSONInvokeMethodTest.java][testInvokeEmptyMethod][1] = -> TRY {  -> returnObject=new JSONObject(returnJSON,)@ -> jsonArray=returnObject.getJSONArray(JSONReturnObject.RETURN_VALUE,)@ -> jsonObject=jsonArray.getJSONObject(DTOConversionUtilInfo.JSON_CALLED_OBJECT,)@ } CATCH(Exception) {}
results[https://github.com/00stefan00/ITACT_GetConnected/blob/d0b6238b3f0dee4878c8d2e91c6dc3df672a30fc/src/com/util/getconnected/JSONParser.java][getArrayFromRequest][1] = -> TRY {  -> jsonObject=this.getObjectFromRequest(json,)@ -> return this.JSONArrayToArrayList(jsonObject.getJSONArray(keyword,),)@ } CATCH(JSONException) {}
results[https://github.com/stephenfox/iceweasel-dev/blob/cdd8a076d28a6dc919f519243825a8f747f75d6b/mobile/android/base/FormAssistPopup.java][handleValidationMessage][2] = -> TRY {  -> validationMessage=message.getString("validationMessage",)@ -> rect=message.getJSONArray("rect",)@ -> zoom=message.getDouble("zoom",)@ } CATCH(JSONException) {}
results[https://github.com/jenkinsci/fstrigger-plugin/blob/a8a6844f2142021eb8fa5ab94efe00333bf7a731/src/main/java/org/jenkinsci/plugins/fstrigger/triggers/FileNameTrigger.java][setContentNature][1] = -> TRY { -> contentFileTypesJsonElt=inspectingFileContentJSONObject.getJSONArray("contentFileTypes",)@ } CATCH(JSONException) { -> contentFileTypesJsonElt=inspectingFileContentJSONObject.getJSONObject("contentFileTypes",)@ } -> types=req.bindJSONToList(FSTriggerContentFileType.class,contentFileTypesJsonElt,)@
results[https://github.com/watabou/Watabou-Classes/blob/b060159ae73902b262defeb68d0560732dc52ab7/com/watabou/utils/Bundle.java][getStringArray][1] = -> TRY { -> array=data.getJSONArray(key,)@ -> length=array.length()@ -> LOOP { -> result[i]=array.getString(i,)@i<length } }
results[https://github.com/Luftzig/Chores/blob/3418ea20ed7b93c08878c69aa43675ad157ff065/ChoresOutsideServer/src/il/ac/huji/chores/server/parse/ParseRestClientImpl.java][getApartmentRoommates][1] = -> TRY {  -> resultJson=new JSONObject(result,)@ -> jsonArr=resultJson.getJSONArray("results",)@ -> roommates=JsonConverter.convertArrToRoommatesList(jsonArr,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/socialpercon/andor-s-tail/blob/bc1fb7daa547ba9a83ed1ebb386e011045dfcaa4/AndorsTrail/src/com/gpl/rpg/AndorsTrail/resource/parsers/DropListParser.java][parseObject][1] = -> TRY {  -> droplistID=o.getString(JsonFieldNames.DropList.dropListID,)@ -> array=o.getJSONArray(JsonFieldNames.DropList.items,)@ -> dropItemParser.parseRows(array,items,)@ } CATCH(JSONException) {}
results[https://github.com/fenrrir/midgard/blob/d84b06d452643190b6a067ae78ffda9e99d4e3ef/src/midgard/app/DefaultAppRepositoryManager.java][loadVectorDataFrom][1] = -> TRY { -> v=JSONUtils.JSONArrayToVectorString(json.getJSONArray(name,),)@ } CATCH(JSONException) { -> v=new Vector()@ }
results[https://github.com/jdm64/GenesisChess-Android/blob/a901da8accc6fa6b4cd63ea45c60095e1cb87893/src/com/chess/genesis/service/GenesisNotifier.java][NewMsgs][1] = -> TRY { -> msgs=json.getJSONArray("msglist",)@ } CATCH(JSONException) { -> e.printStackTrace()@ -> throw new RuntimeException()@ }
results[https://github.com/domogik/domodroid/blob/ce8915a242d9c730beb005a6f7c979f55a016a93/src/database/JSONParser.java][StateValueINT][1] = -> TRY {  -> itemArray=json.getJSONArray("stats",)@ -> temp=itemArray.getJSONObject(0,).getInt("value",)@ } CATCH(JSONException) {}
results[https://github.com/filip-jovanovic/chase_game/blob/43a97de673aad9eb14d7a5b2b6599f753f0dac77/src/edu/elfak/chasegame/HTTPHelper.java][getGameList][1] = -> json=getJSONFromUrl(SERVER_URL+GAME_LIST_URL,)@ -> TRY { -> jsonGames=json.getJSONArray(TAG_GAMES,)@ -> LOOP { -> c=jsonGames.getJSONObject(i,)@i<jsonGames.length() } }
results[https://github.com/JPMoresmau/eclipsefp/blob/2185848dd73c34409afd5c440e7617aabfabffef/net.sf.eclipsefp.haskell.browser/src/net/sf/eclipsefp/haskell/browser/items/HoogleResultPackage.java][<init>][1] = -> TRY {  -> results=o.getJSONArray("results",)@ -> this.pkg=new HaskellPackage(results.getJSONObject(0,),)@ } CATCH(JSONException) {}
results[https://github.com/RHIT/RHITMobile-Android/blob/e671be4f20deb70bacf05cd6ea0a023e0cc1f5c1/src/RHITMobile/src/edu/rosehulman/android/directory/model/LocationNamesCollection.java][deserialize][2] = -> TRY {  -> res.version=root.getString("Version",)@ -> res.locations=deserializeLocationNames(root.getJSONArray("Names",),)@ } CATCH(JSONException) {}
results[https://github.com/alberapps/tiempobus/blob/dce7b12a8948a4c2a630ff9052ee0cba0b063b28/TiempoBus/src/alberapps/java/weather/openweathermap/WeatherDataParser.java][getMaxTemperatureForDay][1] = -> TRY {  -> object=new JSONObject(weatherJsonStr,)@ -> list=object.getJSONArray("list",)@ -> day=list.getJSONObject(dayIndex,)@ } CATCH(JSONException) {}
results[https://github.com/AmineS/CodeJam2012/blob/524283dc8c4d476f2755a11f99cca6ae3f7fe808/src/reporting/TradeHistory.java][jsonToHtml][1] = -> TRY { -> trans=json.getJSONArray("transactions",)@ } CATCH(JSONException) { -> e.printStackTrace()@ } -> map=parseJson(trans,)@
results[https://github.com/RHIT/Mobile/blob/68659e2dcbed8b1e86b805dec2a802a300d70996/android/src/RHITMobile/src/edu/rosehulman/android/directory/model/LocationCollection.java][deserialize][4] = -> TRY {  -> res.version=root.getString("Version",)@ -> res.mapAreas=deserializeMapAreas(root.getJSONArray("Locations",),)@ } CATCH(JSONException) {}
results[https://github.com/melchor629/Musicote-Melchor629/blob/94ad7c6548b00ea3573b7c4593c2d4eb500cad13/src/com/melchor629/musicote/scrobbler/Album.java][getAlbumUrl][1] = -> TRY { -> image=album.getJSONArray("image",)@ -> images=image.getJSONObject(id,)@ } CATCH(NullPointerException) { -> Log.e(TAG,"Last.FM no ha encontrado el álbum",)@ }
results[https://github.com/JPMoresmau/eclipsefp/blob/3e6bd3d52cbb71bb5ecd1a121826edb157e5c152/net.sf.eclipsefp.haskell.buildwrapper/src/net/sf/eclipsefp/haskell/buildwrapper/types/ImportClean.java][<init>][1] = -> TRY {  -> this.text=obj.getString("t",)@ -> this.loc=new Location(f,obj.getJSONArray("l",),)@ } CATCH(JSONException) {}
results[https://github.com/egeniq/egeniq-android/blob/77ff91c58b44a79a0498ed031f3caf2008416736/src/io/msgs/v2/entity/AbstractEntity.java][_getArray][1] = -> TRY { -> IF { -> return null@!(_data.has(key,))||_data.isNull(key,) } ELSE { -> return _data.getJSONArray(key,)@!(!(_data.has(key,))||_data.isNull(key,)) } }
results[https://github.com/Luftzig/Chores/blob/3418ea20ed7b93c08878c69aa43675ad157ff065/ChoresOutsideServer/src/il/ac/huji/chores/server/parse/ParseRestClientImpl.java][getRoommateCoins][1] = -> TRY {  -> jsonResult=new JSONObject(result,)@ -> jsonArr=jsonResult.getJSONArray("results",)@ -> coinsJson=jsonArr.getJSONObject(0,)@ } CATCH(ClientProtocolException,IOException) {}
results[https://github.com/Dakror/LiturfaliarCest/blob/ad84b78ccbebdb60a333ef8591748f3f968dba2e/Liturfaliar Cest/src/de/dakror/liturfaliar/map/Map.java][loadMap][1] = -> TRY { -> loadCreatures(o.getJSONArray("npc",),)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/malinovskiy-alex/ifp-shopping/blob/0be4e5aeea64fb82fc8b53aaa6e81e471e0a99d9/shoppingprocess/src/test/java/com/connecture/shopping/process/service/data/converter/ConsumerDataConverterUtilTest.java][testBuildShoppingMembers][1] = -> TRY {  -> membersObject=new JSONObject(memberJSON,)@ -> memberArray=membersObject.getJSONArray("members",)@ -> members=ConsumerDataConverterUtil.buildShoppingMembers(memberArray,)@ } CATCH(Exception) {}
results[https://github.com/cegerard/appsGate-server/blob/0b001e7d77511b0bf894dac0fe3c8e181b685311/sources/apam.components/EUDE_Intepreter/src/main/java/appsgate/lig/eude/interpreter/langage/nodes/NodeAction.java][<init>][1] = -> TRY {  -> deviceId=ruleJSON.getString("deviceId",)@ -> methodName=ruleJSON.getString("methodName",)@ -> args=ruleJSON.getJSONArray("args",)@ } CATCH(JSONException) {}
results[https://github.com/apache/sling/blob/916a08a7d789ac4aebf137d89453aeade1e63586/launchpad/integration-tests/src/main/java/org/apache/sling/launchpad/webapp/integrationtest/servlets/post/PostServletImportTest.java][testImportAutoCheckoutNodes][1] = -> TRY {  -> responseJSON=new JSONObject(responseBodyAsString,)@ -> changes=responseJSON.getJSONArray("changes",)@ -> checkoutChange=changes.getJSONObject(0,)@ } CATCH(IOException,JSONException) {}
results[https://github.com/kenshiryu7/mdv-projects/blob/164d015c5b3d88c915fa0caa5cdf58e406894e7b/APD2/Canine_Care/src/com/lpuente/canine_care/PlaceJSONParser.java][parse][1] = -> TRY { -> jPlaces=jObject.getJSONArray("results",)@ } CATCH(JSONException) { -> e.printStackTrace()@ } -> return getPlaces(jPlaces,)@
results[https://github.com/workhabitinc/dandy/blob/3a634160b70c9d262a29e657c1c5360dcbfef6e1/andrupal-api/src/main/java/org/workhabit/drupal/api/json/DrupalJsonObjectSerializer.java][extractDataArray][1] = -> TRY {  -> objectResult=new JSONObject(json,)@ -> assertNoErrors(objectResult,)@ -> return objectResult.getJSONArray("#data",)@ } CATCH(JSONException,DrupalFetchException) {}
results[https://github.com/momoplan/Android/blob/b85f02d4695dd7e0d427b84ecd6d3a8d7a9dff4f/Ruyicai_168/v3.5.4/v3.5.4/src/com/ruyicai/activity/join/JoinDetailActivity.java][setValuecanyulist][9] = -> TRY { -> array=json.getJSONArray("result",)@ -> allpage=Integer.parseInt(json.getString("totalPage",),)@ -> LOOP { -> obj=array.getJSONObject(i,)@i<array.length() } }
results[https://github.com/momoplan/Android/blob/2afb50b1f6dea55fe7f3f9ca8746f315bad68600/Ruyicai_168/v3.9.1/src/com/ruyicai/activity/buy/NoticeHistroy.java][JsonToString][6] = -> TRY {  -> prizeArray=prizemore.getJSONArray("result",)@ -> LOOP { -> prizeJson=(JSONObject) prizeArray.get(i,)@i<prizeArray.length() } } CATCH(JSONException) {}
results[https://github.com/algolia/algoliasearch-client-java/blob/3f83b4cbce0d75765e2381c280001e4228355590/src/test/java/com/algolia/search/saas/SimpleTest.java][test13_settings][1] = -> TRY {  -> settings=index.getSettings()@ -> assertEquals("firstname",settings.getJSONArray("attributesToRetrieve",).getString(0,),)@ } CATCH(AlgoliaException,JSONException) {}
results[https://github.com/Sage-Bionetworks/workflow/blob/818d6d4c04f355aac585a0c4268798636880d5b4/tools/tcgaWorkflow/src/test/java/org/sagebionetworks/workflow/curation/TcgaWorkflowITCase.java][testDoCreateClinicalMetadata][1] = -> TRY {  -> annotations=allAnnotations.getJSONObject("stringAnnotations",)@ -> assertEquals("tsv",annotations.getJSONArray("format",).get(0,),)@ } CATCH(Exception) {}
results[https://github.com/nicholasdelrio/VLC/blob/9c068cf872397938c0d80c060ff43e5bb19cbba1/vlc-visko-interface/src/main/java/edu/utep/cybershare/vlc/visko/batch/HTMLQueryBatch.java][extractProvenanceDataURL][1] = -> TRY { -> resultsArray=aVisKoResult.getJSONArray("results",)@ -> provenanceURL=resultsArray.getJSONObject(0,).getString("provenance",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/malinovskiy-alex/ifp-shopping/blob/ef501c5c1ea3d53c0bc3a3037ea8ae30fcd18612/shoppingprocess/src/main/java/com/connecture/shopping/process/message/PlanEmailConverterUtils.java][convertToBenefitCategories][1] = -> TRY {  -> benefitCategoriesJSON=planJSON.getJSONArray("benefitCategories",)@ -> LOOP { -> benefitCategory=benefitCategoriesJSON.getJSONObject(i,)@i<benefitCategoriesJSON.length() } } CATCH(JSONException) {}
