results[https://github.com/HeraldStudio/EzHerald/blob/3f17a7c50e7dee536dd2858efc0618d82451b257/EzHerald/src/com/herald/ezherald/library/LibraryBookListDetailThread.java][<init>][12] = -> TRY {  -> this.jsonarray=mjson.getJSONArray("stores",)@ } CATCH(JSONException) {}
results[https://github.com/bmander/seattle-bus-bot/blob/d9a59f9f7a9813c399230685720c42fee839594e/src/com/joulespersecond/seattlebusbot/ObaApi.java][getChildArray][4] = -> TRY { -> return obj.getJSONArray(key,)@ } CATCH(JSONException) { -> return new JSONArray()@ }
results[https://github.com/RHIT/RHITMobile-Android/blob/be2fc76438ca750f1254dba949d4a11fcfb978b9/src/RHITMobile/src/edu/rosehulman/android/directory/model/LocationIdsResponse.java][deserialize][2] = -> TRY {  -> res.ids=deserializeIds(root.getJSONArray("LocationIds",),)@ } CATCH(JSONException) {}
results[https://github.com/mortenpi/ebookdroid/blob/46993b3187e16acd322396829126ca7977c2fd4c/src/org/ebookdroid/common/settings/base/JsonArrayPreferenceDefinition.java][restore][5] = -> TRY {  -> setPreferenceValue(edit,root.getJSONArray(key,),)@ } CATCH(JSONException) {}
results[https://github.com/seawolf/KeepingTracks/blob/d696457fe1d507018a0423f864c4c4172645dcd1/src/com/seawolfsanctuary/keepingtracks/AddActivity.java][parseSchedules][1] = -> TRY { -> servicesJson=schedulesJson.getJSONArray("services",)@ -> services=parseServices(servicesJson,"dep",locationCrs,)@ } CATCH(JSONException) { -> errorThrown=(Exception) e@ }
results[https://github.com/RHIT/Mobile/blob/19f1e0813e29fec4151b06ab8b632df9c447f91b/android/src/RHITMobile/src/edu/rosehulman/android/directory/model/UsersResponse.java][deserialize][4] = -> TRY {  -> res.users=ShortUser.deserialize(root.getJSONArray("Users",),)@ } CATCH(JSONException) {}
results[https://github.com/tijuca/icedove/blob/3af730cd4d20abf8b988d77b4a9b36e42d4c622e/mozilla/mobile/android/base/FormAssistPopup.java][handleAutoCompleteMessage][1] = -> TRY {  -> suggestions=message.getJSONArray("suggestions",)@ -> rect=message.getJSONObject("rect",)@ } CATCH(JSONException) {}
results[https://github.com/mixi-inc/triaina/blob/9aa1465f461531c7cd6c43e3ce5759352ee58b85/android/Commons/src/jp/mixi/triaina/commons/utils/JSONObjectUtils.java][getJSONArray][2] = -> TRY { -> return json.getJSONArray(key,)@ } CATCH(JSONException) { -> throw new JSONRuntimeException(exp,)@ }
results[https://github.com/sergeymo/android-radio-t/blob/b9430373db29d6af38ae2d9a6411b85840e9dcad/Radio-T/src/org/dandelion/radiot/live/chat/ResponseParser.java][getRecords][1] = -> TRY {  -> json=new JSONObject(tokener,)@ -> return json.getJSONArray("records",)@ } CATCH(JSONException) {}
results[https://github.com/00stefan00/ITACT_GetConnected/blob/fdfce9d09cb20e810d2853b474b97990333bd6db/src/com/example/getconnected/network/GeoLocation.java][setLocation][5] = -> TRY {  -> results=json.getJSONArray("results",)@ -> resultsObject=results.getJSONObject(0,)@ } CATCH(JSONException) {}
results[https://github.com/stefaniuk/bin/blob/149c7981ab26953aa2c57dd6789a534ab30f32dc/lib.java/com.code4ge.webtools/src/main/java/com/code4ge/webtools/dojo/CombineProfiles.java][reorderLayers][1] = -> TRY {  -> array=profile.getJSONArray("layers",)@ -> profile.put("layers",layers,)@ } CATCH(JSONException) {}
results[https://github.com/sergeymo/android-radio-t/blob/7ed31326a12213057573bc20fe0e4fb699461b14/Radio-T/src/org/dandelion/radiot/live/chat/http/HttpResponseParser.java][getMessageArray][1] = -> TRY {  -> json=new JSONObject(strJson,)@ -> return json.getJSONArray("msgs",)@ } CATCH(JSONException) {}
results[https://github.com/AndlyticsProject/andlytics/blob/7c634f9a0ddf2c234683a0c2fb809c3a2bf87a4f/src/com/github/andlyticsproject/v2/JsonParser.java][parseCommentsCount][1] = -> TRY {  -> return new JSONObject(json,).getJSONArray("result",).getInt(2,)@ } CATCH(JSONException) {}
results[https://github.com/stephenc/redmine-java-api/blob/23879effc6ddac07ece15f29acaa6897afe1855d/src/main/java/org/redmine/ta/internal/json/JsonInput.java][getArrayOrNull][4] = -> TRY {  -> IF { -> return null@!(obj.has(field,))||obj.isNull(field,) } -> return obj.getJSONArray(field,)@!(!(obj.has(field,))||obj.isNull(field,)) } CATCH(JSONException) {}
results[https://github.com/amnotbot/amnotbot/blob/4c50fccbc5036854f2a0ab653d6df2103a6c7ff1/src/org/knix/amnotbot/command/GoogleResult.java][<init>][4] = -> TRY {  -> data=answer.getJSONObject("responseData",)@ -> this.result=data.getJSONArray("results",).getJSONObject(0,)@ } CATCH(JSONException) {}
results[https://github.com/webdetails/cpf/blob/bb628d8e578d079fa3127b782078129069863c53/cpf-pentaho/test-src/pt/webdetails/cpf/tests/PersistenceTest.java][testInstanceAdd][4] = -> TRY {  -> result=pe.query("select from testClass where @rid = :id",params,)@ -> Assert.assertEquals(result.getJSONArray("object",).length(),1,)@ } CATCH(JSONException) {}
results[https://github.com/moovida/geopaparazzi/blob/04098eb9b5329c557c9d487322699aca9ace7ef3/geopaparazzilibrary/src/eu/geopaparazzi/library/forms/TagsManager.java][getFormItems][6] = -> TRY {  -> IF { -> formItemsArray=formObj.getJSONArray(TAG_FORMITEMS,)@formObj.has(TAG_FORMITEMS,) -> return formItemsArray@formObj.has(TAG_FORMITEMS,) } } CATCH(JSONException) {}
results[https://github.com/Dakror/LiturfaliarCest/blob/6d0200ac0d4fab6e9607bbd98d1bff8a45aae2d2/src/de/dakror/liturfaliarcest/game/entity/Entity.java][getTalk][2] = -> TRY { -> return (meta.has("talk",))?meta.getJSONArray("talk",):null@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/mstepan/incubator/blob/e27425ef51eb4de8714dafdce1286fb49d8cb681/WellnessPortal/src/main/java/com/fitbit/api/common/model/timeseries/IntradayDataset.java][<init>][2] = -> TRY {  -> this.datasetInterval=json.getInt("datasetInterval",)@ -> this.dataset=IntradayData.jsonArrayToDataList(json.getJSONArray("dataset",),)@ } CATCH(JSONException) {}
results[https://github.com/mitmel/Locast-Android-UNICEF/blob/7a5cbf467e1fbd77bdb59c2c50887b9429217c94/src/edu/mit/mobile/android/locast/data/Locatable.java][fromJSON][3] = -> TRY {  -> ja=item.getJSONArray(remoteKey,)@ -> lon=ja.getDouble(0,)@ -> lat=ja.getDouble(1,)@ } CATCH(JSONException) {}
results[https://github.com/ferquies/2dam/blob/62e5f62cdd5c361b6c94e8faa1b9780bafd177df/PMUL/JsonURL/src/com/fernando/jsonurl/MyAdapter.java][<init>][7] = -> TRY { -> jsonobj=new JSONObject(json,)@ -> jsarr=jsonobj.getJSONArray("estudiantes",)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/cgreenhalgh/droolstest/blob/3d2f266cb53e281232b28d753f7675a1a932f003/src/uk/ac/horizon/ug/hyperplace/proxy/Main.java][addClientMessageUpdate][2] = -> TRY {  -> clientData=clientUpdate.getJSONObject("__data",)@ -> clientData.getJSONArray("__messageUpdates",).put(clientMsg,)@ } CATCH(JSONException) {}
results[https://github.com/00stefan00/ITACT_GetConnected/blob/d0b6238b3f0dee4878c8d2e91c6dc3df672a30fc/src/com/util/getconnected/JSONParser.java][getArrayFromRequest][1] = -> TRY {  -> jsonObject=this.getObjectFromRequest(json,)@ -> return this.JSONArrayToArrayList(jsonObject.getJSONArray(keyword,),)@ } CATCH(JSONException) {}
results[https://github.com/stephenfox/iceweasel-dev/blob/cdd8a076d28a6dc919f519243825a8f747f75d6b/mobile/android/base/FormAssistPopup.java][handleValidationMessage][2] = -> TRY {  -> validationMessage=message.getString("validationMessage",)@ -> rect=message.getJSONArray("rect",)@ -> zoom=message.getDouble("zoom",)@ } CATCH(JSONException) {}
results[https://github.com/jenkinsci/fstrigger-plugin/blob/a8a6844f2142021eb8fa5ab94efe00333bf7a731/src/main/java/org/jenkinsci/plugins/fstrigger/triggers/FileNameTrigger.java][setContentNature][1] = -> TRY { -> contentFileTypesJsonElt=inspectingFileContentJSONObject.getJSONArray("contentFileTypes",)@ } CATCH(JSONException) { -> contentFileTypesJsonElt=inspectingFileContentJSONObject.getJSONObject("contentFileTypes",)@ } -> types=req.bindJSONToList(FSTriggerContentFileType.class,contentFileTypesJsonElt,)@
results[https://github.com/socialpercon/andor-s-tail/blob/bc1fb7daa547ba9a83ed1ebb386e011045dfcaa4/AndorsTrail/src/com/gpl/rpg/AndorsTrail/resource/parsers/DropListParser.java][parseObject][1] = -> TRY {  -> droplistID=o.getString(JsonFieldNames.DropList.dropListID,)@ -> array=o.getJSONArray(JsonFieldNames.DropList.items,)@ -> dropItemParser.parseRows(array,items,)@ } CATCH(JSONException) {}
results[https://github.com/fenrrir/midgard/blob/d84b06d452643190b6a067ae78ffda9e99d4e3ef/src/midgard/app/DefaultAppRepositoryManager.java][loadVectorDataFrom][1] = -> TRY { -> v=JSONUtils.JSONArrayToVectorString(json.getJSONArray(name,),)@ } CATCH(JSONException) { -> v=new Vector()@ }
results[https://github.com/jdm64/GenesisChess-Android/blob/a901da8accc6fa6b4cd63ea45c60095e1cb87893/src/com/chess/genesis/service/GenesisNotifier.java][NewMsgs][1] = -> TRY { -> msgs=json.getJSONArray("msglist",)@ } CATCH(JSONException) { -> e.printStackTrace()@ -> throw new RuntimeException()@ }
results[https://github.com/domogik/domodroid/blob/ce8915a242d9c730beb005a6f7c979f55a016a93/src/database/JSONParser.java][StateValueINT][1] = -> TRY {  -> itemArray=json.getJSONArray("stats",)@ -> temp=itemArray.getJSONObject(0,).getInt("value",)@ } CATCH(JSONException) {}
results[https://github.com/JPMoresmau/eclipsefp/blob/2185848dd73c34409afd5c440e7617aabfabffef/net.sf.eclipsefp.haskell.browser/src/net/sf/eclipsefp/haskell/browser/items/HoogleResultPackage.java][<init>][1] = -> TRY {  -> results=o.getJSONArray("results",)@ -> this.pkg=new HaskellPackage(results.getJSONObject(0,),)@ } CATCH(JSONException) {}
results[https://github.com/RHIT/RHITMobile-Android/blob/e671be4f20deb70bacf05cd6ea0a023e0cc1f5c1/src/RHITMobile/src/edu/rosehulman/android/directory/model/LocationNamesCollection.java][deserialize][2] = -> TRY {  -> res.version=root.getString("Version",)@ -> res.locations=deserializeLocationNames(root.getJSONArray("Names",),)@ } CATCH(JSONException) {}
results[https://github.com/alberapps/tiempobus/blob/dce7b12a8948a4c2a630ff9052ee0cba0b063b28/TiempoBus/src/alberapps/java/weather/openweathermap/WeatherDataParser.java][getMaxTemperatureForDay][1] = -> TRY {  -> object=new JSONObject(weatherJsonStr,)@ -> list=object.getJSONArray("list",)@ -> day=list.getJSONObject(dayIndex,)@ } CATCH(JSONException) {}
results[https://github.com/AmineS/CodeJam2012/blob/524283dc8c4d476f2755a11f99cca6ae3f7fe808/src/reporting/TradeHistory.java][jsonToHtml][1] = -> TRY { -> trans=json.getJSONArray("transactions",)@ } CATCH(JSONException) { -> e.printStackTrace()@ } -> map=parseJson(trans,)@
results[https://github.com/RHIT/Mobile/blob/68659e2dcbed8b1e86b805dec2a802a300d70996/android/src/RHITMobile/src/edu/rosehulman/android/directory/model/LocationCollection.java][deserialize][4] = -> TRY {  -> res.version=root.getString("Version",)@ -> res.mapAreas=deserializeMapAreas(root.getJSONArray("Locations",),)@ } CATCH(JSONException) {}
results[https://github.com/JPMoresmau/eclipsefp/blob/3e6bd3d52cbb71bb5ecd1a121826edb157e5c152/net.sf.eclipsefp.haskell.buildwrapper/src/net/sf/eclipsefp/haskell/buildwrapper/types/ImportClean.java][<init>][1] = -> TRY {  -> this.text=obj.getString("t",)@ -> this.loc=new Location(f,obj.getJSONArray("l",),)@ } CATCH(JSONException) {}
results[https://github.com/Dakror/LiturfaliarCest/blob/ad84b78ccbebdb60a333ef8591748f3f968dba2e/Liturfaliar Cest/src/de/dakror/liturfaliar/map/Map.java][loadMap][1] = -> TRY { -> loadCreatures(o.getJSONArray("npc",),)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/shamansir/vimeoid/blob/622f88a5ead674e3b04c44fee445648bbef91500/apk/src/org/vimeoid/dto/advanced/Video.java][collectFromJson][1] = -> TRY {  -> return extractFromJson(jsonObj.getJSONArray(FieldsKeys.SINGLE_KEY,).getJSONObject(0,),)@ } CATCH(JSONException) {}
results[https://github.com/cegerard/appsGate-server/blob/0b001e7d77511b0bf894dac0fe3c8e181b685311/sources/apam.components/EUDE_Intepreter/src/main/java/appsgate/lig/eude/interpreter/langage/nodes/NodeAction.java][<init>][1] = -> TRY {  -> deviceId=ruleJSON.getString("deviceId",)@ -> methodName=ruleJSON.getString("methodName",)@ -> args=ruleJSON.getJSONArray("args",)@ } CATCH(JSONException) {}
results[https://github.com/kenshiryu7/mdv-projects/blob/164d015c5b3d88c915fa0caa5cdf58e406894e7b/APD2/Canine_Care/src/com/lpuente/canine_care/PlaceJSONParser.java][parse][1] = -> TRY { -> jPlaces=jObject.getJSONArray("results",)@ } CATCH(JSONException) { -> e.printStackTrace()@ } -> return getPlaces(jPlaces,)@
results[https://github.com/momoplan/Android/blob/b85f02d4695dd7e0d427b84ecd6d3a8d7a9dff4f/Ruyicai_General/v3.4.1/v3.4.1/src/com/ruyicai/activity/buy/HighFrequencyNoticeHistroyActivity.java][JsonToString][176] = -> TRY {  -> prizeArray=prizemore.getJSONArray("result",)@ -> LOOP { -> prizeJson=(JSONObject) prizeArray.get(i,)@i<prizeArray.length() } } CATCH(JSONException) {}
results[https://github.com/behrica/jira-rest-java-client/blob/71f9ca2dc12a7d9ba342295fe0538f26b7c9fa23/atlassian-jira-rest-java-client/src/main/java/com/atlassian/jira/rest/restjavaclient/internal/json/WatchersJsonParserBuilder.java][parse][4] = -> TRY {  -> watchers=JsonParseUtil.parseJsonArray(json.getJSONArray("watchers",),userJsonParser,)@ -> return new Watchers(parseValueImpl(json,),watchers,)@ } CATCH(JSONException) {}
results[https://github.com/MIT-Mobile/MIT-Mobile-for-Android/blob/e94a3ddfb4c26fb515fb5b091f2dd992220e182d/src/edu/mit/mitmobile2/tour/TourModel.java][populateContent][37] = -> TRY {  -> contentArray=json.getJSONArray("content",)@ -> LOOP { -> contentNodeJson=contentArray.getJSONObject(i,)@i<contentArray.length() } } CATCH(JSONException) {}
results[https://github.com/RHIT/Mobile/blob/68659e2dcbed8b1e86b805dec2a802a300d70996/android/src/RHITMobile/src/edu/rosehulman/android/directory/model/MapAreaData.java][deserialize][4] = -> TRY {  -> res.labelOnHybrid=root.getBoolean("LabelOnHybrid",)@ -> res.minZoomLevel=root.getInt("MinZoomLevel",)@ -> res.corners=deserializeCorners(root.getJSONArray("Corners",),)@ } CATCH(JSONException) {}
results[https://github.com/behrica/jira-rest-java-client/blob/71f9ca2dc12a7d9ba342295fe0538f26b7c9fa23/atlassian-jira-rest-java-client/src/main/java/com/atlassian/jira/rest/restjavaclient/internal/json/TransitionJsonParser.java][parse][4] = -> TRY {  -> name=json.getString("name",)@ -> fields=JsonParseUtil.parseJsonArray(json.getJSONArray("fields",),transitionFieldJsonParser,)@ -> return new Transition(name,id,fields,)@ } CATCH(JSONException) {}
results[https://github.com/mstepan/incubator/blob/e27425ef51eb4de8714dafdce1286fb49d8cb681/WellnessPortal/src/main/java/com/fitbit/api/common/model/foods/Water.java][<init>][2] = -> TRY {  -> this.water=jsonArrayToWaterLogList(jsonObject.getJSONArray("water",),)@ -> this.summary=new WaterLogSummary(jsonObject.getJSONObject("summary",),)@ } CATCH(JSONException) {}
results[https://github.com/MarkBennett/dart/blob/871b4f32229ebac99ec3fbb04d0d9d1955e76582/editor/tools/plugins/com.google.dart.tools.debug.core/src/com/google/dart/tools/debug/core/server/VmLineNumberTable.java][createFrom][3] = -> TRY {  -> lineInfos=object.getJSONArray("lines",)@ -> LOOP { -> lineInfo=lineInfos.getJSONArray(i,)@i<lineInfos.length() } } CATCH(JSONException) {}
results[https://github.com/docdoku/docdoku-plm/blob/93c9dc0dc424b5d5039d924de432c461bb928c91/docdoku-android-client/src/com/docdoku/android/plm/client/documents/Document.java][updateLastIterationFromJSON][5] = -> TRY {  -> attachedFiles=lastIteration.getJSONArray(JSON_KEY_DOCUMENT_ATTACHED_FILES,)@ -> LOOP { -> files[i]=attachedFiles.getString(i,)@i<files.length } } CATCH(JSONException) {}
results[https://github.com/twitter/hbc/blob/01293442fed8c8542e8f2adae65a3762758ad9f2/hbc-twitter4j/src/main/java/com/twitter/hbc/twitter4j/v3/parser/JSONObjectParser.java][parseFriendList][2] = -> TRY {  -> friends=json.getJSONArray("friends",)@ -> LOOP { -> friendIds[i]=friends.getLong(i,)@i<friendIds.length } } CATCH(JSONException) {}
results[https://github.com/mikael2/Muldvarp/blob/8d1c68fd891b82d32478bbfaa570964a9224fba9/src/no/hials/muldvarp/v2/domain/ScheduleWeek.java][<init>][1] = -> TRY {  -> this.weekString=json.getString("weekString",)@ -> this.weekNo=json.getString("weekString",)@ -> this.days=JSONArrayToDays(json.getJSONArray("days",),)@ } CATCH(JSONException) {}
results[https://github.com/behrica/jira-rest-java-client/blob/71f9ca2dc12a7d9ba342295fe0538f26b7c9fa23/atlassian-jira-rest-java-client/src/main/java/com/atlassian/jira/rest/restjavaclient/internal/json/JsonParseUtil.java][getNestedArray][4] = -> TRY {  -> LOOP { -> json=json.getJSONObject(s,)@ } -> return json.getJSONArray(path[path.length-1],)@ } CATCH(JSONException) {}
results[https://github.com/shutoff/car-alarm/blob/192802aee2e7f226016a32f4de2478923b6a1f6a/src/main/java/ru/shutoff/caralarm/FetchService.java][background][3] = -> TRY {  -> IF { -> return @res==null } -> arr=res.getJSONArray("voltageList",)@!(res==null) -> value=arr.getJSONObject(0,)@!(res==null) && !(arr.length()==0) } CATCH(JSONException) {}
results[https://github.com/socialpercon/anki/blob/2d6462b4a8b061d45249aa127cf434dc17d66165/src/com/ichi2/libanki/Models.java][_changeCards][1] = -> TRY { -> nmType=newModel.getInt("type",)@ -> nflds=newModel.getJSONArray("tmpls",).length()@ } CATCH(JSONException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/ESGF/esgf-web-fe/blob/f856325e418461acf4e11d69a2bcb555dd0b74a5/src/java/main/org/esgf/legacydatacart/LegacyOldFileTemplateController.java][solrResponseToJSON][4] = -> TRY { -> jsonResponse=new JSONObject(rawString,)@ -> jsonArray=jsonResponse.getJSONArray("docs",)@ } CATCH(JSONException) { -> System.out.println("Problem converting Solr response to json string",)@ -> e.printStackTrace()@ }
results[https://github.com/mavry/TimeToGo/blob/05d8d52234b8f574bf1e7113674da789888f56d8/android/Cheetah/src/main/java/com/cheetah/controller/RetreivesRouteResult.java][buildRouteResults][3] = -> TRY {  -> response=body.getJSONObject("response",)@ -> routeName=response.getString("routeName",)@ -> crossTime=calcCrossTime(response.getJSONArray("results",),)@ } CATCH(JSONException) {}
results[https://github.com/momoplan/Android/blob/2afb50b1f6dea55fe7f3f9ca8746f315bad68600/Ruyicai_xuancai/v3.8.3/src/com/ruyicai/activity/buy/beijing/BeiJingSingleGameActivity.java][analysisSuccessReturnInformations][10] = -> TRY { -> againstJsonArray=returnJsonObject.getJSONArray("result",)@ -> analysisEventInformation(returnJsonObject,)@ -> analysisAgainstInformations(againstJsonArray,)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/kokotchY/betaseriesApi/blob/e0103a95fb87248e6d0d1f6ff6106a7950c2c187/betaSeriesAPI/src/main/java/com/kokotchy/betaSeriesAPI/UtilsJson.java][getJSONArray][1] = -> IF { -> TRY { -> return jsonObject.getJSONArray(name,)@jsonObject.has(name,) } CATCH(JSONException) { -> e.printStackTrace()@!(jsonObject.has(name,)) } }
results[https://github.com/sismics/docs/blob/48d363352cf3195f49228363149c2fc3c645a337/docs-web/src/test/java/com/sismics/docs/rest/TestThemeResource.java][testThemeResource][2] = -> TRY {  -> json=response.getEntity(JSONObject.class,)@ -> theme=json.getJSONArray("themes",)@ -> Assert.assertTrue(theme.length()>0,)@ } CATCH(JSONException) {}
results[https://github.com/WISE-Community/WISE-VLE/blob/c0480d486e97da765e377e5f8c136e151cc59e8c/src/main/java/vle/web/VLEGetXLS.java][makeNodeIdList][5] = -> TRY { -> sequences=project.getJSONArray("sequences",)@ -> startPoint=project.getString("startPoint",)@ -> traverseNodeIdsToMakeNodeIdList(sequences,startPoint,"",1,startPoint,)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/internetarchive/archive-commons/blob/44c422f9af63178901a98cc78f10825e76a9e7c2/archive-commons/src/main/java/org/archive/format/arc/FiledescRecord.java][getMetaDataCount][1] = -> TRY { -> return (metadata==null)?0:metadata.getJSONArray("MetaData",).length()@ } CATCH(JSONException) { -> LOG.warning(e.getMessage(),)@ }
results[https://github.com/liferay/alloy-taglibs/blob/3fe0340b76380cdef163abdec8b4af22388b4a7f/alloy-taglib/src/com/liferay/alloy/util/JSONUtil.java][getJSONArray][1] = -> TRY { -> IF { -> return json.getJSONArray(key,)@json.has(key,) } } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/ninetwozero/BF3-Battlelog/blob/363c8f21ea74ed349c8cea9de33cdc5e7eda84cd/src/com/ninetwozero/battlelog/factory/FeedItemDataFactory.java][generateFromCompletingAssignment][1] = -> TRY {  -> statsItem=currItem.getJSONArray(STAT_ITEMS,).getJSONObject(0,)@ -> tempInfo=DataBank.getAssignmentTitle(statsItem.getString(NAME_SID,),)@ } CATCH(JSONException) {}
results[https://github.com/bitcellar-labs/facebook-android-sdk/blob/ba26a49321f663ff39a1077da35b7596f147b7c6/facebook/tests/src/com/facebook/model/GraphObjectFactoryTests.java][testSetPropertyWithGraphObjectList][2] = -> TRY {  -> jsonObject=new JSONObject()@ -> graphObject=GraphObject.Factory.create(jsonObject,)@ -> nestedJsonArray=jsonObject.getJSONArray("foo",)@ -> assertNotNull(nestedJsonArray,)@ } CATCH(JSONException) {}
results[https://github.com/weihuali0509/App-Inventor-Chinese-Designer/blob/5c8a90e930cb4f2d508bde4cd9de28711c5975af/appinventor/components/src/com/google/appinventor/components/runtime/GameClient.java][updateInstanceInfo][5] = -> TRY {  -> leader=responseObject.getString(LEADER_KEY,)@ -> receivedPlayers=JsonUtil.getStringListFromJsonArray(responseObject.getJSONArray(PLAYERS_LIST_KEY,),)@ -> playersDelta=instance.setPlayers(receivedPlayers,)@ } CATCH(JSONException) {}
results[https://github.com/ohmage/server/blob/e2d5276d45562dd475be369c950b1d4d68ca1613/src/org/ohmage/util/JsonUtils.java][getJsonArrayFromJsonObject][1] = -> TRY { -> array=jsonObject.getJSONArray(key,)@ } CATCH(JSONException) { -> IF { -> LOGGER.debug("failed attempt to retrieve "+key+" from JSON object "+jsonObject,jsone,)@LOGGER.isDebugEnabled() } }
results[https://github.com/webdetails/cpf/blob/eca16d10421ca63b82a3cbc311eecebecbdd53da/test-src/pt/webdetails/cpf/tests/PersistenceTest.java][testInstanceUpdate][2] = -> TRY {  -> result=pe.query("select from testClass where @rid = :id",params,)@ -> Assert.assertEquals(result.getJSONArray("object",).getJSONObject(0,).getString("test",),"B",)@ } CATCH(JSONException) {}
results[https://github.com/germanescobar/mokai/blob/bcbace5a69d02bf857f1e393681d391a11a972fd/mokai-web-admin/src/main/java/org/mokai/web/admin/jogger/controllers/Jmx.java][getParams][1] = -> TRY {  -> jsonParams=jsonData.getJSONArray("params",)@ -> LOOP { -> params[i]=parseParam(jsonParams,i,signature[i],)@i<signature.length } } CATCH(JSONException) {}
results[https://github.com/neokongwai/abc/blob/8f479e7fb56754ae1d6a473b4bb0f7008c00b996/src/watsons/wine/FoodCuisineList.java][get_top_img_url][2] = -> json=jParser.getJSONFromUrl(top_image_api_url,)@ -> TRY { -> top_image_url=json.getJSONArray(TAG_CONTENT,)@ -> c=top_image_url.getJSONObject(0,)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/mavry/TimeToGo/blob/a6c10f345caaf9e5d8496d274238775dcfab4691/android/TimeToGo/src/main/java/com/timetogo/waze/RetreivesWazeRouteResult.java][buildRouteResults][1] = -> TRY {  -> response=body.getJSONObject("response",)@ -> routeName=response.getString("routeName",)@ -> crossTime=calcCrossTimeInMinutes(response.getJSONArray("results",),)@ } CATCH(JSONException) {}
results[https://github.com/cegerard/appsGate-server/blob/71f319fa63dd8b72e4ce0a137ce5e97be9d91f3d/sources/apam.components/EUDEInterpreter/src/main/java/appsgate/lig/eude/interpreter/langage/nodes/NodeAction.java][<init>][1] = -> TRY {  -> targetType=ruleJSON.getString("targetType",)@ -> targetId=ruleJSON.getString("targetId",)@ -> methodName=ruleJSON.getString("methodName",)@ -> args=ruleJSON.getJSONArray("args",)@ } CATCH(JSONException) {}
results[https://github.com/behrica/jira-rest-java-client/blob/23db6db685018309b32c4740f7c9d4178ee3f4ac/atlassian-jira-rest-java-client/src/test/java/com/atlassian/jira/rest/client/internal/json/CommentJsonParserTest.java][testParseAnonymous][1] = -> TRY {  -> json=ResourceUtil.getJsonObjectFromResource("/json/comment/valid-anonymous.json",)@ -> commentJson=json.getJSONArray("value",).getJSONObject(0,)@ -> comment=parser.parse(commentJson,)@ } CATCH(JSONException) {}
results[https://github.com/domogik/domodroid/blob/ce8915a242d9c730beb005a6f7c979f55a016a93/src/database/JSONParser.java][StateValueSTRING][1] = -> TRY {  -> itemArray=json.getJSONArray("stats",)@ -> temp=itemArray.getJSONObject(0,).getString("value",).toString()@ } CATCH(JSONException) {}
results[https://github.com/HugoLnx/parrott/blob/7bca352e5270b346de0f2b3169a470a4b5831e2b/src/main/java/br/com/parrot/github/finder/CommitFilesFinder.java][getCommitFiles][2] = -> TRY { -> filesJson=commitObject.getJSONArray("files",)@ -> files=parseCommitFiles(filesJson,)@ } CATCH(JSONException) { -> e.printStackTrace()@ -> throw new RuntimeException("Erro ao parsear JSON",)@ }
results[https://github.com/onecoders/ViewPageIndicator/blob/ffb743d644c915b651b9683148ead0a0d685234e/JSONParsing/src/learn2crack/jsonparsing/MainActivity.java][onPostExecute][1] = -> TRY { -> user=result.getJSONArray(TAG_USER,)@ -> c=user.getJSONObject(0,)@ } CATCH(JSONException) { -> e.printStackTrace()@ } -> super.onPostExecute(result,)@
results[https://github.com/winterstein/JTwitter/blob/c36cfb5fec3faad7984b3dff9ce226067010f383/src/winterwell/jtwitter/TwitterList.java][getSubscribers][1] = -> TRY { -> jobj=new JSONObject(json,)@ -> jsonUsers=jobj.getJSONArray("users",)@ -> return User.getUsers2(jsonUsers,)@ } CATCH(JSONException) { -> throw new TwitterException("Could not parse response: "+e,)@ }
results[https://github.com/picketlink/picketlink/blob/a7c58d6b915517294db784ce88d80f897d931caa/modules/oauth/src/main/java/org/picketlink/json/key/JSONWebKey.java][parse][1] = -> TRY {  -> IF { -> throw PicketLinkJSONMessages.MESSAGES.invalidNullArgument("obj",)@jsonObj==null } -> keys=jsonObj.getJSONArray(PicketLinkJSONConstants.KEYS,)@!(jsonObj==null) } CATCH(JSONException) {}
results[https://github.com/mikael2/Muldvarp/blob/5427e4df652a39deebfd1e9f64cc1eee74e6eab8/src/no/hials/muldvarp/v2/domain/Topic.java][<init>][1] = -> TRY {  -> this.id=json.getInt("id",)@ -> this.name=json.getString("name",)@ -> this.tasks=parseTasks(json.getJSONArray("tasks",),)@ } CATCH(JSONException) {}
results[https://github.com/simonAllier/diversify-statements/blob/d3d7c678f1896148e510eed457e41310a016db53/src/main/java/fr/inria/diversify/transformation/TransformationParser.java][getTransformation][1] = -> TRY {  -> IF { -> return jsonObject.getJSONArray("transformation",).getJSONObject(0,)@jsonObject.has("transformation",) } } CATCH(JSONException) {}
results[https://github.com/elka-projekt/cs-voltdb/blob/8b01731a091d92a069ecc5174a813523d6abdb50/src/frontend/org/voltdb/expressions/AbstractExpression.java][loadFromJSONArray][1] = -> TRY {  -> IF { -> return starter@parent.isNull(key,) } -> jarray=parent.getJSONArray(key,)@!(parent.isNull(key,)) -> return loadFromJSONArray(starter,jarray,db,)@!(parent.isNull(key,)) } CATCH(JSONException) {}
results[https://github.com/Ramblurr/Anki-Android/blob/23a390f0a8d2fea7462bb8ab81bc69299706d7f2/src/com/ichi2/anki/AnkiDroidProxy.java][modified][2] = -> TRY { -> deckInfo=mDecks.getJSONArray(mDeckName,)@ -> lastModified=deckInfo.getDouble(0,)@ } CATCH(JSONException) { -> Log.i(AnkiDroidApp.TAG,"JSONException = "+e.getMessage(),)@ }
results[https://github.com/ScootrNova/ClassyGames/blob/f347428d904fa804b21b44716d7e1338e398ca59/projects/android/classygames/src/com/charlesmadere/android/classygames/models/games/GenericBoard.java][initializeBoardFromJSON][1] = -> TRY {  -> board=boardJSON.getJSONObject("board",)@ -> teams=board.getJSONArray("teams",)@ -> teamPlayer=teams.getJSONArray(0,)@ -> teamOpponent=teams.getJSONArray(1,)@ } CATCH(JSONException) {}
results[https://github.com/NCIP/caarray-docs/blob/4ff87803776fe2602ad915f14bf95d1bd947618b/analysis_and_design/prototypes/caupload/applet/src/test/java/org/json/tests/TestJSONObject.java][testGetJsonArray_InvalidKey][1] = -> TRY { -> jsonobject=new JSONObject()@ -> jsonobject.getJSONArray("abc",)@ } CATCH(JSONException) { -> assertEquals("JSONObject[\"abc\"] not found.",e.getMessage(),)@ }
results[https://github.com/WISE-Community/WISE-VLE/blob/c0480d486e97da765e377e5f8c136e151cc59e8c/src/main/java/vle/web/VLEGetXLS.java][isItemNew][1] = } ELSE { -> TRY { -> dataArray=previousResponse.getJSONArray("data",)@!(previousResponse==null) } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/forcedotcom/SalesforceMobileSDK-Android/blob/aeb022c9a1082ef038801fedaea2dd92a48585d4/libs/SmartSync/src/com/salesforce/androidsdk/smartsync/util/MruSyncDownTarget.java][<init>][1] = -> TRY {  -> super(target,)@ -> this.fieldlist=toList(target.getJSONArray(FIELDLIST,),)@ -> this.objectType=target.getString(SOBJECT_TYPE,)@ } CATCH(JSONException) {}
results[https://github.com/ESGF/esgf-web-fe/blob/138ceaa1822ee16190271c74e02addb666032ede/src/java/main/org/esgfLegacy/datacart/DataCartSolrHandler.java][getDocElement][1] = -> TRY { -> jsonResponse=new JSONObject(rawResponse,)@ -> jsonArray=jsonResponse.getJSONArray("docs",)@ -> numFound=jsonResponse.getString("numFound",)@ } CATCH(JSONException) { -> System.out.println("Problem converting Solr responsew to json string - getDocElement",)@ }
results[https://github.com/socialpercon/anki/blob/2d6462b4a8b061d45249aa127cf434dc17d66165/src/com/ichi2/libanki/Models.java][_changeNotes][1] = -> TRY { -> nfields=newModel.getJSONArray("flds",).length()@ -> mid=newModel.getLong("id",)@ } CATCH(JSONException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/mikael2/Muldvarp/blob/8d1c68fd891b82d32478bbfaa570964a9224fba9/src/no/hials/muldvarp/v2/domain/ScheduleDay.java][<init>][1] = -> TRY {  -> this.dayName=json.getString("day",)@ -> this.date=json.getString("date",)@ -> this.lectures=JSONArrayToLectures(json.getJSONArray("lectures",),)@ } CATCH(JSONException) {}
results[https://github.com/malinovskiy-alex/ifp-shopping/blob/6d0afdbac52212df772850b084a7a18edff5dc2b/shoppingprocess/src/main/java/com/connecture/shopping/process/ShoppingIntegrationProcess.java][buildMemberLevelRatedData][1] = -> TRY {  -> memberRatesJSON=memberLevelJSON.getJSONArray("memberRates",)@ -> memberLevelRateDataJSON.put("memberRates",memberRatesJSON,)@ -> memberTypeContributionJSON=memberLevelJSON.getJSONObject("memberTypeContributions",)@ -> memberTypeCostJSON=memberLevelJSON.getJSONObject("memberTypeCosts",)@ } CATCH(JSONException) {}
results[https://github.com/stuffrepos/tactics16/blob/c98ecbbedf8193bc0fd7cf0145c9e10b949312ef/src/main/java/net/stuffrepos/tactics16/datamanager/AnimationGroupJsonLoader.java][loadSpriteAction][1] = -> TRY {  -> builder.setChangeFrameInterval(name,jsonObject.getInt("changeFrameInterval",),)@ -> new JsonArrayIterator(jsonObject.getJSONArray("images",),)@ } CATCH(JSONException) {}
results[https://github.com/zhuxiaoming/ft/blob/2f0e958944cda11db60022f3d4e55637d9942cc2/common/src/main/java/zxm/istock/ft/market/sp/ifeng/IfengQuoteDataFetcher.java][extractJsonArray][1] = -> TRY {  -> jo=new JSONObject(msg,)@ -> aName=getServiceProvider().qualify(symbol,)@ -> return jo.getJSONArray(aName,)@ } CATCH(JSONException) {}
results[https://github.com/momoplan/Android/blob/2afb50b1f6dea55fe7f3f9ca8746f315bad68600/Ruyicai_xuancai/v3.9.1/src/com/ruyicai/json/miss/DlcMissJson.java][jsonRx][3] = -> missList=new ArrayList<List>()@ -> TRY { -> missList.add(getJsonArray(json.getJSONArray(MISS,),),)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/jdm64/GenesisChess-Android/blob/a901da8accc6fa6b4cd63ea45c60095e1cb87893/src/com/chess/genesis/service/GenesisNotifier.java][NewMove][1] = -> TRY { -> ids=json.getJSONArray("gameids",)@ -> IF { -> return @ids.length()>0 } } CATCH(JSONException) { -> e.printStackTrace()@ -> throw new RuntimeException()@ }
results[https://github.com/Watchlist-App/Watchlist-app-android/blob/71757f0aec17890aeabdb30477d82b3299af2106/WatchList/WatchList/src/main/java/com/watchlist/themoviedb/ComingSoon.java][parseJSONObject][1] = -> TRY { -> jsonArray=jsonObject.getJSONArray(API_RESULTS_TITLE,)@ -> LOOP { -> myJSONObject=jsonArray.getJSONObject(i,)@i<jsonArray.length() } } CATCH(JSONException) { -> exception.printStackTrace()@ }
results[https://github.com/ku-fpg/armatus/blob/b79e44f399ca095ceace4922db60209843d15fab/Android/Armatus Android App/src/edu/kufpg/armatus/data/CommandInfo.java][<init>][2] = -> TRY {  -> <init>(o.getString("help",),o.getString("name",),jsonToTags(o.getJSONArray("tags",),),)@ } CATCH(JSONException) {}
results[https://github.com/tsurdilo/elissa/blob/2add9f2c829e1215228145dea071578cea27d638/editor/server/src/de/hpi/epc/json/EPCDiagramJsonImporter.java][loadEpcIntoDiagram][1] = -> TRY {  -> shapeArray=jsonObj.getJSONArray("childShapes",)@ -> LOOP { -> child=shapeArray.getJSONObject(i,)@i<shapeArray.length() } -> jsonProperties=this.jsonObj.getJSONObject("properties",)@ } CATCH(JSONException) {}
results[https://github.com/momoplan/Android/blob/b85f02d4695dd7e0d427b84ecd6d3a8d7a9dff4f/Ruyicai_168/v3.5.5/src/com/ruyicai/activity/more/ActionActivity.java][run][1] = -> jsonStr=ActionTitleInterface.titleQuery()@ -> TRY { -> obj=new JSONObject(jsonStr,)@ -> jsonArray=new JSONObject(jsonStr,).getJSONArray("result",)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/MIT-Mobile/MIT-Mobile-for-Android/blob/e94a3ddfb4c26fb515fb5b091f2dd992220e182d/src/edu/mit/mitmobile2/tour/TourModel.java][populatePath][1] = -> TRY {  -> jsonPath=json.getJSONArray("path",)@ -> LOOP { -> geoPoint=parseLatLon(jsonPath.getJSONObject(i,),)@i<jsonPath.length() } } CATCH(JSONException) {}
results[https://github.com/bazaarvoice/bv-android-sdk/blob/b3c06733e3164b7f71cc37c5596c07319d53dac1/Sample Apps/ProductWidgetExample/src/com/example/productwidgetexample/ReviewsActivity.java][displayReviews][1] = -> TRY {  -> results=json.getJSONArray("Results",)@ -> LOOP { -> newReview=new BazaarReview(results.getJSONObject(i,),)@i<results.length() } } CATCH(JSONException) {}
results[https://github.com/florent-andre/LinkedHeritage/blob/b30a3a22b06a662c33b3af1050d6a98867f2d531/skosifier/src/main/java/eu/lh/skosifier/CSVMappeur.java][<init>][2] = -> TRY {  -> jo=new JSONObject(json,)@ -> mapping=jo.getJSONArray("mapping",)@ -> LOOP { -> colMapping=mapping.getJSONObject(i,)@i<mapping.length() } } CATCH(JSONException) {}
results[https://github.com/shinobushiva/jagkuma/blob/92ffa741ede72d1abdad03cb2d0351185cc062f8/src/jag/kumamoto/apps/StampRally/Data/StampPin.java][decodeJSONObject][1] = -> TRY {  -> jsonPins=obj.getJSONArray(JsonNamePins,)@ -> count=jsonPins.length()@ -> LOOP { -> jsonPin=jsonPins.getJSONObject(i,)@i<count } } CATCH(JSONException) {}
results[https://github.com/yuyang226/FlickrjApi4Android/blob/d803adadf6583264152d9a113ddc74387e694d07/src/main/java/com/gmail/yuyang226/flickr/commons/CommonsInterface.java][parseInstitution][1] = -> TRY {  -> urlsElement=mElement.getJSONObject("urls",)@ -> urlNodes=urlsElement.getJSONArray("url",)@ -> LOOP { -> urlElement=urlNodes.getJSONObject(i,)@i<urlNodes.length() } } CATCH(JSONException) {}
