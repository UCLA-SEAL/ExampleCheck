results[https://github.com/laarid/platform_libcore/blob/25b780a08c881e3ebcbacf85a817729741a549e4/xml/src/main/java/org/apache/xml/serializer/SecuritySupport.java][getFileInputStream][1132] = -> TRY {  -> return new FileInputStream(file,)@ } CATCH(FileNotFoundException) {}
results[https://github.com/exxcellent/wings2/blob/c849ff5447f492cf9c5a33fcd0bad7f7f083632a/wings2/src/java/org/wings/resource/FileResource.java][getResourceStream][835] = -> TRY {  -> return new FileInputStream(file,)@ } CATCH(IOException) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/src/share/classes/sun/security/action/OpenFileInputStreamAction.java][run][79] = -> TRY {  -> return new FileInputStream(file,)@ } CATCH(Exception) {}
results[https://github.com/rSmart/kuali_rice/blob/bfc36270c5042136e08c6a9fb89eca761ca492e9/test/kew/src/test/java/org/kuali/rice/kew/test/web/MockFormFile.java][getInputStream][3] = -> TRY {  -> return new FileInputStream(file,)@ } CATCH(FileNotFoundException,IOException) {}
results[https://github.com/srnsw/xena/blob/8e19788ceb5f18d32d53017a5fc60bc2b3024de9/plugins/email/src/au/gov/naa/digipres/xena/plugin/email/trim/TrimAttachment.java][getContent][4] = -> TRY {  -> return new FileInputStream(file,)@ } CATCH(java.io.IOException,javax.mail.MessagingException) {}
results[https://github.com/student2ua/myTaning/blob/7942f86a6fc9ed8730f8a9021c6f4b6c879659d1/src/com/tor/io/CheckSumGenerator.java][generateByteHash][7] = -> TRY {  -> stream=new FileInputStream(file,)@ } CATCH(IOException,NoSuchAlgorithmException) {}
results[https://github.com/silid/project-x-cvs/blob/fddf2db945884264fd604444f9680f7ff2056ada/src/xinput/file/XInputFileImpl.java][getInputStream][1] = -> TRY {  -> return new FileInputStream(file,)@ } CATCH(FileNotFoundException,MalformedURLException,IOException) {}
results[https://github.com/apache/webservices-axiom/blob/169572c3a38c428747ff11cf7b33621625c0175d/src/org/apache/ws/commons/attachments/PartOnFile.java][getInputStream][3] = -> TRY {  -> return new FileInputStream(cacheFile,)@ } CATCH(IOException,MessagingException) {}
results[https://github.com/apache/maven-wagon/blob/5ba1a2c54b273d3970180e6573e4d4d720cb6c5e/wagon-providers/wagon-http-shared4/src/main/java/org/apache/maven/wagon/shared/http/AbstractHttpClientWagon.java][getContent][2] = -> TRY {  -> fis=new FileInputStream(source,)@ } CATCH(IOException,IllegalStateException) {}
results[https://github.com/matthewmccullough/encryption-jvm-bootcamp/blob/e5075a418065c20ad76026e4713466f1604a3303/headtoheadtest/src/main/java/com/ambientideas/ECCEncrypt.java][encrypt][3] = -> TRY {  -> fis=new FileInputStream(HeadToHeadTest.CLEARTEXT_FILENAME,)@ } CATCH(InvalidKeyException,InvalidAlgorithmParameterException,IOException) {}
results[https://github.com/ceylon/ceylon-ide-intellij/blob/4a06e91d648ed7da83a7858a793f09d822bc5eeb/CeylonRuntime/src/org/intellij/plugins/ceylon/runtime/CeylonRuntime.java][generateBufferedHash][1] = -> TRY {  -> is=new FileInputStream(file,)@ } CATCH(NoSuchAlgorithmException,FileNotFoundException,IOException) {}
results[https://github.com/MarkBennett/dart/blob/871b4f32229ebac99ec3fbb04d0d9d1955e76582/editor/tools/plugins/com.google.dart.tools.search/src/com/google/dart/tools/search/internal/core/text/ExternalFileCharSequenceProvider.java][getInputStream][2] = -> TRY {  -> contents=new FileInputStream(fFile,)@ } CATCH(CoreException,IOException) {}
results[https://github.com/JetBrains/teamcity-nuget-support/blob/39094cdae43d012ecc53e5f9a2d9ce5d24332aaa/nuget-common/src/jetbrains/buildServer/nuget/common/SimplePackageInfoLoader.java][openPackage][2] = -> TRY {  -> return new FileInputStream(pkg,)@ } CATCH(IOException,PackageLoadException) {}
results[https://github.com/Bombe/jSite/blob/38bdc433e50669e8244a63b5af59e597f88f1d29/src/main/java/de/todesbaum/util/freenet/fcp2/ClientPutComplexDir.java][getPayload][3] = -> IF { -> TRY { -> return new FileInputStream(payloadFile,)@payloadFile!=null } }
results[https://github.com/ow2-chameleon/everest/blob/39f7dd6aca0693349a0633fb6ee2c2f527c13e67/everest-fs/src/main/java/org/ow2/chameleon/everest/fileSystem/AbstractResourceCollection.java][checksum][1] = -> TRY {  -> fis=new FileInputStream(file,)@ } CATCH(NoSuchAlgorithmException,IOException) {}
results[https://github.com/asakusafw/asakusafw/blob/c925d9197fd0798df82cf8403db452e8b3baf079/utils-project/object-io/src/main/java/com/asakusafw/utils/io/FileInputStreamProvider.java][open][1] = -> TRY {  -> return new FileInputStream(file,)@ } CATCH(IOException,InterruptedException) {}
results[https://github.com/gwt-test-utils/gwt-test-utils/blob/c8c1765426351ea9d9d20aa6bf105b5af2ce7370/gwt-test-utils/src/main/java/com/googlecode/gwt/test/internal/utils/WebXmlUtils.java][getWebXmlAsStream][1] = -> LOOP { -> TRY { -> return new FileInputStream(warRoot+WEB_XML,)@ } }
results[https://github.com/romaframework/core/blob/2fe2c7d6d8dfff9336db4bb44dbd9a4c804ce066/src/org/romaframework/core/io/virtualfile/physical/PhysicalFile.java][getInputStream][1] = -> TRY { -> IF { -> return new FileInputStream(file,)@file.exists() } }
results[https://github.com/apache/maven-doxia/blob/a6af83543b0e6b9d82928a4087dd69cf8d919ee0/doxia-site-renderer/src/main/java/org/codehaus/plexus/siterenderer/DefaultSiteRenderer.java][render][1] = -> TRY {  -> render(siteDirectory,outputDirectory,new FileInputStream(siteDescriptor,),templateName,templateProperties,locale,)@ } CATCH(RendererException,IOException) {}
results[https://github.com/poulter7/spudplayer/blob/b64445783e3630f3e5084cc155d112a5968cf1ba/lib/slf4j-1.6.1/slf4j-migrator/src/main/java/org/slf4j/migrator/InplaceFileConverter.java][readIntoByteArray][12] = -> TRY {  -> fis=new FileInputStream(file,)@ -> fis.close()@ } CATCH(IOException) {}
results[https://github.com/ArchimedesCAD/Archimedes/blob/61fd06727e7e8ce9e6385b8e2369a8118ac1b04d/br.org.archimedes.io.dxf.tests/src/br/org/archimedes/io/dxf/parsers/tests/EllipseParserTests.java][setUp][2] = -> TRY {  -> file=new FileInputStream(new File("./files/ellipseTest.dxf",),)@ } CATCH(IOException) {}
results[https://github.com/fcrepo/fcrepo-before33/blob/8665cdc273baeb781764a5fd709c5700e487fe78/fcrepo-server/src/main/java/fedora/utilities/install/container/TomcatServerXML.java][<init>][2] = -> TRY {  -> <init>(new FileInputStream(serverXML,),installOptions,)@ } CATCH(FileNotFoundException,DocumentException) {}
results[https://github.com/mozilla-b2g/android-sdk/blob/b9a220dbb0fc481e5744417ca599176961f207b4/apkbuilder/src/com/android/apkbuilder/internal/ApkBuilderHelper.java][processJarFile][1] = -> TRY {  -> input=new FileInputStream(file,)@ -> resourcesJars.add(input,)@ } CATCH(FileNotFoundException) {}
results[https://github.com/jourdren/eoulsan/blob/0a64d34a62e3d2b4cbf0e739a1da7f49be1956d8/src/main/java/fr/ens/transcriptome/eoulsan/datatypes/protocols/FileDataProtocol.java][getData][2] = -> TRY {  -> return new FileInputStream(getFile(src,),)@ } CATCH(IOException) {}
results[https://github.com/xmt/BitcoinJ/blob/b9d405dd94af7f419435366c86c4d5ca8481c3c0/src/com/google/bitcoin/core/Wallet.java][loadFromFile][1] = -> TRY {  -> return loadFromFileStream(new FileInputStream(f,),)@ } CATCH(IOException) {}
results[https://github.com/Selenium2/Selenium2/blob/a317d72ededd9f6d426dcfed9aaad068a8c2d74d/common/test/java/org/openqa/selenium/internal/ZipTest.java][assertZipContains][2] = -> TRY {  -> fis=new FileInputStream(output,)@ -> zis=new ZipInputStream(fis,)@ } CATCH(IOException) {}
results[https://github.com/OpenRefine/OpenRefine/blob/62b8c476f1dab3d925817c063201fe70fed38dba/main/src/com/google/refine/importing/ImportingUtilities.java][getFileReader][1] = -> TRY {  -> return getReaderFromStream(new FileInputStream(file,),fileRecord,commonEncoding,)@ } CATCH(FileNotFoundException) {}
results[https://github.com/geoserver/geoserver-history/blob/859e63232b5a42eca50f18ebe520dde5d965c019/geoserver/data/src/test/java/org/geoserver/data/test/IOUtils.java][copy][1] = -> TRY {  -> copy(new FileInputStream(from,),to,)@ } CATCH(IOException) {}
results[https://github.com/oxhead/decoupled-hadoop/blob/752403bc4d8e9fb2b23aa6787e62d91cd4973bb5/hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java][<init>][2] = -> TRY {  -> fStream=new FileInputStream(name,)@ -> bin=new BufferedInputStream(fStream,)@ } CATCH(LogHeaderCorruptException,IOException) {}
results[https://github.com/ALRubinger/shrinkwrap/blob/1aebbaf90618b0fde4b9835954734102dab3cba3/extension-tar/impl/src/test/java/org/jboss/shrinkwrap/tar/impl/exporter/TarExporterTestCase.java][getTarInputStreamFromFile][1] = -> TRY {  -> return new TarInputStream(new FileInputStream(archive,),)@ } CATCH(IOException) {}
results[https://github.com/pkeller/scisoft-ui/blob/9cfe03a71d2cda8d9f87adc52f4395a2d7d6cf17/uk.ac.diamond.sda.polling/src/uk/ac/diamond/sda/polling/jobs/JobParameters.java][loadParameterFile][6] = -> TRY {  -> fin=new FileInputStream(parameterFile,)@ -> bis=new BufferedInputStream(fin,)@ } CATCH(IOException) {}
results[https://github.com/agilebirds/openflexo/blob/ab4657efd99a70262d9451a2eb60f5e3dc046e63/flexodesktop/technologyadapters/owlconnector/src/main/java/org/openflexo/technologyadapter/owl/model/OWLOntology.java][readXMLFile][1] = -> TRY {  -> fio=new FileInputStream(f,)@ -> reply=parser.build(fio,)@ } CATCH(JDOMException,IOException) {}
results[https://github.com/darrenjl/pdfrun/blob/f2228948952ca30a82037fd2c618262426910388/external_sources/httpcore-4.1.1/httpcore-nio/src/test/java/org/apache/http/impl/nio/codecs/TestIdentityDecoder.java][readFromFile][1] = -> TRY {  -> filestream=new FileInputStream(file,)@ -> reader=new InputStreamReader(filestream,)@ } CATCH(Exception) {}
results[https://github.com/anteoc/hadoop-fork/blob/e4e93e7bdd719f7d07db278b76ad59a6ddea21f1/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/net/unix/TestDomainSocket.java][<init>][1] = -> TRY {  -> this.fis=new FileInputStream(getPath(),)@ } CATCH(IOException) {}
results[https://github.com/pyvandenbussche/sparqles/blob/8101b6211bad10c5e98081a36399fcafcda96cef/src/sparqles/utils/AvroUtils.java][parseSchema][1] = -> TRY {  -> fis=new FileInputStream(file,)@ -> return parseSchema(fis,)@ } CATCH(IOException) {}
results[https://github.com/lessthanoptimal/GeoRegression/blob/b16cf6381069d3579f0f6bee19ed1654b624642a/src/jgrl/misc/autocode/ConvertFile32From64.java][<init>][1] = -> TRY {  -> in=new FileInputStream(inputFile,)@ -> inputName=inputFile.getAbsolutePath()@ } CATCH(FileNotFoundException) {}
results[https://github.com/tizzit/tizzit/blob/5361afbffe9c407a21f245963dab4ed60f7eef72/tizzit-core/src/main/java/de/juwimm/cms/search/res/HtmlDocumentLocator.java][getResource][1] = -> TRY {  -> inputStream=new FileInputStream(file,)@ -> parser=new HTMLParser(inputStream,)@ } CATCH(IOException,InterruptedException) {}
results[https://github.com/ericdes/nuxeo-webengine/blob/ce519efd404b4926506519c3075c692bf65685cb/src/main/java/org/nuxeo/ecm/platform/site/servlet/ResourceServlet.java][sendBinaryContent][1] = -> TRY {  -> in=new FileInputStream(file,)@ -> FileUtils.copy(in,out,)@ } CATCH(IOException) {}
results[https://github.com/disco-bot/disco-bot/blob/7f9ace4843a6d72c3f24e41c170a86f05b5f7047/src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java][readBytes][1] = -> TRY {  -> fileInputStream=new FileInputStream(file,)@ -> dis=new DataInputStream(fileInputStream,)@ } CATCH(IOException) {}
results[https://github.com/dkomanov/fizteh-java-2013/blob/5198c5cd6ed2a4133df566145724142c5e0d3070/src/ru/fizteh/fivt/students/drozdowsky/Commands/ShellController.java][copyFile][1] = -> TRY {  -> in=new FileInputStream(from,)@ -> in.close()@ } CATCH(IOException,SecurityException) {}
results[https://github.com/sake/bouncycastle-java/blob/7644081b575deb5de1054237b2353ada2088c9bb/jdk1.1/org/bouncycastle/cms/CMSProcessableFile.java][getInputStream][2] = -> TRY {  -> return new BufferedInputStream(new FileInputStream(file,),DEFAULT_BUF_SIZE,)@ } CATCH(IOException,CMSException) {}
results[https://github.com/toepi/adito/blob/5306eb911d24016bec7fabc0b88da44d26a81621/adito-maverick/maverick-ssl/src/main/java/com/maverick/ssl/CertificateStore.java][addTrustedCACertificate][1] = -> TRY {  -> in=new FileInputStream(certificateFile,)@ -> addTrustedCACertificate(in,)@ } CATCH(IOException) {}
results[https://github.com/jersey/jersey/blob/60c514e7000369b56e8ee75947d903956e2419d7/core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/FileSchemeResourceFinderFactory.java][open][1] = -> TRY { -> return new FileInputStream(current,)@ } CATCH(FileNotFoundException) { -> throw new ResourceFinderException(e,)@ }
results[https://github.com/cnmahj/cnAndroidDocs.old/blob/21f2ebad349ed9afbeb98430f47dace3fa7b0045/luni/java/libcore/io/DiskLruCache.java][newInputStream][2] = -> TRY {  -> return new FileInputStream(entry.getCleanFile(index,),)@ } CATCH(IOException) {}
results[https://github.com/contextfw/contextfw/blob/c8ea1f3d741bc6036f2db9f4a65de91f82a3382e/devel/web/web-application/src/main/java/net/contextfw/web/application/internal/util/FileResourceEntry.java][getInputStream][1] = -> TRY { -> return new FileInputStream(file,)@ } CATCH(FileNotFoundException) { -> throw new WebApplicationException(e,)@ }
results[https://github.com/raykroeker/thinkparity/blob/5693c6b6e80be770b2ac2acae66d88d563e648e6/local/browser/src/main/java/com/thinkparity/ophelia/browser/platform/plugin/PluginLoader.java][openMetaInfoInputStream][1] = -> TRY {  -> manifestFile=pluginFileSystem.findFile("/META-INF/PLUGIN.MF",)@ -> return new FileInputStream(manifestFile,)@ } CATCH(IOException) {}
results[https://github.com/Spoutcraft/Spoutcraft/blob/08acd23cea37617e0341cb5c829858f5aa52832d/MCP/src/minecraft/net/minecraft/src/org/apache/commons/io/input/XmlStreamReader.java][<init>][2] = -> TRY {  -> <init>(new FileInputStream(file,),)@ } CATCH(IOException) {}
results[https://github.com/svn2github/crux-framework/blob/5cc83a522cb3492f33da84393949e5f12ebe2ceb/tags/crux/5.1.1/crux-runtime/src/main/java/org/cruxframework/crux/core/utils/FileUtils.java][read][3] = -> TRY {  -> return read(new FileInputStream(file,),)@ } CATCH(IOException) {}
results[https://github.com/afimb/chouette/blob/9164e121312226d96b1dfc5bc8c39307b9ae0641/chouette-attic/src/main/java/fr/certu/chouette/struts/company/CompanyAction.java][getInputStream][1] = -> TRY {  -> return new FileInputStream(temp.getPath(),)@ } CATCH(Exception) {}
results[https://github.com/srnsw/xena/blob/717e887a821e32adeefc4bc5d5bc1b3c51bb27bc/ext/src/toastscript-1.79/toastscript/src/com/softhub/ts/PropertyProfile.java][<init>][1] = -> TRY {  -> properties.load(new FileInputStream(file,),)@ } CATCH(FileNotFoundException,IOException) {}
results[https://github.com/heyongjian/joy_launcher/blob/2574e9cc57b8839feb568766c2706d3edf1f68f5/src/com/joy/launcher2/network/util/FormFile.java][<init>][1] = -> TRY { -> this.inStream=new FileInputStream(file,)@ } CATCH(FileNotFoundException) { -> e.printStackTrace()@ }
results[https://github.com/riotfamily/riot/blob/7bbe258ee6ea4d428d861a6597b673d1e2c93bd5/media/src/org/riotfamily/media/model/FileData.java][getInputStream][1] = -> TRY {  -> return new FileInputStream(getFile(),)@ } CATCH(FileNotFoundException) {}
results[https://github.com/cstamas/enunciate-old/blob/e0ba22221ce3b29ecec455fe7f1a49263e31f348/enunciate/core/src/main/java/org/codehaus/enunciate/config/EnunciateConfiguration.java][load][1] = -> TRY {  -> load(new FileInputStream(file,),)@ } CATCH(IOException,SAXException) {}
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/libcore/luni/src/test/java/org/apache/harmony/nio/tests/java/nio/channels/ChannelsTest.java][testnewReaderCharsetError2][2] = -> TRY {  -> this.fins=new FileInputStream(tmpFile,)@ -> rbChannel=Channels.newChannel(this.fins,)@ } CATCH(Exception) {}
results[https://github.com/pose/eclipse-tycho/blob/871a5cc4b6c8d68f8b06e2fcd08be707ac965095/tycho-bundles/org.eclipse.tycho.p2.resolver.impl.test/src/test/java/org/eclipse/tycho/p2/test/matcher/ComparingOutputStream.java][<init>][1] = -> TRY { -> this.reference=new FileInputStream(referenceFile,)@ } CATCH(FileNotFoundException) { -> throw new IllegalArgumentException("File with expected content not found: "+referenceFile,)@ }
results[https://github.com/tibistibi/mTor/blob/f80c8a024017ceb1014389dc79f199bf93236ab0/src/main/java/nl/bhit/webapp/action/FileUploadAction.java][upload][2] = -> TRY {  -> stream=new FileInputStream(file,)@ -> stream.close()@ } CATCH(Exception) {}
results[https://github.com/iontorrent/Torrent-Variant-Caller-stable/blob/6de54dcd2a32f7172950788ebf8952315d547e2d/java/src/org/broadinstitute/sting/bwa/IntPackedInputStream.java][<init>][1] = -> TRY {  -> <init>(new FileInputStream(inputFile,),byteOrder,)@ } CATCH(IOException) {}
results[https://github.com/apache/activemq-apollo/blob/a9a8af587a93db1d6627766973732441875bc612/apollo-util/src/main/scala/org/apache/activemq/apollo/util/IOHelper.java][copyFile][2] = -> TRY {  -> fileSrc=new FileInputStream(src,)@ -> copyInputStream(fileSrc,fileDest,)@ } CATCH(IOException) {}
results[https://github.com/jponge/izpack/blob/0a973e711a49641658593176952c41bf2c66713b/izpack-core/src/main/java/com/izforge/izpack/util/IoHelper.java][copyFile][1] = -> TRY {  -> in=new FileInputStream(inFile,)@ -> copyStream(in,out,vs,type,)@ } CATCH(IOException) {}
results[https://github.com/apache/sling/blob/bfa31c107d9c8c8fe23bfc68ad49a5cb9106aedf/tooling/ide/eclipse-m2e-ui/src/org/apache/sling/ide/eclipse/m2e/EmbeddedArchetypeInstaller.java][addResource][1] = -> TRY {  -> origins.put(fileExtension,new FileInputStream(origin,),)@ } CATCH(FileNotFoundException) {}
results[https://github.com/apache/activemq-apollo/blob/a0d1a3ab4f4a1772946492f837d2bdad4da1c328/activemq-util/src/main/scala/org/apache/activemq/util/IOHelper.java][readBytes][1] = -> TRY {  -> return readBytes(new FileInputStream(path,),)@ } CATCH(IOException) {}
results[https://github.com/jacob-carlborg/descent/blob/f3f1a1b3224b7fcecae48e5e5495637923bfa8dd/mmrnmhrm.ui/src-dltk-branch/mmrnmrhm/org/eclipse/dltk/ui/wizards/ProjectWizardSecondPage_.java][copyFile][2] = -> TRY {  -> is=new FileInputStream(source,)@ -> copyFile(is,os,)@ } CATCH(IOException,CoreException) {}
results[https://github.com/cmusatyalab/opendiamond-java/blob/f0a8a3fb8d7c8c7443d314034acd927fa2467dea/src/edu/cmu/cs/diamond/opendiamond/Bundle.java][getPreparedLoader][1] = -> TRY {  -> return new PreparedFileLoader(new FileInputStream(bundleFile,),memberDirs,)@ } CATCH(IOException) {}
results[https://github.com/unidevel/android/blob/7ee690b95efb8bea7fb72a6099706fe00227081b/DevTools/src/com/unidevel/devtools/project/AndroidProject.java][load][1] = -> TRY {  -> stream=new FileInputStream(f,)@ -> document=builder.parse(stream,)@ } CATCH(FileNotFoundException,ParserConfigurationException,SAXException,IOException) {}
results[https://github.com/ualerts-org/ualerts-server/blob/4c3e9d54d4b90e9fcf9e01253957886c25bb0ff6/org.ualerts.mobile/org.ualerts.mobile.subscribe/src/main/java/org/ualerts/mobile/subscribe/service/data/schema/SqlStatementLoader.java][load][1] = -> TRY {  -> return load(new FileInputStream(file,),)@ } CATCH(IOException,FileNotFoundException) {}
results[https://github.com/apache/openejb/blob/8725a63d45da8ad6cd593b01d842b4e4b3c84af9/sandbox/tools/src/main/java/org/apache/openejb/tools/util/IO.java][read][1] = -> TRY {  -> in=new FileInputStream(source,)@ -> return new BufferedInputStream(in,32768,)@ } CATCH(FileNotFoundException) {}
results[https://github.com/codehaus/jetty-project/blob/bdf28e6daece56d30d276d33c7348c6a601a429a/trunk-jetty-maven-plugin/src/main/java/org/mortbay/jetty/plugin/AbstractJettyMojo.java][setSystemPropertiesFile][1] = -> TRY {  -> propFile=new FileInputStream(systemPropertiesFile,)@ -> properties.load(propFile,)@ } CATCH(Exception) {}
results[https://github.com/jponge/izpack-full-svn-history-copy/blob/a63559fe85139d57d91fa7981461ffcdf2f6d2db/izpack-src/branches/4.3/src/tests/com/izforge/izpack/Bin_Langpacks_InstallerTest.java][<init>][1] = -> TRY {  -> Bin_Langpacks_InstallerTest.reference=new LocaleDatabase(new FileInputStream(basePath+referencePack,),)@ } CATCH(Exception) {}
results[https://github.com/monnetproject/bliss/blob/318a807d1636896212b3d48d392f006a2f89a01c/sparsemath/src/main/java/eu/monnetproject/math/sparse/SparseIntArray.java][fromBinary][1] = -> TRY {  -> return fromBinary(new FileInputStream(file,),W,)@ } CATCH(IOException) {}
results[https://github.com/goodow/gwt/blob/5b3bef40d421b40c0c0a04fd6939efe68b5ed48d/user/src/com/google/gwt/logging/server/StackTraceDeobfuscator.java][openInputStream][2] = -> TRY {  -> return new FileInputStream(new File(symbolMapsDirectory,fileName,),)@ } CATCH(IOException) {}
results[https://github.com/drepshas/hib-core/blob/d8d6d82e30960e0c255950eaf875ad48831b12b0/code/core/src/main/java/org/hibernate/bytecode/util/ByteCodeHelper.java][readByteCode][2] = -> TRY {  -> return ByteCodeHelper.readByteCode(new FileInputStream(file,),)@ } CATCH(IOException) {}
results[https://github.com/mlundblad/bc-java/blob/158b54fbacb8926df0e74086e95900924c862b6e/src/main/java/org/bouncycastle/cms/CMSProcessableFile.java][write][1] = -> TRY {  -> fIn=new FileInputStream(file,)@ -> fIn.close()@ } CATCH(IOException,CMSException) {}
results[https://github.com/perfectsense/dari/blob/63916a29ec8c3f1e5db9443e1a5b1ab94372e3e9/util/src/main/java/com/psddev/dari/util/CodeUtils.java][getResourceAsStream][1] = -> source=getWebappSource(context,path,)@ -> IF { -> TRY { -> return new FileInputStream(source,)@source!=null&&source.exists() } }
results[https://github.com/mauricioaniche/rEvolution/blob/6c173f623828cc0f2a36041cd223bd5a7373e3a3/src/edu/usp/ime/revolution/Runner.java][main][1] = -> TRY {  -> configStream=new FileInputStream(args[0],)@ -> config=new PropertiesConfig(configStream,)@ } CATCH(Exception) {}
results[https://github.com/LibraryOfCongress/bagit-java/blob/ada20fcd49654366061aefead0e57c39fd7c6ae4/bagit/branches/sword_bob/src/main/java/gov/loc/repository/bagit/impl/FileBagFile.java][newInputStream][1] = -> TRY { -> return new FileInputStream(this.file,)@ } CATCH(Exception) { -> throw new RuntimeException(ex,)@ }
results[https://github.com/CTSIatUCSF/shindigorng/blob/3ced2289390b8f1a1e2fb85260d4dafd3ffb9265/java/gadgets/src/main/java/org/apache/shindig/util/ResourceLoader.java][getContent][1] = -> TRY {  -> return InputStreamConsumer.readToString(new FileInputStream(file,),)@ } CATCH(IOException) {}
results[https://github.com/fcrepo/fcrepo-before33/blob/8058d1f8d0e5b23a1f0a68f05dcb31f4bdd1ca18/src/test/fedora/server/resourceIndex/TestResourceIndex.java][getDigitalObject][1] = -> TRY {  -> in=new FileInputStream(file,)@ -> deser.deserialize(in,obj,"UTF-8",0,)@ } CATCH(Exception) {}
results[https://github.com/isr-uci-edu/ArchStudio5/blob/2d8bf5e7fea97a248a49d1ab01b042ad6b3cf282/org.archstudio.sysutils/src/org/archstudio/sysutils/SystemUtils.java][copyFile][1] = -> TRY {  -> fis=new FileInputStream(inFile,)@ -> blt(fis,fos,)@ } CATCH(IOException) {}
results[https://github.com/ieure/lucene-solr-snapshot/blob/3ee0ace1ba6b9bff3ffaa278c0bba07e6064057d/lucene/src/demo/org/apache/lucene/demo/html/HTMLParser.java][<init>][1] = -> TRY {  -> <init>(new FileInputStream(file,),)@ } CATCH(FileNotFoundException) {}
results[https://github.com/eclipse/e4.xwt/blob/2ccef7eb141655004fe8de6e8cd5951a58d0b263/bundles/org.eclipse.e4.xwt/src/org/eclipse/e4/xwt/internal/xml/DocumentRoot.java][isGZIP][1] = -> TRY {  -> fis=new FileInputStream(file,)@ -> pis=new PushbackInputStream(fis,2,)@ } CATCH(IOException) {}
results[https://github.com/mehant/incubator-drill/blob/2c811a83b30295fb39e1540ce76fbf54768ed50c/exec/java-exec/src/main/java/org/apache/drill/exec/store/LocalSyncableFileSystem.java][<init>][1] = -> TRY {  -> input=new FileInputStream(path.toString(),)@ } CATCH(IOException) {}
results[https://github.com/bladesilent/Harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/nio/src/test/java/common/org/apache/harmony/nio/tests/java/nio/channels/ChannelsTest.java][testNewReaderReadableByteChannelString_internalBufferZero][1] = -> TRY {  -> this.fins=new FileInputStream(tmpFile,)@ -> rbChannel=Channels.newChannel(this.fins,)@ } CATCH(IOException) {}
results[https://github.com/bcdev/beam-globalbedo/blob/75e85c525bc3d66cb8098cdf5540293496948a03/beam-globalbedo-albedo-inversion/src/test/java/org/esa/beam/globalbedo/inversion/util/IOTest.java][testReadFloatArray_8][5] = -> TRY {  -> finStream=new FileInputStream(testfile,)@ -> ch=finStream.getChannel()@ } CATCH(Exception) {}
results[https://github.com/rauar/Carma/blob/f3ca8c17143b4980b5aa13e1edbc862f7eb55e7c/Mutation/MutationRunner/src/main/java/com/retroduction/carma/core/runner/utililties/ByteCodeFileReader.java][readByteCodeFromDisk][1] = -> TRY {  -> inputStream=new FileInputStream(originalClassFile,)@ -> return readByteCodeFromStream(inputStream,)@ } CATCH(FileNotFoundException,IOException) {}
results[https://github.com/irstv/orbisgis-multi-touch/blob/485a6e8ec8a0553d6b257e3b80b5dd6eb6c79869/tinterface/src/main/java/org/orbisgis/tinterface/main/Map.java][readMapContext][1] = -> TRY {  -> fileContent=new FileInputStream(path,)@ -> mapContext.read(fileContent,)@ } CATCH(IOException) {}
results[https://github.com/openMF/mifosx/blob/3e1c3eb4c67a763bfd4bd67bbc6ccdad63e856e9/mifosng-provider/src/main/java/org/mifosplatform/infrastructure/documentmanagement/data/ImageData.java][getContent][1] = -> TRY { -> IF { -> fileInputStream=new FileInputStream(this.file,)@ -> return IOUtils.toByteArray(fileInputStream,)@ } }
results[https://github.com/takahashim/epubcheck-i18n/blob/ce3719502ae3076de778de58d767350c86e19279/com.adobe.epubcheck/src/main/java/com/adobe/epubcheck/util/FileResourceProvider.java][getInputStream][2] = -> TRY {  -> return new FileInputStream(new File(fileName,),)@ } CATCH(FileNotFoundException) {}
results[https://github.com/jasvir/google-caja/blob/e4923796d9660e12e2d71cedfab0846aea0f5767/src/com/google/caja/plugin/PluginCompilerMain.java][newReader][1] = -> TRY {  -> return createReader(new FileInputStream(f,),)@ } CATCH(FileNotFoundException) {}
results[https://github.com/QuantumBadger/RedReader/blob/0304ae9fe2dc22c003208647ec1d4bff947eb633/src/main/java/org/quantumbadger/redreader/common/General.java][copyFile][1] = -> TRY {  -> fis=new FileInputStream(src,)@ -> copyFile(fis,fos,)@ } CATCH(IOException) {}
results[https://github.com/vtatai/srec/blob/d5794b267e932c7a352a4be22f397de529d5c651/src/main/java/com/github/srec/play/ScriptPlayer.java][play][1] = -> TRY {  -> play(new FileInputStream(file,),)@ } CATCH(IOException) {}
results[https://github.com/dschuermann/document-viewer/blob/349bd1b20fe63b5008939b6d87067964b79a18fc/document-viewer/src/org/emdev/common/fonts/BaseExtStorageFontProvider.java][openInputFontStream][1] = -> TRY {  -> return new FileInputStream(getFontFile(fi,),)@ } CATCH(IOException) {}
results[https://github.com/anycook/anycook-core/blob/d69233485002b600e0c87dbbfec17154079fc39e/src/anycook/snapshots/SearchSnapshot.java][getXMLContent][1] = -> TRY {  -> xml=new FileInputStream(templatePath,)@ -> parser=factory.createXMLEventReader(xml,)@ } CATCH(XMLStreamException,FileNotFoundException) {}
results[https://github.com/JavierCane/jHex/blob/006a95c799857fe06092fed2305520e15b4f462e/src/prop/hex/gestors/BaseModel.java][carregaElement][1] = -> TRY {  -> fis=new FileInputStream(this.carpeta_dades+'/'+this.subcarpeta_dades+'/'+nom_element+'.'+this.extensio_fitxers,)@ -> ois=new ObjectInputStream(fis,)@ } CATCH(IOException,ClassNotFoundException) {}
results[https://github.com/nicpottier/opendatakit.collect/blob/ce005f7aec380cae6f149dca9f389440c9521ae6/src/org/odk/collect/android/logic/FileReference.java][getStream][1] = -> TRY {  -> return new FileInputStream(getInternalURI(),)@ } CATCH(IOException) {}
results[https://github.com/zycgit/hasor/blob/f53c9458c3c2c4e23a5b430160a1537957674937/Release branches/more_1.x/src/org.platform.view/src/main/java/org/platform/view/freemarker/loader/mto/File_TemplateObject.java][getInputStream][1] = -> TRY {  -> return new AutoCloseInputStream(new FileInputStream(filePath,),)@ } CATCH(IOException) {}
results[https://github.com/jbossas/jboss-vfs/blob/687b64637ca8fb66b163557ce802c459fef15a8f/src/main/java/org/jboss/vfs/spi/RealFileSystem.java][run][1] = -> TRY {  -> return new FileInputStream(getFile(mountPoint,target,),)@ } CATCH(Exception) {}
results[https://github.com/eclipse/e4.ui/blob/14559bf6e10da6f9128168410296a2b59c3cb74f/examples/org.eclipse.e4.demo.simpleide/src/org/eclipse/e4/demo/simpleide/internal/datatransfer/FileSystemStructureProvider.java][getContents][1] = -> TRY { -> return new FileInputStream((File) element,)@ } CATCH(FileNotFoundException) { -> logger.error(e,)@ }
results[https://github.com/KolonelKustard/discodj/blob/7dec74082d1c65e406a71b36831884f3e20457af/discodj-xuggler/src/main/java/com/totalchange/discodj/xuggler/XugglerCatalogueImpl.java][getMediaData][1] = -> TRY {  -> return new FileInputStream(media.getId(),)@ } CATCH(IOException) {}
results[https://github.com/dkomanov/fizteh-java-2013/blob/24181fc416b2c251dfd1ffe7b1891f09204b52cb/src/ru/fizteh/fivt/students/sergeymelikov/shell/CommandCopy.java][copyFileToFile][1] = -> TRY {  -> in=new FileInputStream(source,)@!(!(dest.createNewFile())) -> in.close()@!(!(dest.createNewFile())) } CATCH(IOException,FileNotFoundException) {}
results[https://github.com/ios-driver/ios-driver/blob/393460354e559495b5df881510b3e5610291bb7f/server/src/main/java/org/uiautomation/ios/server/utils/PlistFileUtils.java][readJSONFile][1] = -> TRY {  -> is=new FileInputStream(from,)@ -> IOUtils.copy(is,writer,"UTF-8",)@ } CATCH(Exception) {}
