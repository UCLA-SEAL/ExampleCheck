results[https://github.com/taskadapter/redmine-java-api/blob/2e9fc44e8826e8723926e80b0ca44c34853f4c9f/src/main/java/org/redmine/ta/internal/json/JsonInput.java][getObjectNotNull][21] = -> TRY {  -> return obj.getJSONObject(field,)@ } CATCH(JSONException) {}
results[https://github.com/skyglass/skyglass/blob/56727ab94a1bb7745940e159adb86e0f0e8ca08f/skyglass-core/src/main/java/skyglass/core/resource/json/JSONUtilities.java][getJsonObjectFromJsonObject][1] = -> IF { -> TRY { -> result=object.getJSONObject(name,)@object.has(name,)&&!(object.isNull(name,)) } }
results[https://github.com/skrusche63/AMES-Web-Service/blob/246858504f38e2c1b20aa9b93903d1193ed5b5dd/ames-web-service/src/de/kp/ames/web/function/symbol/SymbolProcessor.java][getRoot][1] = -> TRY {  -> return jSymbols.getJSONObject(SYMBOL_ROOT,)@ } CATCH(Exception) {}
results[https://github.com/jdunck/google-refine/blob/24e9b2ccf0e6380f6332532dfd2ebd95c890c4fd/main/java/com/metaweb/gridworks/operations/row/RowRemovalOperation.java][reconstruct][14] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new RowRemovalOperation(engineConfig,)@ } CATCH(Exception) {}
results[https://github.com/shinobushiva/jagkuma/blob/021c59a2707f40f8ac63c7752065acf18ee2bb78/src/jag/kumamoto/apps/StampRally/Data/UserHistory.java][decodeJSONGotochiData][10] = -> TRY {  -> objData=obj.getJSONObject("gotochiData",)@ -> return objData.getInt("point",)@ } CATCH(JSONException) {}
results[https://github.com/vivek/hudson/blob/89c445367c4c856b3035d4b2fdd55eb939dd92bd/core/src/main/java/hudson/DescriptorExtensionList.java][newInstanceFromRadioList][4] = -> TRY {  -> return newInstanceFromRadioList(parent.getJSONObject(name,),)@ } CATCH(FormException) {}
results[https://github.com/behrica/jira-rest-java-client/blob/90b3f0db8f2376b05f9d213c25dc980ffe76d309/atlassian-jira-rest-java-client/src/main/java/com/atlassian/jira/restjavaclient/json/JsonParserWithJsonObjectValue.java][parse][3] = -> TRY {  -> valueJson=json.getJSONObject(JsonParseUtil.VALUE_KEY,)@ -> return parseValue(valueJson,)@ } CATCH(JSONException) {}
results[https://github.com/mollyproject/mollyandroid/blob/7636c5b70088af05f9a76b02cbcbc79c3226a309/src/org/mollyproject/android/view/apps/library/LibraryFirstResultTask.java][generatePage][1] = -> TRY {  -> jsonPage=jsonContent.getJSONObject("page",)@ -> populateResults(page,jsonPage,resultsLayout,resultsNo,)@ } CATCH(JSONException,UnknownHostException,IOException) {}
results[https://github.com/jenkinsci/clover-plugin/blob/2e2ccf6b66c179b4ae001ec856a12839c5817343/src/main/java/hudson/plugins/clover/CloverInstallation.java][newInstance][1] = -> TRY {  -> return (CloverInstallation) super.newInstance(req,formData.getJSONObject("cloverInstallation",),)@ } CATCH(FormException) {}
results[https://github.com/MyMalcom/malcom-lib-android/blob/a73e046d9b3c115ee21aaa078e5a96632af954ec/src/main/java/com/malcom/library/android/utils/JSONHelper.java][getMap][4] = -> TRY {  -> return toMap(object.getJSONObject(key,),)@ } CATCH(JSONException) {}
results[https://github.com/matthewcburke/pugetsound-mobile/blob/b9c82c2fa2d8bde8f37eca9a458f2f397e1ad2bd/vichar/src/edu/pugetsound/vichar/ar/ARGameActivity.java][updateHealthBar][2] = -> IF { -> TRY { -> player=engineState.getJSONObject("player",)@ -> energy=player.getInt("energy",)@ } }
results[https://github.com/raptor2101/GalDroid/blob/566544b09ff29fb7a2bbd0504cb878d8523b5fe5/src/de/raptor2101/GalDroid/WebGallery/Gallery3/JSON/EntityFactory.java][parseTag][8] = -> TRY {  -> return jsonObject.getJSONObject("entity",).getString("name",)@ } CATCH(JSONException) {}
results[https://github.com/yuyang226/FlickrjApi4Android/blob/f14c09c13b680a702326062efd65251c8244125b/src/com/gmail/yuyang226/flickr/places/PlacesInterface.java][parsePlacesList][4] = -> TRY {  -> placesElement=data.getJSONObject("places",)@ -> placesNodes=placesElement.optJSONArray("place",)@ } CATCH(JSONException) {}
results[https://github.com/mixi-inc/triaina/blob/ea93022b3592a62c34620ec64172f3163fcb80e0/android/Commons/src/triaina/commons/utils/JSONObjectUtils.java][getJSONObject][2] = -> TRY { -> return json.getJSONObject(key,)@ } CATCH(JSONException) { -> throw new JSONRuntimeException(exp,)@ }
results[https://github.com/dschuermann/document-viewer/blob/0cd70c0dc7228075a0a60a3e26c6cd0cf4332212/any-document-viewer/src/org/emdev/common/settings/base/JsonObjectPreferenceDefinition.java][restore][7] = -> TRY {  -> setPreferenceValue(edit,root.getJSONObject(key,),)@ } CATCH(JSONException) {}
results[https://github.com/mstepan/incubator/blob/e27425ef51eb4de8714dafdce1286fb49d8cb681/WellnessPortal/src/main/java/com/fitbit/api/common/model/activities/Activity.java][constructActivity][2] = -> TRY {  -> return new Activity(json.getJSONObject("activity",),)@ } CATCH(JSONException) {}
results[https://github.com/tijuca/icedove/blob/3af730cd4d20abf8b988d77b4a9b36e42d4c622e/mozilla/mobile/android/base/FormAssistPopup.java][handleAutoCompleteMessage][1] = -> TRY {  -> suggestions=message.getJSONArray("suggestions",)@ -> rect=message.getJSONObject("rect",)@ } CATCH(JSONException) {}
results[https://github.com/stuffrepos/tactics16/blob/c98ecbbedf8193bc0fd7cf0145c9e10b949312ef/src/main/java/net/stuffrepos/tactics16/datamanager/AnimationGroupJsonLoader.java][iterate][1] = -> TRY {  -> loadSpriteAction(builder,key,jsonObject.getJSONObject(key,),)@ } CATCH(JSONException) {}
results[https://github.com/yui/yuitest/blob/a1db9a9b14af4d1c82972ba0b3227ad50ec1049d/java/src/com/yahoo/platform/yuitest/coverage/results/FileCoverageReport.java][getFunctionNames][3] = -> TRY {  -> return JSONObject.getNames(report1.getJSONObject("functions",),)@ } CATCH(JSONException) {}
results[https://github.com/sachishah/airportstatus/blob/2c282fe8df8e1b15c20be78dfc36192afd1622a7/src/com/example/airportstatus/models/BaseModel.java][getJSON][2] = -> TRY { -> return jsonObject.getJSONObject(name,)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/cc14514/pet-service/blob/7c0fa957427e91d4b30954c3ded854927c97db68/pet-service-states/src/main/java/com/momoplan/pet/framework/servicestate/service/impl/StateServiceSupport.java][getUserinfo][3] = -> TRY {  -> json=new JSONObject(responseStr,)@ -> entity=json.getJSONObject("entity",)@ } CATCH(Exception) {}
results[https://github.com/nebogeo/littlej/blob/0b53f24c54ec1e7405176313faa55035931c976f/android/Core/src/foam/littlej/android/app/util/CheckinApiUtils.java][getCheckinsObject][6] = -> TRY { -> return jsonObject.getJSONObject("payload",)@ } CATCH(JSONException) { -> return new JSONObject()@ }
results[https://github.com/shamansir/vimeoid/blob/622f88a5ead674e3b04c44fee445648bbef91500/apk/src/org/vimeoid/dto/advanced/User.java][collectFromJson][1] = -> TRY {  -> return extractFromJson(jsonObj.getJSONObject(FieldsKeys.SINGLE_KEY,),)@ } CATCH(JSONException) {}
results[https://github.com/behrica/jira-rest-java-client/blob/23db6db685018309b32c4740f7c9d4178ee3f4ac/atlassian-jira-rest-java-client/src/main/java/com/atlassian/jira/rest/client/internal/json/IssueJsonParser.java][getFieldStringValue][2] = -> TRY {  -> fieldsJson=json.getJSONObject(FIELDS,)@ -> summaryObject=fieldsJson.get(attributeName,)@ } CATCH(JSONException) {}
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIQbeEngine/src/it/eng/spagobi/engines/qbe/analysisstateloaders/worksheet/Version0WorksheetStateLoader.java][convertFilters][2] = -> TRY {  -> filtersObj=aSheet.getJSONObject("filters",)@ -> filters=filtersObj.getJSONArray("filters",)@ } CATCH(Exception) {}
results[https://github.com/malinovskiy-alex/ifp-shopping/blob/ccea626724deeff150c5806c499aae0f1d6465bb/shoppingprocess/src/main/java/com/connecture/shopping/process/service/data/converter/ConsumerDataConverterUtil.java][getPolicyEffectiveTime][1] = -> TRY {  -> eventJSON=jsonObject.getJSONObject("event",)@ -> dateStr=eventJSON.getString("Coverage_Effective_Date",)@ } CATCH(Exception) {}
results[https://github.com/flamingo-geocms/flamingo/blob/0a48c860b11bdcdd72908412d96ac7af884e7c88/viewer/src/main/java/nl/b3p/viewer/search/SolrSearchClient.java][createAttributeSourceQuery][1] = -> TRY {  -> solrConfigsJson=config.getJSONObject("solrConfig",)@ -> it=solrConfigsJson.keys()@ } CATCH(JSONException) {}
results[https://github.com/collectionspace/application/blob/9b39dd5800e7da7232353a103e1a931a6e4afe7d/core/src/test/java/org/collectionspace/chain/storage/TestServiceThroughWebapp.java][getFields][3] = -> TRY {  -> in=in.getJSONObject("fields",)@ -> in.remove("csid",)@ } CATCH(JSONException) {}
results[https://github.com/jherson/sfa-qb/blob/d82f39030564970a8b0a7dbda33b3ddbf7819b42/src/main/java/com/redhat/sforce/qb/util/JSONObjectWrapper.java][getJSONObject][1] = -> TRY {  -> return (jsonObject.isNull(key,))?null:jsonObject.getJSONObject(key,)@ } CATCH(JSONException) {}
results[https://github.com/eclipse/rap/blob/47141eab1bf1b26c4c6141adfaf556fd32acacf9/tests/org.eclipse.rap.rwt.testfixture/src/org/eclipse/rwt/internal/protocol/Message.java][getProperties][2] = -> TRY { -> properties=operation.getJSONObject("properties",)@ } CATCH(JSONException) { -> throw new IllegalStateException("Properties object missing in operation",)@ }
results[https://github.com/fuhaiq/wesker/blob/86cb804eb5df16066783c6afd43464bf20e3ab38/wesker-core/src/com/wesker/core/rpc/ssl/handler/SslHandlerProvider.java][initialize][1] = -> TRY {  -> ssl=json.getJSONObject("ssl",)@ -> clientMode=ssl.getBoolean("clientMode",)@ } CATCH(Exception) {}
results[https://github.com/shamansir/vimeoid/blob/622f88a5ead674e3b04c44fee445648bbef91500/apk/src/org/vimeoid/activity/user/item/UserActivity.java][addSource][1] = -> TRY {  -> received+=page.getJSONObject(Contact.FieldsKeys.MULTIPLE_KEY,).getInt(PagingData.FieldsKeys.ON_THIS_PAGE,)@ } CATCH(Exception) {}
results[https://github.com/tijuca/icedove/blob/3af730cd4d20abf8b988d77b4a9b36e42d4c622e/mozilla/mobile/android/base/FormAssistPopup.java][handleValidationMessage][1] = -> TRY {  -> validationMessage=message.getString("validationMessage",)@ -> rect=message.getJSONObject("rect",)@ } CATCH(JSONException) {}
results[https://github.com/Factual/factual-java-driver/blob/e20689be0c974679c02406860a02605a67b2a7e5/src/main/java/com/factual/driver/FacetResponse.java][parseResponse][1] = -> TRY {  -> data=JsonUtil.data(jo.getJSONObject(Constants.FACET_DATA,),)@ } CATCH(JSONException) {}
results[https://github.com/umitproject/openmonitor-android-agent/blob/baf5e2db94a280793288adef4bc5c773651f3734/icm-mobile/src/org/umit/icm/mobile/search/GoogleSearch.java][clean][1] = -> TRY {  -> jsonObjectResponse=new JSONObject(response,)@ -> return jsonObjectResponse.getJSONObject("responseData",)@ } CATCH(JSONException) {}
results[https://github.com/skaegi/orion.server/blob/0565bb44db57d8c421b6d2fbda5613777742374e/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitTest.java][commitFile][1] = -> TRY {  -> fileGitSection=fileObject.getJSONObject(GitConstants.KEY_GIT,)@ -> fileGitHeadUri=fileGitSection.getString(GitConstants.KEY_HEAD,)@ } CATCH(JSONException,IOException,SAXException) {}
results[https://github.com/squaremo/rabbitmq-streams/blob/4e373c13cd3ec22b7c14ac965040d95f9e37d4a6/harness/java/src/net/lshift/feedshub/Plugin.java][<init>][1] = -> TRY {  -> messageServerSpec=config.getJSONObject("messageserver",)@ -> messageServerConnection=AMQPConnection.amqConnectionFromConfig(messageServerSpec,)@ } CATCH(IOException) {}
results[https://github.com/vitkin/aptoide-client/blob/ba417aa1fe734a7acbd14f9b9a61499ba3795692/src/cm/aptoide/pt/webservices/WebserviceGetApkInfo.java][hasPatchOBB][1] = -> TRY {  -> return response.getJSONObject("obb",).has("patch",)@ } CATCH(JSONException) {}
results[https://github.com/jacksonicson/rain/blob/c6662cb5974c0c1ef052156a69586f83fc597bdb/test/radlab/rain/workload/http/HttpTrackFactory.java][configure][1] = -> TRY {  -> amount=params.getInt("amount",)@ -> targetConfig=params.getJSONObject("trackConfig",)@ } CATCH(JSONException) {}
results[https://github.com/thest1/Android-VKontakte-SDK/blob/fa6a71e06911d407196fec80159de793dc29c074/AndroidVkSdk/src/com/perm/kate/api/Api.java][getGroupsMembers][2] = -> TRY {  -> root=sendRequest(params,)@ -> response=root.getJSONObject("response",)@ -> array=response.optJSONArray("users",)@ } CATCH(IOException,JSONException,KException) {}
results[https://github.com/jmorille/android/blob/30a2258f6b50fc12935ad0fbd637c73f8870f14b/cityLib/src/eu/ttbox/velib/service/download/velobleu/VeloBleuServiceParser.java][parseInputStreamForStations][3] = -> TRY { -> jObject=new JSONObject(json,)@ -> site=jObject.getJSONObject("site",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/OpenRefine/OpenRefine/blob/7fd6e22af4686790b74e7b4be6474f5ca4a3a03b/main/src/com/google/refine/operations/row/RowStarOperation.java][reconstruct][6] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> starred=obj.getBoolean("starred",)@ -> return new RowStarOperation(engineConfig,starred,)@ } CATCH(Exception) {}
results[https://github.com/Watchlist-App/Watchlist-app-android/blob/675e5614af1860dfeeccecbe039fd719a4073975/WatchList/WatchList/src/main/java/com/watchlistapp/fullmoviedescription/actors/ActorsLoader.java][parseJSONObject][3] = -> TRY { -> creditsJsonObject=jsonObject.getJSONObject(API_CREDITS_TITLE,)@ -> castJsonArray=creditsJsonObject.getJSONArray(API_CAST_TITLE,)@ } CATCH(JSONException) { -> exception.printStackTrace()@ }
results[https://github.com/collectionspace/application/blob/21b4773d08d50838cc23f89089bb782938396278/cspi-webui/src/main/java/org/collectionspace/chain/csp/webui/userdetails/UserDetailsReset.java][doEmail][1] = -> TRY {  -> greeting=userdetails.getJSONObject("fields",).getString("screenName",)@ -> message=message.replaceAll("\\{\\{greeting\\}\\}",greeting,)@ } CATCH(UIException,JSONException) {}
results[https://github.com/jdunck/google-refine/blob/b4772f1f04a36a378555ec4d8b334f7df2296a15/main/src/com/google/refine/clustering/binning/BinningClusterer.java][<init>][5] = -> IF { -> TRY { -> size=_config.getJSONObject("params",).getInt("ngram-size",)@ -> logger.debug("Using ngram size: {}",size,)@ } }
results[https://github.com/socialize/socialize-sdk-android/blob/59a9ab1d57d001d1e4fdd4089c02b882ce8fb3da/sdk/src/com/socialize/entity/JSONFactory.java][getJSONObject][1] = -> TRY {  -> IF { -> return obj.getJSONObject(key,)@exists(obj,key,) } } CATCH(JSONException) {}
results[https://github.com/jak786/VASE/blob/b3445764cca6fa381c8ff5f7f6d14080dcf22272/editor/server/src/de/hpi/bpmn2xpdl/XPDLTransition.java][readJSONtarget][2] = -> TRY {  -> target=modelElement.getJSONObject("target",)@ -> setTo(target.optString("resourceId",),)@ } CATCH(JSONException) {}
results[https://github.com/JPMoresmau/eclipsefp/blob/b06f49148013b74eafa2425288321d44111f28a9/net.sf.eclipsefp.haskell.browser/src/net/sf/eclipsefp/haskell/browser/items/HaskellPackage.java][<init>][2] = -> TRY {  -> this.setDoc(o,)@ -> this.id=new PackageIdentifier(o.getJSONObject("id",),)@ } CATCH(JSONException) {}
results[https://github.com/jagkuma/stamprally/blob/e9f5c695199908a0d0cd9d6c958a121bfebd12f7/src/jag/kumamoto/apps/gotochi/stamprally/Data/User.java][decodeJSONObject][2] = -> TRY {  -> objUser=obj.getJSONObject(JsonNameUser,)@ -> nickname=objUser.getString(JsonNameNickName,)@ -> gender=objUser.getInt(JsonNameGender,)@ } CATCH(JSONException) {}
results[https://github.com/thest1/Android-VKontakte-SDK/blob/fa6a71e06911d407196fec80159de793dc29c074/AndroidVkSdk/src/com/perm/kate/api/Api.java][getSubscriptions][1] = -> TRY {  -> root=sendRequest(params,)@ -> response=root.getJSONObject("response",)@ -> jusers=response.optJSONObject("users",)@ } CATCH(IOException,JSONException,KException) {}
results[https://github.com/jdunck/google-refine/blob/9b335a552bcc01f120d86832e9322c5abb8106db/extensions/freebase/src/com/google/refine/freebase/operations/SaveProtographOperation.java][reconstruct][4] = -> TRY {  -> return new SaveProtographOperation(Protograph.reconstruct(obj.getJSONObject("protograph",),),)@ } CATCH(Exception) {}
results[https://github.com/OpenRefine/OpenRefine/blob/7fd6e22af4686790b74e7b4be6474f5ca4a3a03b/main/src/com/google/refine/operations/row/RowFlagOperation.java][reconstruct][5] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> flagged=obj.getBoolean("flagged",)@ -> return new RowFlagOperation(engineConfig,flagged,)@ } CATCH(Exception) {}
results[https://github.com/rmarianski/geoserver-exts/blob/4989f19f14520b139ef4baf973435904196086ff/importer/src/test/java/org/opengeo/data/importer/rest/RESTDataTest.java][postNewImport][4] = -> TRY {  -> json=(JSONObject) json(resp,)@ -> imprt=json.getJSONObject("import",)@ -> return imprt.getInt("id",)@ } CATCH(Exception) {}
results[https://github.com/jdunck/google-refine/blob/b4772f1f04a36a378555ec4d8b334f7df2296a15/main/src/com/google/refine/operations/cell/FillDownOperation.java][reconstruct][3] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new FillDownOperation(engineConfig,obj.getString("columnName",),)@ } CATCH(Exception) {}
results[https://github.com/maihde/org.eclipse.rap/blob/47141eab1bf1b26c4c6141adfaf556fd32acacf9/tests/org.eclipse.rap.rwt.testfixture/src/org/eclipse/rwt/internal/protocol/Message.java][getRequestCounter][2] = -> TRY { -> return message.getJSONObject("meta",).getInt("requestCounter",)@ } CATCH(JSONException) { -> throw new RuntimeException("Getting requestCounter failed",)@ }
results[https://github.com/christoffer/readmill-java-wrapper/blob/4886cc4c4d1df0b51d6b9b8739e62b09fd28e1b1/src/main/java/com/readmill/api/RequestBuilder.java][fetchOrThrow][1] = -> TRY {  -> fetched=new JSONObject(getResponseText(),)@ -> return fetched.getJSONObject(key,)@ } CATCH(IOException,JSONException) {}
results[https://github.com/eclipse/hudson.core/blob/417fac825a57a136a96d8d9c22476dad21f3994c/hudson-core/src/main/java/hudson/security/AuthorizationMatrixProperty.java][newInstance][2] = -> TRY {  -> formData=formData.getJSONObject("useProjectSecurity",)@ -> IF { -> return null@formData.isNullObject() } } CATCH(FormException) {}
results[https://github.com/behrica/jira-rest-java-client/blob/8c4cfbcda69f846f159e364d49cec3d1aa963a3c/atlassian-jira-rest-java-client/src/main/java/com/atlassian/jira/restjavaclient/json/JsonParseUtil.java][getNestedObject][2] = -> TRY {  -> LOOP { -> json=json.getJSONObject(s,)@ } } CATCH(JSONException) {}
results[https://github.com/amnotbot/amnotbot/blob/4c50fccbc5036854f2a0ab653d6df2103a6c7ff1/src/org/knix/amnotbot/command/GoogleResult.java][<init>][2] = -> TRY {  -> data=answer.getJSONObject("responseData",)@ -> this.result=data.getJSONArray("results",).getJSONObject(0,)@ } CATCH(JSONException) {}
results[https://github.com/SjB/Dart/blob/de22d91482ab21ebd0dd02b5a31865b25cdbd0ea/editor/tools/plugins/com.google.dart.tools.debug.core/src/com/google/dart/tools/debug/core/webkit/WebkitScope.java][createFrom][2] = -> TRY {  -> scope.type=JsonUtils.getString(params,"type",)@ -> scope.object=WebkitRemoteObject.createFrom(params.getJSONObject("object",),)@ } CATCH(JSONException) {}
results[https://github.com/arpit87/SB1/blob/f355f93a71be96112b29b928f25a100eab1b089d/src/my/b1701/SB/Users/NearbyUser.java][getUserLocInfo][1] = -> TRY { -> userLocInfoJObj=thisOtherUserJObj.getJSONObject(UserAttributes.LOCINFO,)@ -> userLocInfo=new UserLocInfo(userLocInfoJObj,)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/dfci-cccb/mev/blob/9b4ccf1f96a34439cee9804127bedbdf7a721715/annotation/server/src/main/java/com/google/refine/operations/recon/ReconMatchBestCandidatesOperation.java][reconstruct][6] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> columnName=obj.getString("columnName",)@ -> return new ReconMatchBestCandidatesOperation(engineConfig,columnName,)@ } CATCH(Exception) {}
results[https://github.com/azavea/OpenTreeMap-Android/blob/6ef695afbb2336268488570fffc0d504636ff2d4/OpenTreeMap/src/org/azavea/otm/data/PendingEdit.java][getValue][1] = -> TRY { -> return data.getJSONObject("related_fields",).getString(relatedField,)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/OpenRefine/OpenRefine/blob/1227c9dff41bdc87b56ed0b35cc8d1938d0db168/src/main/java/com/metaweb/gridworks/model/operations/ReconMarkNewTopicsOperation.java][reconstruct][4] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> columnName=obj.getString("columnName",)@ -> return new ReconMarkNewTopicsOperation(engineConfig,columnName,)@ } CATCH(Exception) {}
results[https://github.com/jacksonicson/rain/blob/e989cde07285782a31a5d8bc71f2b063b651774d/test/radlab/rain/workload/http/HttpBenchmark.java][configure][1] = -> TRY {  -> amount=params.getInt("amount",)@ -> targetConfig=params.getJSONObject("targetConfig",)@ -> baseUrl=params.getString("baseUrl",)@ } CATCH(JSONException) {}
results[https://github.com/jherson/sfa-qb/blob/d82f39030564970a8b0a7dbda33b3ddbf7819b42/src/main/java/com/redhat/sforce/qb/util/JSONObjectWrapper.java][getRecords][1] = -> TRY {  -> return (jsonObject.isNull(object,))?null:jsonObject.getJSONObject(object,).getJSONArray("records",)@ } CATCH(JSONException) {}
results[https://github.com/cdzombak/explor/blob/65ac613de36d8bd31c875dfc1d6366a2e43b6509/facebook-android-sdk/examples/stream/src/com/facebook/stream/StreamRenderer.java][renderFrom][2] = -> TRY {  -> from=post.getJSONObject("from",)@ -> fromName=from.getString("name",)@ -> fromId=from.getString("id",)@ } CATCH(JSONException) {}
results[https://github.com/SINTEF-9012/oryx-neffics/blob/839376f1d957b9e74e17fdf17e82956cc6e24f88/editor/server/src/de/hpi/bpmn2xpdl/XPDLAssociation.java][readJSONtarget][7] = -> TRY {  -> target=modelElement.getJSONObject("target",)@ -> setTarget(target.optString("resourceId",),)@ } CATCH(JSONException) {}
results[https://github.com/mciruzzi/phoneticket-android/blob/e4d9898cd82078a5d6627470222773ded907ad35/phoneticket-app/src/main/java/com/cinemar/phoneticket/model/prices/PercentejePromo.java][<init>][1] = -> TRY {  -> super(jsonObject,)@ -> discountPercentaje=jsonObject.getJSONObject("discount_calculation",).getInt("percentage",)@ } CATCH(JSONException) {}
results[https://github.com/thest1/Android-VKontakte-SDK/blob/fa6a71e06911d407196fec80159de793dc29c074/AndroidVkSdk/src/com/perm/kate/api/Api.java][getAudioUploadServer][4] = -> TRY {  -> root=sendRequest(params,)@ -> response=root.getJSONObject("response",)@ -> return response.getString("upload_url",)@ } CATCH(IOException,JSONException,KException) {}
results[https://github.com/socialize/socialize-sdk-android/blob/d199154f65879a18bf011687567be116b64e9933/test/src/com/socialize/test/integration/services/ActionUtilsTest.java][testGetActionsByUser][3] = -> TRY {  -> jsonObject=(JSONObject) jsonArray.get(0,)@ -> userObject=jsonObject.getJSONObject("user",)@ -> userId=userObject.getString("id",)@ } CATCH(Exception) {}
results[https://github.com/mitmel/Locast-Android/blob/f84f783e9da879b7f877de45d00f4459a7db260f/src/edu/mit/mel/locast/mobile/data/JsonSyncableItem.java][fromJSON][2] = -> TRY {  -> return JsonSyncableItem.fromJSON(context,localItem,item.getJSONObject(remoteKey,),getChain(),)@ } CATCH(JSONException,NetworkProtocolException,IOException) {}
results[https://github.com/tastejs/PropertyCross/blob/2dbebe9cbd2efcc418ab87b1669f0102ee3640bb/native/android/PropertyCross/src/com/propertycross/android/model/PropertyLocationsResult.java][<init>][1] = -> TRY { -> response=result.getJSONObject("response",)@ -> location=response.getJSONArray("locations",)@ } CATCH(JSONException) { -> data.clear()@ }
results[https://github.com/thest1/Android-VKontakte-SDK/blob/fa6a71e06911d407196fec80159de793dc29c074/AndroidVkSdk/src/com/perm/kate/api/Api.java][getPoll][1] = -> TRY {  -> root=sendRequest(params,)@ -> response=root.getJSONObject("response",)@ -> return VkPoll.parse(response,)@ } CATCH(JSONException,IOException,KException) {}
results[https://github.com/OpenRefine/OpenRefine/blob/7fd6e22af4686790b74e7b4be6474f5ca4a3a03b/main/src/com/google/refine/operations/cell/BlankDownOperation.java][reconstruct][3] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new BlankDownOperation(engineConfig,obj.getString("columnName",),)@ } CATCH(Exception) {}
results[https://github.com/hackaton/hackaton-2/blob/df79fae3db7c395ffcc1dd0739c4ecc20082c163/hackaton-2-transmission/src/main/java/hackaton2/transmission/client/DefaultTransmission.java][request][1] = -> TRY {  -> response=new JSONObject(responseJson,)@ -> resultS=response.getString("result",)@ -> return response.getJSONObject("arguments",)@!(!(resultS.equals("success",))) } CATCH(Exception) {}
results[https://github.com/twitter/hbc/blob/01293442fed8c8542e8f2adae65a3762758ad9f2/hbc-twitter4j/src/main/java/com/twitter/hbc/twitter4j/v3/BaseTwitter4jClient.java][processDirectMessage][1] = -> TRY {  -> dm=factory.newDirectMessage(json.getJSONObject("direct_message",),)@ -> onDirectMessage(sitestreamUser,dm,)@ } CATCH(TwitterException,JSONException) {}
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/bfc7ef7739254e84248816cae5f92bf3d6cf6f9b/src/main/java/com/metaweb/gridworks/operations/recon/ReconDiscardJudgmentsOperation.java][reconstruct][3] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> columnName=obj.getString("columnName",)@ -> return new ReconDiscardJudgmentsOperation(engineConfig,columnName,)@ } CATCH(Exception) {}
results[https://github.com/cgreenhalgh/droolstest/blob/3d2f266cb53e281232b28d753f7675a1a932f003/src/uk/ac/horizon/ug/hyperplace/proxy/Main.java][addClientMessageUpdate][1] = -> TRY {  -> clientData=clientUpdate.getJSONObject("__data",)@ -> clientData.getJSONArray("__messageUpdates",).put(clientMsg,)@ } CATCH(JSONException) {}
results[https://github.com/drevicko/MeandreComponentFoundry/blob/61f4bd27088d894d9f4a4fd6256a9f290c638edb/src-tools/org/seasr/meandre/components/tools/tuples/GoogleSearchToTuple.java][jsonToTuples][2] = -> TRY {  -> json=new JSONObject(jsonData,)@ -> res=json.getJSONObject("responseData",)@ -> results=res.getJSONArray("results",)@ } CATCH(Exception) {}
results[https://github.com/hanguyenhuu/DTUI_201105_Android/blob/44a2ace2b8e9772ac7092627b567a4d123d3082c/src/com/group5/android/fd/Main.java][onSuccess][1] = -> TRY { -> user=jsonObject.getJSONObject("user",)@ -> m_user.parse(user,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/00stefan00/ITACT_GetConnected/blob/ed8ffafd632b89373b28a1133a2dd6b63c33f831/src/com/app/getconnected/factories/details/BaseDetailFactory.java][setArivalLocation][4] = -> TRY {  -> arivalLocationStr=data.getJSONObject(ARIVAL_TAG,).getString(ARIVAL_LOCATION_TAG,)@ -> this.arivalLocation.setText(arivalLocationStr,)@ } CATCH(JSONException) {}
results[https://github.com/NetworksAreMadeOfString/Rhybudd/blob/72c0528f9b28dbe799b3ca60bc8d47bbfb9731c0/src/net/networksaremadeofstring/rhybudd/ZenossAPI.java][AddEventLog][1] = -> TRY {  -> json=new JSONObject(rawJSON,)@ -> return json.getJSONObject("result",).getBoolean("success",)@ } CATCH(JSONException,ClientProtocolException,IOException) {}
results[https://github.com/dudie/itinerennes-android/blob/854d57529b56e4074cf37943f81e76c7c83e4126/ItineRennes/src/fr/itinerennes/business/http/keolis/KeolisJsonService.java][getBikeStation][1] = -> TRY {  -> data=httpService.execute(createKeolisRequest(params,),responseHandler,)@ -> return data.getJSONObject("station",)@ } CATCH(GenericException,JSONException) {}
results[https://github.com/maihde/org.eclipse.rap/blob/bf2b23a83f445fde7ad79a98081e4071a55ae12e/tests/org.eclipse.rap.rwt.testfixture/src/org/eclipse/rap/rwt/testfixture/Message.java][getError][1] = -> TRY { -> return message.getJSONObject("meta",).getString("error",)@ } CATCH(JSONException) { -> throw new RuntimeException("Getting error failed",)@ }
results[https://github.com/thest1/Android-VKontakte-SDK/blob/fa6a71e06911d407196fec80159de793dc29c074/AndroidVkSdk/src/com/perm/kate/api/Api.java][createWallPost][2] = -> TRY {  -> root=sendRequest(params,true,)@ -> response=root.getJSONObject("response",)@ -> res_post_id=response.optLong("post_id",)@ } CATCH(IOException,JSONException,KException) {}
results[https://github.com/andstatus/andstatus/blob/2f0bf4c50505ccdc894904dd59812dc022854777/src/com/xorcode/andtweet/net/Connection.java][getLastTweet][1] = -> TRY { -> status=credentials.getJSONObject("status",)@ -> return getCurrentTweet(status,)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/bluesoft-rnd/signavio-core-mirror/blob/6476a59b6076227b75b0032b029a5ce79b460a06/platform/src/pl/net/bluesoft/rnd/processtool/editor/jpdl/object/JPDLTask.java][fillBasicProperties][1] = -> TRY {  -> super.fillBasicProperties(json,)@ -> taskType=json.getJSONObject("properties",).getString("tasktype",)@ } CATCH(JSONException) {}
results[https://github.com/MarkBennett/dart/blob/871b4f32229ebac99ec3fbb04d0d9d1955e76582/editor/tools/plugins/com.google.dart.tools.debug.core/src/com/google/dart/tools/debug/core/webkit/WebkitNetwork.java][createFrom][1] = -> TRY {  -> response.status=obj.getInt("status",)@ -> response.statusText=obj.getString("statusText",)@ -> response.headers=obj.getJSONObject("headers",)@ } CATCH(JSONException) {}
results[https://github.com/monaca/monaca-framework-android/blob/4096a575bd6984bde66e1a81247f3dd00f479884/MonacaFramework/src/mobi/monaca/framework/AppJsonSetting.java][parseSecurity][1] = -> TRY { -> security=appJson.getJSONObject("security",)@ } CATCH(JSONException) { -> security=new JSONObject()@ } -> disableCookie=security.optBoolean("disableCookie",false,)@
results[https://github.com/eddieringle/hubroid/blob/11be39e209ebac13e1d3cb90e198163fa3c0d26b/src/net/idlesoft/android/apps/github/activities/Commit.java][doInBackground][2] = -> TRY { -> activity.mJson=new JSONObject(commitResponse.resp,).getJSONObject("commit",)@ } CATCH(JSONException) { -> e.printStackTrace()@ }
results[https://github.com/liferay/alloy-taglibs/blob/c5204c8d18162d59e15813053259ac7cc912d935/alloy-taglib/src/com/liferay/alloy/tools/xmlbuilder/XMLBuilder.java][<init>][1] = -> TRY {  -> _json=new JSONObject(FileUtil.read(_fileJSON,),)@ -> _classMapJSON=_json.getJSONObject("classmap",)@ } CATCH(Exception) {}
results[https://github.com/jherson/sfa-qb/blob/d82f39030564970a8b0a7dbda33b3ddbf7819b42/src/main/java/com/redhat/sforce/qb/util/JSONObjectWrapper.java][getString][1] = -> TRY {  -> return (jsonObject.isNull(object,))?null:jsonObject.getJSONObject(object,).getString(key,)@ } CATCH(JSONException) {}
results[https://github.com/gdgturkiye/add2013-android/blob/19c73038417390169ca39e78856d745267207c1e/app/src/org/gdgankara/app/io/TagHandler.java][parseJSONObject][1] = -> TRY {  -> tagObject=jsonObject.getJSONObject(objectName,)@ -> tags=tagObject.getString("tags",).split(",",)@ } CATCH(JSONException) {}
results[https://github.com/eclipse/rap/blob/7d6d9669ac1006399abc0c65f9b29a6dec54b9d9/tests/org.eclipse.rap.rwt.test/src/org/eclipse/rwt/internal/protocol/util/Message.java][getProperty][1] = -> TRY { -> properties=operation.getJSONObject(OPERATION_PROPERTIES,)@ -> result=properties.get(key,)@ } CATCH(JSONException) { -> throw new IllegalStateException("Property does not exist for key: "+key,)@ }
results[https://github.com/RHIT/RHITMobile-Android/blob/0108c3994ef213994b6e1137c2d328c3cd1971b4/src/RHITMobile/src/edu/rosehulman/android/directory/model/TourTagsResponse.java][deserialize][1] = -> TRY {  -> res.version=root.getString("Version",)@ -> res.root=TourTagsGroup.deserialize(root.getJSONObject("TagsRoot",),)@ } CATCH(JSONException) {}
results[https://github.com/foxykeep/DataDroid/blob/f6dc34ba1bd122e511fd28edf58269ee374ea83d/DataProxyPoC/src/com/foxykeep/datadroidpoc/data/factory/CityListJsonFactory.java][parseResult][1] = -> TRY {  -> parser=new JSONObject(wsResponse,)@ -> jsonRoot=parser.getJSONObject(JSONTag.CITY_LIST_ELEM_CITIES,)@ -> jsonPersonArray=jsonRoot.getJSONArray(JSONTag.CITY_LIST_ELEM_CITY,)@ } CATCH(JSONException) {}
results[https://github.com/yungsters/rain-workload-toolkit/blob/78c77362b429fdc81ec0945a9c1358265bc0bbb2/src/radlab/rain/workload/httptest/FixedUrlProfileCreator.java][main][1] = -> TRY {  -> jsonConfigRoot=new JSONObject(fileContents,)@ -> params=jsonConfigRoot.getJSONObject(Scenario.CFG_PROFILES_CREATOR_CLASS_PARAMS_KEY,)@ -> tracks=creator.createProfile(params,)@ } CATCH(Exception) {}
results[https://github.com/AdamBien/lightfish/blob/f4e46ca945b6e2bd280290edc48f2afbc0ef4e00/lightfish/src/main/java/org/lightfish/business/monitoring/control/collectors/authentication/SessionTokenCollector.java][collect][1] = -> TRY {  -> result=response.getEntity(JSONObject.class,)@ -> extraProps=result.getJSONObject("extrapProperties",)@ -> token=extraProps.getString("token",)@ } CATCH(Exception) {}
results[https://github.com/simplegeo/java-simplegeo/blob/a76a0278aa192f3e5e340b28fce27fdda27fc6be/src/main/java/com/simplegeo/client/types/Annotation.java][fromJSON][1] = -> TRY {  -> return new Annotation(json.getBoolean("private",),json.getJSONObject("annotations",),)@ } CATCH(JSONException) {}
