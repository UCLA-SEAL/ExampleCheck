results[https://github.com/EsupPortail/esup-opi!esup-opi-batch/src/main/java/org/esupportail/opi/batch/UpdateCsvGlgcv3.java!UpdateCsvGlgcv3!scriptOrtho][SEQ] =  -> domainService=(DomainService) ApplicationContextHolder.getContext().getBean("domainService",)@ -> domainApoService=(DomainApoService) ApplicationContextHolder.getContext().getBean("domainApoService",)@ -> parameterService=(ParameterService) ApplicationContextHolder.getContext().getBean("parameterService",)@ -> businessCacheService=(BusinessCacheService) ApplicationContextHolder.getContext().getBean("businessCacheService",)@ -> listDep=domainApoService.getDepartements()@ -> TRY { -> IF { -> FILE.delete()@FILE.exists() } -> FILE.createNewFile()@ -> infosOrtho=new RandomAccessFile(FILE,"rw",)@ -> LOG.info("début de la procédure",)@ -> versionEtpOpi=new VersionEtpOpi()@ -> versionEtpOpi.setCodCge(COD_CGE,)@ -> versionEtpOpi.setCodEtp(COD_ETP,)@ -> versionEtpOpi.setCodVrsVet(COD_VRS_VET,)@ -> trtCmi=parameterService.getTraitementCmi(versionEtpOpi,null,)@ -> individus=new ArrayList<>()@ -> individus.addAll(domainService.getIndividusTrtCmiState(trtCmi,EtatArriveComplet.getCodeLabel(),),)@ -> individus.addAll(domainService.getIndividusTrtCmiState(trtCmi,EtatArriveIncomplet.getCodeLabel(),),)@ -> individus.addAll(domainService.getIndividusTrtCmiState(trtCmi,EtatNonArrive.getCodeLabel(),),)@ -> driver="org.exist.xmldb.DatabaseImpl"@ -> cl=Class.forName(driver,)@ -> database=(Database) cl.newInstance()@ -> DatabaseManager.registerDatabase(database,)@ -> uri="xmldb:exist://jerry.univ-montp1.fr/esup-opiR1/exist/xmlrpc"@ -> root=DatabaseManager.getCollection(uri+"/db","admin","",)@ -> service=(XPathQueryService) root.getService("XPathQueryService","1.0",)@ -> service.setProperty("indent","yes",)@ -> i=0@ -> LOOP { -> ind=individus.get(i,)@i<individus.size() -> etatDossier="En attente"@i<individus.size() -> v@ -> LOOP { -> IF { -> IF { -> etatDossier="Arrivé"@ } ELSE { -> IF { -> etatDossier="Arrivé mais incomplet"@ } } } } -> sexe="Mr"@i<individus.size() -> IF { -> sexe="Mle"@i<individus.size() && ind.getSexe().equals("F",) -> IF { -> sexe="Mme"@ind.getNomUsuel()!=null&&!ind.getNomUsuel().isEmpty()&&!ind.getNomUsuel().equals(ind.getNomPatronymique(),) && i<individus.size() && ind.getSexe().equals("F",) } } -> IF { -> prenom=ind.getPrenom()+", "+ind.getPrenom2()@ind.getPrenom()!=null&&ind.getPrenom2()!=null&&!ind.getPrenom().isEmpty()&&!ind.getPrenom2().isEmpty() && i<individus.size() } ELSE { -> IF { -> prenom=ind.getPrenom2()@ind.getPrenom2()!=null&&!ind.getPrenom2().isEmpty() && !(ind.getPrenom()!=null&&ind.getPrenom2()!=null&&!ind.getPrenom().isEmpty()&&!ind.getPrenom2().isEmpty()) && i<individus.size() } ELSE { -> prenom=ind.getPrenom()@!(ind.getPrenom()!=null&&ind.getPrenom2()!=null&&!ind.getPrenom().isEmpty()&&!ind.getPrenom2().isEmpty()) && i<individus.size() && !(ind.getPrenom2()!=null&&!ind.getPrenom2().isEmpty()) } } -> cal=new GregorianCalendar()@ -> mois=cal.get(Calendar.MONTH,)+UN@i<individus.size() -> annee=cal.get(Calendar.YEAR,)@i<individus.size() -> adresse=ind.getAdresses().get(Constantes.ADR_FIX,)@i<individus.size() -> adr1=""+adresse.getAdr1()@i<individus.size() -> adr2=adresse.getAdr2()+" "+adresse.getAdr3()@i<individus.size() -> adr3=""+adresse.getCodBdi()@i<individus.size() -> IF { -> commune=domainApoService.getCommune(adresse.getCodCommune(),)@adresse.getCodCommune()!=null&&!adresse.getCodCommune().isEmpty() && i<individus.size() -> IF { -> adr3=adr3+" "+domainApoService.getCommune(adresse.getCodCommune(),).getLibCom()@adresse.getCodCommune()!=null&&!adresse.getCodCommune().isEmpty() && commune!=null && i<individus.size() } } -> titre="Bac en cours d'obtention"@i<individus.size() -> bac=ind.getIndBac().iterator().next()@i<individus.size() -> dateObtention=-1@i<individus.size() -> IF { -> dateObtention=Integer.parseInt(bac.getDateObtention(),)@bac.getDateObtention()!=null&&!bac.getDateObtention().isEmpty() && i<individus.size() } -> IF { -> titre="Bac obtenu"@!bac.getCodBac().equals("0000",)&&annee>dateObtention||annee==dateObtention&&mois>=HUIT && i<individus.size() -> testCodBacAT=bac.getCodBac().equals("0031",)||bac.getCodBac().equals("0032",)||bac.getCodBac().equals("0035",)@!bac.getCodBac().equals("0000",)&&annee>dateObtention||annee==dateObtention&&mois>=HUIT && i<individus.size() -> IF { -> titre="Autres"@testCodBacAT||bac.getCodBac().equals("0036",)||bac.getCodBac().equals("0037",) && !bac.getCodBac().equals("0000",)&&annee>dateObtention||annee==dateObtention&&mois>=HUIT && i<individus.size() } ELSE { -> IF { -> titre="E.S.E.U."@!bac.getCodBac().equals("0000",)&&annee>dateObtention||annee==dateObtention&&mois>=HUIT && i<individus.size() && bac.getCodBac().equals("0033",)||bac.getCodBac().equals("0034",) && !(testCodBacAT||bac.getCodBac().equals("0036",)||bac.getCodBac().equals("0037",)) } ELSE { -> IF { -> titre="D.A.E.U."@!bac.getCodBac().equals("0000",)&&annee>dateObtention||annee==dateObtention&&mois>=HUIT && !(testCodBacAT||bac.getCodBac().equals("0036",)||bac.getCodBac().equals("0037",)) && bac.getCodBac().equals("DAEA",)||bac.getCodBac().equals("DAEB",) && !(bac.getCodBac().equals("0033",)||bac.getCodBac().equals("0034",)) } } } } -> bacSerie=""@ -> IF { -> bacOuxEqu=domainApoService.getBacOuxEqu(bac.getDateObtention(),bac.getCodBac(),)@bac.getDateObtention()!=null&&!bac.getDateObtention().isEmpty()&&bac.getCodBac()!=null&&!bac.getCodBac().isEmpty() && i<individus.size() -> IF { -> bacSerie=bacOuxEqu.getLibBac()@bacOuxEqu!=null && bac.getDateObtention()!=null&&!bac.getDateObtention().isEmpty()&&bac.getCodBac()!=null&&!bac.getCodBac().isEmpty() && i<individus.size() } } -> bacDepartement=bac.getCodDep()@i<individus.size() -> dep@i<individus.size() -> LOOP { -> IF { -> bacDepartement=dep.getLibDep()@listDep && dep.getCodDep().equals(bac.getCodDep(),) && i<individus.size() } } -> cursusAnnee=null@i<individus.size() -> cursusAvant=null@i<individus.size() -> cursus@i<individus.size() -> LOOP { -> IF { -> cursusAnnee=cursus@ind.getCursusScol() && i<individus.size() && String.valueOf(annee+1,).equals(cursus.getAnnee(),) } ELSE { -> IF { -> cursusAvant=cursus@ind.getCursusScol() && cursusAvant==null||Integer.parseInt(cursusAvant.getAnnee(),)<Integer.parseInt(cursus.getAnnee(),) && i<individus.size() && !(String.valueOf(annee+1,).equals(cursus.getAnnee(),)) } } } -> inscritUnivAnnee="false"@i<individus.size() -> univInscAnnee=""@i<individus.size() -> etudesInscAnnee=""@i<individus.size() -> IF { -> inscritUnivAnnee="true"@cursusAnnee!=null && i<individus.size() -> univInscAnnee=cursusAnnee.getAnnee()@cursusAnnee!=null && i<individus.size() -> IF { -> etablissement=businessCacheService.getEtablissement(cursusAnnee.getCodEtablissement(),)@cursusAnnee!=null && cursusAnnee.getCodEtablissement()!=null&&!cursusAnnee.getCodEtablissement().isEmpty() && i<individus.size() -> IF { -> etudesInscAnnee=etablissement.getLibEtb()@cursusAnnee!=null && etablissement!=null && cursusAnnee.getCodEtablissement()!=null&&!cursusAnnee.getCodEtablissement().isEmpty() && i<individus.size() } } } -> inscritUnivAvant="false"@i<individus.size() -> univInscAvant=""@i<individus.size() -> etudesInscAvant=""@i<individus.size() -> resultatUnivAvant=""@i<individus.size() -> diplomeUnivAvant=""@i<individus.size() -> IF { -> inscritUnivAvant="true"@cursusAvant!=null -> univInscAvant=cursusAvant.getAnnee()@i<individus.size() && cursusAvant!=null -> IF { -> etablissement=businessCacheService.getEtablissement(cursusAvant.getCodEtablissement(),)@cursusAvant.getCodEtablissement()!=null&&!cursusAvant.getCodEtablissement().isEmpty() && i<individus.size() && cursusAvant!=null -> IF { -> etudesInscAvant=etablissement.getLibEtb()@cursusAvant.getCodEtablissement()!=null&&!cursusAvant.getCodEtablissement().isEmpty() && etablissement!=null && i<individus.size() && cursusAvant!=null } } -> IF { -> resultatUnivAvant="Ajourné"@i<individus.size() && "N".equals(cursusAvant.getResultat(),) && cursusAvant!=null } -> IF { -> resultatUnivAvant="Obtenu"@i<individus.size() && "O".equals(cursusAvant.getResultat(),) && cursusAvant!=null } -> IF { -> diplomeUnivAvant=(CursusR1) cursusAvant.getLibEtape()@cursusAvant && i<individus.size() && cursusAvant!=null } ELSE { -> curE=(CursusExt) cursusAvant@!(cursusAvant) && i<individus.size() && cursusAvant!=null -> IF { -> diplomeUnivAvant=curE.getLibelle()@!(cursusAvant) && StringUtils.hasText(curE.getLibelle(),) && i<individus.size() && cursusAvant!=null } ELSE { -> diplomeUnivAvant=curE.getLibDac()@!(StringUtils.hasText(curE.getLibelle(),)) && !(cursusAvant) && i<individus.size() && cursusAvant!=null } } } -> requete=""+"for $x in doc('/db/OPI/"+COD_ETP+"-"+COD_VRS_VET+"-FI/data/"+ind.getNumDossierOpi()+"/data.xml') "+"return concat("+"replace(replace($x/form/section-1/control-2, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-1/control-29, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-1/control-30, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-1/control-31, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-1/control-28, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-4, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-22, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-23, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-5, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-24, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-25, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-26, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-6, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-19, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-20, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-21, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-8, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-16, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-17, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-18, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-9, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-15, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-10, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-35, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-14, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-11, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-12, '\"', \"'\"), '\n', ' '),'"+S+"',"+"replace(replace($x/form/section-2/control-13, '\"', \"'\"), '\n', ' '))"@i<individus.size() -> result=service.query(requete,)@i<individus.size() -> iterator=result.getIterator()@i<individus.size() -> LOOP { -> resultOrbeon=(String) iterator.nextResource().getContent()@iterator.hasMoreResources() && i<individus.size() } -> resultOrbeon=resultOrbeon.replaceAll("[\r\n]+","",)@i<individus.size() -> IF { -> chaineInfos=chaineInfos+ind.getNumDossierOpi()+S+etatDossier+S+sexe+S+ind.getNomPatronymique()+S+prenom+S+ind.getNomUsuel()+S+adr1+S+adr2+S+adr3+S+titre+S+dateObtention+S+bacSerie+S+bacDepartement+S+inscritUnivAnnee+S+univInscAnnee+S+etudesInscAnnee+S+inscritUnivAvant+S+univInscAvant+S+etudesInscAvant+S+resultatUnivAvant+S+diplomeUnivAvant+S+resultOrbeon+F@!resultOrbeon.isEmpty() && i<individus.size() -> LOG.info("resultOrbeon num dos "+ind.getNumDossierOpi()+" : "+resultOrbeon,)@!resultOrbeon.isEmpty() && i<individus.size() } ELSE { -> LOG.info("Dossiser sans formulaire complémentaire:"+ind.getNumDossierOpi(),)@i<individus.size() && !(!resultOrbeon.isEmpty()) -> chaineInfos=chaineInfos+ind.getNumDossierOpi()+S+etatDossier+S+sexe+S+ind.getNomPatronymique()+S+prenom+S+ind.getNomUsuel()+S+adr1+S+adr2+S+adr3+S+titre+S+dateObtention+S+bacSerie+S+bacDepartement+S+inscritUnivAnnee+S+univInscAnnee+S+etudesInscAnnee+S+inscritUnivAvant+S+univInscAvant+S+etudesInscAvant+S+resultatUnivAvant+S+diplomeUnivAvant+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+S+""+F@i<individus.size() && !(!resultOrbeon.isEmpty()) } -> ++i@i<individus.size() } -> infosOrtho.writeBytes(chaineInfos,)@ -> infosOrtho.close()@ -> LOG.info("procédure terminée",)@ } CATCH { } FINALLY { }